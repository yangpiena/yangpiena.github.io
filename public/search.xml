<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客增加音乐</title>
      <link href="/2019/03/29/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90/"/>
      <url>/2019/03/29/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>根据你的需求，在合适地方加入音乐。例如，打开主题layout下的文件common-article.ejs，加入：</p><pre><code>&lt;!-- YPN Add 2019-03-29 增加背景音乐Aplayer--&gt;&lt;!-- 参数如下：（粗体为必填项） --&gt;&lt;!-- data-id: 歌曲/专辑/歌单 ID --&gt;        &lt;!-- data-server: 音乐平台，支持如下参数 --&gt;    &lt;!-- netease （网易云音乐） --&gt;    &lt;!-- tencent （qq音乐） --&gt;    &lt;!-- xiami （虾米音乐） --&gt;    &lt;!-- kugou （酷狗音乐） --&gt;    &lt;!-- baidu （百度音乐） --&gt;    &lt;!-- data-type: 请求类型，支持如下参数 --&gt;    &lt;!-- song （单曲） --&gt;    &lt;!-- album （专辑） --&gt;    &lt;!-- playlist （歌单） --&gt;    &lt;!-- search （搜索） --&gt;&lt;!-- data-mode: 播放模式 --&gt;    &lt;!-- random （随机） --&gt;    &lt;!-- single （单曲） --&gt;    &lt;!-- circulation （列表循环） --&gt;    &lt;!-- order （列表） --&gt;&lt;!-- data-autoplay: 自动播放  --&gt;    &lt;!-- true --&gt;    &lt;!-- false --&gt;&lt;section class=&apos;music&apos;&gt;    &lt;div class=&apos;content material&apos;&gt;        &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css&quot;&gt;        &lt;div class=&quot;aplayer&quot;            data-server=&quot;netease&quot;            data-id=&quot;745065239&quot;            data-theme=&quot;#1BCDFC&quot;            data-type=&quot;playlist&quot;            data-mode=&quot;random&quot;            data-autoplay=false            data-volume=&quot;0.7&quot;&gt;        &lt;/div&gt;        &lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js&quot;&gt;&lt;/script&gt;    &lt;/div&gt;&lt;/section&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加相册</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9B%B8%E5%86%8C/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9B%B8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="1-增加菜单，命令如下："><a href="#1-增加菜单，命令如下：" class="headerlink" title="1. 增加菜单，命令如下："></a>1. 增加菜单，命令如下：</h4><pre><code>hexo new page photos</code></pre><h4 id="2-编辑菜单photos下的文件index-md，添加如下内容："><a href="#2-编辑菜单photos下的文件index-md，添加如下内容：" class="headerlink" title="2. 编辑菜单photos下的文件index.md，添加如下内容："></a>2. 编辑菜单photos下的文件index.md，添加如下内容：</h4><pre><code>&lt;div class=&quot;content&quot;&gt;    &lt;div class=&quot;iw_wrapper&quot;&gt;        &lt;ul class=&quot;iw_thumbs&quot; id=&quot;iw_thumbs&quot;&gt;            &lt;!-- &lt;li&gt;&lt;img src=&quot;/img/thumbs/1.jpg&quot; data-img=&quot;/img/full/1.jpg&quot; alt=&quot;Thumb1&quot;/&gt;&lt;div&gt;&lt;h2&gt;Serenity&lt;/h2&gt;&lt;p&gt;Far far away, behind the word mountains there live the blind texts.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; --&gt;        &lt;/ul&gt;    &lt;/div&gt;    &lt;div id=&quot;iw_ribbon&quot; class=&quot;iw_ribbon&quot;&gt;        &lt;span class=&quot;iw_close&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;iw_zoom&quot;&gt;Click thumb to zoom&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/addphoto.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.masonry.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.easing.1.3.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;    $(window).load(function(){        var $iw_thumbs            = $(&apos;#iw_thumbs&apos;),            $iw_ribbon            = $(&apos;#iw_ribbon&apos;),            $iw_ribbon_close    = $iw_ribbon.children(&apos;span.iw_close&apos;),            $iw_ribbon_zoom        = $iw_ribbon.children(&apos;span.iw_zoom&apos;);            ImageWall    = (function() {                    // window width and height                var w_dim,                    // index of current image                    current                = -1,                    isRibbonShown        = false,                    isFullMode            = false,                    // ribbon / images animation settings                    ribbonAnim            = {speed : 500, easing : &apos;easeOutExpo&apos;},                    imgAnim                = {speed : 400, easing : &apos;jswing&apos;},                    // init function : call masonry, calculate window dimentions, initialize some events                    init                = function() {                        $iw_thumbs.imagesLoaded(function(){                            $iw_thumbs.masonry({                                isAnimated    : true                            });                        });                        getWindowsDim();                        initEventsHandler();                    },                    // calculate window dimentions                    getWindowsDim        = function() {                        w_dim = {                            width    : $(window).width(),                            height    : $(window).height()                        };                    },                    // initialize some events                    initEventsHandler    = function() {                        // click on a image                        $iw_thumbs.delegate(&apos;li&apos;, &apos;click&apos;, function() {                            if($iw_ribbon.is(&apos;:animated&apos;)) return false;                            var $el = $(this);                            if($el.data(&apos;ribbon&apos;)) {                                showFullImage($el);                            }                            else if(!isRibbonShown) {                                isRibbonShown = true;                                $el.data(&apos;ribbon&apos;,true);                                // set the current                                current = $el.index();                                showRibbon($el);                            }                        });                        // click ribbon close                        $iw_ribbon_close.bind(&apos;click&apos;, closeRibbon);                        // on window resize we need to recalculate the window dimentions                        $(window).bind(&apos;resize&apos;, function() {                                    getWindowsDim();                                    if($iw_ribbon.is(&apos;:animated&apos;))                                        return false;                                    closeRibbon();                                 })                                 .bind(&apos;scroll&apos;, function() {                                    if($iw_ribbon.is(&apos;:animated&apos;))                                        return false;                                    closeRibbon();                                 });                    },                    showRibbon            = function($el) {                        var    $img    = $el.children(&apos;img&apos;),                            $descrp    = $img.next();                        // fadeOut all the other images                        $iw_thumbs.children(&apos;li&apos;).not($el).animate({opacity : 0.2}, imgAnim.speed);                        // increase the image z-index, and set the height to 100px (default height)                        $img.css(&apos;z-index&apos;, 100)                            .data(&apos;originalHeight&apos;,$img.height())                            .stop()                            .animate({                                height         : &apos;100px&apos;                            }, imgAnim.speed, imgAnim.easing);                        // the ribbon will animate from the left or right                        // depending on the position of the image                        var ribbonCssParam         = {                                top    : $el.offset().top - $(window).scrollTop() - 6 + &apos;px&apos;                            },                            descriptionCssParam,                            dir;                        if( $el.offset().left &lt; (w_dim.width / 2) ) {                            dir = &apos;left&apos;;                            ribbonCssParam.left     = 0;                            ribbonCssParam.right     = &apos;auto&apos;;                        }                        else {                            dir = &apos;right&apos;;                            ribbonCssParam.right     = 0;                            ribbonCssParam.left     = &apos;auto&apos;;                        }                        $iw_ribbon.css(ribbonCssParam)                                  .show()                                  .stop()                                  .animate({width : &apos;100%&apos;}, ribbonAnim.speed, ribbonAnim.easing, function() {                                        switch(dir) {                                            case &apos;left&apos; :                                                descriptionCssParam        = {                                                    &apos;left&apos;             : $img.outerWidth(true) + &apos;px&apos;,                                                    &apos;text-align&apos;     : &apos;left&apos;                                                };                                                break;                                            case &apos;right&apos; :                                                    descriptionCssParam        = {                                                    &apos;left&apos;             : &apos;-200px&apos;,                                                    &apos;text-align&apos;     : &apos;right&apos;                                                };                                                break;                                        };                                        $descrp.css(descriptionCssParam).fadeIn();                                        // show close button and zoom                                        $iw_ribbon_close.show();                                        $iw_ribbon_zoom.show();                                  });                    },                    // close the ribbon                    // when in full mode slides in the middle of the page                    // when not slides left                    closeRibbon            = function() {                        isRibbonShown     = false                        $iw_ribbon_close.hide();                        $iw_ribbon_zoom.hide();                        if(!isFullMode) {                            // current wall image                            var $el             = $iw_thumbs.children(&apos;li&apos;).eq(current);                            resetWall($el);                            // slide out ribbon                            $iw_ribbon.stop()                                      .animate({width : &apos;0%&apos;}, ribbonAnim.speed, ribbonAnim.easing);                         }                        else {                            $iw_ribbon.stop().animate({                                opacity        : 0.8,                                height         : &apos;0px&apos;,                                marginTop    : w_dim.height/2 + &apos;px&apos; // half of window height                            }, ribbonAnim.speed, function() {                                $iw_ribbon.css({                                    &apos;width&apos;        : &apos;0%&apos;,                                    &apos;height&apos;    : &apos;126px&apos;,                                    &apos;margin-top&apos;: &apos;0px&apos;                                }).children(&apos;img&apos;).remove();                            });                            isFullMode    = false;                        }                    },                    resetWall            = function($el) {                        var $img        = $el.children(&apos;img&apos;),                            $descrp        = $img.next();                        $el.data(&apos;ribbon&apos;,false);                        // reset the image z-index and height                        $img.css(&apos;z-index&apos;,1).stop().animate({                            height         : $img.data(&apos;originalHeight&apos;)                        }, imgAnim.speed,imgAnim.easing);                        // fadeOut the description                        $descrp.fadeOut();                        // fadeIn all the other images                        $iw_thumbs.children(&apos;li&apos;).not($el).animate({opacity : 1}, imgAnim.speed);                                                    },                    showFullImage        = function($el) {                        isFullMode    = true;                        $iw_ribbon_close.hide();                        var    $img    = $el.children(&apos;img&apos;),                            large    = $img.data(&apos;img&apos;),                            // add a loading image on top of the image                            $loading = $(&apos;&lt;span class=&quot;iw_loading&quot;&gt;&lt;/span&gt;&apos;);                        $el.append($loading);                        // preload large image                        $(&apos;&lt;img/&gt;&apos;).load(function() {                            var $largeImage    = $(this);                            $loading.remove();                            $iw_ribbon_zoom.hide();                            resizeImage($largeImage);                            // reset the current image in the wall                            resetWall($el);                            // animate ribbon in and out                            $iw_ribbon.stop().animate({                                opacity        : 1,                                height         : &apos;0px&apos;,                                marginTop    : &apos;63px&apos; // half of ribbons height                            }, ribbonAnim.speed, function() {                                // add the large image to the DOM                                $iw_ribbon.prepend($largeImage);                                $iw_ribbon_close.show();                                $iw_ribbon.animate({                                    height         : &apos;100%&apos;,                                    marginTop    : &apos;0px&apos;,                                    top            : &apos;0px&apos;                                }, ribbonAnim.speed);                            });                        }).attr(&apos;src&apos;,large);                    },                    resizeImage            = function($image) {                        var widthMargin        = 100,                            heightMargin     = 100,                            windowH          = w_dim.height - heightMargin,                            windowW          = w_dim.width - widthMargin,                            theImage         = new Image();                        theImage.src         = $image.attr(&quot;src&quot;);                        var imgwidth         = theImage.width,                            imgheight        = theImage.height;                        if((imgwidth &gt; windowW) || (imgheight &gt; windowH)) {                            if(imgwidth &gt; imgheight) {                                var newwidth     = windowW,                                    ratio         = imgwidth / windowW,                                    newheight     = imgheight / ratio;                                theImage.height = newheight;                                theImage.width    = newwidth;                                if(newheight &gt; windowH) {                                    var newnewheight     = windowH,                                        newratio         = newheight/windowH,                                        newnewwidth     = newwidth/newratio;                                    theImage.width         = newnewwidth;                                    theImage.height        = newnewheight;                                }                            }                            else {                                var newheight     = windowH,                                    ratio         = imgheight / windowH,                                    newwidth     = imgwidth / ratio;                                theImage.height = newheight;                                theImage.width    = newwidth;                                if(newwidth &gt; windowW) {                                    var newnewwidth     = windowW,                                        newratio         = newwidth/windowW,                                        newnewheight     = newheight/newratio;                                    theImage.height     = newnewheight;                                    theImage.width        = newnewwidth;                                }                            }                        }                        $image.css({                            &apos;width&apos;            : theImage.width + &apos;px&apos;,                            &apos;height&apos;        : theImage.height + &apos;px&apos;,                            &apos;margin-left&apos;    : -theImage.width / 2 + &apos;px&apos;,                            &apos;margin-top&apos;    : -theImage.height / 2 + &apos;px&apos;                        });                                                };                return {init : init};                })();        ImageWall.init();    });&lt;/script&gt;</code></pre><h4 id="3-拷贝需要的4个js文件，到主题的js目录下"><a href="#3-拷贝需要的4个js文件，到主题的js目录下" class="headerlink" title="3. 拷贝需要的4个js文件，到主题的js目录下"></a>3. 拷贝需要的4个js文件，到主题的js目录下</h4><p>addphoto.js<br>jquery.min.js<br>jquery.masonry.min.js<br>jquery.easing.1.3.js<br>jquery-1.11.3.min.js</p><h4 id="4-编辑layout下的文件head-ejs，引入js"><a href="#4-编辑layout下的文件head-ejs，引入js" class="headerlink" title="4. 编辑layout下的文件head.ejs，引入js"></a>4. 编辑layout下的文件head.ejs，引入js</h4><pre><code>&lt;!-- YPN Add 2019-03-25 增加相册所需js --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;%- config.root %&gt;js/jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code></pre><h4 id="5-新建图片数据源配置文件data-json，保存到菜单目录photos下面，内容如下"><a href="#5-新建图片数据源配置文件data-json，保存到菜单目录photos下面，内容如下" class="headerlink" title="5. 新建图片数据源配置文件data.json，保存到菜单目录photos下面，内容如下"></a>5. 新建图片数据源配置文件data.json，保存到菜单目录photos下面，内容如下</h4><pre><code>[    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;},    {&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;}]</code></pre><p>其中，图片地址为网络地址，示例中图床由腾讯云提供。</p><h4 id="最后，重启hexo服务生效。"><a href="#最后，重启hexo服务生效。" class="headerlink" title="最后，重启hexo服务生效。"></a>最后，重启hexo服务生效。</h4><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加文本输入框特效</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%A1%86%E7%89%B9%E6%95%88/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%A1%86%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p>打开layout下的文件footer.ejs，增加文本输入框特效：</p><pre><code>&lt;!--2017-10-06 YPN Add 添加输入框特效。 --&gt;&lt;script src=&quot;/js/activate-power-mode.js&quot;&gt;&lt;/script&gt;&lt;script&gt;  POWERMODE.colorful = true;  // 控制开启/开启礼花特效    POWERMODE.shake    = false; // 控制开启/关闭屏幕震动特效    document.body.addEventListener(&apos;input&apos;, POWERMODE);&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加鼠标点击特效</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p>打开layout下的文件footer.ejs，增加社会主义核心价值观特效：</p><pre><code>&lt;!--2017-10-06 YPN Add 添加鼠标点击特效 --&gt;&lt;script type=&quot;text/javascript&quot;&gt;  /* 鼠标点击特效 */  var a_idx = 0;  jQuery(document).ready(function($) {      $(&quot;body&quot;).click(function(e) {  var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot; ,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);  var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);          a_idx = (a_idx + 1) % a.length;  var x = e.pageX,          y = e.pageY;          $i.css({  &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999,  &quot;top&quot;: y - 20,  &quot;left&quot;: x,  &quot;cursor&quot;:&quot;default&quot;,  &quot;position&quot;: &quot;absolute&quot;,  &quot;font-weight&quot;: &quot;bold&quot;,  &quot;color&quot;: &quot;#ff6651&quot;          });          $(&quot;body&quot;).append($i);          $i.animate({  &quot;top&quot;: y - 180,  &quot;opacity&quot;: 0          },          1500,  function() {              $i.remove();          });      });  });&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加一言API</title>
      <link href="/2019/03/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A8%80API/"/>
      <url>/2019/03/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A8%80API/</url>
      
        <content type="html"><![CDATA[<p>根据你的需求，在合适地方加入一言。例如，打开主题layout下的文件common-article.ejs，加入一言：</p><h2 id="增加普通一言"><a href="#增加普通一言" class="headerlink" title="增加普通一言"></a>增加普通一言</h2><pre><code>&lt;!-- YPN Add 2019-03-22 没有authorDesc时，显示一言经典语句--&gt;&lt;% if (post.authorDesc) { %&gt;    &lt;p&gt;&lt;%= post.authorDesc ? post.authorDesc : theme.webmaster.desc %&gt;&lt;/p&gt;&lt;% }else { %&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;https://api.lwl12.com/hitokoto/v1?encode=js&amp;charset=utf-8&quot;&gt;&lt;/script&gt;    &lt;p&gt;&lt;span id=&quot;lwlhitokoto&quot;&gt;&lt;script&gt;lwlhitokoto()&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;&lt;% } %&gt;</code></pre><h2 id="增加彩色滚动变换一言"><a href="#增加彩色滚动变换一言" class="headerlink" title="增加彩色滚动变换一言"></a>增加彩色滚动变换一言</h2><p>下面示例，由固定内容方式，切换为了一言</p><pre><code>&lt;p&gt;&lt;span id=&quot;lwlhitokoto&quot;&gt;&lt;script&gt;    var binft = function (r) {        function t() {        return b[Math.floor(Math.random() * b.length)]        }          function e() {        return String.fromCharCode(94 * Math.random() + 33)        }        function n(r) {        for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) {          var l = document.createElement(&quot;span&quot;);          l.textContent = e(), l.style.color = t(), n.appendChild(l)        }        return n        }        function i() {            //var t = o[c.skillI];            var t = v_yiYan;            c.step ? c.step-- : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : &quot;forward&quot; === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = &quot;backward&quot;, c.delay = a) : c.skillP &gt; 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = &quot;forward&quot;)), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)        }        var l = &quot;&quot;,        o = [&quot;青青陵上柏，磊磊涧中石。&quot;, &quot;人生天地间，忽如远行客。&quot;,&quot;斗酒相娱乐，聊厚不为薄。&quot;, &quot;驱车策驽马，游戏宛与洛。&quot;,&quot;洛中何郁郁，冠带自相索。&quot;,&quot;长衢罗夹巷，王侯多第宅。&quot;,&quot;两宫遥相望，双阙百余尺。&quot;,&quot;极宴娱心意，戚戚何所迫？&quot;].map(function (r) {            return r + &quot;&quot;        }),        a = 2,        g = 1,        s = 5,        d = 75,        b = [&quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;],        c = {            text: &quot;&quot;,            prefixP: -s,            skillI: 0,            skillP: 0,            direction: &quot;forward&quot;,            delay: a,            step: g        };              //YPN Add 2019-03-29 请求获得从7种分类中随机抽取一个句子，并以纯文本格式输出：https://v1.hitokoto.cn/?encode=text        //https://v1.hitokoto.cn/（从7种分类中随机抽取）        //https://v1.hitokoto.cn/?c=b （请求获得一个分类是漫画的句子）        //https://v1.hitokoto.cn/?c=f&amp;encode=text （请求获得一个来自网络的句子，并以纯文本格式输出）        var v_yiYan = &quot;让我安静一会儿&quot;;        var xhr = new XMLHttpRequest();        xhr.onreadystatechange = function () {            if (xhr.readyState === 4) {                v_yiYan = xhr.responseText;            }        }        xhr.open(&quot;GET&quot;, &quot;https://v1.hitokoto.cn/?encode=text&quot;,true);        xhr.send();        i()    };    binft(document.getElementById(&apos;lwlhitokoto&apos;));&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git下载安装</title>
      <link href="/2018/12/19/Git%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2018/12/19/Git%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><h3 id="Git官网下载"><a href="#Git官网下载" class="headerlink" title="Git官网下载"></a>Git<a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">官网下载</a></h3><a id="more"></a><hr><h2 id="Linux平台"><a href="#Linux平台" class="headerlink" title="Linux平台"></a>Linux平台</h2><h3 id="一-源码安装（以SUSE-Linux-12为例）"><a href="#一-源码安装（以SUSE-Linux-12为例）" class="headerlink" title="一. 源码安装（以SUSE Linux 12为例）"></a>一. 源码安装（以SUSE Linux 12为例）</h3><h4 id="1-源码下载"><a href="#1-源码下载" class="headerlink" title="1. 源码下载"></a>1. <a href="https://github.com/git/git/releases" target="_blank" rel="noopener">源码下载</a></h4><h4 id="2-编译安装"><a href="#2-编译安装" class="headerlink" title="2. 编译安装"></a>2. 编译安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf git-2.20.1.tar.gz </span><br><span class="line">cd git-2.20.1/</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make all doc info</span><br><span class="line">sudo make install install-doc install-html install-info</span><br></pre></td></tr></table></figure><p>执行命令：<code>make all doc info</code> 报如下错误：</p><pre><code>    * new build flags    CC fuzz-pack-headers.oIn file included from packfile.h:4:0,                 from fuzz-pack-headers.c:1:cache.h:20:18: fatal error: zlib.h: No such file or directory #include &lt;zlib.h&gt;                  ^compilation terminated.Makefile:2302: recipe for target &apos;fuzz-pack-headers.o&apos; failedmake: *** [fuzz-pack-headers.o] Error 1</code></pre><p>原因是需要安装依赖包：<a href="http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html" target="_blank" rel="noopener">zlib-devel</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>之后便可继续安装了。</p><h4 id="3-执行命令：git-version，得到如下结果表示安装成功。"><a href="#3-执行命令：git-version，得到如下结果表示安装成功。" class="headerlink" title="3. 执行命令：git --version，得到如下结果表示安装成功。"></a>3. 执行命令：<code>git --version</code>，得到如下结果表示安装成功。</h4><pre><code>git version 2.20.1</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL收缩数据库</title>
      <link href="/2018/10/29/SQL%E6%94%B6%E7%BC%A9%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2018/10/29/SQL%E6%94%B6%E7%BC%A9%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h4 id="1-查询当前数据库的基本信息"><a href="#1-查询当前数据库的基本信息" class="headerlink" title="1. 查询当前数据库的基本信息"></a>1. 查询当前数据库的基本信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sysfiles;</span><br></pre></td></tr></table></figure><blockquote><p>记录查询结果的fileid值，在第2、3步要使用</p></blockquote><h4 id="2-收缩数据库"><a href="#2-收缩数据库" class="headerlink" title="2. 收缩数据库"></a>2. 收缩数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKDATABASE('数据库名');</span><br></pre></td></tr></table></figure><h4 id="3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小"><a href="#3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小" class="headerlink" title="3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小"></a>3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKFILE(2,0);</span><br></pre></td></tr></table></figure><h4 id="4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小"><a href="#4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小" class="headerlink" title="4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小"></a>4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKFILE(1,0);</span><br></pre></td></tr></table></figure><h4 id="5-执行更新操作"><a href="#5-执行更新操作" class="headerlink" title="5. 执行更新操作"></a>5. 执行更新操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC UPDATEUSAGE(0);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access与SQL Server在写法上的区别</title>
      <link href="/2018/10/24/Access%E4%B8%8ESQL-Server%E5%9C%A8%E5%86%99%E6%B3%95%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/10/24/Access%E4%B8%8ESQL-Server%E5%9C%A8%E5%86%99%E6%B3%95%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h4 id="1-查询语句WHERE条件带布尔类型值时"><a href="#1-查询语句WHERE条件带布尔类型值时" class="headerlink" title="1. 查询语句WHERE条件带布尔类型值时"></a>1. 查询语句WHERE条件带布尔类型值时</h4><p>Access<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AND IsA = true;</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AND IsA = 1;</span><br><span class="line">AND IsA = 'true';</span><br></pre></td></tr></table></figure></p><h4 id="2-查询语句WHERE条件带日期时"><a href="#2-查询语句WHERE条件带日期时" class="headerlink" title="2. 查询语句WHERE条件带日期时"></a>2. 查询语句WHERE条件带日期时</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> TimeTag = <span class="keyword">FORMAT</span>(<span class="string">'2016-1-6'</span>,<span class="string">'yyyy-MM-dd hh:mm:ss'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> TimeTag = <span class="keyword">FORMAT</span>(<span class="string">"2016-1-6"</span>,<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br></pre></td></tr></table></figure><h4 id="3-多分支的判断情况"><a href="#3-多分支的判断情况" class="headerlink" title="3. 多分支的判断情况"></a>3. 多分支的判断情况</h4><p>Access<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SWITCH</span>(IsA = <span class="literal">false</span>, <span class="number">0</span>, IsA = <span class="literal">true</span>, <span class="number">1</span>) <span class="keyword">AS</span> ColName <span class="keyword">FROM</span> 表;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IIF</span>(IsA <span class="keyword">IS</span> <span class="literal">NULL</span>, <span class="number">0</span>, IsA)              <span class="keyword">AS</span> ColName <span class="keyword">FROM</span> 表;</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> IsA <span class="keyword">WHEN</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">ELSE</span> <span class="number">1</span> <span class="keyword">END</span> <span class="keyword">AS</span> ColName <span class="keyword">AS</span> A <span class="keyword">FROM</span> 表;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> IsA <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">ELSE</span> <span class="number">1</span> <span class="keyword">END</span> <span class="keyword">AS</span> ColName <span class="keyword">AS</span> A <span class="keyword">FROM</span> 表;</span><br></pre></td></tr></table></figure></p><h4 id="4-将字符类型转换成数值类型"><a href="#4-将字符类型转换成数值类型" class="headerlink" title="4. 将字符类型转换成数值类型"></a>4. 将字符类型转换成数值类型</h4><p>Access<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Val(str)</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(INT, str)</span><br><span class="line">CAST(str AS INT)</span><br></pre></td></tr></table></figure></p><h4 id="5-将数值类型转换成字符类型"><a href="#5-将数值类型转换成字符类型" class="headerlink" title="5. 将数值类型转换成字符类型"></a>5. 将数值类型转换成字符类型</h4><p>Access<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Str(num)</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(VARCHAR(20), num)</span><br><span class="line">CAST(num AS VARCHAR)</span><br></pre></td></tr></table></figure></p><h4 id="6-格式化日期"><a href="#6-格式化日期" class="headerlink" title="6. 格式化日期"></a>6. 格式化日期</h4><p>Access<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FORMAT(NOW(),'yyyy-MM-dd')</span><br><span class="line">FORMAT(NOW(),'yyyy-MM-dd hh:mm:ss')</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(VARCHAR(20),GETDATE(),23)</span><br><span class="line">CONVERT(VARCHAR(20),GETDATE(),120)</span><br></pre></td></tr></table></figure></p><h4 id="7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致"><a href="#7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致" class="headerlink" title="7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致"></a>7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致</h4><p>如更新SQL：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表 <span class="keyword">SET</span> <span class="keyword">Name</span> = @<span class="keyword">Name</span>, Age = @Age <span class="keyword">WHERE</span> <span class="keyword">ID</span> = @<span class="keyword">ID</span></span><br></pre></td></tr></table></figure></p><p>则参数必须定义为：</p><pre><code>OleDbParameter[] param = new OleDbParameter{    new OleDbParameter(&quot;@Name&quot;, model.Name),    new OleDbParameter(&quot;@Age&quot;, model.Age),    new OleDbParameter(&quot;@ID&quot;, model.ID),  }</code></pre><h4 id="8-Access类似于SQL-Server的函数ISNULL"><a href="#8-Access类似于SQL-Server的函数ISNULL" class="headerlink" title="8. Access类似于SQL Server的函数ISNULL()"></a>8. Access类似于SQL Server的函数ISNULL()</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IIF(IsA = '' OR IsA IS NULL, '', IsA)</span><br></pre></td></tr></table></figure><h4 id="9-Access创建表或添加列时，必须附带默认约束（Defualt）"><a href="#9-Access创建表或添加列时，必须附带默认约束（Defualt）" class="headerlink" title="9. Access创建表或添加列时，必须附带默认约束（Defualt）"></a>9. Access创建表或添加列时，必须附带默认约束（Defualt）</h4><h4 id="10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值"><a href="#10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值" class="headerlink" title="10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值"></a>10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值</h4><p>如下：</p><pre><code>ALTER TABLE 表 ADD A VARCHAR(23)SELECT IIF(STR(A) IS NULL, &apos;空&apos;, &apos;非空&apos;) FROM 表</code></pre><h4 id="11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。"><a href="#11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。" class="headerlink" title="11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。"></a>11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。</h4><h4 id="12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。"><a href="#12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。" class="headerlink" title="12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。"></a>12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。</h4><h4 id="13-多表关联查询"><a href="#13-多表关联查询" class="headerlink" title="13. 多表关联查询"></a>13. 多表关联查询</h4><p>Access（可理解为始终是两表间的操作）<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  (A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID = B.ID ) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID = C.ID;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ((A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID = B.ID ) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID = C.ID) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> D <span class="keyword">ON</span> C.ID = D.ID;</span><br></pre></td></tr></table></figure></p><p>SQL Server<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID = B.ID <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID = C.ID;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Access </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VS2017中使用C#创建和使用DLL</title>
      <link href="/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8CSharp%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/"/>
      <url>/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8CSharp%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/</url>
      
        <content type="html"><![CDATA[<h4 id="创建DLL"><a href="#创建DLL" class="headerlink" title="创建DLL"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png" alt=""></p><p>2、在类中定义接口类和接口实现类<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png" alt=""><br>输入以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[Guid(&quot;710CA75B-1193-4BBF-ADA6-C92763616B85&quot;)]</span><br><span class="line">public interface IDWGNoEnde</span><br><span class="line">&#123;</span><br><span class="line">    string Encode(string i_DWGNo);</span><br><span class="line">    string Decode(string i_DWGNo);</span><br><span class="line">&#125;</span><br><span class="line">[Guid(&quot;F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5&quot;)]</span><br><span class="line">public class DWGNoEnDe : IDWGNoEnde</span><br><span class="line">&#123;</span><br><span class="line">    public string Encode(string i_DWGNo)</span><br><span class="line">    &#123;</span><br><span class="line">        string o_EncodeDWGNo;</span><br><span class="line">        o_EncodeDWGNo = i_DWGNo + &quot;_YPN&quot;;</span><br><span class="line">        return o_EncodeDWGNo;</span><br><span class="line">    &#125;</span><br><span class="line">    public string Decode(string i_DWGNo)</span><br><span class="line">    &#123;</span><br><span class="line">        string o_DecodeDWGNo;</span><br><span class="line">        o_DecodeDWGNo = i_DWGNo.Substring(0, i_DWGNo.Length - 4);</span><br><span class="line">        return o_DecodeDWGNo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中，GUID通过点击VS工具》创建GUID，复制得到<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png" alt=""></p><p>3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png" alt=""></p><p>4、右键项目》属性》生成，勾选为COM互操作注册<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png" alt=""></p><p>5、打开VS2017的开发人员命令提示符，输入<code>sn -k c:\myKey.snk</code>，生成密钥文件<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png" alt=""></p><p>6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png" alt=""></p><p>7、点击生成》重新生成解决方案，生成DLL</p><h4 id="使用DLL"><a href="#使用DLL" class="headerlink" title="使用DLL"></a>使用DLL</h4><h5 id="VB调用"><a href="#VB调用" class="headerlink" title="VB调用"></a>VB调用</h5><p>1、生成tlb文件</p><blockquote><p>一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。</p></blockquote><p>在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录<code>C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319&gt;</code>，执行以下命令生成tlb文件：</p><pre><code>regasm F:\TestC#DLL\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase</code></pre><p><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png" alt=""></p><p>2、打开VB工程，引用tlb文件<br>点击浏览，选择刚刚生成的tlb文件，确定即可。<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png" alt=""></p><p>3、在代码中定义和使用DLL<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> v_dwgnoEnde <span class="keyword">As</span> <span class="keyword">New</span> DWGNoEnDe.DWGNoEnDe</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Text2.<span class="keyword">Text</span> = v_dwgnoEnde.Encode(Text1.<span class="keyword">Text</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VS2017中使用C++创建和使用DLL</title>
      <link href="/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8C++%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/"/>
      <url>/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8C++%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/</url>
      
        <content type="html"><![CDATA[<h4 id="创建DLL"><a href="#创建DLL" class="headerlink" title="创建DLL"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png" alt=""><br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png" alt=""></p><p>2、右键项目》添加》新建项》头文件(.h)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png" alt=""><br>在头文件中输入以下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line">&#123;</span><br><span class="line">__declspec(dllexport) <span class="keyword">int</span> __<span class="function">stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png" alt=""><br>在C++文件中输入以下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"DWGNoEnDe.h"</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> __<span class="function">stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">c = a + b;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、右键项目》添加》新建项》模块定义文件(.def)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png" alt=""><br>在模块定义文件中输入以下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY</span><br><span class="line">EXPORTS</span><br><span class="line">add</span><br></pre></td></tr></table></figure></p><blockquote><p>add为方法名</p></blockquote><p>5、右键项目》属性》配置属性》C/C++》代码生成，设置运行库为：多线程 DLL（/MD）<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png" alt=""></p><p>6、编译项目，生成Release版的DLL<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png" alt=""><br>可编译为x86或x64。</p><h4 id="使用DLL"><a href="#使用DLL" class="headerlink" title="使用DLL"></a>使用DLL</h4><h5 id="一、C-调用"><a href="#一、C-调用" class="headerlink" title="一、C++调用"></a>一、C++调用</h5><p>1、新建项目<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png" alt=""></p><p>2、拷贝编译生成的dll和头文件，到测试项目下面<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png" alt=""></p><p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png" alt=""><br>在C++文件中输入以下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"DWGNoEnDe.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">23</span>;</span><br><span class="line"><span class="keyword">int</span> c = add(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输出：%d\n"</span>,c);</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、点击“本地Windows调试器”运行项目，调用成功<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png" alt=""></p><h5 id="二、VB调用"><a href="#二、VB调用" class="headerlink" title="二、VB调用"></a>二、VB调用</h5><p>1、拷贝C++DLL到exe程序同一目录下</p><p>2、在exe程序中引用C++DLL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Public Declare Function add Lib &quot;DWGNoEnDe.dll&quot; (ByVal a As Long, ByVal b As Long) As Long</span><br></pre></td></tr></table></figure></p><p>3、调用C++DLL的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Private Sub Command1_Click()</span><br><span class="line">    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure></p><h5 id="三、C-调用"><a href="#三、C-调用" class="headerlink" title="三、C#调用"></a>三、C#调用</h5><p>1、新建控制台应用项目</p><p>2、拷贝C++DLL到<code>项目名称\bin\Debug</code>下，与exe处于同一目录</p><p>3、在<code>Program.cs</code>中输入如下代码：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs" alt=""></p><p>4、点击启动运行项目，调用成功</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VB下载网页文件或图片的方法</title>
      <link href="/2018/04/26/VB%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2018/04/26/VB%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地"><a href="#一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地" class="headerlink" title="一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地"></a>一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地</h4><p>引入API：</p><pre><code>Private Declare Function URLDownloadToFile Lib &quot;urlmon&quot; Alias &quot;URLDownloadToFileA&quot; (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long</code></pre><p>用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Private Sub test()</span><br><span class="line">    Dim v_URL As String, v_FileName As String, v_Result As Long</span><br><span class="line">    v_URL = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class="line">    v_FileName = App.Path &amp; &quot;\Baidu.bmp&quot;  &apos;下载百度Logo图片</span><br><span class="line">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class="line">    v_URL = &quot;http://www.baidu.com&quot;</span><br><span class="line">    v_FileName = App.Path &amp; &quot;\Baidu.html&quot; &apos;下载百度首页的网页</span><br><span class="line">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure></p><h4 id="二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation"><a href="#二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation" class="headerlink" title="二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation"></a>二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation</h4><p>引入API：</p><pre><code>Private Declare Function OleLoadPicturePath Lib &quot;oleaut32.dll&quot; (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As LongPrivate Type TGUID    Data1 As Long    Data2 As Integer    Data3 As Integer    Data4(0 To 7) As ByteEnd Type</code></pre><p>用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Public Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture</span><br><span class="line">    Dim riid As TGUID</span><br><span class="line">    riid.Data1    = &amp;H7BF80980</span><br><span class="line">    riid.Data2    = &amp;HBF32</span><br><span class="line">    riid.Data3    = &amp;H101A</span><br><span class="line">    riid.Data4(0) = &amp;H8B</span><br><span class="line">    riid.Data4(1) = &amp;HBB</span><br><span class="line">    riid.Data4(2) = &amp;H0</span><br><span class="line">    riid.Data4(3) = &amp;HAA</span><br><span class="line">    riid.Data4(4) = &amp;H0</span><br><span class="line">    riid.Data4(5) = &amp;H30</span><br><span class="line">    riid.Data4(6) = &amp;HC</span><br><span class="line">    riid.Data4(7) = &amp;HAB</span><br><span class="line">    OleLoadPicturePath StrPtr(i_ImgUrl), 0&amp;, 0&amp;, 0&amp;, riid, LoadNetPicture</span><br><span class="line">End Function</span><br><span class="line">Private Sub test()</span><br><span class="line">    Dim v_ImgUrl As String, v_Picture As Picture</span><br><span class="line">    v_ImgUrl = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class="line">    Set v_Picture = LoadNetPicture(v_ImgUrl)          &apos;将图片下载到变量</span><br><span class="line">    SavePicture v_Picture, App.Path &amp; &quot;\MyImg.bmp&quot;    &apos;保存到硬盘</span><br><span class="line">    Picture1.Picture = v_Picture</span><br><span class="line">    &apos;如果要将图片装载到控件</span><br><span class="line">    Picture1.Picture = LoadNetPicture(v_ImgUrl)</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure></p><h4 id="三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地"><a href="#三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地" class="headerlink" title="三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地"></a>三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地</h4><p>定义公用下载过程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Public Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)</span><br><span class="line">    Dim XmlHttp, B() As Byte</span><br><span class="line">    Set XmlHttp = CreateObject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class="line">    XmlHttp.Open &quot;GET&quot;, i_Url, False</span><br><span class="line">    XmlHttp.Send</span><br><span class="line">    If XmlHttp.ReadyState = 4 Then</span><br><span class="line">        B() = XmlHttp.ResponseBody</span><br><span class="line">        Open i_File For Binary As #1</span><br><span class="line">        Put #1, , B()</span><br><span class="line">        Close #1</span><br><span class="line">    End If</span><br><span class="line">    Set XmlHttp = Nothing</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure></p><p>用法:</p><pre><code>DownNetFile &quot;http://www.baidu.com/img/baidu_logo.gif&quot;, App.Path &amp; &quot;\My-1.bmp&quot; &apos;下载百度图片DownNetFile &quot;http://www.baidu.com&quot;, App.Path &amp; &quot;\Baidu.html&quot;                  &apos;下载百度首页的网页</code></pre><h4 id="四、使用WebBrowser的Document对象，保存网页的所有图片"><a href="#四、使用WebBrowser的Document对象，保存网页的所有图片" class="headerlink" title="四、使用WebBrowser的Document对象，保存网页的所有图片"></a>四、使用WebBrowser的Document对象，保存网页的所有图片</h4><p>先用 WebBrowser1 显示一个网页，如：</p><pre><code>WebBrowser1.Navigate &quot;http://www.baidu.com&quot;</code></pre><p>待网页加载完毕后，再执行以下语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Dim v_Path As String, I As Long, E, v_Range</span><br><span class="line">v_Path = App.Path &amp; &quot;\Tu\&quot;</span><br><span class="line">WebBrowser1.Silent = True &apos;关闭交互，禁止脚本错误</span><br><span class="line">For Each E In WebBrowser1.Document.All</span><br><span class="line">    If E.tagName = &quot;IMG&quot; Then</span><br><span class="line">        Set v_Range = WebBrowser1.Document.body.createControlRange()</span><br><span class="line">        v_Range.Add E</span><br><span class="line">        v_Range.execCommand &quot;Copy&quot; &apos;复制到剪贴板</span><br><span class="line">        I = I + 1</span><br><span class="line">        SavePicture Clipboard.GetData, v_Path &amp; I &amp; &quot;.bmp&quot; &apos;保存到硬盘</span><br><span class="line">    End If</span><br><span class="line">Next</span><br></pre></td></tr></table></figure></p><h4 id="五、用API调用系统的另存为下载对话框，进行文件下载"><a href="#五、用API调用系统的另存为下载对话框，进行文件下载" class="headerlink" title="五、用API调用系统的另存为下载对话框，进行文件下载"></a>五、用API调用系统的另存为下载对话框，进行文件下载</h4><p>引入API:</p><pre><code>Private Declare Function DoFileDownload Lib &quot;shdocvw.dll&quot; (ByVal lpszFile As String) As Long</code></pre><p>用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dim v_Url As String</span><br><span class="line">v_Url = StrConv(&quot;http://www.baidu.com&quot;, vbUnicode)</span><br><span class="line">Call DoFileDownload(v_Url)</span><br></pre></td></tr></table></figure></p><h4 id="六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载"><a href="#六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载" class="headerlink" title="六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载"></a>六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载</h4><pre><code>WebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT</code></pre><hr><p>以上方法各有优缺点。<br>Microsoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。<br>对于谷歌地图图片，图片链接形如：<a href="http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile" target="_blank" rel="noopener">http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile</a> ，仅第四种方法有效。</p><blockquote><p>本文根据<a href="https://blog.csdn.net/rztyfx/article/details/7605624" target="_blank" rel="noopener">rztyfx的专栏</a>整理发表。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux共享目录和远程挂载</title>
      <link href="/2018/04/11/Linux%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%8C%82%E8%BD%BD/"/>
      <url>/2018/04/11/Linux%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="共享目录"><a href="#共享目录" class="headerlink" title="共享目录"></a>共享目录</h2><h3 id="1-编辑并添加共享目录配置"><a href="#1-编辑并添加共享目录配置" class="headerlink" title="1. 编辑并添加共享目录配置"></a>1. 编辑并添加共享目录配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>添加内容格式如下：</p><pre><code>[xxFileServer]        path = /filedisk/xxFileServer        guest ok = yes        writable = yes        read only = No        create mask = 0777        directory mask = 0777</code></pre><h3 id="2-给共享目录设置相应的权限"><a href="#2-给共享目录设置相应的权限" class="headerlink" title="2. 给共享目录设置相应的权限"></a>2. 给共享目录设置相应的权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /filedisk/xxFileServer</span><br></pre></td></tr></table></figure><h3 id="3-重启共享服务"><a href="#3-重启共享服务" class="headerlink" title="3. 重启共享服务"></a>3. 重启共享服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><h3 id="4-设置开机启动共享服务"><a href="#4-设置开机启动共享服务" class="headerlink" title="4. 设置开机启动共享服务"></a>4. 设置开机启动共享服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 5 smb on</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h2 id="远程挂载"><a href="#远程挂载" class="headerlink" title="远程挂载"></a>远程挂载</h2><h3 id="1-创建本地目录"><a href="#1-创建本地目录" class="headerlink" title="1. 创建本地目录"></a>1. 创建本地目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/xxFileServer</span><br></pre></td></tr></table></figure><h3 id="2-挂载远程目录"><a href="#2-挂载远程目录" class="headerlink" title="2. 挂载远程目录"></a>2. 挂载远程目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Apache Ftpserver安装配置</title>
      <link href="/2018/04/10/Apache-ftpserver%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/04/10/Apache-ftpserver%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="apache-ftpserver下载"><a href="#apache-ftpserver下载" class="headerlink" title="apache ftpserver下载"></a>apache ftpserver下载</h3><p><a href="http://mina.apache.org/ftpserver-project/downloads.html" target="_blank" rel="noopener">官网下载</a></p><a id="more"></a><hr><h3 id="apache-ftpserver安装"><a href="#apache-ftpserver安装" class="headerlink" title="apache ftpserver安装"></a>apache ftpserver安装</h3><h4 id="1-Linux下"><a href="#1-Linux下" class="headerlink" title="1. Linux下"></a>1. Linux下</h4><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/download/</span><br><span class="line">wget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure></p><h5 id="1-2-解压"><a href="#1-2-解压" class="headerlink" title="1.2 解压"></a>1.2 解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-ftpserver-1.1.1 /usr/local/ftpserver</span><br></pre></td></tr></table></figure><h5 id="1-4-修改配置文件"><a href="#1-4-修改配置文件" class="headerlink" title="1.4 修改配置文件"></a>1.4 修改配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/ftpserver/res/conf/</span><br><span class="line">vim users.properties</span><br></pre></td></tr></table></figure><p>users.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：</p><pre><code>#用户名为anonymous，密码为空tpserver.user.anonymous.userpassword=#主目录ftpserver.user.anonymous.homedirectory=./res/home#当前用户可用ftpserver.user.anonymous.enableflag=true#具有上传权限ftpserver.user.anonymous.writepermission=true#最大登陆用户数为20，0为不限ftpserver.user.anonymous.maxloginnumber=20#同IP登陆用户数为2，0为不限ftpserver.user.anonymous.maxloginperip=2 #空闲时间为300秒，0为不限ftpserver.user.anonymous.idletime=300#上传速率限制为48字节每秒，0为不限ftpserver.user.anonymous.uploadrate=4800#下载速率限制为48字节每秒，0为不限ftpserver.user.anonymous.downloadrate=4800</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ftpd-typical.xml</span><br></pre></td></tr></table></figure><p>修改配置文件ftpd-file.xml，增加encrypt-passwords=”clear”，将密码加密方式修改为clear，默认为MD5加密方式。</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;server xmlns=&quot;http://mina.apache.org/ftpserver/spring/v1&quot;        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;        xsi:schemaLocation=&quot;           http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd                   &quot;        id=&quot;myServer&quot;&gt;        &lt;listeners&gt;                &lt;nio-listener name=&quot;default&quot; port=&quot;21&quot;&gt;                    &lt;ssl&gt;                         &lt;keystore file=&quot;./res/ftpserver.jks&quot; password=&quot;password&quot; /&gt;                    &lt;/ssl&gt;                &lt;/nio-listener&gt;        &lt;/listeners&gt;        &lt;file-user-manager file=&quot;./res/conf/users.properties&quot; encrypt-passwords=&quot;clear&quot; /&gt;&lt;/server&gt;</code></pre><h5 id="1-5-启动"><a href="#1-5-启动" class="headerlink" title="1.5 启动"></a>1.5 启动</h5><p>在ftpserver目录下，执行命令：</p><ul><li>方式一：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh  bin/ftpd.sh  /res/conf/ftpd-typical.xml</span><br></pre></td></tr></table></figure></li></ul><p>此方式有局限，当命令窗口退出时，FTP服务停止。</p><ul><li>方式二：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &amp;</span><br></pre></td></tr></table></figure></li></ul><p>此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。</p><ul><li>方式三：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml &gt; ftplog/`date &apos;+%Y%m%d&apos;`ftp.log  &gt; /dev/null   2&gt;&amp;1  &amp;</span><br></pre></td></tr></table></figure></li></ul><p>方式一、二无法启动时，可用此种方式。</p><h5 id="1-5-测试"><a href="#1-5-测试" class="headerlink" title="1.5 测试"></a>1.5 测试</h5><p>在浏览器输入ftp://IP:21后，输入用户名，密码，可以登录ftp目录。</p><hr><h3 id="Suse-Linux-Enterprise-12下实现脚本启动和关闭"><a href="#Suse-Linux-Enterprise-12下实现脚本启动和关闭" class="headerlink" title="Suse Linux Enterprise 12下实现脚本启动和关闭"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id="1-在-目录下，执行下面命令"><a href="#1-在-目录下，执行下面命令" class="headerlink" title="1. 在~目录下，执行下面命令"></a>1. 在~目录下，执行下面命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .profile</span><br></pre></td></tr></table></figure><h4 id="2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下："></a>2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code>export RC_LANG=zh_CN.UTF-8export FTPSERVER_HOME=/usr/local/ftpserverexport PATH=$PATH:$FTPSERVER_HOME</code></pre><p>保存并退出。</p><h4 id="3-执行下面命令，使立即生效"><a href="#3-执行下面命令，使立即生效" class="headerlink" title="3. 执行下面命令，使立即生效"></a>3. 执行下面命令，使立即生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><h4 id="4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，"><a href="#4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，" class="headerlink" title="4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，"></a>4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。</p><pre><code>#!/bin/bash# /usr/local/ftpserver# YPN 2018-04-11 Createif [ &quot;$1&quot;x = &quot;start&quot;x ]; then  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1&gt;/usr/local/ftpserver/res/log/ftpd.log 2&gt;&amp;1 &amp;fiif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then  kill $(ps aux|grep &quot;ftpserver&quot; | grep -v grep |awk &apos;{print $2}&apos;)fiif [ &quot;$1&quot;x = &quot;check&quot;x ]; then  ps -aux|grep &quot;ftpserver&quot; | grep -v grepfiif [ &quot;$1&quot;x = &quot;log&quot;x ]; then  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000fi</code></pre><h4 id="5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="5. 给文件添加权限，使脚本文件可以执行，命令为"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure><h4 id="6-最后，执行下面命令可启动、关闭ftpserver或查看日志"><a href="#6-最后，执行下面命令可启动、关闭ftpserver或查看日志" class="headerlink" title="6. 最后，执行下面命令可启动、关闭ftpserver或查看日志"></a>6. 最后，执行下面命令可启动、关闭ftpserver或查看日志</h4><p>启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver start</span><br></pre></td></tr></table></figure></p><p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver stop</span><br></pre></td></tr></table></figure></p><p>查看日志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver log</span><br></pre></td></tr></table></figure></p><p>检查ftpserver进程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver check</span><br></pre></td></tr></table></figure></p><h4 id="7-随系统自启动"><a href="#7-随系统自启动" class="headerlink" title="7. 随系统自启动"></a>7. 随系统自启动</h4><blockquote><p>暂未找到解决办法</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS网络连接system Eth0不可用解决办法</title>
      <link href="/2018/02/13/CentOS%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5system-eth0%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2018/02/13/CentOS%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5system-eth0%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-6-x"><a href="#CentOS-6-x" class="headerlink" title="CentOS 6.x"></a>CentOS 6.x</h3><p>VMware克隆CentOS 6导致网络连接system eth0不可用的解决办法</p><h6 id="1-打开下面文件，注释掉原eth0，将eth1改为eth0"><a href="#1-打开下面文件，注释掉原eth0，将eth1改为eth0" class="headerlink" title="1. 打开下面文件，注释掉原eth0，将eth1改为eth0"></a>1. 打开下面文件，注释掉原eth0，将eth1改为eth0</h6><pre><code>vim /etc/udev/rules.d/70-persistent-net.rules</code></pre><p>一般能看到eth0、eth1两个配置规则，注释掉NAME=”eth0”的配置规则，将另一个配置规则的NAME=”eth1”改成NAME=”eth0”。</p><h6 id="2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件"><a href="#2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件" class="headerlink" title="2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件"></a>2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件</h6><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code></pre><p>保存到HWADDR=”00:50:56:a9:4c:f9”处。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Suse Linux Enterprise 12 防火墙开放服务及端口</title>
      <link href="/2018/02/01/Suse-Linux-Enterprise-12-%E9%98%B2%E7%81%AB%E5%A2%99%E5%BC%80%E6%94%BE%E6%9C%8D%E5%8A%A1%E5%8F%8A%E7%AB%AF%E5%8F%A3/"/>
      <url>/2018/02/01/Suse-Linux-Enterprise-12-%E9%98%B2%E7%81%AB%E5%A2%99%E5%BC%80%E6%94%BE%E6%9C%8D%E5%8A%A1%E5%8F%8A%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、图形化界面方式"><a href="#一、图形化界面方式" class="headerlink" title="一、图形化界面方式"></a>一、图形化界面方式</h3><h4 id="1-使用以下命令进入防火墙"><a href="#1-使用以下命令进入防火墙" class="headerlink" title="1. 使用以下命令进入防火墙"></a>1. 使用以下命令进入防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yast2</span><br></pre></td></tr></table></figure><p>然后选择Security and Users -&gt; Firewall，或用下面命令直接进入Firewall<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yast2 firewall</span><br></pre></td></tr></table></figure></p><h4 id="2-开放服务"><a href="#2-开放服务" class="headerlink" title="2. 开放服务"></a>2. 开放服务</h4><p>选择Allowed Services -&gt; Add，可以添加如ssh, http, https等服务。</p><h4 id="3-开放端口"><a href="#3-开放端口" class="headerlink" title="3. 开放端口"></a>3. 开放端口</h4><p>选择右下角的Advanced…，然后填写要开放的端口，多个端口之间用空格隔开。</p><h4 id="4-保存设置重启防火墙使生效"><a href="#4-保存设置重启防火墙使生效" class="headerlink" title="4. 保存设置重启防火墙使生效"></a>4. 保存设置重启防火墙使生效</h4><p>选择Save Settings and Restart Firewall Now即可。</p><hr><h3 id="二、命令方式"><a href="#二、命令方式" class="headerlink" title="二、命令方式"></a>二、命令方式</h3><h4 id="1-修改防火墙配置"><a href="#1-修改防火墙配置" class="headerlink" title="1. 修改防火墙配置"></a>1. 修改防火墙配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig</span><br><span class="line">vim SuSEfirewall2</span><br></pre></td></tr></table></figure><p>在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP=”ssh” 或 FW_SERVICES_EXT_TCP=”22″<br>如果要开放多个端口则为 FW_SERVICES_EXT_TCP=”22 80 8090″<br>最后，保存退出。</p><h4 id="2-重启防火墙使生效"><a href="#2-重启防火墙使生效" class="headerlink" title="2. 重启防火墙使生效"></a>2. 重启防火墙使生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rcSuSEfirewall2 restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy脚本启动和关闭</title>
      <link href="/2018/02/01/HAProxy%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/"/>
      <url>/2018/02/01/HAProxy%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS下实现脚本启动和关闭"><a href="#CentOS下实现脚本启动和关闭" class="headerlink" title="CentOS下实现脚本启动和关闭"></a>CentOS下实现脚本启动和关闭</h3><h4 id="1-编写启动脚本"><a href="#1-编写启动脚本" class="headerlink" title="1. 编写启动脚本"></a>1. 编写启动脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.d/init.d/haproxy</span><br></pre></td></tr></table></figure><p>本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。<br>打开文件haproxy，贴入如下内容：</p><pre><code>#!/bin/sh#chkconfig: 2345 10 90#description:haproxy## chkconfig: - 85 15# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \#              for high availability environments.# processname: haproxy# config: /etc/haproxy/haproxy.cfg# pidfile: /var/run/haproxy.pid# Script Author: Simon Matter &lt;simon.matter@invoca.ch&gt;# Version: 2004060600# Source function library.if [ -f /etc/init.d/functions ]; then  . /etc/init.d/functionselif [ -f /etc/rc.d/init.d/functions ] ; then  . /etc/rc.d/init.d/functionselse  exit 0fi# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ ${NETWORKING} = &quot;no&quot; ] &amp;&amp; exit 0# This is our service nameBASENAME=`basename $0`if [ -L $0 ]; then  BASENAME=`find $0 -name $BASENAME -printf %l`  BASENAME=`basename $BASENAME`fiBIN=/usr/local/haproxy/sbin/haproxyCFG=/usr/local/haproxy/haproxy.cfg[ -f $CFG ] || exit 1PIDFILE=/var/run/$BASENAME.pidLOCKFILE=/var/lock/subsys/$BASENAMERETVAL=0start() {  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;    return 1  fi  echo -n &quot;Starting $BASENAME: &quot;  daemon $BIN -D -f $CFG -p $PIDFILE  RETVAL=$?  echo  [ $RETVAL -eq 0 ] &amp;&amp; touch $LOCKFILE  return $RETVAL}stop() {  echo -n &quot;Shutting down $BASENAME: &quot;  killproc $BASENAME -USR1  RETVAL=$?  echo  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $LOCKFILE  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $PIDFILE  return $RETVAL}restart() {  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;    return 1  fi  stop  start}reload() {  if ! [ -s $PIDFILE ]; then    return 0  fi  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;    return 1  fi  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)}check() {  $BIN -c -q -V -f $CFG}quiet_check() {  $BIN -c -q -f $CFG}rhstatus() {  status $BASENAME}condrestart() {  [ -e $LOCKFILE ] &amp;&amp; restart || :}# See how we were called.case &quot;$1&quot; in  start)    start    ;;  stop)    stop    ;;  restart)    restart    ;;  reload)    reload    ;;  condrestart)    condrestart    ;;  status)    rhstatus    ;;  check)    check    ;;  *)    echo $&quot;Usage: $BASENAME {start|stop|restart|reload|condrestart|status|check}&quot;    exit 1esacexit $?</code></pre><p>如果安装路径有变动，则只需修改上面的<code>BIN=/usr/local/haproxy/sbin/haproxy</code>和<code>CFG=/usr/local/haproxy/haproxy.cfg</code>即可。</p><h4 id="2-脚本随系统自启动"><a href="#2-脚本随系统自启动" class="headerlink" title="2. 脚本随系统自启动"></a>2. 脚本随系统自启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性</span><br><span class="line">chkconfig --add haproxy            # 添加服务</span><br><span class="line">chkconfig haproxy on</span><br></pre></td></tr></table></figure><p>如果出现结果： <em>service haproxy does not support chkconfig</em><br>解决办法是在 <strong>/etc/rc.d/init.d/haproxy</strong> 中添加下面两句到 <strong>#!/bin/bash</strong> 之后:</p><pre><code>#chkconfig: 2345 10 90#description:haproxy</code></pre><p>—-其中2345是默认启动级别，级别有0-6共7个级别。<br>—-等级0表示：表示关机<br>—-等级1表示：单用户模式<br>—-等级2表示：无网络连接的多用户命令行模式<br>—-等级3表示：有网络连接的多用户命令行模式<br>—-等级4表示：不可用<br>—-等级5表示：带图形界面的多用户模式<br>—-等级6表示：重新启动<br>—-10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。</p><blockquote><p>添加后效果如下：<br>    [root@Linux-xx ~]# cat /etc/rc.d/init.d/haproxy</p><pre><code>#!/bin/bash#chkconfig: 2345 10 90#description:haproxyBASE_DIR=&quot;/usr/local/haproxy&quot;ARGV=&quot;$@&quot;  start()......</code></pre></blockquote><h4 id="3-启动与关闭"><a href="#3-启动与关闭" class="headerlink" title="3. 启动与关闭"></a>3. 启动与关闭</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service haproxy start</span><br><span class="line">service haproxy stop</span><br></pre></td></tr></table></figure><hr><h3 id="Suse-Linux-Enterprise-12下实现脚本启动和关闭"><a href="#Suse-Linux-Enterprise-12下实现脚本启动和关闭" class="headerlink" title="Suse Linux Enterprise 12下实现脚本启动和关闭"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id="1-在-目录下，执行下面命令"><a href="#1-在-目录下，执行下面命令" class="headerlink" title="1. 在~目录下，执行下面命令"></a>1. 在~目录下，执行下面命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .profile</span><br></pre></td></tr></table></figure><h4 id="2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下："></a>2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code># .profile# Get the aliases and functionsif [ -f ~/.bashrc ]; then        . ~/.bashrcfi# User specific environment and startup programsHAPROXY_HOME=/usr/local/haproxyPATH=$PATH:$HOME/bin:$HAPROXY_HOMEexport HAPROXY_HOMEexport PATH</code></pre><p>保存并退出。</p><h4 id="3-执行下面命令，使立即生效"><a href="#3-执行下面命令，使立即生效" class="headerlink" title="3. 执行下面命令，使立即生效"></a>3. 执行下面命令，使立即生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><h4 id="4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，"><a href="#4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，" class="headerlink" title="4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，"></a>4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。</p><pre><code>#!/bin/bash# /usr/local/haproxy# YPN 2018-02-01 Createif [ &quot;$1&quot;x = &quot;start&quot;x ]; then  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfgfiif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then  killall haproxyfiif [ &quot;$1&quot;x = &quot;check&quot;x ]; then  ps -e|grep haproxyfiif [ &quot;$1&quot;x = &quot;log&quot;x ]; then  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000fi</code></pre><h4 id="5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="5. 给文件添加权限，使脚本文件可以执行，命令为"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure><h4 id="6-最后，执行下面命令可启动、关闭haproxy或查看日志"><a href="#6-最后，执行下面命令可启动、关闭haproxy或查看日志" class="headerlink" title="6. 最后，执行下面命令可启动、关闭haproxy或查看日志"></a>6. 最后，执行下面命令可启动、关闭haproxy或查看日志</h4><p>启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy start</span><br></pre></td></tr></table></figure></p><p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy stop</span><br></pre></td></tr></table></figure></p><p>查看日志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy log</span><br></pre></td></tr></table></figure></p><p>检查haprxy进程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy check</span><br></pre></td></tr></table></figure></p><h4 id="7-随系统自启动"><a href="#7-随系统自启动" class="headerlink" title="7. 随系统自启动"></a>7. 随系统自启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/boot.local</span><br></pre></td></tr></table></figure><p>加入以下内容，保存退出后生效。</p><pre><code>/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy介绍和应用</title>
      <link href="/2017/12/22/HAProxy%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%BA%94%E7%94%A8/"/>
      <url>/2017/12/22/HAProxy%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="HAProxy简介"><a href="#HAProxy简介" class="headerlink" title="HAProxy简介"></a>HAProxy简介</h3><p>HAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。</p><p>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。</p><p>HAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。</p><p>包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。</p><p>HAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。</p><a id="more"></a><hr><h3 id="HAProxy基础概念"><a href="#HAProxy基础概念" class="headerlink" title="HAProxy基础概念"></a>HAProxy基础概念</h3><p>代理的作用</p><ul><li>正向代理，反向代理</li><li>代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查</li><li>内容路由：根据流量以及内容类型将请求转发至特定的服务器</li><li>转码器：支持压缩功能，将数据以压缩形式发送给客户端</li></ul><p>缓存的作用</p><ul><li>减少访冗余内容传输</li><li>节省带宽，缓解网络瓶颈</li><li>降低了对原始服务器的请求压力</li><li>降低了传输延迟</li></ul><p>负载均衡集群</p><ul><li><p>四层代理：lvs, nginx(stream)，HAProxy(mode tcp)<br>通过分析IP层及TCP/UDP层的流量实现的基于“IP+端口”的负载均衡。</p></li><li><p>七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound…<br>可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。</p></li></ul><p>七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。</p><p><strong>HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容</strong></p><hr><h3 id="HAProxy功能"><a href="#HAProxy功能" class="headerlink" title="HAProxy功能"></a>HAProxy功能</h3><ul><li>HAProxy是TCP/HTTP反向代理服务器，尤其适合于高可用性环境</li><li>可以针对HTTP请求添加cookie，进行路由后端服务器</li><li>可平衡负载至后端服务器，并支持持久连接</li><li>支持基于cookie进行调度</li><li>支持所有主服务器故障切换至备用服务器</li><li>支持专用端口实现监控服务</li><li>支持不影响现有连接情况下停止接受新连接请求</li><li>可以在双向添加，修改或删除HTTP报文首部</li><li>支持基于pattern实现连接请求的访问控制</li><li>通过特定的URI为授权用户提供详细的状态信息</li><li>支持http反向代理</li><li>支持动态程序的反向代理</li><li>支持基于数据库的反向代理<br>版本：1.4 1.5 1.6 1.7 1.8</li></ul><hr><h3 id="HAProxy应用"><a href="#HAProxy应用" class="headerlink" title="HAProxy应用"></a>HAProxy应用</h3><h5 id="HAProxy进行安全加固"><a href="#HAProxy进行安全加固" class="headerlink" title="HAProxy进行安全加固"></a>HAProxy进行安全加固</h5><p>用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如</p><pre><code>backend dynamic    mode http    acl being_scanned be_sess_rate gt 100    redirect location /denied.html if being_scanned</code></pre><h5 id="通过ACL指定可访问的用户"><a href="#通过ACL指定可访问的用户" class="headerlink" title="通过ACL指定可访问的用户"></a>通过ACL指定可访问的用户</h5><p>阻断来自非指定IP的访问80端口的请求</p><pre><code>acl myhost src 172.16.100.1acl myport dst_port 80tcp-request connection reject if !myhost myport　　</code></pre><p>还可以用block</p><pre><code>block if ! myhost myport</code></pre><h5 id="根据用户访问内容实现动静分离"><a href="#根据用户访问内容实现动静分离" class="headerlink" title="根据用户访问内容实现动静分离"></a>根据用户访问内容实现动静分离</h5><pre><code>frontend http-in    bind            *:80    mode            http    log             global    option          httpclose    acl             url_static path_beg -i /static /images /javascript /stylesheets    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js    use_backend     static_servers if url_static    default_backend dynamic_serversbackend static_servers    balance roundrobin    server  imgsrv1 172.18.64.7:80 check maxconn 6000    server  imgsrv2 172.18.64.107:80 check maxconn 6000backend dynamic_servers    balance source    server  websrv1 172.18.64.17:80 check maxconn 1000    server  websrv2 172.18.64.106:80 check maxconn 1000</code></pre><h5 id="HAProxy实现浏览器控制"><a href="#HAProxy实现浏览器控制" class="headerlink" title="HAProxy实现浏览器控制"></a>HAProxy实现浏览器控制</h5><p>阻断火狐浏览器发送的请求  </p><pre><code>acl firefox hdr_reg(User-Agent) -i .*firefox.*block if firefox</code></pre><p>将IE用户请求分配到静态服务器</p><pre><code>acl ie_useragent hdr_reg(User-Agent) -i .*ie.*use_backend static_servers if ie_useragent</code></pre><h5 id="HAProxy实现真实日志记录"><a href="#HAProxy实现真实日志记录" class="headerlink" title="HAProxy实现真实日志记录"></a>HAProxy实现真实日志记录</h5><p>option forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。<br>HAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。</p><pre><code>frontend wwwmode httpoption forwardfor except 127.0.0.1</code></pre><h5 id="HAProxy实现会话保持"><a href="#HAProxy实现会话保持" class="headerlink" title="HAProxy实现会话保持"></a>HAProxy实现会话保持</h5><ol><li><p>源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。<br>缺点：当后端一台服务器挂了以后会造成部分session丢失</p><p> backend SOURCE_srv</p><pre><code>mode    httpbalance sourceserver  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3server  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3server  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3</code></pre></li><li><p>cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。</p><p> backend COOKIE_srv</p><pre><code>mode   httpcookie SERVERID insert indirect nocacheserver app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3server app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3server app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3</code></pre><p>在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID=A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID=A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。</p></li></ol><h5 id="HAProxy性能优化参数"><a href="#HAProxy性能优化参数" class="headerlink" title="HAProxy性能优化参数"></a>HAProxy性能优化参数</h5><p>option redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器<br>option dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包<br>retries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查<br>maxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy配置详解</title>
      <link href="/2017/12/22/HAProxy%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2017/12/22/HAProxy%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>haproxy.cfg主要有两部分组成：global和proxies配置段</p><h5 id="global：全局配置段"><a href="#global：全局配置段" class="headerlink" title="global：全局配置段"></a>global：全局配置段</h5><p>进程及安全配置相关的参数<br>性能调整相关参数<br>Debug参数</p><h5 id="proxies：代理配置段"><a href="#proxies：代理配置段" class="headerlink" title="proxies：代理配置段"></a>proxies：代理配置段</h5><ul><li>defaults：为frontend, backend, listen提供默认配置</li><li>fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend</li><li>backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器</li><li>listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置</li></ul><a id="more"></a><blockquote><p>所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。</p><p>时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。<br> us: 微秒(microseconds)，即1/1000000秒；<br> ms: 毫秒(milliseconds)，即1/1000秒；<br> s: 秒(seconds)；<br> m: 分钟(minutes)；<br> h：小时(hours)；<br> d: 天(days)；</p></blockquote><hr><h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h3><h5 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h5><p>通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。</p><pre><code>###################### 全局配置 ######################global      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出    # log     127.0.0.1 local0 info      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制      chroot  /usr/local/haproxy                  # 改变当前工作目录      uid     5040                                # 运行haproxy的用户（自定义）      gid     5040                                # 运行haproxy的用户所在的组（自定义）      daemon                                      # 以后台形式运行harpoxy    # nbproc  2                                   # 设置进程数量      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试    # quiet</code></pre><ul><li>log<br>全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；</li><li>maxconn<br>设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li><li>chroot<br>修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；</li><li>daemon<br>让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；</li><li>nbproc<br>指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；</li><li>pidfile<br>将haproxy的进程写入pid文件。</li><li>ulimit-n<br>设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。</li><li>stats<br>可开启一个unix socket管理接口。</li><li>gid<br>以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。</li><li>group<br>同gid，不过指定的组名。</li></ul><h5 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h5><p>在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。</p><pre><code>###################### 默认配置 ######################defaults      log             global      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK      option          httpclose    # 每次请求完毕后主动关闭http通道    # option          dontlognull  # 不记录健康检查日志信息      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数      timeout connect 3000         # 连接超时      timeout client  50000        # 客户端超时      timeout server  50000        # 服务器超时    # timeout check   2000         # 心跳检测超时    # timeout http-keep-alive 10s  # 默认持久连接超时时间    # timeout http-request    10s  # 默认http请求超时时间    # timeout queue   1m           # 默认队列超时时间</code></pre><ul><li>mode { tcp|http|health }<br>设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。<ul><li>tcp<br>实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；</li><li>http<br>实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；</li><li>health<br>实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能</li></ul></li><li>log   global<br>设置日志继承全局配置段的设置。</li><li>option httplog<br>表示开始打开记录http请求的日志功能。</li><li>option dontlognull<br>如果产生了一个空连接，那这个空连接的日志将不会记录。</li><li>option http-server-close<br>打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。</li><li>option forwardfor except 127.0.0.0/8<br>如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。</li><li>option redispatch<br>当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。</li><li>retries 3<br>向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。</li><li>option abortonclose<br>当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。</li><li>timout http-request 10s<br>客户端发送http请求的超时时间。</li><li>timeout queue 1m<br>当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。</li><li>timeout connect 5s<br>haproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。</li><li>timeout client 1m<br>定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。</li><li>timeout server 1m<br>定义haproxy与上游服务器非活动连接的超时时间。</li><li>timeout http-keep-alive 10s<br>设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。</li><li>timeout check 10s<br>健康检测的时间的最大超时时间。</li><li>maxconn 3000<br>最大并发连接数。</li><li>contimeout 5000<br>设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。</li><li>clitimeout 3000<br>设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。</li><li>srvtimeout 3000<br>设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。</li><li>balance roundrobin<br>设置负载算法为：轮询算法</li></ul><h5 id="frontend前端配置"><a href="#frontend前端配置" class="headerlink" title="frontend前端配置"></a>frontend前端配置</h5><p>frontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。</p><pre><code>###################### frontend前端配置 ######################frontend main   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。   default_backend dynamic          # 不满足则响应backend的默认页面</code></pre><ul><li>frontend http_80_in<br>定义一个名为http_80_in的frontend。</li><li>bind 0.0.0.0:80<br>定义haproxy前端部分监听的端口。</li><li>mode http<br>定义为http模式。</li><li>log global<br>继承global中log的定义。</li><li>option forwardfor<br>使后端server获取到客户端的真实IP。</li><li>default_backend<br>default_backend 在没有匹配的”use_backend”规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在”frontend”和”backend”之间进行内容交换时，通常使用”use- backend”定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。<br>使用案例：<br>  use_backend dynamic  if  url_dyn<br>  use_backend static  if url_css url_img extension_img<br>  default_backend dynamic</li></ul><h5 id="backend后端配置"><a href="#backend后端配置" class="headerlink" title="backend后端配置"></a>backend后端配置</h5><p>在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。</p><pre><code>###################### backend后端配置 ######################backend webserver        mode    http        balance roundrobin                   # 负载轮询        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率         # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重backend imgserver        mode    http        option  httpchk /index.php        balance roundrobin         server  img01 192.168.137.101:80 check inter 2000 fall 3        server  img02 192.168.137.102:80 check inter 2000 fall 3backend dynamic         balance roundrobin         server  test1 192.168.1.23:80 check maxconn 2000         server  test2 192.168.1.24:80 check maxconn 2000</code></pre><ul><li>cookie<br>表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。</li><li>option httpchk<br>此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。<br>option httpchk用法：<ul><li>method<br>表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。<br>一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。</li><li>uri<br>表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。</li><li>version<br>指定心跳检测时的HTTP的版本号。</li></ul></li><li>server<br>用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*<ul><li>name<br>为后端真实服务器指定一个内部名称，随便这下义一个即可。</li><li>address<br>后端真实服务器的iP地址或主机名。</li><li>port<br>指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。</li><li>param<br>为后端服务器设定的一系列参数，可用参数非常多，</li></ul></li><li>check<br>表示启用对此后端服务器执行健康检查。</li><li>inter<br>设置健康状态检查的时间间隔，单位为毫秒。</li><li>rise<br>设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。</li><li>fall<br>设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。</li><li>cookie<br>为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。</li><li>cookie server1<br>表示web1的serverid为server1。</li><li>weigth<br>设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。</li><li>maxconn<br>设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li><li>backup<br>设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。</li></ul><h5 id="listen配置"><a href="#listen配置" class="headerlink" title="listen配置"></a>listen配置</h5><p>常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体</p><pre><code>###################### 统计页面配置 ######################listen stats       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       mode          http                 # http的7层模式       option        httplog              # 采用http日志格式     # log           127.0.0.1 local0 err # 错误日志记录       maxconn       10                   # 默认的最大连接数       stats refresh 30s                  # 统计页面自动刷新时间       stats uri     /stats               # 统计页面url       stats realm   YANGPIENA\ Haproxy   # 统计页面密码框上提示文本       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)</code></pre><h5 id="errorfile配置"><a href="#errorfile配置" class="headerlink" title="errorfile配置"></a>errorfile配置</h5><p>格式为: errorfile  错误代码code  错误代码文件路径<br>errorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：</p><pre><code>###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre><hr><h3 id="一份完整的haproxy配置文件实例："><a href="#一份完整的haproxy配置文件实例：" class="headerlink" title="一份完整的haproxy配置文件实例："></a>一份完整的haproxy配置文件实例：</h3><pre><code>###################### 全局配置 ######################global       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制       daemon                                      # 以后台形式运行harpoxy       uid     5040                                # 运行haproxy的用户       gid     5040                                # 运行haproxy的用户所在的组       chroot  /usr/local/haproxy                  # 改变当前工作目录       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件###################### 默认配置 ######################defaults       log             global       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK       option          httpclose  # 每次请求完毕后主动关闭http通道       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器       retries         3          # 3次连接失败就认为是服务器不可用       timeout connect 300000     # 连接超时       timeout client  500000     # 客户端超时       timeout server  500000     # 服务器超时###################### 统计页面配置 ######################listen stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       bind          0.0.0.0:8888 # 监听端口       maxconn       1            # 默认的最大连接数       option        httplog      # 采用http日志格式       stats         enable       # 启用状态监控       stats refresh 30s          # 统计页面自动刷新时间       stats uri     /stats       # 统计页面url       stats realm   YANGPIENA    # 统计页面密码框上提示文本       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)###################### 业务前端配置 ######################frontend xx         bind            0.0.0.0:80         default_backend xxServers###################### 业务后端配置 ######################backend xxServers        balance source        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy之ACL规则定义</title>
      <link href="/2017/12/20/HAProxy%E4%B9%8BACL%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89/"/>
      <url>/2017/12/20/HAProxy%E4%B9%8BACL%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>HAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。<br>HAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。</p><a id="more"></a><hr><h3 id="ACL规则定义"><a href="#ACL规则定义" class="headerlink" title="ACL规则定义"></a>ACL规则定义</h3><p>格式：<code>acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] [&lt;value&gt;]</code></p><p><code>&lt;aclname&gt;</code>：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；<br><code>&lt;criterion&gt;</code>：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在<code>&lt;value&gt;</code>之前指定一个操作符[operator]；<br><code>[flags]</code>：目前haproxy的acl支持的标志位有3个：</p><ul><li>-i：不区分中模式字符的大小写；</li><li>-f：从指定的文件中加载模式；</li><li>–：标志符的强制结束标记，在模式中的字符串像标记符时使用；</li></ul><p><code>&lt;value&gt;</code>：acl测试条件支持的值有以下4类：</p><ul><li>整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；</li><li>字符串：支持使用“-i”以忽略字符大小写，支持使用“\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；</li><li>正则表达式：其机制类同字符串匹配；</li><li>IP地址及网络地址；<blockquote><p>注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。</p></blockquote></li></ul><hr><h6 id="常用的测试标准-criteria"><a href="#常用的测试标准-criteria" class="headerlink" title="常用的测试标准(criteria)"></a>常用的测试标准(criteria)</h6><ul><li><strong>基于七层协议（http）规则acl测试标准</strong></li></ul><ol><li><p>method <code>&lt;string&gt;</code><br>测试HTTP请求报文中请求类型。<br>例如： 利用method来实现前段读写分离：</p><pre><code>acl  read method GETacl  read method HEADacl write method PUTacl write method POSTuse_backend imgservers if readuse_backend uploadservers if write</code></pre></li><li><p>path_beg <code>&lt;string&gt;</code> ||url_beg<br>用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 /static、/images、/javascript或/stylesheets头。<br>例如：利用path_beg实现以/static /images开头的请求转交到 static server上：</p><pre><code>acl url_static path_beg -i /static /images use_backend static if url_static </code></pre></li><li><p>path_end <code>&lt;string&gt;</code> || url_reg<br>用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾<br>例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：</string></p><pre><code>acl url_static path_end -i .jpg .gif .png .css .js .htmluse_backend static if url_static</code></pre></li><li><p>hdr_beg <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。<br>例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上</string></p><pre><code>acl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080  use_backend lvs3 if is_lvs3 </code></pre></li><li><p>hdr_end <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式<br>例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上</string></p><pre><code>acl is_lvs3 hdr_end(host) -i lvs3.test.net:8080  use_backend lvs3 if is_lvs2 </code></pre></li><li><p>hdr <code>&lt;string&gt;</code><br>用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。<br>例如 当用户访问172.16.1.100时，重定向到<a href="http://www.afwing.com" target="_blank" rel="noopener">http://www.afwing.com</a></p><pre><code>acl  dstipaddr  hdr(Host) 172.16.1.100redirect  location   http://www.afwing.com if  dstipaddr</code></pre></li><li><p>hdr_reg <code>&lt;string&gt;</code><br>如果请求的域名满足正则表达式，返回true， -i是忽略大小写</p><pre><code>acl denali_policy hdr_reg(host) -i ^(www.inbank.com|image.inbank.com)$</code></pre></li><li><p>hdr_dom <code>&lt;string&gt;</code><br>如果请求域名满足www.inbank.com，返回true， -i是忽略大小写</p><pre><code>acl tm_policy hdr_dom(host) -i www.inbank.com</code></pre></li><li><p>url_sub<br>在请求url中包含sip_apiname=，则此控制策略返回true，否则为false</p><pre><code>acl invalid_req url_sub -i sip_apiname=#定义一个名为invalid_req的策略</code></pre></li><li><p>url_dir<br>在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false</p><pre><code>acl timetask_req url_dir -i timetask</code></pre></li><li><p>hdr_cnt <code>&lt;string&gt;</code><br>当请求的header中Content-length等于0时，返回true</p><pre><code>acl missing_cl hdr_cnt(Content-length) eq 0</code></pre></li></ol><ul><li><strong>基于四层协议（ip）规则acl测试标准</strong></li></ul><ol><li><p>dst和dst_port<br>定义访问地址为目标地址或目标端口的acl规则</p></li><li><p>src和src_port<br>定义访问地址为源地址或源端口的acl规则<br>例如： 允许10.0.0.0/24的用户访问，其他用户将禁止</p><pre><code>acl net10  src  10.0.0.0/24tcp-request content  accept  if  net10tcp-request  content  rejecttcp-request content accept [ {if | unless} ]Accept a connection if/unless a content inspection condition is matched</code></pre></li></ol><hr><h3 id="ACL规则引用"><a href="#ACL规则引用" class="headerlink" title="ACL规则引用"></a>ACL规则引用</h3><p>当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：</p><ol><li><p>正常写法：</p><pre><code>use_backend static if url_static</code></pre></li><li><p>或者写法：</p><pre><code>use_backend backend1 if aclA || aclB use_backend backend1 if aclA || !aclC</code></pre><p>注意上面“||”也可以使用or来表示</p></li><li><p>非（不符合）写法：</p><pre><code>use_backend backend1 if aclA !aclB use_backend backend1 if aclA !aclB !aclC</code></pre></li><li><p>与（and）写法：</p><pre><code>use_backend backend1 if aclA !aclB use_backend backend1 if aclA !aclB !aclC</code></pre></li></ol><hr><h6 id="常见应用实例"><a href="#常见应用实例" class="headerlink" title="常见应用实例"></a>常见应用实例</h6><ol><li><p>当请求中header中Content-length等于0，阻止请求返回403</p><pre><code>block if missing_cl</code></pre></li><li><p>block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。</p><pre><code>block if !invalid_req || timetask_req</code></pre></li><li><p>当满足denali_policy的策略时，使用denali_server的backend</p><pre><code>use_backend denali_server if denali_policy</code></pre></li><li><p>当满足tm_policy的策略时，使用tm_server的backend</p><pre><code>use_backend tm_server if tm_policy</code></pre></li><li><p>reqisetbe关键字定义，根据定义的关键字选择backend</p><pre><code>reqisetbe ^Host:\ img dynamicreqisetbe ^[^\ ]\*\ /(img|css)/ dynamicreqisetbe ^[^\ ]\*\ /admin/stats stats</code></pre></li><li><p>以上都不满足的时候使用默认mms_server的backend</p><pre><code>default_backend mms</code></pre></li><li><p>利用acl实现页面动静分离;</p><pre><code>frontend webservs         bind            *:80         acl             url_static path_beg -i /static /images /javascript /stylesheets         acl             url_static path_end -i .jpg .gif .png .css .js .html         acl             url_php    path_end  -i .php         use_backend     static if url_static or host_static         use_backend     dynamic if url_php         default_backend dynamicbackend static        balance roundrobin        server  node1 192.168.1.111:80 check maxconn 3000backend dynamic        balance roundrobin        server  node2 192.168.1.112:80 check maxconn 1000  </code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy负载均衡算法</title>
      <link href="/2017/12/20/HAProxy%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/"/>
      <url>/2017/12/20/HAProxy%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。</p><a id="more"></a><ol><li><p>roundrobin<br>表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>static-rr<br>基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。<br>例如：<br>server APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1<br>server APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p></li><li><p>leastconn<br>新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>source<br>将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!</p></li><li><p>uri<br>对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。<br>例如：<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p></li><li><p>url_param<br>表示根据请求的URl参数’balance url_param’ requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；<br>该算法一般用于将同一个用户的信息发送到同一个后端服务器；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>balance url_param www.blog.51cto.com<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>hdr(name)<br>表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；<br>如果缺少头或者头没有任何值，则用roundrobin代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</name></name></p></li><li><p>rdp-cookie(name)<br>表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；<br>该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。<br>如果没有cookie，则使用roundrobin算法代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</name></p></li><li><p>first<br>根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy安装配置</title>
      <link href="/2017/12/19/HAProxy%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/12/19/HAProxy%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="HAProxy下载"><a href="#HAProxy下载" class="headerlink" title="HAProxy下载"></a>HAProxy下载</h3><p><a href="https://www.haproxy.org/" target="_blank" rel="noopener">官网下载</a><br><a href="https://fossies.org/linux/misc/" target="_blank" rel="noopener">Fossies下载</a><br><a href="http://cbonte.github.io/haproxy-dconv/" target="_blank" rel="noopener">官方文档</a></p><a id="more"></a><hr><h3 id="HAProxy安装"><a href="#HAProxy安装" class="headerlink" title="HAProxy安装"></a>HAProxy安装</h3><h4 id="1-Linux下"><a href="#1-Linux下" class="headerlink" title="1. Linux下"></a>1. Linux下</h4><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/download/</span><br><span class="line">wget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure></p><h5 id="1-2-解压"><a href="#1-2-解压" class="headerlink" title="1.2 解压"></a>1.2 解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd haproxy-1.8.1</span><br><span class="line">make TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy</span><br><span class="line">make install PREFIX=/usr/local/haproxy</span><br></pre></td></tr></table></figure><p>参数说明:<br><strong>TARGET=linux26</strong>            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用<code>uname -r</code>可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。<br><strong>ARCH=x86_64</strong>               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。<br>注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。<br><strong>PREFIX=/usr/local/haprpxy</strong> # 指定安装目录，默认为/usr/local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如/usr/local/haprpxy为haprpxy的安装路径。</p><blockquote><p>CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。</p><ul><li>安装make<br>yum -y install gcc automake autoconf libtool make</li><li>安装gcc<br>yum install gcc gcc-c++</li></ul><p>SUSE Linux Enterprise Server 12安装gcc<br>安装命令：zypper install gcc<br>如果出现如下错误：<br>Failed to mount cd:///?devices=/dev/disk/by-id/ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on /var/adm/mount/AP_0x63by2U: Mounting media failed (mount: no medium found on /dev/sr0)<br>意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。</p></blockquote><h4 id="2-Windows下"><a href="#2-Windows下" class="headerlink" title="2. Windows下"></a>2. Windows下</h4><p><em>暂无</em></p><hr><h3 id="HAProxy配置"><a href="#HAProxy配置" class="headerlink" title="HAProxy配置"></a>HAProxy配置</h3><p>安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr/local/haproxy下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure></p><p>粘贴如下内容至haproxy.cfg</p><pre><code>###################### 全局配置 ######################global       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制       daemon                                      # 以后台形式运行harpoxy       uid     5040                                # 运行haproxy的用户       gid     5040                                # 运行haproxy的用户所在的组       chroot  /usr/local/haproxy                  # 改变当前工作目录       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件###################### 默认配置 ######################defaults       log             global       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK       option          httpclose  # 每次请求完毕后主动关闭http通道       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器       retries         3          # 3次连接失败就认为是服务器不可用       timeout connect 300000     # 连接超时       timeout client  500000     # 客户端超时       timeout server  500000     # 服务器超时###################### 统计页面配置 ######################listen stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       bind          0.0.0.0:8888 # 监听端口       maxconn       1            # 默认的最大连接数       option        httplog      # 采用http日志格式       stats         enable       # 启用状态监控       stats refresh 30s          # 统计页面自动刷新时间       stats uri     /stats       # 统计页面url       stats realm   YANGPIENA    # 统计页面密码框上提示文本       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)###################### 业务前端配置 ######################frontend xx         bind            0.0.0.0:80         default_backend xxServers###################### 业务后端配置 ######################backend xxServers        balance source        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre><h6 id="实现日志记录"><a href="#实现日志记录" class="headerlink" title="实现日志记录"></a>实现日志记录</h6><p>haproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。<br>修改rsyslog配置文件：<code>vim /etc/rsyslog.conf</code></p><pre><code># Provides UDP syslog reception$ModLoad imudp      #取消注释$UDPServerRun 514   #取消注释local0.*            /usr/local/haproxy/logs/haproxy.log# 指定设备local0日志存放位置</code></pre><p>修改rsyslog配置文件：<code>vim /etc/sysconfig/rsyslog</code></p><pre><code>SYSLOGD_OPTIONS=&quot;-r -m 0&quot;service syslog restart</code></pre><p>haproxy的日志信息也可以设置存放在专门的日志服务器中。</p><hr><h3 id="HAProxy启动"><a href="#HAProxy启动" class="headerlink" title="HAProxy启动"></a>HAProxy启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure><p>检查是否启动：</p><pre><code>[root@Linux-xx ~]# ps -e|grep haproxy 1221 ?        00:01:32 haproxy</code></pre><p>看到上面结果，表明haproxy已经正常启动了。</p><hr><h3 id="HAProxy查看状态"><a href="#HAProxy查看状态" class="headerlink" title="HAProxy查看状态"></a>HAProxy查看状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8888/stats</span><br></pre></td></tr></table></figure><p>参数说明：<br><strong>8888</strong>  即haproxy配置文件中的监听端口<br><strong>stats</strong> 即haproxy配置文件中的监听名称</p><p>如果无法访问，请查看防火墙中端口是否开启。</p><blockquote><p>Centos查看8888端口占用情况，使用命令：<code>lsof -i tcp:8888</code><br>Centos列出所有使用的端口，使用命令：<code>netstat -ntlp</code></p></blockquote><p>如果端口未开启，请设置防火墙开放端口。</p><h4 id="1-开启端口（以80端口为例）"><a href="#1-开启端口（以80端口为例）" class="headerlink" title="1. 开启端口（以80端口为例）"></a>1. 开启端口（以80端口为例）</h4><ul><li><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 </span><br><span class="line">/etc/init.d/iptables save                             ## 保存修改 </span><br><span class="line">service iptables restart                              ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure></li><li><p>方法二：<br>  先打开配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>  再加入下面内容</p><pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</code></pre><p>  最后，重启防火墙或重启计算机，修改完成。</p><blockquote><p>修改防火墙时注意最好留下VNC和SSH的管理端口。</p></blockquote></li></ul><h4 id="2-关闭端口"><a href="#2-关闭端口" class="headerlink" title="2. 关闭端口"></a>2. 关闭端口</h4><ul><li><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 </span><br><span class="line">/etc/init.d/iptables save                           ## 保存修改 </span><br><span class="line">service iptables restart                            ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure></li><li><p>方法二：<br>  先打开配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>  再加入下面内容</p><pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP</code></pre><p>  最后重启防火墙或重启计算机，修改完成。</p></li></ul><h4 id="3-查看端口状态"><a href="#3-查看端口状态" class="headerlink" title="3. 查看端口状态"></a>3. 查看端口状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure><h4 id="4-临时性完全关闭防火墙，可以不重启计算机"><a href="#4-临时性完全关闭防火墙，可以不重启计算机" class="headerlink" title="4. 临时性完全关闭防火墙，可以不重启计算机"></a>4. 临时性完全关闭防火墙，可以不重启计算机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#/etc/init.d/iptables status                ## 查看防火墙状态</span><br><span class="line">#/etc/init.d/iptable stop                   ## 本次关闭防火墙</span><br><span class="line">#/etc/init.d/iptable restart                ## 重启防火墙</span><br></pre></td></tr></table></figure><h4 id="5-永久性关闭防火墙"><a href="#5-永久性关闭防火墙" class="headerlink" title="5. 永久性关闭防火墙"></a>5. 永久性关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启</span><br></pre></td></tr></table></figure><h4 id="6-CentOS的iptables示例"><a href="#6-CentOS的iptables示例" class="headerlink" title="6. CentOS的iptables示例"></a>6. CentOS的iptables示例</h4><pre><code># Firewall configuration written by system-config-securitylevel# Manual customization of this file is not recommended.*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]:RH-Firewall-1-INPUT - [0:0]-A INPUT -j RH-Firewall-1-INPUT-A FORWARD -j RH-Firewall-1-INPUT-A RH-Firewall-1-INPUT -i lo -j ACCEPT-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT-A RH-Firewall-1-INPUT -p 50 -j ACCEPT-A RH-Firewall-1-INPUT -p 51 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibitedCOMMIT</code></pre><p>要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令<code>iptables -L</code>可验证一下是否规则都已经生效，至此完成防火墙设置修改。</p><hr><h3 id="HAProxy关闭"><a href="#HAProxy关闭" class="headerlink" title="HAProxy关闭"></a>HAProxy关闭</h3><p>直接kill pid即可。</p><h3 id="HAProxy脚本启动和关闭"><a href="#HAProxy脚本启动和关闭" class="headerlink" title="HAProxy脚本启动和关闭"></a><a href="http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/">HAProxy脚本启动和关闭</a></h3>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat部署项目访问不加项目名设置</title>
      <link href="/2017/08/17/Tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%8A%A0%E9%A1%B9%E7%9B%AE%E5%90%8D%E8%AE%BE%E7%BD%AE/"/>
      <url>/2017/08/17/Tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%8A%A0%E9%A1%B9%E7%9B%AE%E5%90%8D%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ol><li><p>打开conf目录下server.xml；</p></li><li><p>在Host内添加如下Context，其中docBase改为自己的项目路径即可。</p><pre><code>&lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;</code></pre><a id="more"></a></li><li><p>添加后效果如下：</p><pre><code>&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;    unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;    &lt;!-- SingleSignOn valve, share authentication between web applications         Documentation at: /docs/config/valve.html --&gt;    &lt;!--    &lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&gt;    --&gt;    &lt;!-- Access log processes all example.         Documentation at: /docs/config/valve.html         Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;    &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;           prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;           pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;    &lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;&lt;/Host&gt;</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS使用iptables</title>
      <link href="/2017/08/11/CentOS%E4%BD%BF%E7%94%A8iptables/"/>
      <url>/2017/08/11/CentOS%E4%BD%BF%E7%94%A8iptables/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-6-x"><a href="#CentOS-6-x" class="headerlink" title="CentOS 6.x"></a>CentOS 6.x</h3><h5 id="1-任意运行一条iptables防火墙规则配置命令"><a href="#1-任意运行一条iptables防火墙规则配置命令" class="headerlink" title="1. 任意运行一条iptables防火墙规则配置命令"></a>1. 任意运行一条iptables防火墙规则配置命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure><h5 id="2-对iptables服务进行保存"><a href="#2-对iptables服务进行保存" class="headerlink" title="2. 对iptables服务进行保存"></a>2. 对iptables服务进行保存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h5 id="3-重启iptables服务"><a href="#3-重启iptables服务" class="headerlink" title="3. 重启iptables服务"></a>3. 重启iptables服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h3 id="CentOS-7-x"><a href="#CentOS-7-x" class="headerlink" title="CentOS 7.x"></a>CentOS 7.x</h3><h5 id="1-关闭firewall"><a href="#1-关闭firewall" class="headerlink" title="1. 关闭firewall"></a>1. 关闭firewall</h5><p>停止firewall服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></p><p>禁止firewall开机启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure></p><h5 id="2-安装iptables防火墙"><a href="#2-安装iptables防火墙" class="headerlink" title="2. 安装iptables防火墙"></a>2. 安装iptables防火墙</h5><p>执行yum命令安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services</span><br></pre></td></tr></table></figure></p><p>编辑防火墙配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p><p>在配置文件中加入以下内容后，保存并退出：</p><pre><code># sample configuration for iptables service# you can edit this manually or use system-config-firewall# please do not ask us to add additional ports/services to this default configuration*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j REJECT --reject-with icmp-host-prohibitedCOMMIT</code></pre><p>最后重启防火墙使配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart iptables.service</span><br></pre></td></tr></table></figure></p><h5 id="3-设置防火墙开机启动"><a href="#3-设置防火墙开机启动" class="headerlink" title="3. 设置防火墙开机启动"></a>3. 设置防火墙开机启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable iptables.service</span><br></pre></td></tr></table></figure><h5 id="4-关闭SELinux"><a href="#4-关闭SELinux" class="headerlink" title="4. 关闭SELinux"></a>4. 关闭SELinux</h5><p>编辑SELinux的配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br></pre></td></tr></table></figure></p><p>如下图，注释掉<code>SELINUX=enforcing</code>和<code>SELINUXTYPE=targeted</code>。</p><pre><code># This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:#     enforcing - SELinux security policy is enforced.#     permissive - SELinux prints warnings instead of enforcing.#     disabled - No SELinux policy is loaded.SELINUX=disabled# SELINUXTYPE= can take one of three two values:#     targeted - Targeted processes are protected,#     minimum - Modification of targeted policy. Only selected processes are protected.#     mls - Multi Level Security protection.#SELINUXTYPE=targeted</code></pre><p>最后执行以下命令，使配置立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天翼云数据盘分区以及格式化&#39;</title>
      <link href="/2017/08/10/%E5%A4%A9%E7%BF%BC%E4%BA%91%E6%95%B0%E6%8D%AE%E7%9B%98%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
      <url>/2017/08/10/%E5%A4%A9%E7%BF%BC%E4%BA%91%E6%95%B0%E6%8D%AE%E7%9B%98%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h4 id="1-首先切换到root账户下"><a href="#1-首先切换到root账户下" class="headerlink" title="1. 首先切换到root账户下"></a>1. 首先切换到root账户下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-查看数据盘信息"><a href="#2-查看数据盘信息" class="headerlink" title="2. 查看数据盘信息"></a>2. 查看数据盘信息</h4><p>登录Linux云主机后，使用命令<code>fdisk -l</code>查看数据盘相关信息。</p><blockquote><p>使用命令<code>df -h</code>是无法查看到未分区和格式化的数据盘的。</p></blockquote><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# df -hFilesystem      Size  Used Avail Use% Mounted on/dev/vda1        40G  1.5G   36G   4% /devtmpfs        3.9G     0  3.9G   0% /devtmpfs           3.9G     0  3.9G   0% /dev/shmtmpfs           3.9G  392K  3.9G   1% /runtmpfs           3.9G     0  3.9G   0% /sys/fs/cgrouptmpfs           783M     0  783M   0% /run/user/0[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytes[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h4 id="3-数据盘分区"><a href="#3-数据盘分区" class="headerlink" title="3. 数据盘分区"></a>3. 数据盘分区</h4><p>执行以下命令，对数据盘进行分区。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vdb</span><br></pre></td></tr></table></figure></p><p>按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdbWelcome to fdisk (util-linux 2.23.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Device does not contain a recognized partition tableBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.Command (m for help): nPartition type:   p   primary (0 primary, 0 extended, 4 free)   e   extendedSelect (default p): pPartition number (1-4, default 1): 1First sector (2048-209715199, default 2048): Using default value 2048Last sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199): Using default value 209715199Partition 1 of type Linux and of size 100 GiB is setCommand (m for help): wThe partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks.[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h4 id="4-查看新分区"><a href="#4-查看新分区" class="headerlink" title="4. 查看新分区"></a>4. 查看新分区</h4><p>使用命令<code>fdisk -l</code>，即可查看到，新的分区vdb1已经创建完成。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x6ea9e5ce   Device Boot      Start         End      Blocks   Id  System/dev/vdb1            2048   209715199   104856576   83  Linux[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h4 id="5-格式化新分区"><a href="#5-格式化新分区" class="headerlink" title="5. 格式化新分区"></a>5. 格式化新分区</h4><p>使用下面的命令对新分区进行格式化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/vdb1</span><br></pre></td></tr></table></figure></p><blockquote><p>在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。</p></blockquote><p>格式化完成后如下：</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1mke2fs 1.42.9 (28-Dec-2013)Filesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks6553600 inodes, 26214144 blocks1310707 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=4294967296800 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks:         32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,         4096000, 7962624, 11239424, 20480000, 23887872Allocating group tables: done                            Writing inode tables: done                            Creating journal (32768 blocks): doneWriting superblocks and filesystem accounting information: done   [root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h4 id="6-挂载新分区"><a href="#6-挂载新分区" class="headerlink" title="6. 挂载新分区"></a>6. 挂载新分区</h4><p>使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /fimeson</span><br><span class="line">mount /dev/vdb1 /fimeson</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure></p><p>出现以下信息说明挂载成功，即可以查看到数据盘了。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# df -hFilesystem      Size  Used Avail Use% Mounted on/dev/vda1        40G  1.5G   36G   4% /devtmpfs        3.9G     0  3.9G   0% /devtmpfs           3.9G     0  3.9G   0% /dev/shmtmpfs           3.9G  368K  3.9G   1% /runtmpfs           3.9G     0  3.9G   0% /sys/fs/cgrouptmpfs           783M     0  783M   0% /run/user/0/dev/vdb1        99G   60M   94G   1% /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h4 id="7-添加分区信息"><a href="#7-添加分区信息" class="headerlink" title="7. 添加分区信息"></a>7. 添加分区信息</h4><p>如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到/etc/fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。</p><blockquote><p>注意：请确认分区路径是否为 “/dev/vdb1”，若路径错误，将会造成云主机重启失败</p></blockquote><p>使用下面的命令添加分区信息，最后查看添加结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab</span><br><span class="line">cat /etc/fstab</span><br></pre></td></tr></table></figure></p><p>出现以下信息表示添加分区信息成功。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab## /etc/fstab# Created by anaconda on Fri Jun  2 07:36:28 2017## Accessible filesystems, by reference, are maintained under &apos;/dev/disk&apos;# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#UUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1/dev/vdb1 /fimeson ext3 defaults 0 0[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统盘和数据盘</title>
      <link href="/2017/08/10/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
      <url>/2017/08/10/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h3 id="系统盘"><a href="#系统盘" class="headerlink" title="系统盘"></a>系统盘</h3><p>类似于Windows的C盘，Linux的系统盘可用命令<code>df -l</code>查看，可以看到根路径 / 都是位于系统盘。而/root、/home、/usr就如同Windows的C盘下的C:\Windows、C:\usr这些目录。</p><a id="more"></a><h3 id="数据盘"><a href="#数据盘" class="headerlink" title="数据盘"></a>数据盘</h3><p>如果单独有数据盘，且数据盘没有分区和挂载，使用<code>df -l</code>命令是看不到的，可以使用 <code>fdisk -l</code>命令，看到有哪些硬盘，如下：</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytes</code></pre><p>可以看到，Disk /dev/vda和Disk /dev/vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git如何用命令将本地项目上传到git</title>
      <link href="/2017/06/20/Git%E5%A6%82%E4%BD%95%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0git/"/>
      <url>/2017/06/20/Git%E5%A6%82%E4%BD%95%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0git/</url>
      
        <content type="html"><![CDATA[<h5 id="1-先在GitHub网站上-New-一个资源库，如-demo"><a href="#1-先在GitHub网站上-New-一个资源库，如-demo" class="headerlink" title="1. 先在GitHub网站上 New 一个资源库，如 demo"></a>1. 先在GitHub网站上 New 一个资源库，如 demo</h5><a id="more"></a><h5 id="2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库"><a href="#2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库" class="headerlink" title="2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库"></a>2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h5 id="3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件"><a href="#3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件" class="headerlink" title="3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件"></a>3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h5 id="4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明"><a href="#4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明" class="headerlink" title="4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明"></a>4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;first commit&apos;</span><br></pre></td></tr></table></figure><h5 id="5-关联到远程库"><a href="#5-关联到远程库" class="headerlink" title="5. 关联到远程库"></a>5. 关联到远程库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的远程库地址</span><br></pre></td></tr></table></figure><p>如：</p><pre><code>git remote add origin https://github.com/yangpiena/demo.git</code></pre><p>或</p><pre><code>git remote add origin git@github.com:yangpiena/demo.git</code></pre><h5 id="6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）"><a href="#6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）" class="headerlink" title="6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）"></a>6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><h5 id="7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。"><a href="#7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。" class="headerlink" title="7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。"></a>7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h5 id="8-状态查询命令"><a href="#8-状态查询命令" class="headerlink" title="8. 状态查询命令"></a>8. 状态查询命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text快捷键</title>
      <link href="/2017/05/15/Sublime-Text%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2017/05/15/Sublime-Text%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>快捷键</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>Ctrl+X</td><td style="text-align:left">删除当前行</td></tr><tr><td>Ctrl+Shift+D</td><td style="text-align:left">复制光标所在整行，插入到下一行</td></tr><tr><td>Ctrl+Shift+↑</td><td style="text-align:left">将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）</td></tr><tr><td>Ctrl+Shift+↓</td><td style="text-align:left">将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）</td></tr><tr><td>Shift+鼠标右键拖动</td><td style="text-align:left">列编辑模式</td></tr><tr><td>Ctrl+K+U</td><td style="text-align:left">转换大写</td></tr><tr><td>Ctrl+K+L</td><td style="text-align:left">转换小写</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime Text </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows设置磁盘背景</title>
      <link href="/2017/05/15/Windows%E8%AE%BE%E7%BD%AE%E7%A3%81%E7%9B%98%E8%83%8C%E6%99%AF/"/>
      <url>/2017/05/15/Windows%E8%AE%BE%E7%BD%AE%E7%A3%81%E7%9B%98%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<p>如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：</p><ul><li>首先，准备一张自己喜欢的图片。例如：D:\图片\其它\1741962.jpeg </li><li>在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。<pre><code>[ExtShellFolderViews] {BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC} [{BE098140-A513-11D0-A3A4-00C04FD706EC}] Attributes=1 IconArea_Image=D:\图片\其它\1741962.jpegIconArea_Text=0x00000000 [.ShellClassInfo] ConfirmFileOp=0 [Ctrl+A Select All] </code></pre></li><li>最后，将文档另存为desktop.ini即可。<a id="more"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kettle使用命令行来运行数据库job</title>
      <link href="/2016/12/28/Kettle%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%9D%A5%E8%BF%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93job/"/>
      <url>/2016/12/28/Kettle%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%9D%A5%E8%BF%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93job/</url>
      
        <content type="html"><![CDATA[<p>当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：</p><pre><code>d:cd d:\data-integrationkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\KettleLog\kettlelog.logpause</code></pre><a id="more"></a><blockquote><p>其中，“d:\data-integration”表示kitchen命令所在路径；<br>        /rep 后跟资源库名称<br>        /dir 后跟job所在目录名称，如实际路径为：/taby/tabyToXX_Job<br>        /user 后跟用户名<br>        /pass 后跟密码<br>        /job 后跟job名称<br>        /level 后跟日志等级<br>        /logfile 后跟日志文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kettle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat启动jvm内存设置</title>
      <link href="/2016/12/28/Tomcat%E5%90%AF%E5%8A%A8jvm%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE/"/>
      <url>/2016/12/28/Tomcat%E5%90%AF%E5%8A%A8jvm%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>在/usr/local/apache-tomcat-7.0.57/bin目录下的catalina.sh中添加：</p><pre><code>JAVA_OPTS=&apos;-Xms512m -Xmx1024m&apos;</code></pre><blockquote><p>-Xms：初始值<br>-Xmx：最大值<br>-Xmn：最小值</p></blockquote><a id="more"></a><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><ul><li><p>若使用startup.bat启动tomcat，则在C:\apache-tomcat-7.0.57\bin\catalina.bat最前面加入：</p><pre><code>set JAVA_OPTS=-Xms512m -Xmx1024m</code></pre></li><li><p>而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin/tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。<br><strong>解决办法：</strong><br>修改注册表HKEY_LOCAL_MACHINE/SOFTWARE/Apache Software Foundation/Tomcat Service Manager/Tomcat5/Parameters/JavaOptions<br>原值为</p><pre><code>-Dcatalina.home=&quot;C:/ApacheGroup/Tomcat 5.0&quot;-Djava.endorsed.dirs=&quot;C:/ApacheGroup/Tomcat 5.0/common/endorsed&quot;-Xrs</code></pre><p>在最后加入</p><pre><code>-Xms300m -Xmx350m  </code></pre><p>退出注册表，重起tomcat服务，设置生效。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat下载和安装</title>
      <link href="/2016/12/28/Tomcat%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>/2016/12/28/Tomcat%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="Tomcat官网下载"><a href="#Tomcat官网下载" class="headerlink" title="Tomcat官网下载"></a>Tomcat<a href="https://tomcat.apache.org/" target="_blank" rel="noopener">官网下载</a></h3><hr><h3 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h3><h4 id="1-Windows下"><a href="#1-Windows下" class="headerlink" title="1. Windows下"></a>1. Windows下</h4><h5 id="1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。"><a href="#1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。" class="headerlink" title="1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。"></a>1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。</h5><h5 id="1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容："><a href="#1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：" class="headerlink" title="1.2 修改\bin\startup.bat文件，在第一行前面加入以下内容："></a>1.2 修改\bin\startup.bat文件，在第一行前面加入以下内容：</h5><pre><code>REM JDK安装所在的路径SET JAVA_HOME=D:\Program Files\Java\jdk1.6.0_30REM 免安装的Tomcat解压后的路径SET CATALINA_HOME=D:\Program Files\tomcat6.0.35</code></pre><p>如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。</p><h5 id="1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。"><a href="#1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。" class="headerlink" title="1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。"></a>1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。</h5><h5 id="1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入"><a href="#1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入" class="headerlink" title="1.4 修改\conf\tomcat-users.xml文件，在&lt;tomcat-users&gt;标签内加入"></a>1.4 修改\conf\tomcat-users.xml文件，在<code>&lt;tomcat-users&gt;</code>标签内加入</h5><pre><code>&lt;role rolename=&quot;manager&quot;/&gt;&lt;role rolename=&quot;admin&quot;/&gt;&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,manager&quot;/&gt;</code></pre><p>这样才可以使用Tomcat的管理界面。</p><a id="more"></a><hr><h4 id="2-Linux下"><a href="#2-Linux下" class="headerlink" title="2. Linux下"></a>2. Linux下</h4><h5 id="2-1-下载或拷贝tomcat安装包到user目录下，然后解压"><a href="#2-1-下载或拷贝tomcat安装包到user目录下，然后解压" class="headerlink" title="2.1 下载或拷贝tomcat安装包到user目录下，然后解压"></a>2.1 下载或拷贝tomcat安装包到user目录下，然后解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz</span><br><span class="line">apache-tomcat-7.0.65/bin/catalina.sh</span><br><span class="line">apache-tomcat-7.0.65/bin/configtest.sh</span><br><span class="line">apache-tomcat-7.0.65/bin/daemon.sh</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/index.jsp</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/status.xsd</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/xform.xsl</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">apache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure><h5 id="2-2-删除安装包，并重命名解压后的文件夹为tomcat"><a href="#2-2-删除安装包，并重命名解压后的文件夹为tomcat" class="headerlink" title="2.2 删除安装包，并重命名解压后的文件夹为tomcat"></a>2.2 删除安装包，并重命名解压后的文件夹为tomcat</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz </span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure><h5 id="2-3-启动tomcat"><a href="#2-3-启动tomcat" class="headerlink" title="2.3 启动tomcat"></a>2.3 启动tomcat</h5><p>执行startup.sh启动tomcat，如下表示启动成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure></p><h5 id="2-4-查看log信息"><a href="#2-4-查看log信息" class="headerlink" title="2.4 查看log信息"></a>2.4 查看log信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class="line">INFO: Deploying web application directory /usr/tomcat/webapps/ROOT</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class="line">INFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;http-bio-8080&quot;]</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;ajp-bio-8009&quot;]</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start</span><br><span class="line">INFO: Server startup in 77809 ms</span><br></pre></td></tr></table></figure><h5 id="2-5-防火墙开放8080端口"><a href="#2-5-防火墙开放8080端口" class="headerlink" title="2.5 防火墙开放8080端口"></a>2.5 防火墙开放8080端口</h5><p>打开防火墙配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p><blockquote><p>部分系统没有iptables文件，请参考<a href="http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/">CentOS使用iptables</a></p></blockquote><p>增加以下代码：</p><pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT</code></pre><p>重启防火墙<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart</span><br></pre></td></tr></table></figure></p><h5 id="2-6-访问tomcat"><a href="#2-6-访问tomcat" class="headerlink" title="2.6 访问tomcat"></a>2.6 访问tomcat</h5><p>在浏览器访问地址：<a href="http://IP:8080" target="_blank" rel="noopener">http://IP:8080</a></p><h5 id="2-7-停止tomcat"><a href="#2-7-停止tomcat" class="headerlink" title="2.7 停止tomcat"></a>2.7 停止tomcat</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure><hr><h3 id="Tomcat设置服务"><a href="#Tomcat设置服务" class="headerlink" title="Tomcat设置服务"></a>Tomcat设置服务</h3><h4 id="1-Windows下-1"><a href="#1-Windows下-1" class="headerlink" title="1. Windows下"></a>1. Windows下</h4><h5 id="1-1-修改-bin目录中的service-bat"><a href="#1-1-修改-bin目录中的service-bat" class="headerlink" title="1.1 修改\bin目录中的service.bat"></a>1.1 修改\bin目录中的service.bat</h5><pre><code>rem 在第一个if语句的前面一行添加下面的行：SET CATALINA_HOME=D:\Program Files\tomcat6.0.35rem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录</code></pre><p>如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：<br>按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：</p><pre><code>set SERVICE_NAME=tomcat6.0rem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。set PR_DISPLAYNAME=Apache Tomcatrem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。set PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcatrem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。</code></pre><h5 id="1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令"><a href="#1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令" class="headerlink" title="1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行service.bat install命令"></a>1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行<code>service.bat install</code>命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\tomcat6.0.35\bin&gt;service.bat install</span><br><span class="line">Installing the service  &apos;tomcat6.0&apos; ...</span><br><span class="line">Using CATALINA_HOME:    &quot;D:\Program Files\tomcat6.0.35&quot;</span><br><span class="line">Using CATALINA_BASE:    &quot;D:\Program Files\tomcat6.0.35&quot;</span><br><span class="line">Using JAVA_HOME:        &quot;D:\Program Files\Java\jdk1.6.0_30&quot;</span><br><span class="line">Using JVM:              &quot;D:\Program Files\Java\jdk1.6.0_30\jre\bin\server\jvm.dll&quot;</span><br><span class="line">The service &apos;tomcat6.0&apos; has been installed.</span><br></pre></td></tr></table></figure><p>程序提示：The service ‘tomcat6.0（你修改以后的SERVICE_NAME）’ has been installed说明服务Tomcat已经被安装成功。相应的，运行<code>service.bat remove</code>可以移除服务。</p><h5 id="1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。"><a href="#1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。" class="headerlink" title="1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。"></a>1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。</h5><hr><h4 id="2-Linux下-1"><a href="#2-Linux下-1" class="headerlink" title="2. Linux下"></a>2. Linux下</h4><h5 id="2-1-在-目录下，执行下面命令"><a href="#2-1-在-目录下，执行下面命令" class="headerlink" title="2.1 在~目录下，执行下面命令"></a>2.1 在~目录下，执行下面命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .bash_profile</span><br></pre></td></tr></table></figure><h5 id="2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下："></a>2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：</h5><pre><code># .bash_profile# Get the aliases and functionsif [ -f ~/.bashrc ]; then        . ~/.bashrcfi# User specific environment and startup programsTOMCAT_HOME=/usr/tomcatPATH=$PATH:$HOME/bin:$TOMCAT_HOME/binexport TOMCAT_HOMEexport PATH</code></pre><p>保存并退出。</p><h5 id="2-3-执行下面命令，使立即生效"><a href="#2-3-执行下面命令，使立即生效" class="headerlink" title="2.3 执行下面命令，使立即生效"></a>2.3 执行下面命令，使立即生效</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ./.bash_profile</span><br></pre></td></tr></table></figure><h5 id="2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，"><a href="#2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，" class="headerlink" title="2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，"></a>2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。</p><pre><code>#!/bin/bash# /usr/tomcat/bin# YPN 2017-08-21 Createif [ &quot;$1&quot;x = &quot;start&quot;x ]; then  exec $TOMCAT_HOME/bin/startup.shfiif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then  exec $TOMCAT_HOME/bin/shutdown.shfiif [ &quot;$1&quot;x = &quot;log&quot;x ]; then  tail -f $TOMCAT_HOME/logs/catalina.out -n 1000fi</code></pre><h5 id="2-5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#2-5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="2.5 给文件添加权限，使脚本文件可以执行，命令为"></a>2.5 给文件添加权限，使脚本文件可以执行，命令为</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure><h5 id="2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志"><a href="#2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志" class="headerlink" title="2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志"></a>2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志</h5><p>启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat start</span><br></pre></td></tr></table></figure></p><p>关闭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat stop</span><br></pre></td></tr></table></figure></p><p>查看日志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat log</span><br></pre></td></tr></table></figure></p><hr><h3 id="Tomcat设置开机启动（Linux）"><a href="#Tomcat设置开机启动（Linux）" class="headerlink" title="Tomcat设置开机启动（Linux）"></a>Tomcat设置开机启动（Linux）</h3><p>打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p><p>配置文件：</p><pre><code>export JAVA_HOME=/usr/java/jdk1.7.0_80export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/binexport CATALINA_HOME=/usr/tomcat/#tomcat自启动/usr/tomcat/bin/startup.</code></pre><p>tomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jdk下载安装</title>
      <link href="/2016/12/28/Jdk%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2016/12/28/Jdk%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="JDK官网下载"><a href="#JDK官网下载" class="headerlink" title="JDK官网下载"></a>JDK<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">官网下载</a></h3><a id="more"></a><hr><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><h4 id="1-Windows下"><a href="#1-Windows下" class="headerlink" title="1. Windows下"></a>1. Windows下</h4><h5 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h5><p>安装目录建议自定义为C:\Java下，其它按默认安装即可。</p><h5 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2 配置环境变量"></a>1.2 配置环境变量</h5><p>在系统变量里，<br>新建变量名：<code>JAVA_HOME</code>       变量值：C:\Java\jdk1.7.0_80<br>编辑变量名：<code>Path</code>          追加值：;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin<br>新建变量名：<code>CLASSPATH</code>     变量值：.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p><blockquote><p>注意：在设置变量的末尾不要加上“；”）</p></blockquote><h5 id="1-3-测试"><a href="#1-3-测试" class="headerlink" title="1.3 测试"></a>1.3 测试</h5><p>设置完成之后我们需要测试，打开<code>运行</code>，输入<code>CMD</code>，在命令行上执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。</p><pre><code>java version &quot;1.7.0_80&quot;Java(TM) SE Runtime Environment (build 1.7.0_80-b15)Java HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)</code></pre><hr><h4 id="2-Linux下"><a href="#2-Linux下" class="headerlink" title="2. Linux下"></a>2. Linux下</h4><h5 id="2-1-在-usr-目录下创建java目录"><a href="#2-1-在-usr-目录下创建java目录" class="headerlink" title="2.1 在/usr/目录下创建java目录"></a>2.1 在/usr/目录下创建java目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure><h5 id="2-2-下载或拷贝jdk到java目录下，然后解压"><a href="#2-2-下载或拷贝jdk到java目录下，然后解压" class="headerlink" title="2.2 下载或拷贝jdk到java目录下，然后解压"></a>2.2 下载或拷贝jdk到java目录下，然后解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class="line">jdk-7u80-linux-x64.gz</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz </span><br><span class="line">jdk1.7.0_80/</span><br><span class="line">jdk1.7.0_80/LICENSE</span><br><span class="line">jdk1.7.0_80/release</span><br><span class="line">jdk1.7.0_80/jre/</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">jdk1.7.0_80/db/NOTICE</span><br><span class="line">jdk1.7.0_80/README.html</span><br><span class="line">jdk1.7.0_80/THIRDPARTYLICENSEREADME.txt</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class="line">jdk1.7.0_80  jdk-7u80-linux-x64.gz</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure><blockquote><p>安装包也可以使用命令<code>curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz</code>下载，这里我直接拷贝了已下载好的。</p></blockquote><h5 id="2-3-设置环境变量"><a href="#2-3-设置环境变量" class="headerlink" title="2.3 设置环境变量"></a>2.3 设置环境变量</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile</span><br></pre></td></tr></table></figure><p>在profile中最后的<code>done</code>和<code>unset i</code>之间添加如下内容:</p><pre><code>#set java environmentJAVA_HOME=/usr/java/jdk1.7.0_80JRE_HOME=/usr/java/jdk1.7.0_80/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATH</code></pre><p>添加后如下：</p><pre><code>[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile ...for i in /etc/profile.d/*.sh ; do    if [ -r &quot;$i&quot; ]; then        if [ &quot;${-#*i}&quot; != &quot;$-&quot; ]; then             . &quot;$i&quot;        else            . &quot;$i&quot; &gt;/dev/null        fi    fidone#set java environmentJAVA_HOME=/usr/java/jdk1.7.0_80JRE_HOME=/usr/java/jdk1.7.0_80/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATHunset iunset -f pathmunge[root@izwe12zdi799668qfxdm5oz java]# </code></pre><p>再执行以下命令，使修改生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile</span><br></pre></td></tr></table></figure></p><h5 id="2-4-测试"><a href="#2-4-测试" class="headerlink" title="2.4 测试"></a>2.4 测试</h5><p>执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>出现如下，表示安装成功。</p><pre><code>java version &quot;1.7.0_80&quot;Java(TM) SE Runtime Environment (build 1.7.0_80-b15)Java HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)</code></pre><hr><h3 id="可能出现的错误信息"><a href="#可能出现的错误信息" class="headerlink" title="可能出现的错误信息"></a>可能出现的错误信息</h3><p><code>bash: ./java: cannot execute binary file</code><br>出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。<br>查看linux是32位还是64位系统用如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo uname --m</span><br></pre></td></tr></table></figure></p><p>i686   //表示是32位<br>x86_64 // 表示是64位</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash Builder常见问题</title>
      <link href="/2016/12/27/Flash%20builder%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2016/12/27/Flash%20builder%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>以下记录Flash Builder在使用过程中出现的问题和解决方法：<br><a id="more"></a></p><h4 id="1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题"><a href="#1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题" class="headerlink" title="1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题"></a>1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题</h4><p>此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：</p><ul><li>删除文件夹services和valueObjects；</li><li>删除xx.fml文件中的数据/服务内容。保留model标签和annotation标签内容，其它全删除。<pre><code>&lt;model xmlns=&quot;http://ns.adobe.com/Fiber/1.0&quot;&gt;        &lt;annotation name=&quot;ActionScriptGeneration&quot;&gt;        &lt;item name=&quot;FullyQualifyReferences&quot;&gt;true&lt;/item&gt;        &lt;/annotation&gt;    ...&lt;/model&gt;</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flash builder </tag>
            
            <tag> FAQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash Builder 4.6效率优化方法</title>
      <link href="/2016/12/27/Flash%20builder%204.6%E6%95%88%E7%8E%87%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/27/Flash%20builder%204.6%E6%95%88%E7%8E%87%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Flash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：</p><ol><li>在安装路径下找到<code>FlexBuilder.ini</code>文件，进行编辑，加入以下参数：<pre><code>-vmargs-Xms128m-Xmx512m-XX:MaxPermSize=256m-XX:PermSize=64m                    #不要设置太高，否则会更加慢-Djava.net.preferIPv4Stack=true</code></pre>加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。<a id="more"></a></li><li>由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑<code>{Flex SDK}</code>安装路径<code>/bin/jvm.config</code>文件如下：<pre><code>java.args=-Xmx512m -Dsun.io.useCanonCaches=false</code></pre>如果还是有Error，可以增加到1024或者更多试试。<blockquote><p>我的flex4.6安装路径中的sdk位置：D:\Adobe\Adobe Flash Builder 4\sdks\4.0.0\bin\jvm.config，只需在这里调整即可！</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
            <tag> Flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash Builder 4.6免费使用方法</title>
      <link href="/2016/12/27/Flash%20builder%204.6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/27/Flash%20builder%204.6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Flash Builder 4.6免费使用具体步骤如下：</p><ol><li>到Adobe官网下载FlashBuilder 4.6，有简体中文版；<a id="more"></a></li><li>安装时，不用序列号，直接选择安装试用版；</li><li>安装完成后在安装目录下依次修改下列3个文件：<br>(1)<code>.eclipse\plugins\com.adobe.flexbuilder.project_4.6.0.328916\META-INF</code>下面的<code>MANIFEST.MF</code>修改：<pre><code>Bundle-Version: 0.0.0</code></pre>(2)<code>.eclipse\features\com.adobe.flexide.feature_4.6.0.328916</code>下面的<code>feature.xml</code>修改：<pre><code>&lt;plugin id=&quot;com.adobe.flexbuilder.project&quot; download-size=&quot;0&quot; install-size=&quot;0&quot; version=&quot;0.0.0&quot;/&gt;</code></pre>(3)<code>.eclipse\plugins\com.adobe.flexbuilder.flex_4.6.0.328916</code>下面，复制<code>config.xml</code>并重命名为<code>config_builder.xml</code>即可。</li></ol><blockquote><p>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
            <tag> Flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse之java注释模板设置</title>
      <link href="/2016/12/27/Eclipse%E4%B9%8Bjava%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%E8%AE%BE%E7%BD%AE/"/>
      <url>/2016/12/27/Eclipse%E4%B9%8Bjava%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>设置注释模板的入口： Window-&gt;Preference-&gt;Java-&gt;Code Style-&gt;Code Template  ，然后展开Comments节点就是所有需设置注释的元素。现就每一元素逐一介绍：</p><h4 id="文件-Files-注释标签："><a href="#文件-Files-注释标签：" class="headerlink" title="文件(Files)注释标签："></a>文件(Files)注释标签：</h4><pre><code>/** * @Title       : ${file_name} * @Package     : ${package_name} * @Description : ${todo} * @author      : YPN * @date        : ${date} ${time} * @version     : V1.0 */</code></pre><a id="more"></a><h4 id="类型-Types-注释标签（类的注释）："><a href="#类型-Types-注释标签（类的注释）：" class="headerlink" title="类型(Types)注释标签（类的注释）："></a>类型(Types)注释标签（类的注释）：</h4><pre><code>/** * @ClassName   : ${type_name} * @Description : ${todo} * @author      : YPN * @date        : ${date} ${time} *  * ${tags} */</code></pre><h4 id="字段-Fields-注释标签："><a href="#字段-Fields-注释标签：" class="headerlink" title="字段(Fields)注释标签："></a>字段(Fields)注释标签：</h4><pre><code>/** * @Fields ${field} : ${todo} */</code></pre><h4 id="构造函数标签："><a href="#构造函数标签：" class="headerlink" title="构造函数标签："></a>构造函数标签：</h4><pre><code>/** * &lt;p&gt;Title       : &lt;/p&gt; * &lt;p&gt;Description : &lt;/p&gt; * ${tags} */</code></pre><h4 id="方法-Constructor-amp-Methods-标签："><a href="#方法-Constructor-amp-Methods-标签：" class="headerlink" title="方法(Constructor &amp; Methods)标签："></a>方法(Constructor &amp; Methods)标签：</h4><pre><code>/** * @Title       : ${enclosing_method} * @Description : ${todo} * @author      : YPN * @date        : ${date} ${time} * @param       : ${tags} * @return      : ${return_type} * @throws */</code></pre><h4 id="覆盖方法-Overriding-Methods-标签："><a href="#覆盖方法-Overriding-Methods-标签：" class="headerlink" title="覆盖方法(Overriding Methods)标签："></a>覆盖方法(Overriding Methods)标签：</h4><pre><code>/* * &lt;p&gt;Title       : ${enclosing_method}&lt;/p&gt; * &lt;p&gt;Description : &lt;/p&gt; * ${tags} * ${see_to_overridden} */</code></pre><h4 id="代表方法-Delegate-Methods-标签："><a href="#代表方法-Delegate-Methods-标签：" class="headerlink" title="代表方法(Delegate Methods)标签："></a>代表方法(Delegate Methods)标签：</h4><pre><code>/** * ${tags} * ${see_to_target} */</code></pre><h4 id="getter方法标签："><a href="#getter方法标签：" class="headerlink" title="getter方法标签："></a>getter方法标签：</h4><pre><code>/** * @return ${bare_field_name} */</code></pre><h4 id="setter方法标签："><a href="#setter方法标签：" class="headerlink" title="setter方法标签："></a>setter方法标签：</h4><pre><code>/** * @param ${param} 要设置的 ${bare_field_name} */</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex属性说明</title>
      <link href="/2016/12/22/Flex%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2016/12/22/Flex%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>以下记录一些常用的Flex控件属性，按字母排序：<br><a id="more"></a></p><table><thead><tr><th><strong>属性</strong></th><th style="text-align:left"><strong>说明</strong></th></tr></thead><tbody><tr><td><code>maxDisplayedLines</code> = “0”</td><td style="text-align:left">设置textInput控件为多行显示</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 属性 </tag>
            
            <tag> Flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex设置scroller的速度</title>
      <link href="/2016/12/22/Flex%E8%AE%BE%E7%BD%AEscroller%E7%9A%84%E9%80%9F%E5%BA%A6/"/>
      <url>/2016/12/22/Flex%E8%AE%BE%E7%BD%AEscroller%E7%9A%84%E9%80%9F%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>Flex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:<br><a id="more"></a><br>假设我的滚动条id = mainScroller<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">protected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void</span><br><span class="line">&#123;</span><br><span class="line">event.preventDefault();</span><br><span class="line">var modifier:int       = 5;</span><br><span class="line">var delta:Number       = Number(event.delta) * modifier;</span><br><span class="line">var viewport:IViewport = mainScroller.verticalScrollBar.viewport;</span><br><span class="line">var vPos:Number        = viewport.verticalScrollPosition;</span><br><span class="line">var maximum:Number     = mainScroller.verticalScrollBar.maximum;</span><br><span class="line"></span><br><span class="line">if (delta &lt; 0) </span><br><span class="line">&#123;</span><br><span class="line">mainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        </span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">mainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex之dataGrid自动生成序号</title>
      <link href="/2016/12/22/Flex%E4%B9%8BdataGrid%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%BA%8F%E5%8F%B7/"/>
      <url>/2016/12/22/Flex%E4%B9%8BdataGrid%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%BA%8F%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>通过LabelFunction属性实现自动生成序号。<br>定义方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 生成datagrid第一列用的序号</span><br><span class="line">*/</span><br><span class="line">private function formatIndexNumber(item:Object, colum:Object):String</span><br><span class="line">&#123;</span><br><span class="line">    return indexNumLabelFun(item, colum.mx_internal::owner);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public static function indexNumLabelFun(value:Object, dataGrid:Object):String</span><br><span class="line">&#123;</span><br><span class="line">   var arr: Array = dataGrid.dataProvider.source;</span><br><span class="line">   var indexNum: int = (arr.indexOf(value) + 1);            </span><br><span class="line">   return indexNum.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>设置界面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">------------------- Item中设置 LabelFunction 属性----------------------</span><br><span class="line">&lt;mx:DataGridColumn headerText=&quot;序号&quot; width=&quot;50&quot; labelFunction=&quot;formatIndexNumber&quot; /&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex之dataGrid设置列对齐方式</title>
      <link href="/2016/12/22/Flex%E4%B9%8BdataGrid%E8%AE%BE%E7%BD%AE%E5%88%97%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F/"/>
      <url>/2016/12/22/Flex%E4%B9%8BdataGrid%E8%AE%BE%E7%BD%AE%E5%88%97%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>可参照以下实例设置：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:GridColumn dataField=&quot;sex&quot; headerText=&quot;Sex&quot;&gt;</span><br><span class="line">&lt;s:headerRenderer&gt;</span><br><span class="line">&lt;fx:Component&gt;</span><br><span class="line">&lt;s:DefaultGridHeaderRenderer&gt;</span><br><span class="line">&lt;s:labelDisplay&gt;</span><br><span class="line">&lt;s:Label left=&quot;0&quot; right=&quot;0&quot; top=&quot;0&quot; bottom=&quot;0&quot;</span><br><span class="line"> fontWeight=&quot;bold&quot; maxDisplayedLines=&quot;1&quot;</span><br><span class="line"> textAlign=&quot;center&quot; verticalAlign=&quot;middle&quot;/&gt;</span><br><span class="line">&lt;/s:labelDisplay&gt;</span><br><span class="line">&lt;/s:DefaultGridHeaderRenderer&gt;</span><br><span class="line">&lt;/fx:Component&gt;</span><br><span class="line">&lt;/s:headerRenderer&gt;</span><br><span class="line">&lt;s:itemRenderer&gt;</span><br><span class="line">&lt;fx:Component&gt;</span><br><span class="line">&lt;s:DefaultGridItemRenderer textAlign=&quot;center&quot;/&gt;</span><br><span class="line">&lt;/fx:Component&gt;</span><br><span class="line">&lt;/s:itemRenderer&gt;</span><br><span class="line">&lt;/s:GridColumn&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java与actionScript类型对应表</title>
      <link href="/2016/12/22/Java%E4%B8%8EactionScript%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E8%A1%A8/"/>
      <url>/2016/12/22/Java%E4%B8%8EactionScript%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：<br><a id="more"></a></p><h2 id="Java-gt-ActionScript"><a href="#Java-gt-ActionScript" class="headerlink" title="Java -&gt; ActionScript"></a>Java -&gt; ActionScript</h2><table><thead><tr><th>Java</th><th style="text-align:left">ActionScript</th></tr></thead><tbody><tr><td>java.lang.String</td><td style="text-align:left">string</td></tr><tr><td>java.lang.Boolean, boolean</td><td style="text-align:left">Boolean</td></tr><tr><td>java.lang.Integar</td><td style="text-align:left">int</td></tr><tr><td>java.lang.Short</td><td style="text-align:left">int</td></tr><tr><td>java.lang.Byte</td><td style="text-align:left">int</td></tr><tr><td>java.lang.Byte[]</td><td style="text-align:left">Flash.utils.ByteArray</td></tr><tr><td>java.lang.Double</td><td style="text-align:left">Number</td></tr><tr><td>java.lang.Float</td><td style="text-align:left">Number</td></tr><tr><td>java.lang.Long</td><td style="text-align:left">Number</td></tr><tr><td>java.lang.Character</td><td style="text-align:left">String</td></tr><tr><td>java.lang.Character[]</td><td style="text-align:left">String</td></tr><tr><td>java.util.Calendar</td><td style="text-align:left">Date</td></tr><tr><td>java.util.Date</td><td style="text-align:left">Date</td></tr><tr><td>java.util.Collection</td><td style="text-align:left">mx.collection.ArrayCollection</td></tr><tr><td>java.lang.Object[]</td><td style="text-align:left">Array</td></tr><tr><td>java.util.Map</td><td style="text-align:left">Array (sparse)</td></tr><tr><td>java.util.Dictionary</td><td style="text-align:left">Object (untyped)</td></tr><tr><td>org.w3c.dom.Document</td><td style="text-align:left">XML object</td></tr></tbody></table><h2 id="ActionScript-gt-Java"><a href="#ActionScript-gt-Java" class="headerlink" title="ActionScript -&gt; Java"></a>ActionScript -&gt; Java</h2><table><thead><tr><th>ActionScript</th><th style="text-align:left">Java</th></tr></thead><tbody><tr><td>Array (dense)</td><td style="text-align:left">java.util.List</td></tr><tr><td>Array (sparse)</td><td style="text-align:left">java.util.Map</td></tr><tr><td>flash.utils.ByteArray</td><td style="text-align:left">byte[]</td></tr><tr><td>flash.utils.IExternalizable</td><td style="text-align:left">java.io.Externalizable</td></tr><tr><td>Date</td><td style="text-align:left">java.util.Date</td></tr><tr><td>int/uint</td><td style="text-align:left">java.lang.Integer</td></tr><tr><td>null</td><td style="text-align:left">null</td></tr><tr><td>Number</td><td style="text-align:left">java.lang.Double</td></tr><tr><td>String</td><td style="text-align:left">java.lang.String</td></tr><tr><td>XML</td><td style="text-align:left">org.w3c.dom.Document</td></tr><tr><td>XMLDocument</td><td style="text-align:left">org.w3c.dom.Document</td></tr></tbody></table><blockquote><p>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。<br>例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
            <tag> ActionScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4j.properties</title>
      <link href="/2016/12/22/log4j-properties/"/>
      <url>/2016/12/22/log4j-properties/</url>
      
        <content type="html"><![CDATA[<p>log4j的配置方法很多，下面记录一个简单配置，以供常用：<br><a id="more"></a><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL</span><br><span class="line">#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL</span><br><span class="line">log4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile</span><br><span class="line">#</span><br><span class="line">#输出到控制台 </span><br><span class="line">log4j.appender.systemOut = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.systemOut.layout.ConversionPattern = [%-<span class="number">5</span>p][%-<span class="number">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.systemOut.Threshold = INFO</span><br><span class="line">log4j.appender.systemOut.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.systemOut.Target = System.out</span><br><span class="line">#</span><br><span class="line">#输出到文件 </span><br><span class="line">log4j.appender.logFile = org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logFile.layout.ConversionPattern = [%-<span class="number">5</span>p][%-<span class="number">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logFile.Threshold = ERROR</span><br><span class="line">log4j.appender.logFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logFile.Append = TRUE</span><br><span class="line">log4j.appender.logFile.File = $&#123;catalina.home&#125;/logs/error.log</span><br><span class="line">log4j.appender.logFile.Encoding = UTF-<span class="number">8</span></span><br><span class="line">#</span><br><span class="line">#设定文件大小输出到文件 </span><br><span class="line">log4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logRollingFile.layout.ConversionPattern = [%-<span class="number">5</span>p][%-<span class="number">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logRollingFile.Threshold = INFO</span><br><span class="line">log4j.appender.logRollingFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logRollingFile.Append = TRUE</span><br><span class="line">log4j.appender.logRollingFile.File = $&#123;catalina.home&#125;/logs/log.log</span><br><span class="line">log4j.appender.logRollingFile.MaxFileSize = <span class="number">10</span>MB</span><br><span class="line">log4j.appender.logRollingFile.MaxBackupIndex = <span class="number">10</span></span><br><span class="line">log4j.appender.logRollingFile.Encoding = UTF-<span class="number">8</span></span><br><span class="line">#</span><br><span class="line">##按DatePattern输出到文件 </span><br><span class="line">#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">#log4j.appender.logDailyFile.Threshold = DEBUG</span><br><span class="line">#log4j.appender.logDailyFile.ImmediateFlush = TRUE</span><br><span class="line">#log4j.appender.logDailyFile.Append = TRUE</span><br><span class="line">#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts</span><br><span class="line">#log4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'</span><br><span class="line">#log4j.appender.logDailyFile.Encoding = UTF-8</span><br><span class="line">#</span><br><span class="line">##用Email发送日志 </span><br><span class="line">#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender</span><br><span class="line">#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout</span><br><span class="line">#log4j.appender.logMail.layout.LocationInfo = TRUE</span><br><span class="line">#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile</span><br><span class="line">#log4j.appender.logMail.Threshold = DEBUG</span><br><span class="line">#log4j.appender.logMail.SMTPDebug = FALSE</span><br><span class="line">#log4j.appender.logMail.SMTPHost = SMTP.163.com</span><br><span class="line">#log4j.appender.logMail.From = xly3000@163.com</span><br><span class="line">#log4j.appender.logMail.To = xly3000@gmail.com</span><br><span class="line">##log4j.appender.logMail.Cc = xly3000@gmail.com</span><br><span class="line">##log4j.appender.logMail.Bcc = xly3000@gmail.com</span><br><span class="line">#log4j.appender.logMail.SMTPUsername = xly3000</span><br><span class="line">#log4j.appender.logMail.SMTPPassword = 1234567</span><br><span class="line">#log4j.appender.logMail.Subject = Log4j Log Messages</span><br><span class="line">##log4j.appender.logMail.BufferSize = 1024</span><br><span class="line">##log4j.appender.logMail.SMTPAuth = TRUE</span><br><span class="line">#</span><br><span class="line">##将日志登录到MySQL数据库 </span><br><span class="line">#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender</span><br><span class="line">#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver</span><br><span class="line">#log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly</span><br><span class="line">#log4j.appender.logDB.User = root</span><br><span class="line">#log4j.appender.logDB.Password = 123456</span><br><span class="line">#log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d&#123;yyyy-MM-ddHH:mm:ss&#125;','%p','%c','%F','%t','%L','%l','%m')</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPSpread之fpComboAdo的初始化</title>
      <link href="/2016/12/22/FPSpread%E4%B9%8BfpComboAdo%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2016/12/22/FPSpread%E4%B9%8BfpComboAdo%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>初始化具有2列内容的下拉框，如下实例：<br><a id="more"></a><br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> fpCbodis_cd</span><br><span class="line">    .Clear</span><br><span class="line">    .Columns = <span class="number">2</span></span><br><span class="line">    .ColumnEdit = <span class="number">0</span></span><br><span class="line">    .Col = <span class="number">0</span></span><br><span class="line">    .ColWidth = <span class="number">5</span></span><br><span class="line">    .Col = <span class="number">1</span></span><br><span class="line">    .ColWidth = <span class="number">25</span></span><br><span class="line">    .ListWidth = <span class="number">3000</span></span><br><span class="line">    .AutoSearchFill = <span class="literal">True</span></span><br><span class="line">    .LineStyle = LineStyleFlat</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> CloseMrec</span><br><span class="line">    Mrec.Open <span class="string">"select dis_cd,name from ord_d_sites "</span>, Mconn, <span class="number">1</span>, <span class="number">3</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> <span class="keyword">Not</span> Mrec.EOF</span><br><span class="line">        .AddItem Trim(Mrec!dis_cd) &amp; Chr(<span class="number">9</span>) &amp; Trim(Mrec!name)</span><br><span class="line"></span><br><span class="line">        Mrec.MoveNext</span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPSpread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPSpread属性说明</title>
      <link href="/2016/12/22/FPSpread%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2016/12/22/FPSpread%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>以下记录一些常用的fpSpread控件属性，按字母排序：<br><a id="more"></a></p><table><thead><tr><th><strong>属性</strong></th><th style="text-align:left"><strong>说明</strong></th></tr></thead><tbody><tr><td><code>ActiveRow</code></td><td style="text-align:left">获取当前活动行号</td></tr><tr><td><code>AddCellSpan</code> 3, 4, 2, 1</td><td style="text-align:left">从第3列第4行起合并单元格，跨度为2列1行</td></tr><tr><td><code>Backcolor</code></td><td style="text-align:left">设置指定范围（行和列）的背景颜色</td></tr><tr><td><code>CellType</code> = CellTypeNumber</td><td style="text-align:left">设置为数字类型</td></tr><tr><td><code>Col</code> = 2</td><td style="text-align:left">定位到第2列</td></tr><tr><td><code>ColHeaderRows</code> = 2</td><td style="text-align:left">表头（列标题）行数为2</td></tr><tr><td><code>ColHeadersShow</code> = False</td><td style="text-align:left">隐藏列标题</td></tr><tr><td><code>ColWidth(</code>1<code>)</code> = 16</td><td style="text-align:left">设置第1列的列宽为16</td></tr><tr><td><code>ColsFrozen</code> = 3</td><td style="text-align:left">冻结前三列</td></tr><tr><td><code>DataSource</code> = Rs</td><td style="text-align:left">设置Spread的数据源为Rs记录集</td></tr><tr><td><code>DeleteCols</code> 2, 1</td><td style="text-align:left">在第2列前删除1列</td></tr><tr><td><code>DeleteRows</code> 2, 1</td><td style="text-align:left">在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource = Nothing才能删除</td></tr><tr><td><code>FontSize</code> = 10</td><td style="text-align:left">设置当前栏位的字体大小为10（如果.Row = -1，则设置整列，下同</td></tr><tr><td><code>Formula = &quot;SUM(A1:A&quot; &amp; MaxRows &amp; &quot;)&quot;</code></td><td style="text-align:left">合计：对第1列从第1行到最大行求和</td></tr><tr><td><code>GetText</code> 2, 3, MyText</td><td style="text-align:left">将第2列第3行的值赋给变量MyText</td></tr><tr><td><code>InsertCols</code> 2, 1</td><td style="text-align:left">在第2列前插入1列</td></tr><tr><td><code>InsertRows</code> 2, 1</td><td style="text-align:left">在第2行前插入1行</td></tr><tr><td><code>MaxCols</code> = 5</td><td style="text-align:left">设置总列数为5列</td></tr><tr><td><code>MaxRows</code> = 10</td><td style="text-align:left">设置总行数为10行</td></tr><tr><td><code>OperationMode</code> = OperationModeRow</td><td style="text-align:left">设置Spread的操作模式为行定位（共有6种模式）</td></tr><tr><td><code>PrintMarginLeft</code> = 1000</td><td style="text-align:left">打印时左边距=1000（包括预览）</td></tr><tr><td><code>PrintMarginTop</code> = 1000</td><td style="text-align:left">打印时上边距=1000（包括预览）</td></tr><tr><td><code>Row</code> = SpreadHeader</td><td style="text-align:left">定位到表头（列标题）</td></tr><tr><td><code>Row</code> = -1</td><td style="text-align:left">定位到行头（在设置列格式时使用）</td></tr><tr><td><code>Row</code> = 3</td><td style="text-align:left">定位到第3行</td></tr><tr><td><code>RowHeadersShow</code> = False</td><td style="text-align:left">隐藏行标题</td></tr><tr><td><code>RowHeight(</code>1<code>)</code> = 12</td><td style="text-align:left">设置第1行的行高为12</td></tr><tr><td><code>RowsFrozen</code> = 2</td><td style="text-align:left">冻结前两行</td></tr><tr><td><code>SetActiveCell</code> 1,2</td><td style="text-align:left">设置第1列第2行单元格为焦点</td></tr><tr><td><code>SetEnhancedColumnHeaderColors</code> vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &amp;H80FF&amp;, vbBlue, vbRed</td><td style="text-align:left">设置列头颜色</td></tr><tr><td><code>SetOddEvenRowColor</code> vbWhite, &amp;H80000008, &amp;HF7ECE4, &amp;H80000008</td><td style="text-align:left">设置奇偶行背景色</td></tr><tr><td><code>SetText</code> 2, 3, “test”</td><td style="text-align:left">设置第2列第3行的文本为”test”</td></tr><tr><td><code>Text</code> = “test”</td><td style="text-align:left">设置当前栏位的文本为”test”</td></tr><tr><td><code>TypeHAlign</code> = TypeHAlignRight</td><td style="text-align:left">设置文字水平对齐方式为右对齐</td></tr><tr><td><code>TypeVAlign</code> = TypeVAlignCenter</td><td style="text-align:left">设置文字垂直对齐方式为居中</td></tr><tr><td><code>TypeNumberDecPlaces</code> = 2</td><td style="text-align:left">设置小数位数</td></tr><tr><td><code>TypeNumberShowSep</code> = True</td><td style="text-align:left">设置千位分隔</td></tr><tr><td><code>/n</code></td><td style="text-align:left">打印属性：换行</td></tr><tr><td><code>/fn</code></td><td style="text-align:left">打印属性：font name字体</td></tr><tr><td><code>/fz</code></td><td style="text-align:left">打印属性：font size大小</td></tr><tr><td><code>/fb1</code></td><td style="text-align:left">打印属性：font bold粗体</td></tr><tr><td><code>/fb0</code></td><td style="text-align:left">打印属性：非粗体</td></tr><tr><td><code>/fi1</code></td><td style="text-align:left">打印属性：font italic斜体</td></tr><tr><td><code>/fi0</code></td><td style="text-align:left">打印属性：非斜体</td></tr><tr><td><code>/fu1</code></td><td style="text-align:left">打印属性：font underline有下划线</td></tr><tr><td><code>/fu0</code></td><td style="text-align:left">打印属性：无下划线</td></tr><tr><td><code>/fk1</code></td><td style="text-align:left">打印属性：font strikethru有删除线</td></tr><tr><td><code>/fk0</code></td><td style="text-align:left">打印属性：无删除线</td></tr><tr><td><code>/l</code></td><td style="text-align:left">打印属性：居左</td></tr><tr><td><code>/c</code></td><td style="text-align:left">打印属性：居中</td></tr><tr><td><code>/r</code></td><td style="text-align:left">打印属性：居右</td></tr><tr><td><code>/p</code></td><td style="text-align:left">打印属性：页码</td></tr><tr><td><code>/date</code></td><td style="text-align:left">打印属性：日期</td></tr><tr><td><code>/time</code></td><td style="text-align:left">打印属性：时间</td></tr></tbody></table><p>打印实例<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> Sg2</span><br><span class="line">    Sg2.MaxRows = Mrec.RecordCount</span><br><span class="line">    <span class="keyword">Set</span> Sg2.DataSource = Mrec</span><br><span class="line">    .ColWidth(<span class="number">1</span>) = <span class="number">9</span></span><br><span class="line">    .ColWidth(<span class="number">2</span>) = <span class="number">8</span></span><br><span class="line">    .ColWidth(<span class="number">3</span>) = <span class="number">8</span></span><br><span class="line">    .ColWidth(<span class="number">4</span>) = <span class="number">33</span></span><br><span class="line">    .ColWidth(<span class="number">5</span>) = <span class="number">33</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> fpSpreadPrint()</span><br><span class="line">    <span class="keyword">Dim</span> Tsbj, Txbj, Tzbj, Tybj, Ti <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">Dim</span> tableHead, tableBodyRow1, tableBodyRow2, tableFoot <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">With</span> Sg2</span><br><span class="line">        <span class="keyword">Dim</span> customerName, f_orderNo, code, <span class="keyword">operator</span>, operatDate, repealReason</span><br><span class="line">        Sg1.GetText <span class="number">1</span>, Sg1.activeRow, code</span><br><span class="line">        Sg1.GetText <span class="number">2</span>, Sg1.activeRow, f_orderNo</span><br><span class="line">        Sg1.GetText <span class="number">3</span>, Sg1.activeRow, customerName</span><br><span class="line">        Sg1.GetText <span class="number">4</span>, Sg1.activeRow, <span class="keyword">operator</span></span><br><span class="line">        Sg1.GetText <span class="number">5</span>, Sg1.activeRow, operatDate</span><br><span class="line">        Sg1.GetText <span class="number">6</span>, Sg1.activeRow, repealReason</span><br><span class="line">        </span><br><span class="line">        .MaxRows = .MaxRows + <span class="number">1</span></span><br><span class="line">        .SetText <span class="number">2</span>, .MaxRows, <span class="string">"撤销依据"</span></span><br><span class="line">        .TypeHAlign = TypeHAlignCenter</span><br><span class="line">        .AddCellSpan <span class="number">3</span>, .MaxRows, <span class="number">4</span>, <span class="number">1</span></span><br><span class="line">        .RowHeight(.MaxRows) = <span class="number">30</span></span><br><span class="line">        .SetText <span class="number">3</span>, .MaxRows, repealReason</span><br><span class="line">        </span><br><span class="line">        .Col = <span class="number">2</span></span><br><span class="line">        .Col2 = <span class="number">5</span></span><br><span class="line">        .Row = <span class="number">1</span></span><br><span class="line">        .PrintType = PrintTypeCellRange</span><br><span class="line">        </span><br><span class="line">        Tsbj = <span class="number">9</span></span><br><span class="line">        Txbj = <span class="number">5</span></span><br><span class="line">        Tzbj = <span class="number">8</span></span><br><span class="line">        Tybj = <span class="number">6</span></span><br><span class="line">        Ti = <span class="number">56.7</span></span><br><span class="line">        .PrintMarginTop = Tsbj * Ti</span><br><span class="line">        .PrintMarginBottom = Txbj * Ti</span><br><span class="line">        .PrintMarginLeft = Tzbj * Ti</span><br><span class="line">        .PrintMarginRight = Tybj * Ti</span><br><span class="line">        </span><br><span class="line">        tableHead = <span class="string">"合同撤销通知单/n/n"</span></span><br><span class="line">        tableBodyRow1 = <span class="string">"单据编号："</span> &amp; code &amp; <span class="string">"      "</span> &amp; <span class="string">"份合同号："</span> &amp; f_orderNo &amp; <span class="string">"      "</span> &amp; <span class="string">"订货单位名称："</span> &amp; customerName &amp; <span class="string">""</span> &amp; <span class="string">"/n/n"</span></span><br><span class="line">        tableBodyRow2 = <span class="string">"部门领导："</span> &amp; <span class="string">"                "</span> &amp; <span class="string">"经办人："</span> &amp; <span class="keyword">operator</span> &amp; <span class="string">"            "</span> &amp; <span class="string">"撤销日期："</span> &amp; operatDate &amp; <span class="string">"/n"</span></span><br><span class="line">        </span><br><span class="line">        .PrintHeader = <span class="string">"/c/fb1/fz""20"""</span> &amp; tableHead &amp; <span class="string">"/l/fb0/fz""10"""</span> &amp; tableBodyRow1 &amp; tableBodyRow2</span><br><span class="line">        .PrintFooter = <span class="string">"/n/c/p//"</span> &amp; .PrintPageCount</span><br><span class="line">                </span><br><span class="line">        FormPrint.PrintState = <span class="literal">False</span></span><br><span class="line">        FormPrint.PrintCount = <span class="number">0</span></span><br><span class="line">        FormPrint.SSP.hWndSpread = .hwnd</span><br><span class="line">        FormPrint.PrintCount = .PrintPageCount</span><br><span class="line">        FormPrint.Show <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">If</span> FormPrint.PrintState = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">            .PrintSheet</span><br><span class="line">            FormPrint.PrintState = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Call</span> SG1_Click(Sg1.Col, Sg1.activeRow)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPSpread </tag>
            
            <tag> 属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL经典语句</title>
      <link href="/2016/11/29/SQL%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%8F%A5/"/>
      <url>/2016/11/29/SQL%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="一-基础篇"><a href="#一-基础篇" class="headerlink" title="一. 基础篇"></a>一. 基础篇</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h2><pre><code>CREATE DATABASE database-name</code></pre><h2 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2. 删除数据库"></a>2. 删除数据库</h2><pre><code>drop database dbname</code></pre><h2 id="3-备份sql-server"><a href="#3-备份sql-server" class="headerlink" title="3. 备份sql server"></a>3. 备份sql server</h2><pre><code>创建 备份数据的 deviceUSE masterEXEC sp_addumpdevice &apos;disk&apos;, &apos;testBack&apos;, &apos;c:\mssql7backup\MyNwind_1.dat&apos;开始 备份BACKUP DATABASE pubs TO testBack </code></pre><a id="more"></a><h2 id="4-创建新表"><a href="#4-创建新表" class="headerlink" title="4. 创建新表"></a>4. 创建新表</h2><pre><code>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)</code></pre><p>根据已有的表创建新表：</p><pre><code>A：create table tab_new like tab_old (使用旧表创建新表)B：create table tab_new as select col1,col2… from tab_old definition only</code></pre><h2 id="5-删除新表"><a href="#5-删除新表" class="headerlink" title="5. 删除新表"></a>5. 删除新表</h2><pre><code>drop table tabname</code></pre><h2 id="6-增加一个列"><a href="#6-增加一个列" class="headerlink" title="6. 增加一个列"></a>6. 增加一个列</h2><pre><code>Alter table tabname add column col type</code></pre><blockquote><p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p></blockquote><h2 id="7-添加主键"><a href="#7-添加主键" class="headerlink" title="7. 添加主键"></a>7. 添加主键</h2><pre><code>ALTER TABLE tabname ADD PRIMARY KEY (col)</code></pre><p>删除主键</p><pre><code>ALTER TABLE tabname DROP PRIMARY KEY (col)</code></pre><h2 id="8-创建索引"><a href="#8-创建索引" class="headerlink" title="8. 创建索引"></a>8. 创建索引</h2><pre><code>create [unique] index idxname on tabname(col….) </code></pre><p>删除索引</p><pre><code>drop index idxname</code></pre><blockquote><p>注：索引是不可更改的，想更改必须删除重新建。</p></blockquote><h2 id="9-创建视图"><a href="#9-创建视图" class="headerlink" title="9. 创建视图"></a>9. 创建视图</h2><pre><code>create view viewname as select statement </code></pre><p>删除视图</p><pre><code>drop view viewname</code></pre><h2 id="10-几个简单的基本sql语句"><a href="#10-几个简单的基本sql语句" class="headerlink" title="10. 几个简单的基本sql语句"></a>10. 几个简单的基本sql语句</h2><p>选择</p><pre><code>select * from table1 where 范围</code></pre><p>插入</p><pre><code>insert into table1(field1,field2) values(value1,value2)</code></pre><p>删除</p><pre><code>delete from table1 where 范围</code></pre><p>更新</p><pre><code>update table1 set field1=value1 where 范围</code></pre><p>查找</p><pre><code>select * from table1 where field1 like ’%value1%’</code></pre><p>排序</p><pre><code>select * from table1 order by field1,field2 [desc]</code></pre><p>总数</p><pre><code>select count as totalcount from table1</code></pre><p>求和</p><pre><code>select sum(field1) as sumvalue from table1</code></pre><p>平均</p><pre><code>select avg(field1) as avgvalue from table1</code></pre><p>最大</p><pre><code>select max(field1) as maxvalue from table1</code></pre><p>最小</p><pre><code>select min(field1) as minvalue from table1</code></pre><h2 id="11-几个高级查询运算词"><a href="#11-几个高级查询运算词" class="headerlink" title="11. 几个高级查询运算词"></a>11. 几个高级查询运算词</h2><ul><li>A： UNION 运算符<br>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 </li><li>B： EXCEPT 运算符<br>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 </li><li>C： INTERSECT 运算符<br>INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 <blockquote><p>注：使用运算词的几个查询结果行必须是一致的。</p></blockquote></li></ul><h2 id="12-使用外连接"><a href="#12-使用外连接" class="headerlink" title="12. 使用外连接"></a>12. 使用外连接</h2><ul><li>A. left （outer） join：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 </li></ul><pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</code></pre><ul><li>B：right （outer） join:<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 </li><li>C：full/cross （outer） join：<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</li></ul><h2 id="13-分组-Group-by"><a href="#13-分组-Group-by" class="headerlink" title="13. 分组:Group by"></a>13. 分组:Group by</h2><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。<br>组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)<br>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据<br>在selecte统计函数中的字段，不能和普通的字段放在一起；</p><h2 id="14-对数据库进行操作"><a href="#14-对数据库进行操作" class="headerlink" title="14. 对数据库进行操作"></a>14. 对数据库进行操作</h2><p>分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名</p><h2 id="15-如何修改数据库的名称"><a href="#15-如何修改数据库的名称" class="headerlink" title="15. 如何修改数据库的名称"></a>15. 如何修改数据库的名称</h2><p>sp_renamedb ‘old_name’, ‘new_name’</p><h2 id="16-查询字段ID最大值的记录"><a href="#16-查询字段ID最大值的记录" class="headerlink" title="16. 查询字段ID最大值的记录"></a>16. 查询字段ID最大值的记录</h2><p>无索引</p><pre><code>select time from table t1 where not exists (select 1 from table where id &gt; t1.id) </code></pre><p>有索引</p><pre><code>select time from table where id in (select max(id) from table)</code></pre><h2 id="17-查询某一列的重复项内容"><a href="#17-查询某一列的重复项内容" class="headerlink" title="17. 查询某一列的重复项内容"></a>17. 查询某一列的重复项内容</h2><pre><code>SELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)&gt;1 </code></pre><h2 id="18-判断表中是否存在记录"><a href="#18-判断表中是否存在记录" class="headerlink" title="18. 判断表中是否存在记录"></a>18. 判断表中是否存在记录</h2><pre><code>SELECT COUNT (*) FROM tableName WHERE conditions</code></pre><hr><h1 id="二-提升篇"><a href="#二-提升篇" class="headerlink" title="二. 提升篇"></a>二. 提升篇</h1><h2 id="1-复制表-只复制结构-源表名：a-新表名：b-Access可用"><a href="#1-复制表-只复制结构-源表名：a-新表名：b-Access可用" class="headerlink" title="1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)"></a>1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)</h2><p>法一</p><pre><code>select * into b from a where 1&lt;&gt;1（仅用于SQlServer）</code></pre><p>法二</p><pre><code>select top 0 * into b from a</code></pre><h2 id="2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用"><a href="#2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用" class="headerlink" title="2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)"></a>2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b;</code></pre><h2 id="3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用"><a href="#3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用" class="headerlink" title="3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)"></a>3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件</code></pre><p>例子：..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\data.mdb” &amp;”‘ where..</p><h2 id="4-子查询-表名1：a-表名2：b"><a href="#4-子查询-表名1：a-表名2：b" class="headerlink" title="4. 子查询(表名1：a 表名2：b)"></a>4. 子查询(表名1：a 表名2：b)</h2><pre><code>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)</code></pre><h2 id="5-显示文章、提交人和最后回复时间"><a href="#5-显示文章、提交人和最后回复时间" class="headerlink" title="5. 显示文章、提交人和最后回复时间"></a>5. 显示文章、提交人和最后回复时间</h2><pre><code>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b</code></pre><h2 id="6-外连接查询-表名1：a-表名2：b"><a href="#6-外连接查询-表名1：a-表名2：b" class="headerlink" title="6. 外连接查询(表名1：a 表名2：b)"></a>6. 外连接查询(表名1：a 表名2：b)</h2><pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</code></pre><h2 id="7-在线视图查询-表名1：a"><a href="#7-在线视图查询-表名1：a" class="headerlink" title="7. 在线视图查询(表名1：a )"></a>7. 在线视图查询(表名1：a )</h2><pre><code>select * from (SELECT a,b,c FROM a) T where t.a &gt; 1;</code></pre><h2 id="8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括"><a href="#8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括" class="headerlink" title="8. between的用法,between限制查询数据范围时包括了边界值,not between不包括"></a>8. between的用法,between限制查询数据范围时包括了边界值,not between不包括</h2><pre><code>select * from table1 where time between time1 and time2select a,b,c, from table1 where a not between 数值1 and 数值2</code></pre><h2 id="9-in-的使用方法"><a href="#9-in-的使用方法" class="headerlink" title="9. in 的使用方法"></a>9. in 的使用方法</h2><pre><code>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)</code></pre><h2 id="10-两张关联表，删除主表中已经在副表中没有的信息"><a href="#10-两张关联表，删除主表中已经在副表中没有的信息" class="headerlink" title="10. 两张关联表，删除主表中已经在副表中没有的信息"></a>10. 两张关联表，删除主表中已经在副表中没有的信息</h2><pre><code>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )</code></pre><h2 id="11-四表联查问题"><a href="#11-四表联查问题" class="headerlink" title="11. 四表联查问题"></a>11. 四表联查问题</h2><pre><code>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....</code></pre><h2 id="12-日程安排提前五分钟提醒"><a href="#12-日程安排提前五分钟提醒" class="headerlink" title="12. 日程安排提前五分钟提醒"></a>12. 日程安排提前五分钟提醒</h2><pre><code>select * from 日程安排 where datediff(&apos;minute&apos;,f开始时间,getdate())&gt;5</code></pre><h2 id="13-一条sql语句搞定数据库分页"><a href="#13-一条sql语句搞定数据库分页" class="headerlink" title="13. 一条sql语句搞定数据库分页"></a>13. 一条sql语句搞定数据库分页</h2><pre><code>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段</code></pre><p>关于数据库分页：</p><pre><code>declare @start int,@end int@sql nvarchar(600)set @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid&gt;-1)’exec sp_executesql @sql</code></pre><blockquote><p>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p></blockquote><h2 id="14-前10条记录"><a href="#14-前10条记录" class="headerlink" title="14. 前10条记录"></a>14. 前10条记录</h2><pre><code>select top 10 * form table1 where 范围</code></pre><h2 id="15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等"><a href="#15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等" class="headerlink" title="15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)"></a>15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</h2><pre><code>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)</code></pre><h2 id="16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表"><a href="#16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表" class="headerlink" title="16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表"></a>16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表</h2><pre><code>(select a from tableA ) except (select a from tableB) except (select a from tableC)</code></pre><h2 id="17-随机取出10条数据"><a href="#17-随机取出10条数据" class="headerlink" title="17. 随机取出10条数据"></a>17. 随机取出10条数据</h2><pre><code>select top 10 * from tablename order by newid()</code></pre><h2 id="18-随机选择记录"><a href="#18-随机选择记录" class="headerlink" title="18. 随机选择记录"></a>18. 随机选择记录</h2><pre><code>select newid()</code></pre><h2 id="19-删除重复记录"><a href="#19-删除重复记录" class="headerlink" title="19. 删除重复记录"></a>19. 删除重复记录</h2><ul><li>方法一：</li></ul><pre><code>delete from tablename where id not in (select max(id) from tablename group by col1,col2,...)</code></pre><ul><li>方法二：</li></ul><pre><code>select distinct * into temp from tablenamedelete from tablenameinsert into tablename select * from temp</code></pre><blockquote><p>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作</p></blockquote><ul><li>方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</li></ul><pre><code>alter table tablenameadd column_b int identity(1,1)    --添加一个自增列delete from tablename where column_b not in(select max(column_b) from tablename group by column1,column2,...)alter table tablename drop column column_b</code></pre><h2 id="20-列出数据库里所有的表名"><a href="#20-列出数据库里所有的表名" class="headerlink" title="20. 列出数据库里所有的表名"></a>20. 列出数据库里所有的表名</h2><pre><code>select name from sysobjects where type=&apos;U&apos; // U代表用户</code></pre><h2 id="21-列出表里的所有的列名"><a href="#21-列出表里的所有的列名" class="headerlink" title="21. 列出表里的所有的列名"></a>21. 列出表里的所有的列名</h2><pre><code>select name from syscolumns where id=object_id(&apos;TableName&apos;)</code></pre><h2 id="22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。"><a href="#22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。" class="headerlink" title="22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。"></a>22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。</h2><pre><code>select type,sum(case vender when &apos;A&apos; then pcs else 0 end),sum(case vender when &apos;C&apos; then pcs else 0 end),sum(case vender when &apos;B&apos; then pcs else 0 end) FROM tablename group by type</code></pre><p>显示结果：</p><pre><code>type vender pcs电脑 A 1电脑 A 1光盘 B 2光盘 A 2手机 B 3手机 C 3</code></pre><h2 id="23-初始化-表table1"><a href="#23-初始化-表table1" class="headerlink" title="23. 初始化 表table1"></a>23. 初始化 表table1</h2><pre><code>TRUNCATE TABLE table1</code></pre><h2 id="24-选择从10到15的记录"><a href="#24-选择从10到15的记录" class="headerlink" title="24. 选择从10到15的记录"></a>24. 选择从10到15的记录</h2><pre><code>select top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc</code></pre><h2 id="25-创建临时表"><a href="#25-创建临时表" class="headerlink" title="25. 创建临时表"></a>25. 创建临时表</h2><ul><li>方法一：</li></ul><pre><code>create table #临时表名(字段1 约束条件,                       字段2 约束条件,                      .....)create table ##临时表名(字段1 约束条件,                        字段2 约束条件,                        .....)</code></pre><p>例：</p><pre><code>create table #Tmp --创建临时表#Tmp(    ID   int IDENTITY (1,1)     not null, --创建列ID,并且每次新增一条记录就会加1    WokNo                varchar(50),       primary key (ID)      --定义ID为临时表#Tmp的主键      );</code></pre><ul><li>方法二：</li></ul><pre><code>select * into #临时表名 from 你的表;select * into ##临时表名 from 你的表;</code></pre><blockquote><p>注：以上的#代表局部临时表，##代表全局临时表<br>查询临时表</p></blockquote><pre><code>select * from #临时表名;select * from ##临时表名;</code></pre><p>删除临时表</p><pre><code>drop table #临时表名;drop table ##临时表名;</code></pre><h2 id="26-关联表更新"><a href="#26-关联表更新" class="headerlink" title="26. 关联表更新"></a>26. 关联表更新</h2><pre><code>UPDATE A SET A.b=B.d FROM tableA A INNER JOIN tableB B ON A.a = B.a</code></pre><h2 id="27-查看表的所有外键关系"><a href="#27-查看表的所有外键关系" class="headerlink" title="27. 查看表的所有外键关系"></a>27. 查看表的所有外键关系</h2><pre><code>select t1.*,t2.name,t3.name from dbo.sysforeignkeys t1 left join sysobjects t2 on t1.fkeyid=t2.id            left join sysobjects t3 on t1.rkeyid=t3.id where t3.name=&apos;表名 &apos;</code></pre><h2 id="28-删除所有约束"><a href="#28-删除所有约束" class="headerlink" title="28. 删除所有约束"></a>28. 删除所有约束</h2><pre><code>DECLARE c1 cursor for    select &apos;alter table [&apos;+ object_name(parent_obj) + &apos;] drop constraint [&apos;+name+&apos;]; &apos;    from sysobjects    where xtype = &apos;F&apos;open c1declare @c1 varchar(8000)fetch next from c1 into @c1while(@@fetch_status=0)    begin        exec(@c1)        fetch next from c1 into @c1    endclose c1deallocate c1</code></pre><h2 id="29-删除数据库所有表"><a href="#29-删除数据库所有表" class="headerlink" title="29. 删除数据库所有表"></a>29. 删除数据库所有表</h2><pre><code>declare @tname varchar(8000)set @tname=&apos;&apos;select @tname=@tname + Name + &apos;,&apos; from sysobjects where xtype=&apos;U&apos;select @tname=&apos;drop table &apos; + left(@tname,len(@tname)-1)exec(@tname)</code></pre><h2 id="30-删除外键约束"><a href="#30-删除外键约束" class="headerlink" title="30. 删除外键约束"></a>30. 删除外键约束</h2><p>得到某个表被哪些外键引用，并且显示出外键表的表名</p><pre><code>SELECT    fk.name,    fk.object_id,    OBJECT_NAME(fk.parent_object_id) AS referenceTableNameFROM    sys.foreign_keys AS fkJOIN sys.objects AS o ON fk.referenced_object_id = o.object_idWHERE    o.name = &apos;ATTACHMENTDOC&apos;;</code></pre><p>通过外键表的表名和外键名称执行以下语句即可删除外键</p><pre><code>ALTER TABLE dbo.CONTRACTINFO DROP CONSTRAINT FK_CONTRACTINFO_ATTACHMENTDOC</code></pre><h2 id="31-查找指定数据库表的字段名，类型，注释"><a href="#31-查找指定数据库表的字段名，类型，注释" class="headerlink" title="31. 查找指定数据库表的字段名，类型，注释"></a>31. 查找指定数据库表的字段名，类型，注释</h2><pre><code>    SELECT c.object_id, c.name AS cname, t.name AS tname, is_computed AS isComputed,           (SELECT VALUE              FROM sys.extended_properties AS ex             WHERE ex.major_id = c.object_id AND ex.minor_id = c.column_id) AS notes      FROM sys.columns AS cINNER JOIN sys.tables  AS ta ON c.object_id = ta.object_idINNER JOIN (SELECT name, system_type_id              FROM sys.types             WHERE name &lt;&gt; &apos;sysname&apos;) AS t ON c.system_type_id = t.system_type_id     WHERE ta.name = &apos;指定数据库表&apos;  ORDER BY c.column_id</code></pre><h2 id="32-同步表数据"><a href="#32-同步表数据" class="headerlink" title="32. 同步表数据"></a>32. 同步表数据</h2><pre><code>INSERT 表2 SELECT * FROM 表1 AS a WHERE NOT EXISTS(SELECT 1 FROM 表2 WHERE ID = a.ID);</code></pre><h2 id="33-判断某列中是否包含中文字符或者英文字符"><a href="#33-判断某列中是否包含中文字符或者英文字符" class="headerlink" title="33. 判断某列中是否包含中文字符或者英文字符"></a>33. 判断某列中是否包含中文字符或者英文字符</h2><pre><code>SELECT * FROM 表名 WHERE 某列 LIKE &apos;%[吖-座]%&apos;SELECT * FROM 表名 WHERE 某列 LIKE &apos;%[a-z]%&apos;</code></pre><h2 id="34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）"><a href="#34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）" class="headerlink" title="34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）"></a>34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）</h2><p>例如表Table1中有两列数据：</p><pre><code>code        nameAAA         姓名1AAA         姓名2AAA         姓名3BBB         姓名4BBB         姓名5</code></pre><p>行转列，想变成如下格式：</p><pre><code>code        nameAAA         姓名1,姓名2,姓名3BBB         姓名4,姓名5</code></pre><p>可用如下SQL实现：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> code, <span class="keyword">name</span> = (<span class="keyword">STUFF</span>((<span class="keyword">SELECT</span> <span class="string">','</span> + <span class="keyword">name</span> </span><br><span class="line">                                <span class="keyword">FROM</span> Table1 </span><br><span class="line">                               <span class="keyword">WHERE</span> code = a.code <span class="keyword">FOR</span> <span class="keyword">xml</span> <span class="keyword">PATH</span>(<span class="string">''</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">''</span>))</span><br><span class="line">    <span class="keyword">FROM</span> Table1 a </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> code</span><br></pre></td></tr></table></figure></p><hr><h1 id="三-技巧篇"><a href="#三-技巧篇" class="headerlink" title="三. 技巧篇"></a>三. 技巧篇</h1><h2 id="1-1-1，1-2的使用，在SQL语句组合时用的较多"><a href="#1-1-1，1-2的使用，在SQL语句组合时用的较多" class="headerlink" title="1. 1=1，1=2的使用，在SQL语句组合时用的较多"></a>1. 1=1，1=2的使用，在SQL语句组合时用的较多</h2><p>“where 1=1” 表示选择全部<br>“where 1=2” 表示全部不选</p><h2 id="2-收缩数据库"><a href="#2-收缩数据库" class="headerlink" title="2. 收缩数据库"></a>2. 收缩数据库</h2><p>重建索引</p><pre><code>DBCC REINDEXDBCC INDEXDEFRAG</code></pre><p>收缩数据和日志</p><pre><code>DBCC SHRINKDBDBCC SHRINKFILE</code></pre><h2 id="3-压缩数据库"><a href="#3-压缩数据库" class="headerlink" title="3. 压缩数据库"></a>3. 压缩数据库</h2><pre><code>dbcc shrinkdatabase(dbname)</code></pre><h2 id="4-转移数据库给新用户以已存在用户权限"><a href="#4-转移数据库给新用户以已存在用户权限" class="headerlink" title="4. 转移数据库给新用户以已存在用户权限"></a>4. 转移数据库给新用户以已存在用户权限</h2><pre><code>exec sp_change_users_login &apos;update_one&apos;,&apos;newname&apos;,&apos;oldname&apos;go</code></pre><h2 id="5-检查备份集"><a href="#5-检查备份集" class="headerlink" title="5. 检查备份集"></a>5. 检查备份集</h2><pre><code>RESTORE VERIFYONLY from disk=&apos;E:\dvbbs.bak&apos;</code></pre><h2 id="6-修复数据库"><a href="#6-修复数据库" class="headerlink" title="6. 修复数据库"></a>6. 修复数据库</h2><pre><code>ALTER DATABASE [dvbbs] SET SINGLE_USERGODBCC CHECKDB(&apos;dvbbs&apos;,repair_allow_data_loss) WITH TABLOCKGOALTER DATABASE [dvbbs] SET MULTI_USERGO</code></pre><h2 id="7-日志清除"><a href="#7-日志清除" class="headerlink" title="7. 日志清除"></a>7. 日志清除</h2><pre><code>SET NOCOUNT ONDECLARE @LogicalFileName sysname,@MaxMinutes INT,@NewSize INTUSE tablename -- 要操作的数据库名SELECT  @LogicalFileName = &apos;tablename_log&apos;, -- 日志文件名@MaxMinutes = 10, -- Limit on time allowed to wrap log.@NewSize = 1  -- 你想设定的日志文件的大小(M)Setup / initializeDECLARE @OriginalSize intSELECT @OriginalSize = size FROM sysfilesWHERE name = @LogicalFileNameSELECT &apos;Original Size of &apos; + db_name() + &apos; LOG is &apos; + CONVERT(VARCHAR(30),@OriginalSize) + &apos; 8K pages or &apos; + CONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + &apos;MB&apos;FROM sysfilesWHERE name = @LogicalFileNameCREATE TABLE DummyTrans(DummyColumn char (8000) not null)DECLARE @Counter    INT,@StartTime DATETIME,@TruncLog   VARCHAR(255)SELECT @StartTime = GETDATE(),@TruncLog = &apos;BACKUP LOG &apos; + db_name() + &apos; WITH TRUNCATE_ONLY&apos;DBCC SHRINKFILE (@LogicalFileName, @NewSize)EXEC (@TruncLog)-- Wrap the log if necessary.WHILE @MaxMinutes &gt; DATEDIFF (mi, @StartTime, GETDATE()) -- time has not expiredAND @OriginalSize = (SELECT size FROM sysfiles WHERE name = @LogicalFileName)  AND (@OriginalSize * 8 /1024) &gt; @NewSize  BEGIN -- Outer loop.SELECT @Counter = 0WHILE   ((@Counter &lt; @OriginalSize / 16) AND (@Counter &lt; 50000))BEGIN -- updateINSERT DummyTrans VALUES (&apos;Fill Log&apos;) DELETE DummyTransSELECT @Counter = @Counter + 1ENDEXEC (@TruncLog)  ENDSELECT &apos;Final Size of &apos; + db_name() + &apos; LOG is &apos; +CONVERT(VARCHAR(30),size) + &apos; 8K pages or &apos; + CONVERT(VARCHAR(30),(size*8/1024)) + &apos;MB&apos;FROM sysfiles WHERE name = @LogicalFileNameDROP TABLE DummyTransSET NOCOUNT OFF</code></pre><h2 id="8-更改某个表"><a href="#8-更改某个表" class="headerlink" title="8. 更改某个表"></a>8. 更改某个表</h2><pre><code>exec sp_changeobjectowner &apos;tablename&apos;,&apos;dbo&apos;</code></pre><h2 id="9-存储更改全部表"><a href="#9-存储更改全部表" class="headerlink" title="9. 存储更改全部表"></a>9. 存储更改全部表</h2><pre><code>CREATE PROCEDURE dbo.User_ChangeObjectOwnerBatch@OldOwner as NVARCHAR(128),@NewOwner as NVARCHAR(128)ASDECLARE @Name    as NVARCHAR(128)DECLARE @Owner   as NVARCHAR(128)DECLARE @OwnerName   as NVARCHAR(128)DECLARE curObject CURSOR FOR select &apos;Name&apos;    = name,   &apos;Owner&apos;    = user_name(uid)from sysobjectswhere user_name(uid)=@OldOwnerorder by nameOPEN   curObjectFETCH NEXT FROM curObject INTO @Name, @OwnerWHILE(@@FETCH_STATUS=0)BEGIN     if @Owner=@OldOwner begin   set @OwnerName = @OldOwner + &apos;.&apos; + rtrim(@Name)   exec sp_changeobjectowner @OwnerName, @NewOwnerend-- select @name,@NewOwner,@OldOwnerFETCH NEXT FROM curObject INTO @Name, @OwnerENDclose curObjectdeallocate curObjectGO</code></pre><h2 id="10-SQL-SERVER中直接循环写入数据"><a href="#10-SQL-SERVER中直接循环写入数据" class="headerlink" title="10. SQL SERVER中直接循环写入数据"></a>10. SQL SERVER中直接循环写入数据</h2><pre><code>declare @i intset @i=1while @i&lt;30begininsert into test (userid) values(@i)set @i=@i+1end</code></pre><p>案例：<br>有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:</p><table><thead><tr><th>Name</th><th style="text-align:right">score</th></tr></thead><tbody><tr><td>Zhangshan</td><td style="text-align:right">80</td></tr><tr><td>Lishi</td><td style="text-align:right">59</td></tr><tr><td>Wangwu</td><td style="text-align:right">50</td></tr><tr><td>Songquan</td><td style="text-align:right">69</td></tr></tbody></table><pre><code>while((select min(score) from tb_table)&lt;60)beginupdate tb_table set score =score*1.01where score&lt;60if (select min(score) from tb_table)&gt;60breakelsecontinueend</code></pre><h2 id="11-查看数据库属性"><a href="#11-查看数据库属性" class="headerlink" title="11. 查看数据库属性"></a>11. 查看数据库属性</h2><pre><code>sp_helpdb 数据库名</code></pre><h2 id="12-按姓氏笔画排序"><a href="#12-按姓氏笔画排序" class="headerlink" title="12. 按姓氏笔画排序:"></a>12. 按姓氏笔画排序:</h2><pre><code>Select * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多</code></pre><h2 id="13-数据库加密"><a href="#13-数据库加密" class="headerlink" title="13. 数据库加密:"></a>13. 数据库加密:</h2><pre><code>select encrypt(&apos;原始密码&apos;)select pwdencrypt(&apos;原始密码&apos;)select pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同 encrypt(&apos;原始密码&apos;)select pwdencrypt(&apos;原始密码&apos;)select pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同</code></pre><h2 id="14-取回表中字段"><a href="#14-取回表中字段" class="headerlink" title="14. 取回表中字段:"></a>14. 取回表中字段:</h2><pre><code>declare @list varchar(1000),@sql nvarchar(1000) select @list=@list+&apos;,&apos;+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name=&apos;表A&apos;set @sql=&apos;select &apos;+right(@list,len(@list)-1)+&apos; from 表A&apos; exec (@sql)</code></pre><h2 id="15-查看硬盘分区"><a href="#15-查看硬盘分区" class="headerlink" title="15. 查看硬盘分区:"></a>15. 查看硬盘分区:</h2><pre><code>EXEC master..xp_fixeddrives</code></pre><h2 id="16-比较A-B表是否相等"><a href="#16-比较A-B表是否相等" class="headerlink" title="16. 比较A,B表是否相等:"></a>16. 比较A,B表是否相等:</h2><pre><code>if (select checksum_agg(binary_checksum(*)) from A)     =    (select checksum_agg(binary_checksum(*)) from B)print &apos;相等&apos;elseprint &apos;不相等&apos;</code></pre><h2 id="17-杀掉所有的事件探察器进程"><a href="#17-杀掉所有的事件探察器进程" class="headerlink" title="17. 杀掉所有的事件探察器进程:"></a>17. 杀掉所有的事件探察器进程:</h2><pre><code>DECLARE hcforeach CURSOR GLOBAL FOR SELECT &apos;kill &apos;+RTRIM(spid) FROM master.dbo.sysprocessesWHERE program_name IN(&apos;SQL profiler&apos;,N&apos;SQL 事件探查器&apos;)EXEC sp_msforeach_worker &apos;?&apos;</code></pre><h2 id="18-记录搜索"><a href="#18-记录搜索" class="headerlink" title="18. 记录搜索:"></a>18. 记录搜索:</h2><p>开头到N条记录</p><pre><code>Select Top N * From 表</code></pre><p>N到M条记录(要有主索引ID)</p><pre><code>Select Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc</code></pre><p>N到结尾记录</p><pre><code>Select Top N * From 表 Order by ID Desc</code></pre><h2 id="19-获取当前数据库中的所有用户表"><a href="#19-获取当前数据库中的所有用户表" class="headerlink" title="19. 获取当前数据库中的所有用户表"></a>19. 获取当前数据库中的所有用户表</h2><pre><code>select Name from sysobjects where xtype=&apos;u&apos; and status&gt;=0</code></pre><h2 id="20-获取某一个表的所有字段"><a href="#20-获取某一个表的所有字段" class="headerlink" title="20. 获取某一个表的所有字段"></a>20. 获取某一个表的所有字段</h2><pre><code>select name from syscolumns where id=object_id(&apos;表名&apos;)select name from syscolumns where id in (select id from sysobjects where type = &apos;u&apos; and name = &apos;表名&apos;)</code></pre><p>两种方式的效果相同</p><h2 id="21-查看与某一个表相关的视图、存储过程、函数"><a href="#21-查看与某一个表相关的视图、存储过程、函数" class="headerlink" title="21. 查看与某一个表相关的视图、存储过程、函数"></a>21. 查看与某一个表相关的视图、存储过程、函数</h2><pre><code>select a.* from sysobjects a, syscomments b where a.id = b.id and b.text like &apos;%表名%&apos;</code></pre><h2 id="22-查看当前数据库中所有存储过程"><a href="#22-查看当前数据库中所有存储过程" class="headerlink" title="22. 查看当前数据库中所有存储过程"></a>22. 查看当前数据库中所有存储过程</h2><pre><code>select name as 存储过程名称 from sysobjects where xtype=&apos;P&apos;</code></pre><h2 id="23-查询用户创建的所有数据库"><a href="#23-查询用户创建的所有数据库" class="headerlink" title="23. 查询用户创建的所有数据库"></a>23. 查询用户创建的所有数据库</h2><pre><code>select * from master..sysdatabases D where sid not in(select sid from master..syslogins where name=&apos;sa&apos;)</code></pre><p>或者</p><pre><code>select dbid, name AS DB_NAME from master..sysdatabases where sid &lt;&gt; 0x01</code></pre><h2 id="24-查询某一个表的字段和数据类型"><a href="#24-查询某一个表的字段和数据类型" class="headerlink" title="24. 查询某一个表的字段和数据类型"></a>24. 查询某一个表的字段和数据类型</h2><pre><code>select column_name,data_type from information_schema.columnswhere table_name = &apos;表名&apos;</code></pre><h2 id="25-不同服务器数据库之间的数据操作"><a href="#25-不同服务器数据库之间的数据操作" class="headerlink" title="25. 不同服务器数据库之间的数据操作"></a>25. 不同服务器数据库之间的数据操作</h2><p>创建链接服务器</p><pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;exec sp_addlinkedsrvlogin &apos;ITSV &apos;, &apos;false &apos;,null, &apos;用户名 &apos;, &apos;密码 &apos;</code></pre><p>查询示例</p><pre><code>select * from ITSV.数据库名.dbo.表名</code></pre><p>导入示例</p><pre><code>select * into 表 from ITSV.数据库名.dbo.表名</code></pre><p>以后不再使用时删除链接服务器</p><pre><code>exec sp_dropserver &apos;ITSV &apos;, &apos;droplogins &apos;</code></pre><p>连接远程/局域网数据(openrowset/openquery/opendatasource)</p><ul><li><ol><li>openrowset<br>查询示例</li></ol></li></ul><pre><code>select * from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)</code></pre><p>生成本地表</p><pre><code>select * into 表 from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)</code></pre><p>把本地表导入远程表</p><pre><code>insert openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)select *from 本地表</code></pre><p>更新本地表</p><pre><code>update bset b.列A=a.列Afrom openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)as a inner join 本地表 b    on a.column1=b.column1</code></pre><ul><li><ol><li>openquery用法需要创建一个连接<br>首先创建一个连接创建链接服务器</li></ol></li></ul><pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;</code></pre><p>查询</p><pre><code>select *FROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)</code></pre><p>把本地表导入远程表</p><pre><code>insert openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)select * from 本地表</code></pre><p>更新本地表</p><pre><code>update bset b.列B=a.列BFROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;) as ainner join 本地表 b on a.列A=b.列A</code></pre><ul><li><ol><li>opendatasource/openrowset</li></ol></li></ul><pre><code>SELECT *FROM opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos; ).test.dbo.roy_ta</code></pre><p>把本地表导入远程表</p><pre><code>insert opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos;).数据库.dbo.表名select * from 本地表</code></pre><h2 id="26-删除数据库下面的所有表"><a href="#26-删除数据库下面的所有表" class="headerlink" title="26. 删除数据库下面的所有表"></a>26. 删除数据库下面的所有表</h2><pre><code>use 数据库名(是要删除表的所在的那个数据库的名称)GOdeclare @sql varchar(8000)while (select count(*) from sysobjects where type=&apos;U&apos;)&gt;0beginSELECT @sql=&apos;drop table &apos; + nameFROM sysobjectsWHERE (type = &apos;U&apos;)ORDER BY &apos;drop table &apos; + nameexec(@sql) end</code></pre><h2 id="27-查看数据库文件使用情况"><a href="#27-查看数据库文件使用情况" class="headerlink" title="27. 查看数据库文件使用情况"></a>27. 查看数据库文件使用情况</h2><pre><code>SELECT  A.name                                                     AS &quot;逻辑名称&quot;       ,CONVERT(FLOAT ,A.size)             * (8192.0/1024.0)/1024  AS &quot;已用大小MB&quot;       ,CONVERT(FLOAT ,A.maxSize - A.size) * (8192.0/1024.0)/1024  AS &quot;可用大小MB&quot;       ,CONVERT(FLOAT ,A.maxSize)          * (8192.0/1024.0)/1024  AS &quot;分配大小MB&quot;       ,A.fileName                                                 AS &quot;文件路径&quot;       ,(         SELECT  SA.groupName           FROM  SysFileGroups  SA          WHERE  SA.groupID = A.groupID        )                                                          AS &quot;文件组&quot;       ,CASE WHEN A.status = 1081346 THEN &apos;磁盘文件&apos;                            WHEN A.status = 1081410 THEN &apos;日志设备&apos;             ELSE CONVERT(VARCHAR ,A.status) END                   AS &quot;文件类型&quot;  FROM  SysFiles  A</code></pre><h2 id="28-修改sa的密码"><a href="#28-修改sa的密码" class="headerlink" title="28. 修改sa的密码"></a>28. 修改sa的密码</h2><pre><code>EXEC sp_password NULL,NULL,&apos;sa&apos;;</code></pre><hr><h1 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h1><ul><li>在SQL查询中，from后最多可以跟256张表或视图</li><li>在SQL语句中出现 Order by，查询时，先排序，后取值</li><li>在SQL中，一个字段的最大容量是8000</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 经典语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL获取字符串最后出现的位置</title>
      <link href="/2016/11/29/SQL%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE/"/>
      <url>/2016/11/29/SQL%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置："><a href="#1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：" class="headerlink" title="1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置："></a>1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @str3 <span class="built_in">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> @str3 = <span class="string">'6.7.8.2.3.4.x'</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEN</span>(@str3) - <span class="keyword">CHARINDEX</span>(<span class="string">'.'</span>, <span class="keyword">REVERSE</span>(@str3)) + <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>Integer:12</code></pre><a id="more"></a><h3 id="2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串："><a href="#2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：" class="headerlink" title="2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串："></a>2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @str2 <span class="built_in">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> @str2 = <span class="string">'6.7.8.2.3.4.x'</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTRING</span> (@str2, <span class="number">1</span>, (<span class="keyword">LEN</span>(@str2) - <span class="keyword">CHARINDEX</span>(<span class="string">'.'</span>, <span class="keyword">REVERSE</span>(@str2)) ) )</span><br></pre></td></tr></table></figure><pre><code>string:&apos;6.7.8.2.3.4&apos;</code></pre><h3 id="3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串："><a href="#3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：" class="headerlink" title="3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串："></a>3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @str1 <span class="built_in">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> @str1 = <span class="string">'6.7.8.2.3.4.x'</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REVERSE</span>(<span class="keyword">SUBSTRING</span> (<span class="keyword">REVERSE</span>(@str1), <span class="number">1</span>, <span class="keyword">CHARINDEX</span>(<span class="string">'.'</span>, <span class="keyword">REVERSE</span>(@str1)) - <span class="number">1</span>) )</span><br></pre></td></tr></table></figure><pre><code>string:&apos;x&apos;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL查询死锁和阻塞</title>
      <link href="/2016/11/29/SQL%E6%9F%A5%E8%AF%A2%E6%AD%BB%E9%94%81%E5%92%8C%E9%98%BB%E5%A1%9E/"/>
      <url>/2016/11/29/SQL%E6%9F%A5%E8%AF%A2%E6%AD%BB%E9%94%81%E5%92%8C%E9%98%BB%E5%A1%9E/</url>
      
        <content type="html"><![CDATA[<h3 id="查询死锁进程"><a href="#查询死锁进程" class="headerlink" title="查询死锁进程"></a>查询死锁进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">request_session_id spid,</span><br><span class="line">OBJECT_NAME(</span><br><span class="line">resource_associated_entity_id</span><br><span class="line">) tableName</span><br><span class="line">FROM</span><br><span class="line">sys.dm_tran_locks</span><br><span class="line">WHERE</span><br><span class="line">resource_type = &apos;OBJECT&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">标志,</span><br><span class="line">进程ID = spid,</span><br><span class="line">线程ID = kpid,</span><br><span class="line">块进程ID = blocked,</span><br><span class="line">数据库ID = dbid,</span><br><span class="line">数据库名 = db_name(dbid),</span><br><span class="line">用户ID = uid,</span><br><span class="line">用户名 = loginame,</span><br><span class="line">累计CPU时间 = cpu,</span><br><span class="line">登陆时间 = login_time,</span><br><span class="line">打开事务数 = open_tran,</span><br><span class="line">进程状态 = status,</span><br><span class="line">工作站名 = hostname,</span><br><span class="line">应用程序名 = program_name,</span><br><span class="line">工作站进程ID = hostprocess,</span><br><span class="line">域名 = nt_domain,</span><br><span class="line">网卡地址 = net_address </span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">标志 = &apos;死锁的进程&apos;,</span><br><span class="line">spid,</span><br><span class="line">kpid,</span><br><span class="line">a.blocked,</span><br><span class="line">dbid,</span><br><span class="line">uid,</span><br><span class="line">loginame,</span><br><span class="line">cpu,</span><br><span class="line">login_time,</span><br><span class="line">open_tran,</span><br><span class="line">status,</span><br><span class="line">hostname,</span><br><span class="line">program_name,</span><br><span class="line">hostprocess,</span><br><span class="line">nt_domain,</span><br><span class="line">net_address,</span><br><span class="line">s1 = a.spid,</span><br><span class="line">s2 = 0</span><br><span class="line">FROM</span><br><span class="line">master..sysprocesses a</span><br><span class="line">JOIN (</span><br><span class="line">SELECT</span><br><span class="line">blocked</span><br><span class="line">FROM</span><br><span class="line">master..sysprocesses</span><br><span class="line">GROUP BY</span><br><span class="line">blocked</span><br><span class="line">) b ON a.spid = b.blocked</span><br><span class="line">WHERE</span><br><span class="line">a.blocked = 0</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT</span><br><span class="line">&apos;|_牺牲品_&gt;&apos;,</span><br><span class="line">spid,</span><br><span class="line">kpid,</span><br><span class="line">blocked,</span><br><span class="line">dbid,</span><br><span class="line">uid,</span><br><span class="line">loginame,</span><br><span class="line">cpu,</span><br><span class="line">login_time,</span><br><span class="line">open_tran,</span><br><span class="line">status,</span><br><span class="line">hostname,</span><br><span class="line">program_name,</span><br><span class="line">hostprocess,</span><br><span class="line">nt_domain,</span><br><span class="line">net_address,</span><br><span class="line">s1 = blocked,</span><br><span class="line">s2 = 1</span><br><span class="line">FROM</span><br><span class="line">master..sysprocesses a</span><br><span class="line">WHERE</span><br><span class="line">blocked &lt;&gt; 0</span><br><span class="line">) a</span><br><span class="line">ORDER BY</span><br><span class="line">s1,</span><br><span class="line">s2</span><br></pre></td></tr></table></figure><h3 id="杀死死锁进程"><a href="#杀死死锁进程" class="headerlink" title="杀死死锁进程"></a>杀死死锁进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KILL spid;</span><br></pre></td></tr></table></figure><h3 id="每秒死锁数量"><a href="#每秒死锁数量" class="headerlink" title="每秒死锁数量"></a>每秒死锁数量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT  *</span><br><span class="line">FROM    sys.dm_os_performance_counters</span><br><span class="line">WHERE   counter_name LIKE &apos;Number of Deadlocksc%&apos;;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="查询当前阻塞"><a href="#查询当前阻塞" class="headerlink" title="查询当前阻塞"></a>查询当前阻塞</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">WITH CTE_SID (BSID, SID, sql_handle) AS (</span><br><span class="line">SELECT</span><br><span class="line">blocking_session_id,</span><br><span class="line">session_id,</span><br><span class="line">sql_handle</span><br><span class="line">FROM</span><br><span class="line">sys.dm_exec_requests</span><br><span class="line">WHERE</span><br><span class="line">blocking_session_id &lt;&gt; 0</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT</span><br><span class="line">A.blocking_session_id,</span><br><span class="line">A.session_id,</span><br><span class="line">A.sql_handle</span><br><span class="line">FROM</span><br><span class="line">sys.dm_exec_requests A</span><br><span class="line">JOIN CTE_SID B ON A.SESSION_ID = B.BSID</span><br><span class="line">) SELECT</span><br><span class="line">C.BSID,</span><br><span class="line">C.SID,</span><br><span class="line">S.login_name,</span><br><span class="line">S.host_name,</span><br><span class="line">S.status,</span><br><span class="line">S.cpu_time,</span><br><span class="line">S.memory_usage,</span><br><span class="line">S.last_request_start_time,</span><br><span class="line">S.last_request_end_time,</span><br><span class="line">S.logical_reads,</span><br><span class="line">S.row_count,</span><br><span class="line">q. TEXT</span><br><span class="line">FROM</span><br><span class="line">CTE_SID C</span><br><span class="line">JOIN sys.dm_exec_sessions S ON C.sid = s.session_id CROSS APPLY sys.dm_exec_sql_text (C.sql_handle) Q</span><br><span class="line">ORDER BY</span><br><span class="line">sid;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle之imp和exp语句</title>
      <link href="/2016/11/29/Oracle%E4%B9%8Bimp%E5%92%8Cexp%E8%AF%AD%E5%8F%A5/"/>
      <url>/2016/11/29/Oracle%E4%B9%8Bimp%E5%92%8Cexp%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="exp-imp命令详解"><a href="#exp-imp命令详解" class="headerlink" title="exp/imp命令详解"></a>exp/imp命令详解</h2><p>exp        导出命令<br>imp        导入命令</p><p><strong>exp导出模式</strong><br>full模式：导出整个数据库<br>user模式：导出指定的用户<br>table模式：导出指定的表<br>tablespace模式：导出表空间</p><p><strong>exp导出参数</strong><br>owner：指定要导出的用户列表<br>full=y：表示要导出整个数据库<br>tables：指定要导出的表<br>tablepaces：指定要导出的表空间<br>rows=y：表示导出表数据,否则只导出表的结构.<br>help=y：表示要获取帮助<br>indexs：指定是否导出索引<br>grants：表示是否导出授权<br>query：定查询条件,允许用户导出表的一部分数据<br>triggers：指定是否导出触发器<br><a id="more"></a></p><h2 id="exp-imp使用方法"><a href="#exp-imp使用方法" class="headerlink" title="exp/imp使用方法"></a>exp/imp使用方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imp username/password@connect_string param=value …</span><br><span class="line">exp username/password@connect_string param=value …</span><br></pre></td></tr></table></figure><p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exp xcba/xcba@orcl file=C:\xcba.dmp log=C:\xcba.log owner=(xcba)</span><br><span class="line">imp xcba/xcba@orcl file=C:\xcba.dmp log=C:\xcba.log full=y ignore=y</span><br></pre></td></tr></table></figure></p><blockquote><p>导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。<br>具体作法：将“HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”</p></blockquote><h2 id="exp-imp导入导出方式"><a href="#exp-imp导入导出方式" class="headerlink" title="exp/imp导入导出方式"></a>exp/imp导入导出方式</h2><h3 id="1-表方式，将指定表的数据导出-导入。"><a href="#1-表方式，将指定表的数据导出-导入。" class="headerlink" title="1. 表方式，将指定表的数据导出/导入。"></a>1. 表方式，将指定表的数据导出/导入。</h3><p><strong>导出：</strong><br>导出一张或几张表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2</span><br></pre></td></tr></table></figure></p><p>如果是分区表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2</span><br></pre></td></tr></table></figure></p><p>导出某张表的部分数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\”where col1=\’…\’ and col2 \&lt;…\” </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\”where col1=\’…\’ and col2 \&lt;…\”</span><br></pre></td></tr></table></figure></p><p><strong>导入：</strong><br>导入一张或几张表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p><p>如果是分区表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p><h3 id="2-用户方式，将指定用户的所有对象及数据导出-导入。"><a href="#2-用户方式，将指定用户的所有对象及数据导出-导入。" class="headerlink" title="2. 用户方式，将指定用户的所有对象及数据导出/导入。"></a>2. 用户方式，将指定用户的所有对象及数据导出/导入。</h3><p><strong>导出：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)</span><br></pre></td></tr></table></figure></p><p>只导出数据对象，不导出数据  (rows=n )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n</span><br></pre></td></tr></table></figure></p><p><strong>导入：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y </span><br><span class="line">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y</span><br></pre></td></tr></table></figure></p><h3 id="3-全库方式，将数据库中的所有对象导出-导入"><a href="#3-全库方式，将数据库中的所有对象导出-导入" class="headerlink" title="3. 全库方式，将数据库中的所有对象导出/导入"></a>3. 全库方式，将数据库中的所有对象导出/导入</h3><p><strong>导出：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y</span><br></pre></td></tr></table></figure></p><p><strong>导入：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle删除和创建表空间及用户</title>
      <link href="/2016/11/29/Oracle%E5%88%A0%E9%99%A4%E5%92%8C%E5%88%9B%E5%BB%BA%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8F%8A%E7%94%A8%E6%88%B7/"/>
      <url>/2016/11/29/Oracle%E5%88%A0%E9%99%A4%E5%92%8C%E5%88%9B%E5%BB%BA%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8F%8A%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-删除表空间和用户"><a href="#1-删除表空间和用户" class="headerlink" title="1. 删除表空间和用户"></a>1. 删除表空间和用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DROP USER XCBA CASCADE;</span><br><span class="line">DROP tablespace XCBA_temp including contents AND datafiles;</span><br><span class="line">DROP tablespace XCBA including contents AND datafiles;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-创建临时表空间"><a href="#2-创建临时表空间" class="headerlink" title="2. 创建临时表空间"></a>2. 创建临时表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TEMPORARY tablespace XCBA_TEMP </span><br><span class="line">tempfile &apos;E:\oracle\product\10.2.0\oradata\XCBA\XCBA_TEMP.dbf&apos; </span><br><span class="line">SIZE 32m </span><br><span class="line">autoextend ON </span><br><span class="line">NEXT 32m maxsize 2048m </span><br><span class="line">extent management LOCAL;</span><br></pre></td></tr></table></figure><h3 id="3-创建数据表空间"><a href="#3-创建数据表空间" class="headerlink" title="3. 创建数据表空间"></a>3. 创建数据表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE tablespace XCBA </span><br><span class="line">logging datafile &apos;E:\oracle\product\10.2.0\oradata\XCBA\XCBA.dbf&apos; </span><br><span class="line">SIZE 32m </span><br><span class="line">autoextend ON </span><br><span class="line">NEXT 32m maxsize 2048m </span><br><span class="line">extent management LOCAL;</span><br></pre></td></tr></table></figure><h3 id="4-创建用户并指定表空间"><a href="#4-创建用户并指定表空间" class="headerlink" title="4. 创建用户并指定表空间"></a>4. 创建用户并指定表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER XCBA identified BY XCBA </span><br><span class="line">DEFAULT tablespace XCBA </span><br><span class="line">TEMPORARY tablespace XCBA_TEMP;</span><br></pre></td></tr></table></figure><h3 id="5-给用户授予权限"><a href="#5-给用户授予权限" class="headerlink" title="5. 给用户授予权限"></a>5. 给用户授予权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GRANT CONNECT, resource TO XCBA;</span><br><span class="line">ALTER USER XCBA ACCOUNT UNLOCK;</span><br><span class="line">GRANT dba TO XCBA;</span><br><span class="line">ALTER USER XCBA DEFAULT role DBA</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL常见问题</title>
      <link href="/2016/11/29/SQL%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2016/11/29/SQL%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="关于SQL的常见问题解答"><a href="#关于SQL的常见问题解答" class="headerlink" title="关于SQL的常见问题解答"></a>关于SQL的常见问题解答</h1><hr><h2 id="1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”"><a href="#1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”" class="headerlink" title="1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”"></a>1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”</h2><p>例如，报错SQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">gz,</span><br><span class="line">yz</span><br><span class="line">FROM</span><br><span class="line">(SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;) AS a</span><br><span class="line">ORDER BY</span><br><span class="line">gz;</span><br></pre></td></tr></table></figure></p><p>在Access里执行没问题，但放到代码里就<code>FROM子句语法错误</code>。此时，只需将from子语句用[]括起来，后面跟一个.即可，正确SQL如下：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">gz,</span><br><span class="line">yz</span><br><span class="line">FROM</span><br><span class="line">[SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;]. AS a</span><br><span class="line">ORDER BY</span><br><span class="line">gz;</span><br></pre></td></tr></table></figure></p><h2 id="2-SQL-Server安装提示暂挂项目"><a href="#2-SQL-Server安装提示暂挂项目" class="headerlink" title="2. SQL Server安装提示暂挂项目"></a>2. SQL Server安装提示暂挂项目</h2><p>打开注册表编辑器，在<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager</code>中找到<code>PendingFileRenameOperations</code>项目，并删除它。这样就可以清除安装暂挂项目。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> FAQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS常见中文字体的英文名</title>
      <link href="/2016/11/28/CSS%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E7%9A%84%E8%8B%B1%E6%96%87%E5%90%8D/"/>
      <url>/2016/11/28/CSS%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E7%9A%84%E8%8B%B1%E6%96%87%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：</p><h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>华文细黑：STHeiti Light [STXihei]<br>华文黑体：STHeiti<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文仿宋：STFangsong<br>儷黑 Pro：LiHei Pro Medium<br>儷宋 Pro：LiSong Pro Light<br>標楷體：BiauKai<br>蘋果儷中黑：Apple LiGothic Medium<br>蘋果儷細宋：Apple LiSung Light<br><a id="more"></a></p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>新細明體：PMingLiU<br>細明體：MingLiU<br>標楷體：DFKai-SB<br>黑体：SimHei<br>宋体：SimSun<br>新宋体：NSimSun<br>仿宋：FangSong<br>楷体：KaiTi<br>仿宋_GB2312：FangSong_GB2312<br>楷体_GB2312：KaiTi_GB2312<br>微軟正黑體：Microsoft JhengHei<br>微软雅黑体：Microsoft YaHei</p><h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><p>隶书：LiSu<br>幼圆：YouYuan<br>华文细黑：STXihei<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文中宋：STZhongsong<br>华文仿宋：STFangsong<br>方正舒体：FZShuTi<br>方正姚体：FZYaoti<br>华文彩云：STCaiyun<br>华文琥珀：STHupo<br>华文隶书：STLiti<br>华文行楷：STXingkai<br>华文新魏：STXinwei</p><h4 id="例：CSS中正确设置微软雅黑字体"><a href="#例：CSS中正确设置微软雅黑字体" class="headerlink" title="例：CSS中正确设置微软雅黑字体"></a>例：CSS中正确设置微软雅黑字体</h4><p>.selector{ font-family:”Microsoft YaHei”,微软雅黑,”MicrosoftJhengHei”,华文细黑,STHeiti,MingLiu }</p><blockquote><p>说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。<br>注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS样式 </tag>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript字符串去除空格</title>
      <link href="/2016/11/28/JavaScript%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC/"/>
      <url>/2016/11/28/JavaScript%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<ul><li>去除所有空格:<br>str   =   str.replace(/\s+/g,””);       </li><li>去除两边空格:<br>str   =   str.replace(/^\s+|\s+$/g,””);</li><li>去除左空格：<br>str=str.replace( /^\s*/, ‘’);</li><li>去除右空格：<br>str=str.replace(/(\s*$)/g, “”);</li></ul><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器虚拟化的好处</title>
      <link href="/2016/11/28/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
      <url>/2016/11/28/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%A5%BD%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器虚拟化的好处"><a href="#服务器虚拟化的好处" class="headerlink" title="服务器虚拟化的好处"></a>服务器虚拟化的好处</h1><hr><ul><li><p>整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。</p></li><li><p>避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。</p></li><li><p>事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。</p></li><li><p>节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。</p></li><li><p>迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。</p></li><li><p>减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。</p></li></ul><blockquote><p>高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。</p></blockquote><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows命令学习</title>
      <link href="/2016/11/24/Windows%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2016/11/24/Windows%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>shutdown</td><td style="text-align:left">重启</td></tr><tr><td>nbtstat -a 192.168.0.5</td><td style="text-align:left">通过IP查找主机名</td></tr><tr><td>ipconfig /flushdns</td><td style="text-align:left">刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\Windows\System32\drivers\etc）</td></tr><tr><td>tskill PID</td><td style="text-align:left">找到占用端口的PID</td></tr><tr><td>netstat -ab</td><td style="text-align:left">杀死进程</td></tr><tr><td>netstat -ano</td><td style="text-align:left">查看所有的端口占用情况</td></tr><tr><td>netstat -aon</td><td style="text-align:left">findstr “9050”</td><td>查看指定端口的占用情况</td></tr><tr><td>tasklist</td><td style="text-align:left">findstr “2016”</td><td>查看PID对应的进程</td></tr><tr><td>taskkill /f /t /im tor.exe</td><td style="text-align:left">结束该进程tor.exe</td></tr><tr><td>notepad</td><td style="text-align:left">记事本</td></tr><tr><td>clipbrd</td><td style="text-align:left">剪切板</td></tr><tr><td>systeminfo</td><td style="text-align:left">查看系统信息</td></tr><tr><td>gpedit.msc</td><td style="text-align:left">组策略（关闭自动播放）</td></tr><tr><td>odbcad32.exe</td><td style="text-align:left">数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\Windows\SysWOW64\odbcad32.exe</td></tr><tr><td>arp -a</td><td style="text-align:left">查看IP对应的MAC地址</td></tr><tr><td>arp -s</td><td style="text-align:left">添加IP对应的MAC地址</td></tr><tr><td>dxdiag</td><td style="text-align:left">查看系统DirectX</td></tr><tr><td>psr</td><td style="text-align:left">问题步骤记录器</td></tr><tr><td>gpedit.msc</td><td style="text-align:left">组策略</td></tr><tr><td>sndrec32</td><td style="text-align:left">录音机</td></tr><tr><td>Nslookup</td><td style="text-align:left">IP地址侦测器</td></tr><tr><td>explorer</td><td style="text-align:left">打开资源管理器</td></tr><tr><td>logoff</td><td style="text-align:left">注销命令</td></tr><tr><td>tsshutdn</td><td style="text-align:left">60秒倒计时关机命令</td></tr><tr><td>lusrmgr.msc</td><td style="text-align:left">本机用户和组</td></tr><tr><td>services.msc</td><td style="text-align:left">本地服务设置</td></tr><tr><td>oobe/msoobe /a</td><td style="text-align:left">检查XP是否激活</td></tr><tr><td>notepad</td><td style="text-align:left">打开记事本</td></tr><tr><td>cleanmgr</td><td style="text-align:left">垃圾整理</td></tr><tr><td>net start messenger</td><td style="text-align:left">开始信使服务</td></tr><tr><td>compmgmt.msc</td><td style="text-align:left">计算机管理</td></tr><tr><td>net stop messenger</td><td style="text-align:left">停止信使服务</td></tr><tr><td>conf</td><td style="text-align:left">启动 netmeeting</td></tr><tr><td>dvdplay</td><td style="text-align:left">DVD播放器</td></tr><tr><td>charmap</td><td style="text-align:left">启动字符映射表</td></tr><tr><td>diskmgmt.msc</td><td style="text-align:left">磁盘管理实用程序</td></tr><tr><td>calc</td><td style="text-align:left">启动计算器</td></tr><tr><td>dfrg.msc</td><td style="text-align:left">磁盘碎片整理程序</td></tr><tr><td>chkdsk.exe</td><td style="text-align:left">Chkdsk磁盘检查</td></tr><tr><td>devmgmt.msc</td><td style="text-align:left">设备管理器</td></tr><tr><td>regsvr32 /u *.dll</td><td style="text-align:left">停止dll文件运行</td></tr><tr><td>drwtsn32</td><td style="text-align:left">系统医生</td></tr><tr><td>rononce -p</td><td style="text-align:left">15秒关机</td></tr><tr><td>dxdiag</td><td style="text-align:left">检查DirectX信息</td></tr><tr><td>regedt32</td><td style="text-align:left">注册表编辑器</td></tr><tr><td>Msconfig.exe</td><td style="text-align:left">系统配置实用程序</td></tr><tr><td>rsop.msc</td><td style="text-align:left">组策略结果集</td></tr><tr><td>mem.exe</td><td style="text-align:left">显示内存使用情况</td></tr><tr><td>regedit.exe</td><td style="text-align:left">注册表</td></tr><tr><td>winchat</td><td style="text-align:left">XP自带局域网聊天</td></tr><tr><td>progman</td><td style="text-align:left">程序管理器</td></tr><tr><td>winmsd</td><td style="text-align:left">系统信息</td></tr><tr><td>perfmon.msc</td><td style="text-align:left">计算机性能监测程序</td></tr><tr><td>winver</td><td style="text-align:left">检查Windows版本</td></tr><tr><td>sfc /scannow</td><td style="text-align:left">扫描错误并复原</td></tr><tr><td>taskmgr</td><td style="text-align:left">任务管理器（2000／xp／2003）</td></tr></tbody></table><h2 id="Dos命令"><a href="#Dos命令" class="headerlink" title="Dos命令"></a>Dos命令</h2><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>dir</td><td style="text-align:left">列出当前目录下的文件以及文件夹</td></tr><tr><td>del</td><td style="text-align:left">删除文件</td></tr><tr><td>ren</td><td style="text-align:left">重命名,例如：ren 旧文件 新文件名</td></tr><tr><td>md</td><td style="text-align:left">创建目录</td></tr><tr><td>rd</td><td style="text-align:left">删除目录</td></tr><tr><td>cd</td><td style="text-align:left">进入指定目录</td></tr><tr><td>cd..</td><td style="text-align:left">退回到上一级目录</td></tr><tr><td>cd/</td><td style="text-align:left">退回到根目录</td></tr><tr><td>exit</td><td style="text-align:left">退出dos命令行</td></tr><tr><td>open</td><td style="text-align:left">与ftp服务器相连接</td></tr><tr><td>send(put)</td><td style="text-align:left">上传文件</td></tr><tr><td>get</td><td style="text-align:left">下载文件</td></tr><tr><td>mget</td><td style="text-align:left">下载多个文件</td></tr><tr><td>bye</td><td style="text-align:left">中断与服务器的连接</td></tr><tr><td>tracert</td><td style="text-align:left">跟踪IP地址路由</td></tr></tbody></table><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>for /f “skip=9 tokens=1,2 delims=:” %i in (‘netsh wlan show profiles’) do  @echo %j</td><td style="text-align:left">findstr -i -v echo</td><td>netsh wlan show profiles %j key=clear</td><td>列出连接过的wifi信息、加密方式、包括密码</td></tr><tr><td>net use * /del /y</td><td style="text-align:left">清除共享或磁盘映射记录列表</td></tr><tr><td>control userpasswords2</td><td style="text-align:left">依次点击‘高级’—‘管理密码’，删除完毕，确定即可</td></tr><tr><td>wmic product where “Name like ‘Microsoft .Net%’” get Name, Version</td><td style="text-align:left">使用 WMI 命令获取.NET版本信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志书写规范</title>
      <link href="/2016/11/24/%E6%97%A5%E5%BF%97%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/"/>
      <url>/2016/11/24/%E6%97%A5%E5%BF%97%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<ul><li>日志类型：新增、修复、优化、删除</li><li>版本类型：稳定版、开发版、体验版</li><li>更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。</li></ul><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux发展史</title>
      <link href="/2016/11/22/Linux%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
      <url>/2016/11/22/Linux%E5%8F%91%E5%B1%95%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令学习</title>
      <link href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>reboot</td><td style="text-align:left">重启系统</td></tr><tr><td>shutdown -r now</td><td style="text-align:left">重启系统</td></tr><tr><td>shutdown -c</td><td style="text-align:left">取消重启</td></tr><tr><td>halt</td><td style="text-align:left">立刻关机</td></tr><tr><td>poweroff</td><td style="text-align:left">立刻关机</td></tr><tr><td>shutdown -h now</td><td style="text-align:left">立刻关机（root用户使用）</td></tr><tr><td>shutdown -h 10</td><td style="text-align:left">10分钟后自动关机</td></tr><tr><td>yum update</td><td style="text-align:left">升级Linux，升级所有包同时也升级软件和系统内核</td></tr><tr><td>yum upgrade</td><td style="text-align:left">升级Linux，只升级所有包，不升级软件和系统内核</td></tr><tr><td>cat /proc/version</td><td style="text-align:left">查看内核版本</td></tr><tr><td>uname -a</td><td style="text-align:left">查看内核版本</td></tr><tr><td>lsb_release -a</td><td style="text-align:left">查看系统版本</td></tr><tr><td>cat /etc/issue</td><td style="text-align:left">查看系统版本</td></tr><tr><td>cat /etc/redhat-release</td><td style="text-align:left">查看系统版本（只适合Redhat系）</td></tr><tr><td>getconf LONG_BIT</td><td style="text-align:left">查看系统位数</td></tr><tr><td>cat /proc/cpuinfo</td><td style="text-align:left">查看CPU型号</td></tr><tr><td>top</td><td style="text-align:left">查看实时CPU使用率</td></tr><tr><td>ps aux&#124;head -1;ps aux&#124;grep -v PID&#124;sort -rn -k +3&#124;head</td><td style="text-align:left">查看占用CPU最多的10个进程。head默认取前10行，自定义K行时，在后面跟-K即可</td></tr><tr><td>free -m</td><td style="text-align:left">查看内存</td></tr><tr><td>ps aux&#124;head -1;ps aux&#124;grep -v PID&#124;sort -rn -k +4&#124;head</td><td style="text-align:left">查看占用内存最多的10个进程。head默认取前10行，自定义K行时，在后面跟-K即可</td></tr><tr><td>df -l</td><td style="text-align:left">查看硬盘空间情况</td></tr><tr><td>du -sh ./*</td><td style="text-align:left">查看当前目录下各文件/文件夹的大小</td></tr><tr><td>jps</td><td style="text-align:left">查看当前所有Java进程pid的命令</td></tr><tr><td>kill</td><td style="text-align:left">删除执行中的程序或工作</td></tr><tr><td>kill -9</td><td style="text-align:left">强制终止执行中的程序或工作</td></tr></tbody></table><a id="more"></a><hr><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>cd</td><td style="text-align:left">改变目录到</td></tr><tr><td>cd ~</td><td style="text-align:left">回到家目录</td></tr><tr><td>pwd</td><td style="text-align:left">查看当前路径</td></tr><tr><td>mkdir</td><td style="text-align:left">创建文件夹</td></tr><tr><td>touch</td><td style="text-align:left">创建文件</td></tr><tr><td>rm</td><td style="text-align:left">删除文件</td></tr><tr><td>rm -r</td><td style="text-align:left">删除文件夹</td></tr><tr><td>rm -fr</td><td style="text-align:left">直接删除，无需确认</td></tr><tr><td>cp</td><td style="text-align:left">复制</td></tr><tr><td>mv</td><td style="text-align:left">移动、重命名文件或文件夹</td></tr><tr><td>find</td><td style="text-align:left">查找</td></tr><tr><td>which</td><td style="text-align:left">查找</td></tr><tr><td>cat</td><td style="text-align:left">查看文本内容</td></tr><tr><td>head</td><td style="text-align:left">查看文本前十行</td></tr><tr><td>tail</td><td style="text-align:left">查看文本后十行</td></tr><tr><td>more</td><td style="text-align:left">让文件内容一屏一屏的显示</td></tr><tr><td>cat XXX &#124; more</td><td style="text-align:left">管道：将cat显示出来的内容重新输出给more命令</td></tr><tr><td>&gt;</td><td style="text-align:left">重定向：将文件内容输出到指定的文件或位置。如cat /etc/services &gt; a.txt</td></tr><tr><td>ls -i</td><td style="text-align:left">使用ls -i命令找到文件或文件夹的节点编号</td></tr><tr><td>find -inum 2243223 -delete</td><td style="text-align:left">使用find命令查询并且删除乱码文件或文件夹</td></tr><tr><td>rm -rf fileA</td><td style="text-align:left">删除文件或文件夹fileA的软链接</td></tr><tr><td>ln -s fileB fileA</td><td style="text-align:left">设置软链接用快捷方式fileB代替fileA</td></tr><tr><td>ln fileB fileA</td><td style="text-align:left">建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删</td></tr><tr><td><strong>删除指定文件夹下后缀名相同的文件：</strong></td><td style="text-align:left"></td></tr><tr><td>find 目录 -name ‘*.abc’ &#124; xargs rm</td><td style="text-align:left">命令危险，可先执行前半段进行查看, 确认后再整条执行</td></tr><tr><td>find . -name ‘*.exe’ -type f -print -exec rm -rf {} \;</td><td style="text-align:left">1) “.”表示从当前目录开始递归查找</td></tr><tr><td></td><td style="text-align:left">2) “-name ‘*.exe’”根据名称来查找所有以.exe结尾的文件夹或者文件</td></tr><tr><td></td><td style="text-align:left">3) “-type f”查找的类型为文件</td></tr><tr><td></td><td style="text-align:left">4) “-print”输出查找的文件目录名</td></tr><tr><td></td><td style="text-align:left">5) “-exec”后边跟要执行的命令，表示将find出来的文件或目录执行该命令</td></tr><tr><td></td><td style="text-align:left">最后是一对{}，一个空格和一个\，一个分号</td></tr></tbody></table><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>netstat -apn</td><td style="text-align:left">查看所有的进程和端口使用情况</td></tr></tbody></table><h3 id="vi"><a href="#vi" class="headerlink" title="vi"></a>vi</h3><table><thead><tr><th>命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><strong>进入vi</strong></td><td style="text-align:left"></td></tr><tr><td>vi filename</td><td style="text-align:left">打开或新建文件，并将光标置于第一行首</td></tr><tr><td>vi +n filename</td><td style="text-align:left">打开文件，并将光标置于第n行首</td></tr><tr><td>vi + filename</td><td style="text-align:left">打开文件，并将光标置于最后一行首</td></tr><tr><td>vi +/pattern filename</td><td style="text-align:left">打开文件，并将光标置于第一个与pattern匹配的串处</td></tr><tr><td>vi -r filename</td><td style="text-align:left">在上次正用vi编辑时发生系统崩溃，恢复filename</td></tr><tr><td>vi filename….filename</td><td style="text-align:left">打开多个文件，依次进行编辑</td></tr><tr><td><strong>保存退出</strong></td><td style="text-align:left"></td></tr><tr><td>:</td><td style="text-align:left">进入Last line mode</td></tr><tr><td>w</td><td style="text-align:left">保存当前文件</td></tr><tr><td>w /tmp1</td><td style="text-align:left">另存为/tmp1</td></tr><tr><td>20,59w /tmp1</td><td style="text-align:left">仅将20-59行之间的内存另存为/tmp1</td></tr><tr><td>x 或 wq</td><td style="text-align:left">保存并退出</td></tr><tr><td>q</td><td style="text-align:left">退出vi</td></tr><tr><td>q!</td><td style="text-align:left">退出不保存</td></tr><tr><td>!command</td><td style="text-align:left">执行shell命令command</td></tr><tr><td>n1,n2 w !command</td><td style="text-align:left">将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</td></tr><tr><td>r !command</td><td style="text-align:left">将命令command的输出结果放到当前行</td></tr><tr><td>w !sudo tee %</td><td style="text-align:left">保存没权限时，可获取权限再保存</td></tr><tr><td><strong>光标移动</strong></td><td style="text-align:left"></td></tr><tr><td>h</td><td style="text-align:left">光标左移一个字符</td></tr><tr><td>Backspace</td><td style="text-align:left">光标左移一个字符</td></tr><tr><td>l</td><td style="text-align:left">光标右移一个字符</td></tr><tr><td>spac</td><td style="text-align:left">光标右移一个字符</td></tr><tr><td>k 或 Ctrl+p</td><td style="text-align:left">光标上移一行</td></tr><tr><td>j 或 Ctrl+n</td><td style="text-align:left">光标下移一行</td></tr><tr><td>Enter</td><td style="text-align:left">光标下移一行</td></tr><tr><td>w 或 W</td><td style="text-align:left">光标右移一个字至字首</td></tr><tr><td>b 或 B</td><td style="text-align:left">光标左移一个字至字首</td></tr><tr><td>e 或 E</td><td style="text-align:left">光标右移一个字至字尾</td></tr><tr><td>)</td><td style="text-align:left">光标移至句尾</td></tr><tr><td>(</td><td style="text-align:left">光标移至句首</td></tr><tr><td>}</td><td style="text-align:left">光标移至段落开头</td></tr><tr><td>{</td><td style="text-align:left">光标移至段落结尾</td></tr><tr><td>nG</td><td style="text-align:left">光标移至第n行首</td></tr><tr><td>n+</td><td style="text-align:left">光标下移n行</td></tr><tr><td>n-</td><td style="text-align:left">光标上移n行</td></tr><tr><td>n$</td><td style="text-align:left">光标移至第n行尾</td></tr><tr><td>H</td><td style="text-align:left">光标移至屏幕顶行</td></tr><tr><td>M</td><td style="text-align:left">光标移至屏幕中间行</td></tr><tr><td>L</td><td style="text-align:left">光标移至屏幕最后行</td></tr><tr><td>0</td><td style="text-align:left">（注意是数字零）光标移至当前行首</td></tr><tr><td>$</td><td style="text-align:left">光标移至当前行尾</td></tr><tr><td><strong>屏幕翻滚</strong></td><td style="text-align:left"></td></tr><tr><td>Ctrl+u</td><td style="text-align:left">向文件首翻半屏</td></tr><tr><td>Ctrl+d</td><td style="text-align:left">向文件尾翻半屏</td></tr><tr><td>Ctrl+f</td><td style="text-align:left">向文件尾翻一屏</td></tr><tr><td>Ctrl+b</td><td style="text-align:left">向文件首翻一屏</td></tr><tr><td>nz</td><td style="text-align:left">将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td></tr><tr><td><strong>插入</strong></td><td style="text-align:left"></td></tr><tr><td>i</td><td style="text-align:left">在光标前</td></tr><tr><td>I</td><td style="text-align:left">在当前行首</td></tr><tr><td>a</td><td style="text-align:left">光标后</td></tr><tr><td>A</td><td style="text-align:left">在当前行尾</td></tr><tr><td>o</td><td style="text-align:left">在当前行之下新开一行</td></tr><tr><td>O</td><td style="text-align:left">在当前行之上新开一行</td></tr><tr><td>r</td><td style="text-align:left">替换当前字符</td></tr><tr><td>R</td><td style="text-align:left">替换当前字符及其后的字符，直至按ESC键</td></tr><tr><td>s</td><td style="text-align:left">从当前光标位置处开始，以输入的文本替代指定数目的字符</td></tr><tr><td>S</td><td style="text-align:left">删除指定数目的行，并以所输入文本代替之</td></tr><tr><td>ncw 或 nCW</td><td style="text-align:left">修改指定数目的字</td></tr><tr><td>nCC</td><td style="text-align:left">修改指定数目的行</td></tr><tr><td><strong>删除</strong></td><td style="text-align:left"></td></tr><tr><td>ndw 或 ndW</td><td style="text-align:left">删除光标处开始及其后的n-1个字</td></tr><tr><td>do</td><td style="text-align:left">删至行首</td></tr><tr><td>d$</td><td style="text-align:left">删至行尾</td></tr><tr><td>ndd</td><td style="text-align:left">删除当前行及其后n-1行</td></tr><tr><td>x 或 X</td><td style="text-align:left">删除一个字符，x删除光标后的，而X删除光标前的</td></tr><tr><td>Ctrl+u</td><td style="text-align:left">删除输入方式下所输入的文本</td></tr><tr><td>n1,n2 d</td><td style="text-align:left">将n1行到n2行之间的内容删除</td></tr><tr><td>%d</td><td style="text-align:left">删除全部内容</td></tr><tr><td>1,$d</td><td style="text-align:left">删除全部内容</td></tr><tr><td><strong>复制粘贴、剪切、移动</strong></td><td style="text-align:left"></td></tr><tr><td>yy</td><td style="text-align:left">复制当前行</td></tr><tr><td>nyy</td><td style="text-align:left">复制当前行开始的n行</td></tr><tr><td>先按 v 然后方向键选择区域，按 y 复制选中行</td><td style="text-align:left">复制选中行</td></tr><tr><td>dd</td><td style="text-align:left">剪切当前行</td></tr><tr><td>p（小）</td><td style="text-align:left">在当前光标处下面粘贴内容。</td></tr><tr><td>P（大）</td><td style="text-align:left">在当前光标处上面粘贴内容</td></tr><tr><td>n1,n2 co n3</td><td style="text-align:left">将n1行到n2行之间的内容拷贝到第n3行下</td></tr><tr><td>n1,n2 m n3</td><td style="text-align:left">将n1行到n2行之间的内容移至到第n3行下</td></tr><tr><td>u</td><td style="text-align:left">撤销上一步的操作</td></tr><tr><td>Ctrl+r</td><td style="text-align:left">恢复上一步被撤销的操作</td></tr><tr><td><strong>搜索（查找）</strong></td><td style="text-align:left"></td></tr><tr><td>/abc</td><td style="text-align:left">从光标开始处向文件尾搜索abc</td></tr><tr><td>?abc</td><td style="text-align:left">从光标开始处向文件首搜索abc</td></tr><tr><td>/\/abc</td><td style="text-align:left">从光标开始处向文件尾搜索/abc，其中\/是转义</td></tr><tr><td>n</td><td style="text-align:left">在同一方向重复上一次搜索命令</td></tr><tr><td>N</td><td style="text-align:left">在反方向上重复上一次搜索命令</td></tr><tr><td><strong>替换</strong></td><td style="text-align:left"></td></tr><tr><td>s/vivian/sky/</td><td style="text-align:left">替换当前行第一个 vivian 为 sky</td></tr><tr><td>s/vivian/sky/g</td><td style="text-align:left">替换当前行所有 vivian 为 sky</td></tr><tr><td>n,$s/vivian/sky/</td><td style="text-align:left">替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</td></tr><tr><td>n,$s/vivian/sky/g</td><td style="text-align:left">替换第 n 行开始到最后一行中每一行所有 vivian 为sky</td></tr><tr><td>%s/vivian/sky/g</td><td style="text-align:left">（等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky</td></tr><tr><td>s#vivian/#sky/#</td><td style="text-align:left">替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）</td></tr><tr><td>s/p1/p2/g</td><td style="text-align:left">将当前行中所有p1均用p2替代</td></tr><tr><td>n1,n2s/p1/p2/g</td><td style="text-align:left">将第n1至n2行中所有p1均用p2替代</td></tr><tr><td>g/p1/s//p2/g</td><td style="text-align:left">将文件中所有p1均用p2替换</td></tr><tr><td><strong>寄存器</strong></td><td style="text-align:left"></td></tr><tr><td>“?nyy</td><td style="text-align:left">将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?nyw</td><td style="text-align:left">将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?nyl</td><td style="text-align:left">将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?p</td><td style="text-align:left">取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td></tr><tr><td>ndd</td><td style="text-align:left">将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</td></tr><tr><td><strong>选项设置</strong></td><td style="text-align:left"></td></tr><tr><td>set number</td><td style="text-align:left">显示行号</td></tr><tr><td>set number!</td><td style="text-align:left">不显示行号，其它选项同理加！号</td></tr><tr><td>set all</td><td style="text-align:left">列出所有选项设置情况</td></tr><tr><td>set term</td><td style="text-align:left">设置终端类型</td></tr><tr><td>set ignorance</td><td style="text-align:left">在搜索中忽略大小写</td></tr><tr><td>set list</td><td style="text-align:left">显示制表位(Ctrl+I)和行尾标志（$)</td></tr><tr><td>set report</td><td style="text-align:left">显示由面向行的命令修改过的数目</td></tr><tr><td>set terse</td><td style="text-align:left">显示简短的警告信息</td></tr><tr><td>set warn</td><td style="text-align:left">在转到别的文件时若没保存当前文件则显示NO write信息</td></tr><tr><td>set nomagic</td><td style="text-align:left">允许在搜索模式中，使用前面不带“\”的特殊字符</td></tr><tr><td>set nowrapscan</td><td style="text-align:left">禁止vi在搜索到达文件两端时，又从另一端开始</td></tr><tr><td>set mesg</td><td style="text-align:left">允许vi显示其他用户用write写到自己终端上的信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建记录</title>
      <link href="/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>个人博客已搭建完成，下面记录一下搭建步骤。<br>搭建步骤主要参考WX_JIN的博文<a href="http://blog.csdn.net/wx_jin/article/details/51027783" target="_blank" rel="noopener">Windows下使用Hexo+GithubPage搭建博客</a>搭建的，感谢WX_JIN的分享。<br><a id="more"></a><br>博客主题来源于<a href="https://github.com/levblanc/hexo-theme-aero-dual" target="_blank" rel="noopener">Aero Dual Hexo Theme</a></p><h5 id="另附其它主题链接："><a href="#另附其它主题链接：" class="headerlink" title="另附其它主题链接："></a>另附其它主题链接：</h5><p>博客主题大全：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Themes</a><br>Hexo官方主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><h5 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h5><ul><li>Node.js  v6.9.1</li><li>Git      v2.10.1</li><li>hexo     v3.2.2</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客发表Hello World</title>
      <link href="/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E5%8F%91%E8%A1%A8hello-world/"/>
      <url>/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E5%8F%91%E8%A1%A8hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br><a id="more"></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换电脑后如何修改Hexo博客</title>
      <link href="/2016/11/09/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9hexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2016/11/09/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9hexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤："><a href="#当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：" class="headerlink" title="当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤："></a>当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：</h1><ol><li>使用git clone git@github.com:yangpiena/yangpiena.github.io.git拷贝仓库（默认分支为source）；</li><li><p>在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列指令：</p><pre><code>npm install hexonpm install npm install hexo-deployer-git --save</code></pre><p>（切记不要执行hexo init这条指令，否则会删除.git文件夹）</p></li></ol><blockquote><p>遇到错误时：</p><ol><li>更新npm的源：npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></li><li>cmd进入博客当前文件夹路径</li><li>执行 npm install</li><li>执行 hexo server</li><li>执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。</li></ol></blockquote><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
