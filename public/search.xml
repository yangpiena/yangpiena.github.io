<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NPM命令大全</title>
      <link href="/2024/09/21/NPM%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2024/09/21/NPM%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="查看当前的npm镜像设置"><a href="#查看当前的npm镜像设置" class="headerlink" title="查看当前的npm镜像设置"></a>查看当前的npm镜像设置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="cnpm的卸载和重新安装"><a href="#cnpm的卸载和重新安装" class="headerlink" title="cnpm的卸载和重新安装"></a>cnpm的卸载和重新安装</h1><ol><li>卸载旧版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></li><li>配置镜像源（淘宝镜像）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></li><li>确保node-gyp编译依赖的node源码镜像同步<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set disturl https://registry.npmmirror.com/dist</span><br></pre></td></tr></table></figure></li><li>清除缓存<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure></li><li>安装新的cnpm版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></li></ol><h1 id="npm升级"><a href="#npm升级" class="headerlink" title="npm升级"></a>npm升级</h1><ul><li>升级到指定版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@6.14.17</span><br></pre></td></tr></table></figure></li><li>升级到最新版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@latest -g</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TVAPP直播源</title>
      <link href="/2023/06/02/TVAPP%E7%9B%B4%E6%92%AD%E6%BA%90/"/>
      <url>/2023/06/02/TVAPP%E7%9B%B4%E6%92%AD%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://iui.su/175/">https://iui.su/175/</a></li><li><a href="https://owen2000wy.github.io/">https://owen2000wy.github.io/</a></li><li><a href="https://leevi0321.gitee.io/api">https://leevi0321.gitee.io/api</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSharp关于WinForms和WPF的优缺点对比</title>
      <link href="/2023/04/15/CSharp%E5%85%B3%E4%BA%8EWinForms%E5%92%8CWPF%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E5%AF%B9%E6%AF%94/"/>
      <url>/2023/04/15/CSharp%E5%85%B3%E4%BA%8EWinForms%E5%92%8CWPF%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<p>对于开发后台管理系统，WinForms和WPF都是可选的框架，但它们各有优缺点，需要根据项目需求和开发人员的经验来选择。下面是它们的优缺点对比：</p><p>WinForms优点：</p><ol><li>WinForms框架成熟稳定，使用广泛，易于掌握和使用；</li><li>WinForms控件库丰富，开发人员可以快速构建出Windows界面应用程序；</li><li>WinForms应用程序启动速度快，资源占用少，适用于较小的应用程序。</li></ol><p>WinForms缺点：</p><ol><li>WinForms不支持现代UI设计，不够美观和灵活，界面效果相对比较单一；</li><li>WinForms布局方式相对固定，难以实现复杂的布局效果；</li><li>WinForms不支持XAML语言，难以实现数据绑定、MVVM等现代开发模式。</li></ol><p>WPF优点：</p><ol><li>WPF采用XAML语言实现，支持数据绑定、MVVM等现代开发模式；</li><li>WPF控件样式灵活，支持自定义样式和模板化设计；</li><li>WPF支持多种布局方式，可以实现复杂的布局效果；</li><li>WPF提供了丰富的图形效果和动画支持，能够实现更加现代化的UI设计。</li></ol><p>WPF缺点：</p><ol><li>WPF框架相对较新，学习曲线较陡峭，需要花费更多的学习时间和精力；</li><li>WPF应用程序启动速度较慢，资源占用较高，适用于大型应用程序；</li><li>WPF应用程序在Windows XP操作系统上不被支持。</li></ol><p>综上所述，对于后台管理系统的开发，如果需要实现现代化UI设计、数据绑定和MVVM等现代开发模式，以及实现复杂的布局效果和动画效果，推荐使用WPF框架；如果需要快速构建出简单的Windows界面应用程序，以及对启动速度和资源占用有要求，推荐使用WinForms框架。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode常用设置</title>
      <link href="/2023/02/20/VSCode%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/02/20/VSCode%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="设置背景"><a href="#设置背景" class="headerlink" title="设置背景"></a>设置背景</h2><ol><li>准备好背景图片 <code>vscode-background.jpg</code> ，放入安装目录 <code>C:\Program Files\Microsoft VS Code\resources\app\out\vs\workbench</code> 下。</li><li>打开文件 <code>C:\Program Files\Microsoft VS Code\resources\app\out\vs\workbench\workbench.desktop.main.css</code> ，在最后面（Ctrl + End）添加以下内容并保存。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> body &#123;</span><br><span class="line">    pointer-events: auto !important;</span><br><span class="line">    background-size: 100% !important;</span><br><span class="line">    opacity: 0.9 !important;</span><br><span class="line">    background-position: 0 0 !important;</span><br><span class="line">    background-image: url(&quot;./vscode-background.jpg&quot;) !important;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    z-index: 999;</span><br><span class="line">    width: 100%;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重启VSCode后生效。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg介绍和使用</title>
      <link href="/2023/02/15/FFmpeg%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/02/15/FFmpeg%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>FFmpeg是一款开源软件，用于生成处理多媒体数据的各类库和程序。FFmpeg可以转码、处理视频和图片（调整视频、图片大小，去噪等）、打包、传输及播放视频。作为最受欢迎的视频和图像处理软件，它被来自各行各业的不同公司所广泛使用。<br><a href="https://ottverse.com/ffmpeg-builds/">Windows版官方下载地址</a></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>视频压缩用到的参数主要为以下几个：</p><ul><li>文件路径：-i 输入文件的路径</li><li>码率：-b:v 输出文件的码率</li><li>分辨率：-s 输出文件的分辨率；</li><li>帧率：-r 输出文件的帧率值</li></ul><p>常用压缩命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg.exe -i test.mp4 -b:v 500k -r 25 -s 720x480 output.mkv</span><br></pre></td></tr></table></figure><p>分辨率可以根据目标视频的尺寸等比进行设置。</p><blockquote><p>Xabe.FFmpeg是一个ffmpeg第三方封装，它提供了ffmpeg的下载、管理以及ffmpeg.exe的详细封装操作，使ffmpeg的操作更加简洁。<br>通过Nuget包引用后（只支持.net 4.6.1及以上），调用await FFmpeg.GetLatestVersion(FFmpegVersion.Full); 即可获取相应的版本。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker命令大全</title>
      <link href="/2022/12/06/Docker%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2022/12/06/Docker%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><h2 id="docker-镜像命令"><a href="#docker-镜像命令" class="headerlink" title="docker 镜像命令"></a>docker 镜像命令</h2><h3 id="查看自己服务器中docker-镜像列表"><a href="#查看自己服务器中docker-镜像列表" class="headerlink" title="查看自己服务器中docker 镜像列表"></a>查看自己服务器中docker 镜像列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名</span><br></pre></td></tr></table></figure><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><p>不加tag(版本号) 即拉取docker仓库中该镜像的最新版本latest，加:tag 则是拉取指定版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名</span><br><span class="line">docker pull 镜像名:tag</span><br></pre></td></tr></table></figure><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 删除一个</span><br><span class="line">docker rmi -f 镜像名/镜像ID</span><br><span class="line"></span><br><span class="line"># 删除多个 其镜像ID或镜像用用空格隔开即可 </span><br><span class="line">docker rmi -f 镜像名/镜像ID 镜像名/镜像ID 镜像名/镜像ID</span><br><span class="line"></span><br><span class="line"># 删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID</span><br><span class="line">docker rmi -f $(docker images -aq)</span><br></pre></td></tr></table></figure><h3 id="强制删除镜像"><a href="#强制删除镜像" class="headerlink" title="强制删除镜像"></a>强制删除镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image rm 镜像名称/镜像ID</span><br></pre></td></tr></table></figure><h3 id="保存镜像"><a href="#保存镜像" class="headerlink" title="保存镜像"></a>保存镜像</h3><p>将我们的镜像保存为tar压缩文件，这样方便镜像转移和保存,然后可以在任何一台安装了docker的服务器上加载这个镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save 镜像名/镜像ID -o 镜像保存在哪个位置与名字</span><br></pre></td></tr></table></figure><h3 id="加载镜像"><a href="#加载镜像" class="headerlink" title="加载镜像"></a>加载镜像</h3><p>任何装docker的服务器加载镜像保存文件,使其恢复为一个镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i 镜像保存文件位置</span><br></pre></td></tr></table></figure><h3 id="镜像标签"><a href="#镜像标签" class="headerlink" title="镜像标签"></a>镜像标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]</span><br><span class="line"></span><br><span class="line"># 如果省略TAG 则会为镜像默认打上标签latest</span><br></pre></td></tr></table></figure><h2 id="docker-容器命令"><a href="#docker-容器命令" class="headerlink" title="docker 容器命令"></a>docker 容器命令</h2><h3 id="查看正在运行容器列表"><a href="#查看正在运行容器列表" class="headerlink" title="查看正在运行容器列表"></a>查看正在运行容器列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h3 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h3><p>包含正在运行和已停止的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="运行一个容器"><a href="#运行一个容器" class="headerlink" title="运行一个容器"></a>运行一个容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name 要取的别名 镜像名:Tag /bin/bash</span><br><span class="line"></span><br><span class="line"># -it        表示与容器进行交互式启动</span><br><span class="line"># -d         表示可后台运行容器（守护式运行）</span><br><span class="line"># --name     给要运行的容器起的名字</span><br><span class="line"># /bin/bash  交互路径</span><br></pre></td></tr></table></figure><h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器名/容器ID</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 删除一个容器</span><br><span class="line">docker rm -f 容器名/容器ID</span><br><span class="line"></span><br><span class="line"># 删除多个容器 空格隔开要删除的容器名或容器ID</span><br><span class="line">docker rm -f 容器名/容器ID 容器名/容器ID 容器名/容器ID</span><br><span class="line"></span><br><span class="line"># 删除全部容器</span><br><span class="line">docker rm -f $(docker ps -aq)</span><br></pre></td></tr></table></figure><h3 id="容器端口与服务器端口映射"><a href="#容器端口与服务器端口映射" class="headerlink" title="容器端口与服务器端口映射"></a>容器端口与服务器端口映射</h3><p>在运行命令docker run后面跟以下参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 宿主机端口:容器端口</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器名/容器ID /bin/bash</span><br></pre></td></tr></table></figure><h3 id="从容器内退出到自己服务器中"><a href="#从容器内退出到自己服务器中" class="headerlink" title="从容器内退出到自己服务器中"></a>从容器内退出到自己服务器中</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 直接退出  未添加 -d(持久化运行容器) 时，执行此参数容器会被关闭  </span><br><span class="line">exit</span><br><span class="line"># 优雅退出 --- 无论是否添加-d 参数，执行此命令容器都不会被关闭</span><br><span class="line">Ctrl + p + q</span><br></pre></td></tr></table></figure><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart 容器ID/容器名</span><br></pre></td></tr></table></figure><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器ID/容器名</span><br></pre></td></tr></table></figure><h3 id="kill-容器"><a href="#kill-容器" class="headerlink" title="kill 容器"></a>kill 容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker kill 容器ID/容器名</span><br></pre></td></tr></table></figure><h3 id="容器文件拷贝"><a href="#容器文件拷贝" class="headerlink" title="容器文件拷贝"></a>容器文件拷贝</h3><p>无论容器是否开启 都可以进行拷贝</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 从容器内拷出</span><br><span class="line">docker cp 容器ID/名称: 容器内路径  容器外路径</span><br><span class="line"></span><br><span class="line"># 从外部拷贝文件到容器内</span><br><span class="line">docker cp 容器外路径 容器ID/名称: 容器内路径</span><br></pre></td></tr></table></figure><h3 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f --tail=要查看末尾多少行（默认all） 容器ID</span><br></pre></td></tr></table></figure><h3 id="数据挂载"><a href="#数据挂载" class="headerlink" title="数据挂载"></a>数据挂载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v 宿主机文件存储位置:容器内文件位置</span><br></pre></td></tr></table></figure><p>-v命令可以多次使用，即一个容器可以同时挂载多个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v 宿主机文件存储位置:容器内文件位置 -v 宿主机文件存储位置:容器内文件位置 -v 宿主机文件存储位置:容器内文件位置</span><br></pre></td></tr></table></figure><h3 id="不删容器，设置容器开机自启动"><a href="#不删容器，设置容器开机自启动" class="headerlink" title="不删容器，设置容器开机自启动"></a>不删容器，设置容器开机自启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always 容器Id 或者 容器名</span><br><span class="line">或</span><br><span class="line">docker container update --restart=always 容器Id 或者 容器名</span><br></pre></td></tr></table></figure><h3 id="更换容器名"><a href="#更换容器名" class="headerlink" title="更换容器名"></a>更换容器名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rename 容器ID/容器名 新容器名</span><br></pre></td></tr></table></figure><h2 id="docker-网卡命令"><a href="#docker-网卡命令" class="headerlink" title="docker 网卡命令"></a>docker 网卡命令</h2><h3 id="查看docker网卡"><a href="#查看docker网卡" class="headerlink" title="查看docker网卡"></a>查看docker网卡</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure><h3 id="删除docker网卡"><a href="#删除docker网卡" class="headerlink" title="删除docker网卡"></a>删除docker网卡</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network rm 网卡id</span><br></pre></td></tr></table></figure><h3 id="查看docker网卡的相关详细信息"><a href="#查看docker网卡的相关详细信息" class="headerlink" title="查看docker网卡的相关详细信息"></a>查看docker网卡的相关详细信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network inspect 网卡id</span><br></pre></td></tr></table></figure><hr><h2 id="自己提交一个镜像"><a href="#自己提交一个镜像" class="headerlink" title="自己提交一个镜像"></a>自己提交一个镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m=&quot;提交信息&quot; -a=&quot;作者信息&quot; 容器名/容器ID 提交后的镜像名:Tag</span><br></pre></td></tr></table></figure><h2 id="docker-修改默认根目录"><a href="#docker-修改默认根目录" class="headerlink" title="docker 修改默认根目录"></a>docker 修改默认根目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br><span class="line">systemctl stop docker</span><br><span class="line">mkdir -p /newdisk/docker</span><br><span class="line">mv /var/lib/docker /newdisk/docker</span><br><span class="line">ln -s /newdisk/docker /var/lib/docker</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl status docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure><hr><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​docker-compose version</span><br></pre></td></tr></table></figure><h2 id="使用docker-compose启动容器，根据yml创建service"><a href="#使用docker-compose启动容器，根据yml创建service" class="headerlink" title="使用docker-compose启动容器，根据yml创建service"></a>使用docker-compose启动容器，根据yml创建service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><h2 id="使用docker-compose后台启动"><a href="#使用docker-compose后台启动" class="headerlink" title="使用docker-compose后台启动"></a>使用docker-compose后台启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="​指定yaml启动"><a href="#​指定yaml启动" class="headerlink" title="​指定yaml启动"></a>​指定yaml启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -f xxx.yaml</span><br></pre></td></tr></table></figure><h2 id="查看启动成功的service"><a href="#查看启动成功的service" class="headerlink" title="查看启动成功的service"></a>查看启动成功的service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​docker-compose ps</span><br></pre></td></tr></table></figure><h2 id="查看images"><a href="#查看images" class="headerlink" title="查看images"></a>查看images</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose images</span><br></pre></td></tr></table></figure><h2 id="停止-x2F-启动service"><a href="#停止-x2F-启动service" class="headerlink" title="停止&#x2F;启动service"></a>停止&#x2F;启动service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop/start</span><br></pre></td></tr></table></figure><h2 id="删除service-同时会删除掉network和volume"><a href="#删除service-同时会删除掉network和volume" class="headerlink" title="删除service[同时会删除掉network和volume]"></a>删除service[同时会删除掉network和volume]</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​docker-compose down</span><br></pre></td></tr></table></figure><h2 id="进入到某个service"><a href="#进入到某个service" class="headerlink" title="进入到某个service"></a>进入到某个service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​docker-compose exec ypn-web sh</span><br></pre></td></tr></table></figure><h2 id="如果前端代码有更新-可以使用此命令重新打包镜像"><a href="#如果前端代码有更新-可以使用此命令重新打包镜像" class="headerlink" title="如果前端代码有更新,可以使用此命令重新打包镜像"></a>如果前端代码有更新,可以使用此命令重新打包镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build ypn-web</span><br></pre></td></tr></table></figure><h2 id="服务都启动成功后-使用此命令行可清除none镜像"><a href="#服务都启动成功后-使用此命令行可清除none镜像" class="headerlink" title="服务都启动成功后,使用此命令行可清除none镜像"></a>服务都启动成功后,使用此命令行可清除none镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker system prune</span><br></pre></td></tr></table></figure><h2 id="查询容器运行日志"><a href="#查询容器运行日志" class="headerlink" title="查询容器运行日志"></a>查询容器运行日志</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs ypn-web -f --tail 100</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker下载安装</title>
      <link href="/2022/08/27/Docker%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2022/08/27/Docker%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-8-安装"><a href="#CentOS-8-安装" class="headerlink" title="CentOS 8 安装"></a>CentOS 8 安装</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>本次系统使用 CentOS 8 ，因官方已停用 CentOS8 的镜像，故需先更新源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi CentOS-Linux-BaseOS.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[baseos]</span><br><span class="line">name=CentOS Linux $releasever - BaseOS</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra</span><br><span class="line">#baseurl=http://mirror.centos.org/$contentdir/$releasever/BaseOS/$basearch/os/</span><br><span class="line">baseurl=https://vault.centos.org/centos/$releasever/BaseOS/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi CentOS-Linux-AppStream.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[appstream]</span><br><span class="line">name=CentOS Linux $releasever - AppStream</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra</span><br><span class="line">#baseurl=http://mirror.centos.org/$contentdir/$releasever/AppStream/$basearch/os/</span><br><span class="line">baseurl=https://vault.centos.org/centos/$releasever/AppStream/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure><h2 id="在线安装-docker"><a href="#在线安装-docker" class="headerlink" title="在线安装 docker"></a>在线安装 docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/containerd.io-1.6.8-3.1.el8.x86_64.rpm</span><br></pre></td></tr></table></figure><blockquote><p>更新 container.io 包, 否则可能会报 <code>package docker-ce-3:19.03.13-3.el7.x86_64 requires containerd.io &gt;= 1.2.2-3, ...</code>的错，可在 <a href="https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/">https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/</a> 下找最新版安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce -y</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker-compose"></a>安装 docker-compose</h2><p>方法一：使用 pip 安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure><p>方法二：直接下载安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h1 id="openSUSE-Leap-15-4安装"><a href="#openSUSE-Leap-15-4安装" class="headerlink" title="openSUSE Leap 15.4安装"></a>openSUSE Leap 15.4安装</h1><h2 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h2><ol><li>更新系统<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper refresh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper update -y</span><br></pre></td></tr></table></figure></li><li>更新完成后，最好重新启动系统<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></li></ol><h2 id="在线安装-docker-1"><a href="#在线安装-docker-1" class="headerlink" title="在线安装 docker"></a>在线安装 docker</h2><ol><li>使用 zypper 命令安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install -y docker</span><br></pre></td></tr></table></figure></li><li>启动 Docker 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker.service</span><br></pre></td></tr></table></figure></li><li>设置 Docker 开机自启<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker.service</span><br></pre></td></tr></table></figure></li><li>验证<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status docker</span><br><span class="line">sudo docker --version</span><br></pre></td></tr></table></figure></li></ol><h2 id="在线安装-docker-compose"><a href="#在线安装-docker-compose" class="headerlink" title="在线安装 docker-compose"></a>在线安装 docker-compose</h2><ol><li>使用 zypper 命令安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install -y docker-compose</span><br></pre></td></tr></table></figure></li><li>验证<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose --version</span><br></pre></td></tr></table></figure></li></ol><h1 id="国内镜像配置"><a href="#国内镜像配置" class="headerlink" title="国内镜像配置"></a>国内镜像配置</h1><ol><li>编辑 <code>/etc/docker/daemon.json</code> 加入下列配置：<blockquote><p>如果有阿里云 docker hub mirror 账号的，可以将 <a href="https://registry.cn-hangzhou.aliyuncs.com/">https://registry.cn-hangzhou.aliyuncs.com/</a> 替换成自己的 https:&#x2F;&#x2F;&lt;你的ID&gt;.mirror.aliyuncs.com</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">    &quot;https://registry.cn-hangzhou.aliyuncs.com/&quot;,</span><br><span class="line">    &quot;http://f1361db2.m.daocloud.io&quot;,</span><br><span class="line">    &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">    &quot;https://mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">    &quot;http://hub-mirror.c.163.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重启 docker<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUSE Linux配置Zypper的源</title>
      <link href="/2022/08/02/SUSE-Linux%E9%85%8D%E7%BD%AEZypper%E7%9A%84%E6%BA%90/"/>
      <url>/2022/08/02/SUSE-Linux%E9%85%8D%E7%BD%AEZypper%E7%9A%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="zypper配置本地源"><a href="#zypper配置本地源" class="headerlink" title="zypper配置本地源"></a>zypper配置本地源</h1><ol><li><p>将ISO文件上传至云服务器内部。</p></li><li><p>ISO入源:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper addrepo iso:/?iso=/opt/iso/SLE-12-Server-DVD-x86_64-GM-DVD1.iso DVDISO</span><br></pre></td></tr></table></figure><blockquote><p>其中: </p><ul><li>&#x2F;opt&#x2F;iso&#x2F;SLE-12-Server-DVD-x86_64-GM-DVD1.iso 为ISO文件所在置。</li><li>DVDISO 是这个源的别名。</li></ul></blockquote></li><li><p>查看源是否添加成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper repos</span><br></pre></td></tr></table></figure></li><li><p>刷新源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper refresh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx下载和安装</title>
      <link href="/2022/08/01/Nginx%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>/2022/08/01/Nginx%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-下源码安装"><a href="#Linux-下源码安装" class="headerlink" title="Linux 下源码安装"></a>Linux 下源码安装</h1><blockquote><p>在linux下安装nginx，首先需要安装 gcc-c++ 编译器，然后安装nginx依赖的 pcre 和 zlib 包，最后安装nginx即可。</p></blockquote><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><blockquote><p>无网络情况下，可下载安装包，上传到服务器，进行编译安装 <code>./configure</code> <code>make</code> <code>make install</code></p></blockquote><ul><li>先安装gcc-c++编译器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum/zypper install gcc-c++</span><br></pre></td></tr></table></figure>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum/zypper install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li>再安装pcre包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum/zypper install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li><li>再安装zlib包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum/zypper install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.18.0</span><br></pre></td></tr></table></figure><p>默认安装路径为 <code>/usr/local/nginx</code> ，也可使用参数prefix重新指定安装路径 <code> --prefix=/usr/local/nginx</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><p>修改配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>例如下面的配置，将本地端口8000向外转发为端口80，在 <code>server</code> 里增加下面配置：</p><pre><code>    listen       80;    server_name  localhost;    #charset koi8-r;    #access_log  logs/host.access.log  main;    location / &#123;       #root   html;       #index  index.html index.htm;       proxy_pass http://127.0.0.1:8000; #gunicorn       proxy_set_header Host $host;       proxy_set_header X-Real-IP $remote_addr;       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    &#125;    location /static &#123;       alias /usr/local/cam/statics; # your Django project&#39;s static files - amend as required    &#125;</code></pre><h3 id="检查nginx配置"><a href="#检查nginx配置" class="headerlink" title="检查nginx配置"></a>检查nginx配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx -t</span><br></pre></td></tr></table></figure><p>正常情况下输出nginx的配置文件路径，及配置校验成功提示：</p><pre><code>nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is oknginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</code></pre><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br></pre></td></tr></table></figure><blockquote><p>启动：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx<br>停止&#x2F;重新加载：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s stop(quit、reload)<br>验证配置文件是否合法：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -t<br>命令帮助：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -h</p></blockquote><h2 id="创建nginx服务"><a href="#创建nginx服务" class="headerlink" title="创建nginx服务"></a>创建nginx服务</h2><p>建立服务文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><p>加入下面内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx - high performance web server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><blockquote><p>文件内容解释: [Unit]: 服务的说明<br>Description:描述服务<br>After:描述服务类别<br>[Service]服务运行参数的设置<br>Type&#x3D;forking是后台运行的形式<br>ExecStart为服务的具体运行命令<br>ExecReload为重启命令<br>ExecStop为停止命令<br>PrivateTmp&#x3D;True表示给服务分配独立的临时空间<br>注意：启动、重启、停止命令全部要求使用绝对路径<br>[Install]服务安装的相关设置，可设置为多用户</p></blockquote><p>使服务文件生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><blockquote><p>如果启动服务失败，则以754的权限保存在目录：<br>Chmod +754 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service</p></blockquote><p>启动nginx服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><p>停止nginx服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop nginx.service</span><br></pre></td></tr></table></figure><blockquote><p><a href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/">其它服务命令参考</a></p></blockquote><hr><h1 id="Open-SUSE-下安装"><a href="#Open-SUSE-下安装" class="headerlink" title="Open SUSE 下安装"></a>Open SUSE 下安装</h1><p>有两种安装方法：</p><ul><li>使用 YAST 工具界面安装</li><li>使用 zypper 命令 <code>zypper in nginx</code> 安装</li></ul><h2 id="检查nginx"><a href="#检查nginx" class="headerlink" title="检查nginx"></a>检查nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><p>如果输出了Nginx的版本号说明安装成功了。</p><h2 id="启动nginx-1"><a href="#启动nginx-1" class="headerlink" title="启动nginx"></a>启动nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><h3 id="查找默认的配置文件位置"><a href="#查找默认的配置文件位置" class="headerlink" title="查找默认的配置文件位置"></a>查找默认的配置文件位置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><h3 id="加载指定的配置文件"><a href="#加载指定的配置文件" class="headerlink" title="加载指定的配置文件"></a>加载指定的配置文件</h3><p>nginx 启动时会默认加载 <code>/etc/nginx/nginx.cnf</code> 下的配置文件进行启动，如果你想加载其他的配置文件，可以使用 -c 指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="停止nginx"><a href="#停止nginx" class="headerlink" title="停止nginx"></a>停止nginx</h2><p>nginx 停止有两种方式：快速停止和平滑停止<br>快速停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure><p>平滑停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s quit</span><br></pre></td></tr></table></figure><blockquote><p>平滑停止会等待所有的工作进程处理完所有的请求后，再进行停止，不是强制停止。</p></blockquote><h2 id="重载配置文件"><a href="#重载配置文件" class="headerlink" title="重载配置文件"></a>重载配置文件</h2><p>nginx 支持配置文件的热修改，无需重启服务也可重新加载配置文件，使用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>主进程接收到上述指令后，首先会检查配置文件的语法是否正确，确认无误后，会开启新的工作进程，然后向旧的工作进程发送关闭的指令，旧的工作进程收到指令后，并非立即停止，而是处理完当前的请求后再自行停止。通过这个步骤，来完成对配置文件的重新载入。</p></blockquote><h2 id="添加到开机自启动"><a href="#添加到开机自启动" class="headerlink" title="添加到开机自启动"></a>添加到开机自启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure><hr><h1 id="查看-Nginx-的运行状态"><a href="#查看-Nginx-的运行状态" class="headerlink" title="查看 Nginx 的运行状态"></a>查看 Nginx 的运行状态</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep nginx</span><br></pre></td></tr></table></figure><p>如果打出多个进程信息，表示nginx 已经成功启动，包含一个主进程（master process）和几个工作进程（work process）。<br>如果没有进程信息，表示 nginx 未成功启动。</p><blockquote><p>从容停止 kill -QUIT 主进程号<br>快速停止 kill -TERM 主进程号<br>强制停止 kill -9 nginx</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown与GitBook配合快速制作电子书</title>
      <link href="/2022/05/31/Markdown%E4%B8%8EGitBook%E9%85%8D%E5%90%88%E5%BF%AB%E9%80%9F%E5%88%B6%E4%BD%9C%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
      <url>/2022/05/31/Markdown%E4%B8%8EGitBook%E9%85%8D%E5%90%88%E5%BF%AB%E9%80%9F%E5%88%B6%E4%BD%9C%E7%94%B5%E5%AD%90%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h2><blockquote><p>注意Nodejs的版本和GitBook的版本要兼容匹配。</p></blockquote><h2 id="安装GitBook"><a href="#安装GitBook" class="headerlink" title="安装GitBook"></a>安装GitBook</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-cli -g</span><br></pre></td></tr></table></figure><blockquote><p>如果npm命令安装较慢，可更换淘宝的源再试。</p></blockquote><p>安装完成后，通过下面命令检查是否安装成功，检查时间较长。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook -V</span><br></pre></td></tr></table></figure><h2 id="GitBook基本使用"><a href="#GitBook基本使用" class="headerlink" title="GitBook基本使用"></a>GitBook基本使用</h2><h3 id="GitBook文档目录结构"><a href="#GitBook文档目录结构" class="headerlink" title="GitBook文档目录结构"></a>GitBook文档目录结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">|- book.json    //电子书的配置文件</span><br><span class="line">|- README.md    //电子书的主要说明文件</span><br><span class="line">|- SUMMARY.md   //电子书的目录</span><br><span class="line">|- chapter-1/   //电子书的章节1文件夹(chapter-1是文件夹名称，可以自定义)</span><br><span class="line">    |- README.md    //章节1的说明文件</span><br><span class="line">    |- 文档1.md     //章节下面的小节1</span><br><span class="line">    |- 文档2.md     //章节下面的小节2</span><br><span class="line">|- chapter-2/   //电子书的章节2文件夹</span><br><span class="line">    |- README.md    //章节2的说明文件</span><br><span class="line">    |- 文档1.md     //章节下面的小节1</span><br><span class="line">    |- 文档2.md     //章节下面的小节2</span><br></pre></td></tr></table></figure><h3 id="GitBook初始化"><a href="#GitBook初始化" class="headerlink" title="GitBook初始化"></a>GitBook初始化</h3><p>新建一个文件夹如gitbook_test，使用cd命令进入到该文件夹下，在该文件夹下进行初始化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook init</span><br></pre></td></tr></table></figure><p>初始化完成后，会自动在目录下生成两个文件，一个是主要说明文件，一个是目录文件。</p><h3 id="接下来编写目录"><a href="#接下来编写目录" class="headerlink" title="接下来编写目录"></a>接下来编写目录</h3><p>打开SUMMARY.md文件编写目录，格式如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Summary</span><br><span class="line">* [引言](README.md)</span><br><span class="line">* [目录1](chapter-1/README.md)</span><br><span class="line">    * [页面1](chapter-1/1.md)</span><br><span class="line">    * [页面2](chapter-1/2.md)</span><br><span class="line">    * [页面3](chapter-1/3.md)</span><br><span class="line">    * [页面4](chapter-1/4.md)</span><br><span class="line">* [目录2](chapter-2/README.md)</span><br><span class="line">    * [页面1](chapter-2/1.md)</span><br><span class="line">    * [页面2](chapter-2/2.md)</span><br><span class="line">    * [页面3](chapter-2/3.md)</span><br><span class="line">    * [页面4](chapter-2/4.md)</span><br></pre></td></tr></table></figure><blockquote><p>建议目录文件夹和页面文件名称全部使用英文或数字，保证在发布到服务器时能正常使用。</p></blockquote><h3 id="生成各小节md文件"><a href="#生成各小节md文件" class="headerlink" title="生成各小节md文件"></a>生成各小节md文件</h3><p>编写好目录之后，在gitbook_test文件夹下，再次使用gitbook init命令生成目录及目录下的各小节md文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook init</span><br></pre></td></tr></table></figure><h3 id="编译生成静态网页"><a href="#编译生成静态网页" class="headerlink" title="编译生成静态网页"></a>编译生成静态网页</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook build</span><br></pre></td></tr></table></figure><p>将会在gitbook_test目录下生成一个_book文件夹，这就是我们的一个静态站点。</p><h3 id="编译并预览静态网页"><a href="#编译并预览静态网页" class="headerlink" title="编译并预览静态网页"></a>编译并预览静态网页</h3><p>使用下面命令启动预览服务，在浏览器中访问localhost:4000进行预览。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook serve</span><br></pre></td></tr></table></figure><h2 id="Gitbook配置文件"><a href="#Gitbook配置文件" class="headerlink" title="Gitbook配置文件"></a>Gitbook配置文件</h2><p>Gitbook有一个配置文件book.json（一定要放在根目录gitbook_test下），在该配置文件中可以配置各种插件，来美化页面的显示和交互效果。下面是一个常用配置和插件，可直接粘贴使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;帮助手册&quot;,</span><br><span class="line">    &quot;description&quot;: &quot;遇到问题，先冷静思考！&quot;,</span><br><span class="line">    &quot;author&quot;: &quot;昜丿捺&quot;,</span><br><span class="line">    &quot;gitbook&quot;: &quot;3.2.3&quot;,</span><br><span class="line">    &quot;language&quot;: &quot;zh-hans&quot;,</span><br><span class="line">    &quot;output.name&quot;: &quot;site&quot;,</span><br><span class="line">    &quot;root&quot;: &quot;.&quot;,</span><br><span class="line">    &quot;plugins&quot;: [</span><br><span class="line">        &quot;-lunr&quot;,&quot;-search&quot;,</span><br><span class="line">        &quot;-sharing&quot;,</span><br><span class="line">        &quot;-default-theme&quot;,</span><br><span class="line">        &quot;search-pro&quot;,</span><br><span class="line">        &quot;theme-comscore&quot;,</span><br><span class="line">        &quot;splitter&quot;,</span><br><span class="line">        &quot;tbfed-pagefooter&quot;,</span><br><span class="line">        &quot;expandable-chapters&quot;,</span><br><span class="line">        &quot;hide-element&quot;,</span><br><span class="line">        &quot;custom-favicon&quot;,</span><br><span class="line">        &quot;-highlight&quot;,&quot;prism&quot;,&quot;prism-themes&quot;,</span><br><span class="line">        &quot;code&quot;,</span><br><span class="line">        &quot;sectionx&quot;,</span><br><span class="line">        &quot;flexible-alerts&quot;,</span><br><span class="line">        &quot;ancre-navigation&quot;</span><br><span class="line">    ],</span><br><span class="line">    </span><br><span class="line">    &quot;pluginsConfig&quot;: &#123;</span><br><span class="line">        &quot;tbfed-pagefooter&quot;: &#123;</span><br><span class="line">            &quot;copyright&quot;:&quot;Copyright©2022 昜丿捺&quot;,</span><br><span class="line">            &quot;modify_label&quot;: &quot;该页面修订时间：&quot;,</span><br><span class="line">            &quot;modify_format&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        &quot;hide-element&quot;: &#123;</span><br><span class="line">            &quot;elements&quot;: [&quot;.gitbook-link&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">                </span><br><span class="line">        &quot;favicon&quot;: &quot;favicon.ico&quot;,</span><br><span class="line">        </span><br><span class="line">        &quot;pdf&quot;: &#123;</span><br><span class="line">            &quot;pageNumbers&quot;: true,</span><br><span class="line">            &quot;fontFamily&quot;: &quot;Arial&quot;,</span><br><span class="line">            &quot;fontSize&quot;: 12,</span><br><span class="line">            &quot;paperSize&quot;: &quot;a4&quot;,</span><br><span class="line">            &quot;margin&quot;: &#123;</span><br><span class="line">                &quot;right&quot;: 62,</span><br><span class="line">                &quot;left&quot;: 62,</span><br><span class="line">                &quot;top&quot;: 56,</span><br><span class="line">                &quot;bottom&quot;: 56</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;page-toc-button&quot;: &#123;</span><br><span class="line">            &quot;maxTocDepth&quot;: 2,</span><br><span class="line">            &quot;minTocSize&quot;: 2</span><br><span class="line">           &#125;,</span><br><span class="line">       &quot;prism&quot;:&#123;</span><br><span class="line">            &quot;css&quot;:[</span><br><span class="line">                &quot;prism-themes/themes/prism-darcula.css&quot;</span><br><span class="line">            ]</span><br><span class="line">       &#125;,</span><br><span class="line">       &quot;sectionx&quot;: &#123;</span><br><span class="line">          &quot;tag&quot;: &quot;b&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &quot;styles&quot;: &#123;</span><br><span class="line">        &quot;website&quot;: &quot;styles/website.css&quot;,</span><br><span class="line">        &quot;ebook&quot;: &quot;styles/ebook.css&quot;,</span><br><span class="line">        &quot;pdf&quot;: &quot;styles/pdf.css&quot;,</span><br><span class="line">        &quot;mobi&quot;: &quot;styles/mobi.css&quot;,</span><br><span class="line">        &quot;epub&quot;: &quot;styles/epub.css&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写好配置文件之后，需要执行下面命令来安装插件，所需时间较长。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态网站 </tag>
            
            <tag> gitbook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提倡者</title>
      <link href="/2022/04/09/%E6%8F%90%E5%80%A1%E8%80%85/"/>
      <url>/2022/04/09/%E6%8F%90%E5%80%A1%E8%80%85/</url>
      
        <content type="html"><![CDATA[<h2 id="人格类型"><a href="#人格类型" class="headerlink" title="人格类型"></a>人格类型</h2><ul><li>分析家：建筑师 | 逻辑学家 | 指挥官 | 辩论家</li><li>外交家：<strong>提倡者</strong> | 调停者 | 主人公 | 竞选者</li><li>守护者：物流师 | 守卫者 | 总经理 | 执政官</li><li>探险家：鉴赏家 | 探险家 | 企业家 | 表演者</li></ul><p><strong>提倡者 INFJ-A ：</strong></p><ul><li>精神：42%外向型，<strong>58%内向型</strong></li><li>精力：<strong>53%直觉型</strong>，47%现实型</li><li>本性：32%逻辑型，<strong>68%感受型</strong></li><li>对策：<strong>81%计划型</strong>，19%展望型</li><li>特性：<strong>56%坚决型</strong>，44%谨慎型</li></ul><h2 id="“提倡者”-人格"><a href="#“提倡者”-人格" class="headerlink" title="“提倡者” 人格"></a>“提倡者” 人格</h2><p>提倡者人格类型的人非常稀少，只有不到 1% 的人口属于这种类型，但他们对世界的贡献不容忽视。 他们具有与生俱来的理想主义和道德感，但真正令他们与其他理想主义人格类型区分开来的是，他们果断决绝。他们不是懒散的空想家，而是能脚踏实地完成目标，留下深远的积极影响的人。</p><blockquote><p>他们把帮助他人作为生活的意义，虽然你会在营救活动和慈善工作中发现他们的身影，但他们的真正理想是从根本上解决问题，让人们一开始就不会陷入困境。</p></blockquote><h2 id="互帮互助"><a href="#互帮互助" class="headerlink" title="互帮互助"></a>互帮互助</h2><p>“提倡者”们常常集各种特质于一身： 轻言细语却很有看法，为自己的信念不懈奋斗。 他们坚决果断，但不会把精力用在一己私利上 – 提倡者们行事风格有创造力，富有想象力，充满信念和感性，他们并非为了创造优势，而是建立平衡。 平等主义和因果报应是对他们很有吸引力的思想，他们相信用爱和同情来感化暴君的心是帮助这个世界最好的方式。</p><blockquote><p>每个人都需要做出选择，是走在富有创造力的利他主义之光中，还是具有破坏性的自私自利的黑暗中。</p></blockquote><p>对提倡者人格类型的人来说，很容易与他人建立联系，他们的话语温暖感性有人情味，而非纯粹的逻辑与事实。 他们的同事和朋友把他们当作安静的外向类型是不无道理的，但他们要知道“提倡者”们需要独处的时间来养精蓄锐，所以对他们的突然离开不要太过惊讶。 “提倡者”们很在乎别人的感受，也希望被以同样的方式对待 — 这有时需要给他们留几天独处的时间。</p><h2 id="生命不息，奋斗不止"><a href="#生命不息，奋斗不止" class="headerlink" title="生命不息，奋斗不止"></a>生命不息，奋斗不止</h2><p>最重要的是，倡导者人格类型的人要记得照顾好自己。 他们对信念的激情很可能超出自己所能承受的范围，一旦热情失控，他们很可能发现自己处于劳累，不健康和紧张的状态。 这在“提倡者”们对抗冲突和批评的时候尤其明显，他们的感性迫使他们尽一切可能逃避那些人身攻击，但是当情况不可避免时，他们会用很不理性且无益的方式反抗。</p><p>在“提倡者”们看来，世界充满了不必要的不平等。 没有任何其他类型比他们更适合发起一场或大或小的纠错运动。 他们只需要记得，在他们关心这个世界的同时，别忘了关照一下自己。</p><blockquote><p><a href="https://www.16personalities.com/ch">16Personalities</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git生成SSH公钥</title>
      <link href="/2021/11/10/Git%E7%94%9F%E6%88%90SSH%E5%85%AC%E9%92%A5/"/>
      <url>/2021/11/10/Git%E7%94%9F%E6%88%90SSH%E5%85%AC%E9%92%A5/</url>
      
        <content type="html"><![CDATA[<p>一般情况下执行第1、3、4步即可。</p><ol><li><p>生成ssh-key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p> 新版本Git需要使用Ed25519加密：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t Ed25519 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>添加id_rsa</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p> 如果出现错误：Could not open a connection to your authentication agent<br> 先执行命令 <code>ssh-agent bash</code> ，再重新执行上面命令即可。</p></li><li><p>查看id_rsa.pub，复制后添加公钥到Gitee或Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>确认并添加主机到本机SSH可信列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><p> 若返回 Hi XXX! You’ve successfully authenticated, but Gitee.com does not provide shell access. 内容，则证明添加成功。<br> 若出现错误 <code>git@gitee.com: Permission denied (publickey)</code>，则先通过下面命令定位问题：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -v git@gitee.com</span><br></pre></td></tr></table></figure><p> 找到出现错误的地方，有针对性解决。</p></li></ol><p>参考文档：<br><a href="https://www.jianshu.com/p/b2ff4e11568c">https://www.jianshu.com/p/b2ff4e11568c</a><br><a href="https://blog.csdn.net/argleary/article/details/100638560">https://blog.csdn.net/argleary/article/details/100638560</a><br><a href="https://blog.csdn.net/sunnypotter/article/details/18948053">https://blog.csdn.net/sunnypotter/article/details/18948053</a><br><a href="https://zhuanlan.zhihu.com/p/419745598">https://zhuanlan.zhihu.com/p/419745598</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python之kivy开发APP</title>
      <link href="/2021/06/27/Python%E4%B9%8Bkivy%E5%BC%80%E5%8F%91APP/"/>
      <url>/2021/06/27/Python%E4%B9%8Bkivy%E5%BC%80%E5%8F%91APP/</url>
      
        <content type="html"><![CDATA[<h1 id="安装kivy"><a href="#安装kivy" class="headerlink" title="安装kivy"></a>安装kivy</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install docutils pygments pypiwin32 kivy.deps.sdl2 kivy.deps.glew</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install kivy.deps.gstreamer</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install kivy</span><br></pre></td></tr></table></figure><p>安装kivy官方示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install kivy_examples</span><br></pre></td></tr></table></figure><blockquote><p>如果下载速度慢，请加入代理，使用清华镜像：<code> -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p></blockquote><h1 id="验证kivy"><a href="#验证kivy" class="headerlink" title="验证kivy"></a>验证kivy</h1><ol><li><p>创建文件<code>main.py</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import kivy</span><br><span class="line">from kivy.app import App</span><br><span class="line">from kivy.core.text import LabelBase</span><br><span class="line">from kivy.resources import resource_add_path, resource_find</span><br><span class="line">from kivy.uix.label import Label  # 标签控件</span><br><span class="line">from kivy.uix.floatlayout import FloatLayout</span><br><span class="line">from kivy.uix.gridlayout import GridLayout</span><br><span class="line"></span><br><span class="line"># 解决中文乱码问题</span><br><span class="line"># 引入资源目录,如 fonts 目录位于项目根目录下，写相对路径(不要写绝对路径)相当于告诉kivy　HarmonyOS_Sans_SC_Regular.ttf 字体位于 fonts 目录中</span><br><span class="line">resource_add_path(os.path.abspath(&#x27;./fonts&#x27;))</span><br><span class="line"># 替换kivy中的默认字体，使用我们的新字体</span><br><span class="line">LabelBase.register(&#x27;Roboto&#x27;, &#x27;HarmonyOS_Sans_SC_Regular.ttf&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Home(GridLayout):</span><br><span class="line">    def __init__(self, **kwargs):</span><br><span class="line">        super(Home, self).__init__(**kwargs)</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def Go(self):</span><br><span class="line">        print(&quot;Go&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MainApp(App):</span><br><span class="line">    def __init__(self, **kwargs):</span><br><span class="line">        super(MainApp, self).__init__(**kwargs)</span><br><span class="line">        self.title = &#x27;昜丿捺&#x27;  # 修改窗口标题</span><br><span class="line"></span><br><span class="line">    def build(self):</span><br><span class="line">        # return Label(text=&quot;Hello World，我是昜丿捺&quot;)</span><br><span class="line">        return Home()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    MainApp().run()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建ui文件<code>main.kv</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;Home&gt;:</span><br><span class="line">    padding:20</span><br><span class="line">    spacing:20</span><br><span class="line">    cols:3</span><br><span class="line">    rows:10</span><br><span class="line">    canvas:</span><br><span class="line">        Color:</span><br><span class="line">            rgba:[43,43,43,0]</span><br><span class="line">        Rectangle:</span><br><span class="line">            size:self.size</span><br><span class="line">            pos:self.pos</span><br><span class="line"></span><br><span class="line">    col_force_default:True</span><br><span class="line">    col_default_width: 130</span><br><span class="line">    row_default_height: 50</span><br><span class="line"></span><br><span class="line">    Label:</span><br><span class="line">        text: &#x27;Hello, 我是首页!&#x27;</span><br><span class="line">    TextInput:</span><br><span class="line">    Button:</span><br><span class="line">        text: &#x27;Go&#x27;</span><br></pre></td></tr></table></figure></li><li><p>最后，运行<code>main.py</code>，出现界面表示kivy安装成功。</p></li></ol><h1 id="打包APP"><a href="#打包APP" class="headerlink" title="打包APP"></a>打包APP</h1><p>下载官网提供的已配置好环境的虚拟机镜像，在本地安装打开后，进行打包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildozer init</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildozer android debug</span><br></pre></td></tr></table></figure><h2 id="支持中文"><a href="#支持中文" class="headerlink" title="支持中文"></a>支持中文</h2><ol><li>Ubuntu必须部署kivy环境，并且运行python3 main.py 能正常显示中文字符窗口<br>在Ubuntu安装中文字体<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/share/fonts/ttf</span><br><span class="line">sudo cp ~/ttf/* /usr/share/fonts/ttf</span><br><span class="line">cd /usr/share/fonts/ttf</span><br><span class="line">sudo chmod 744 *</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo fc-cache -f -v</span><br></pre></td></tr></table></figure></li><li>配置<code>buildozer.spec</code>文件</li></ol><ul><li>更改title值为app名字，不要过长和空格；</li><li>更改source.include_exts值，增加ttf类型。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>版本号命名规范及原则</title>
      <link href="/2021/05/31/%E7%89%88%E6%9C%AC%E5%8F%B7%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%E5%8F%8A%E5%8E%9F%E5%88%99/"/>
      <url>/2021/05/31/%E7%89%88%E6%9C%AC%E5%8F%B7%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%E5%8F%8A%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><p><strong><code>主版本号</code>.<code>子版本号</code>.<code>修正版本号</code>.<code>编译版本号</code></strong></p><h1 id="命名原则"><a href="#命名原则" class="headerlink" title="命名原则"></a>命名原则</h1><ol><li>项目<strong>初版</strong>时，版本号为<code>0.1.0</code>；</li><li>当项目在进行了<strong>局部修改或bug修正</strong>时，主版本号和子版本号都不变，修正版本号加<code>1</code>；</li><li>当项目在原有的基础上<strong>增加了部分功能</strong>时，主版本号不变，子版本号加<code>1</code>，修正版本号复位为<code>0</code>；</li><li>当项目在进行了<strong>重大修改或局部修正累积较多</strong>，而导致项目整体发生全局变化时，主版本号加<code>1</code>，子版本号和修正版本号复位为<code>0</code>；</li><li>编译版本号一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制。</li></ol><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><ul><li>主版本号改动：一期项目用<code>0.1.0</code>；二期项目用<code>1.0.0</code>；三期项目用<code>2.0.0</code></li><li>子版本号改动：增加了权限管理功能模块，版本号由<code>0.1.3</code>改为<code>0.2.0</code></li><li>修正版本号改动：修正了一个页面显示字符串，版本号由<code>0.1.3</code>改为<code>0.1.4</code></li></ul><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>还可以在版本号后面加入<code>Alpha、Beta、Gamma、Current、RC (Release Candidate)、Release、Stable</code>等后缀 , 在这些后缀后面也可以加入 1 位数字的版本号。</p><ul><li>alphal 内部测试版</li><li>beta 外部测试版</li><li>demo 演示版</li><li>Enhance 增强版或者加强版 属于正式版</li><li>Free 自由版</li><li>Full version 完全版 属于正式版</li><li>shareware 共享版</li><li>Release 发行版 有时间限制</li><li>Upgrade 升级版</li><li>Retail 零售版</li><li>Cardware 属共享软件的一种，只要给作者回复一封电邮或明信片即可（有的作者并由此提供注册码等），目前这种形式已不多见</li><li>Plus 属增强版，不过这种大部分是在程序界面及多媒体功能上增强</li><li>Preview 预览版</li><li>Corporation &amp; Enterprise 企业版</li><li>Standard 标准版</li><li>Mini 迷你版也叫精简版只有最基本的功能</li><li>Premium 贵价版</li><li>Professional 专业版</li><li>Express 特别版</li><li>Deluxe 豪华版</li><li>Regged 已注册版</li><li>CN 简体中文版</li><li>CHT 繁体中文版</li><li>EN 英文版</li><li>Multilanguage 多语言版</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式用法</title>
      <link href="/2021/05/23/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/"/>
      <url>/2021/05/23/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>一个正则表达式就是由普通字符（例如字符 a 到 z）以及特殊字符（称为元字符）组成的文字模式。<br>   该模式描述在查找文字主体时待匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。<br>正则表达式的形式一般如：<code>/love/</code>，其中位于”&#x2F;“定界符之间的部分就是将要在目标对象中进行匹配的模式。用户只要把希望查找匹配对象的模式内容放入”&#x2F;“定界符之间即可。</p><h1 id="常用例子"><a href="#常用例子" class="headerlink" title="常用例子"></a>常用例子</h1><ol><li><p>匹配中文字符的正则表达式： [\u4e00-\u9fa5]</p></li><li><p>匹配双字节字符(包括汉字在内)：[^\x00-\xff]</p></li><li><p>应用：计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）<br>String.prototype.len&#x3D;function(){return this.replace([^\x00-\xff]&#x2F;g,”aa”).length;}</p></li><li><p>匹配空行的正则表达式：\n[\s| ]*\r</p></li><li><p>匹配HTML标记的正则表达式：&#x2F;&lt;(.<em>)&gt;.</em>&lt;/\1&gt;|&lt;(.*) /&gt;&#x2F;</p></li><li><p>匹配首尾空格的正则表达式：(^\s*)|(\s*$)</p></li><li><p>应用：javascript中没有像vbscript那样的trim函数，我们就可以利用这个表达式来实现，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String.prototype.trim = function()</span><br><span class="line">&#123;</span><br><span class="line">   return this.replace(/(^\s*)|(\s*$)/, &quot;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>利用正则表达式分解和转换IP地址：<br>下面是利用正则表达式匹配IP地址，并将IP地址转换成对应数值的Javascript程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function IP2V(ip)</span><br><span class="line">&#123;</span><br><span class="line">  re=/(\d+)\.(\d+)\.(\d+)\.(\d+)/g //匹配IP地址的正则表达式</span><br><span class="line">  if(re.test(ip))</span><br><span class="line">  &#123;</span><br><span class="line">    return RegExp.$1*Math.pow(255,3))+RegExp.$2*Math.pow(255,2))+RegExp.$3*255+RegExp.$4*1</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    throw new Error(&quot;Not a valid IP address!&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 不过上面的程序如果不用正则表达式，而直接用split函数来分解可能更简单，程序如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var ip=&quot;10.100.20.168&quot;</span><br><span class="line">ip=ip.split(&quot;.&quot;)</span><br><span class="line">alert(&quot;IP值是：&quot;+(ip[0]*255*255*255+ip[1]*255*255+ip[2]*255+ip[3]*1))</span><br></pre></td></tr></table></figure></li><li><p>匹配Email地址的正则表达式：\w+([-+.]\w+)*@\w+([-.]\w+)<em>.\w+([-.]\w+)</em></p></li><li><p>匹配网址URL的正则表达式：http:&#x2F;&#x2F;([\w-]+.)+[\w-]+(&#x2F;[\w- .&#x2F;?%&amp;&#x3D;]*)?</p></li><li><p>利用正则表达式去除字串中重复的字符的算法程序：[注：此程序不正确，原因见本贴回复]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var s=&quot;abacabefgeeii&quot;</span><br><span class="line">var s1=s.replace(/(.).*\1/g,&quot;$1&quot;)</span><br><span class="line">var re=new RegExp(&quot;[&quot;+s1+&quot;]&quot;,&quot;g&quot;)</span><br><span class="line">var s2=s.replace(re,&quot;&quot;)</span><br><span class="line">alert(s1+s2) //结果为：abcefgi</span><br></pre></td></tr></table></figure><p>思路是使用后向引用取出包括重复的字符，再以重复的字符建立第二个表达式，取到不重复的字符，两者串连。这个方法对于字符顺序有要求的字符串可能不适用。</p></li><li><p>利用正则表达式从URL地址中提取文件名的javascript程序，如下结果为page1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=&quot;http://www.9499.net/page1.htm&quot;</span><br><span class="line">s=s.replace(/(.*\/)&#123;0,&#125;([^\.]+).*/ig,&quot;$2&quot;)</span><br><span class="line">alert(s)</span><br></pre></td></tr></table></figure></li></ol><h1 id="利用正则表达式限制网页表单里的文本框输入内容"><a href="#利用正则表达式限制网页表单里的文本框输入内容" class="headerlink" title="利用正则表达式限制网页表单里的文本框输入内容"></a>利用正则表达式限制网页表单里的文本框输入内容</h1><ul><li><p>只能输入中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onkeyup=&quot;value=value.replace(/[^\u4E00-\u9FA5]/g,&#x27;&#x27;)&quot; onbeforepaste=&quot;clipboardData.setData(&#x27;text&#x27;,clipboardData.getData(&#x27;text&#x27;).replace(/[^\u4E00-\u9FA5]/g,&#x27;&#x27;))&quot;</span><br></pre></td></tr></table></figure></li><li><p>只能输入全角字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onkeyup=&quot;value=value.replace(/[^\uFF00-\uFFFF]/g,&#x27;&#x27;)&quot; onbeforepaste=&quot;clipboardData.setData(&#x27;text&#x27;,clipboardData.getData(&#x27;text&#x27;).replace(/[^\uFF00-\uFFFF]/g,&#x27;&#x27;))&quot;</span><br></pre></td></tr></table></figure></li><li><p>只能输入数字(整数：小数点不能输入)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onkeyup=&quot;value=value.replace(/[^\d]/g,&#x27;&#x27;) &quot;onbeforepaste=&quot;clipboardData.setData(&#x27;text&#x27;,clipboardData.getData(&#x27;text&#x27;).replace(/[^\d]/g,&#x27;&#x27;))&quot;</span><br></pre></td></tr></table></figure></li><li><p>只能输入数字和英文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onkeyup=&quot;value=value.replace(/[\W]/g,&#x27;&#x27;) &quot;onbeforepaste=&quot;clipboardData.setData(&#x27;text&#x27;,clipboardData.getData(&#x27;text&#x27;).replace(/[^\d]/g,&#x27;&#x27;))&quot;</span><br></pre></td></tr></table></figure></li><li><p>允许输入小数(两位小数)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&quot;value=value.replace(/^\D*(\d*(?:\.\d&#123;0,2&#125;)?).*$/g, &#x27;$1&#x27;)&quot; &gt; </span><br></pre></td></tr></table></figure></li><li><p>允许输入小数(一位小数)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&quot;value=value.replace(/^\D*(\d*(?:\.\d&#123;0,1&#125;)?).*$/g, &#x27;$1&#x27;)&quot; &gt;</span><br></pre></td></tr></table></figure></li><li><p>开头不能为0，且不能输入小数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&quot;value=value.replace(/[^\d]/g,&#x27;&#x27;).replace(/^0&#123;1,&#125;/g,&#x27;&#x27;)&quot; &gt;</span><br></pre></td></tr></table></figure><blockquote><p>部分内容转自ZhengWei(HY)</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>更换电脑后迁移环境</title>
      <link href="/2021/05/22/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E8%BF%81%E7%A7%BB%E7%8E%AF%E5%A2%83/"/>
      <url>/2021/05/22/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E8%BF%81%E7%A7%BB%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><ol><li><p>Wox<br>配置路径：C:\Users\Administrator\AppData\Roaming\Wox</p></li><li><p>FileGee<br>配置路径：C:\ProgramData\FileGee\CHS\Personal</p></li><li><p>DBeaver<br>配置路径：C:\Users\Administrator\AppData\Roaming\DBeaverData\workspace6</p></li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>Wox</li><li>DBeaver</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建禅道项目管理软件</title>
      <link href="/2021/03/09/%E6%90%AD%E5%BB%BA%E7%A6%85%E9%81%93%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/"/>
      <url>/2021/03/09/%E6%90%AD%E5%BB%BA%E7%A6%85%E9%81%93%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="安装禅道"><a href="#安装禅道" class="headerlink" title="安装禅道"></a>安装禅道</h1><blockquote><p>待补充</p></blockquote><span id="more"></span><h1 id="迁移禅道"><a href="#迁移禅道" class="headerlink" title="迁移禅道"></a>迁移禅道</h1><ol><li><p>如果以前安装禅道采用的是官方linux用一键安装包，则直接将目录进行压缩备份，再拷贝到新服务器，使用下面命令解压备份包，完成后可直接使用命令<code>/opt/zbox/zbox start</code>启动禅道服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf zbox.tar.gz -C /</span><br></pre></td></tr></table></figure></li><li><p>如果禅道有授权的话，IP地址需保持与以前一致，且还需修改MAC地址</p></li></ol><ul><li>查看MAC地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure></li><li>在文件 <code>/etc/sysconfig/network-scripts/ifcfg-ens32</code> 中增加一行:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MACADDR=00:04:a1:32:1d:3b</span><br></pre></td></tr></table></figure></li><li>关闭网卡设备<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ifconfig ens32 down</span><br></pre></td></tr></table></figure></li><li>修改MAC地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ifconfig ens32 hw ether 00:04:a1:32:1d:3b</span><br></pre></td></tr></table></figure></li><li>重启网卡<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ifconfig ens32 up</span><br></pre></td></tr></table></figure></li><li>最后重启服务器生效</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python之Django项目部署到Linux</title>
      <link href="/2021/03/02/Python%E4%B9%8BDjango%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0Linux/"/>
      <url>/2021/03/02/Python%E4%B9%8BDjango%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><ul><li>** Python 3.7.9 + Django 3.1.7 + Gunicorn + Nginx + CentOS8 **</li></ul><hr><h1 id="准备CentOS8"><a href="#准备CentOS8" class="headerlink" title="准备CentOS8"></a>准备CentOS8</h1><p>root用户下安装相应的编译工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall &quot;Development tools&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y libffi-devel zlib1g-dev</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib* -y</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre-devel</span><br></pre></td></tr></table></figure><p><a href="/2017/08/10/Linux%E6%95%B0%E6%8D%AE%E7%9B%98%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E5%8C%96/">如果需要磁盘分区和格式化参考</a></p><hr><h1 id="安装Python3"><a href="#安装Python3" class="headerlink" title="安装Python3"></a>安装Python3</h1><ol><li><p>下载和解压<br>下载安装包到路径：<code>/user/local/download</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.7.9.tgz</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.7.9</span><br></pre></td></tr></table></figure></li><li><p>配置<br>指定安装路径：<code>/usr/local/python3</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/python3 --enable-optimizations --with-ssl</span><br></pre></td></tr></table></figure><p> 参数解释：</p><ul><li>第一个指定安装的路径,不指定的话,安装过程中可能软件所需要的文件复制到其他不同目录,删除软件很不方便,复制软件也不方便.</li><li>第二个可以提高python10%-20%代码运行速度.</li><li>第三个是为了安装pip需要用到ssl,后面报错会有提到.</li></ul></li></ol><blockquote><p>Suse Linux无网络情况下如果缺少c或gcc，则按此<a href="https://blog.csdn.net/weixin_40861358/article/details/83960692">链接</a>安装。</p></blockquote><ol><li>编译<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></li><li>安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure></li></ol><h2 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip</span><br></pre></td></tr></table></figure><p>如果链接已存在，可删除已有链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/bin/python3</span><br><span class="line">rm -rf /usr/bin/pip3</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure><p>如果出现下面错误：</p><pre><code>localhost:/usr/local/download/Python-3.7.9 # python --versionCould not find platform dependent libraries &lt;exec_prefix&gt;Consider setting $PYTHONHOME to &lt;prefix&gt;[:&lt;exec_prefix&gt;]Python 3.7.9</code></pre><p>则在文件系统的etc目录下的profile文件中加入下面的语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PYTHONHOME=/usr/local/python3/lib/python3.7</span><br><span class="line">export PYTHONPATH=.:$PYTHONHOME:$PYTHONHOME/site-packages</span><br><span class="line">export PATH=$PATH:$PYTHONHOME:$PYTHONPATH</span><br></pre></td></tr></table></figure><p>如果出现下面错误：</p><pre><code>Python 3.7.9 (default, Mar  8 2021, 14:58:53) [GCC 7.5.0] on linuxType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.Traceback (most recent call last):  File &quot;/etc/pythonstart&quot;, line 7, in &lt;module&gt;    import readlineModuleNotFoundError: No module named &#39;readline&#39;</code></pre><p>则执行下面命令安装：</p><pre><code>zypper in zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</code></pre><h2 id="测试和安装pip3"><a href="#测试和安装pip3" class="headerlink" title="测试和安装pip3"></a>测试和安装pip3</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip -V</span><br></pre></td></tr></table></figure><p>有时安装完python后，缺少pip，可用以下方法尝试安装。</p><h3 id="方法一：安装setuptools"><a href="#方法一：安装setuptools" class="headerlink" title="方法一：安装setuptools"></a>方法一：安装setuptools</h3><ol><li>下载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate  https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26</span><br></pre></td></tr></table></figure></li><li>解压<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf setuptools-19.6.tar.gz</span><br></pre></td></tr></table></figure></li><li>进入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd setuptools-19.6/</span><br></pre></td></tr></table></figure></li><li>编译<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 setup.py build</span><br></pre></td></tr></table></figure></li><li>安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 setup.py install</span><br></pre></td></tr></table></figure></li><li>创建软连接<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure></li><li>查看pip3版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 -V</span><br></pre></td></tr></table></figure></li></ol><h3 id="方法二：get-pip-py"><a href="#方法二：get-pip-py" class="headerlink" title="方法二：get-pip.py"></a>方法二：get-pip.py</h3><ol><li>下载get-pip.py 文件<br><a href="https://pip.pypa.io/en/stable/installing/">https://pip.pypa.io/en/stable/installing/</a></li><li>python get-pip.py</li><li>重新安装python3<blockquote><p>如果缺少zlib，安装方法：<br>curl -O <a href="http://www.zlib.net/zlib-1.2.11.tar.gz">http://www.zlib.net/zlib-1.2.11.tar.gz</a><br>tar xvfz zlib-1.2.11.tar.gz<br>.&#x2F;configure<br>sudo make &amp;&amp; sudo make install</p></blockquote></li></ol><hr><h1 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==<span class="number">3.1</span><span class="number">.7</span></span><br></pre></td></tr></table></figure><blockquote><p>其它Django配置参考<a href="/2020/10/30/Python%E4%B9%8BDjango%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0Windows/">Python之Django项目部署到Windows</a></p></blockquote><h2 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h2><p>安装mysqlclient依赖</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><blockquote><p> 报错解决：<br><a href="https://blog.csdn.net/weixin_30416871/article/details/98711474">OSError: mysql_config not found</a><br><a href="https://blog.csdn.net/zw3413/article/details/105152826">从No match for argument: gcc-devel 到centos8 的dnf</a><br>安装时报错ModuleNotFoundError: No module named ‘_ctypes’的解决办法：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install libffi-devel</span><br></pre></td></tr></table></figure><p>然后重新编译安装python</p><h2 id="配置Oracle"><a href="#配置Oracle" class="headerlink" title="配置Oracle"></a>配置Oracle</h2><p>必需组件：cx_Oracle、Oracle Instant Client</p><h3 id="cx-Oracle-使用-pip-install-cx-Oracle-8-0-1-安装即可。"><a href="#cx-Oracle-使用-pip-install-cx-Oracle-8-0-1-安装即可。" class="headerlink" title="cx_Oracle 使用 pip install cx-Oracle==8.0.1 安装即可。"></a>cx_Oracle 使用 <code>pip install cx-Oracle==8.0.1</code> 安装即可。</h3><h3 id="Oracle-Instant-Client（Oracle提供的一个简单访问Oracle的组件）"><a href="#Oracle-Instant-Client（Oracle提供的一个简单访问Oracle的组件）" class="headerlink" title="Oracle Instant Client（Oracle提供的一个简单访问Oracle的组件）"></a>Oracle Instant Client（Oracle提供的一个简单访问Oracle的组件）</h3><ol><li>从<a href="http://www.oracle.com/technetwork/database/database-technologies/instant-client/">官网下载</a><br>下载时检查Oracle数据库的版本以及系统类型，下载相应的文件，如Oracle11.2，centos7.9下载 <code>instantclient-basic-linux.x64-11.2.0.4.0.zip</code> 和 <code>instantclient-sdk-linux.x64-11.2.0.4.0.zip</code>。</li><li>解压两个压缩包到同一目录 <code>instantclient_11_2</code> 下</li><li>拷贝 <code>instantclient_11_2</code> 到CentOS7目录 <code>/usr/local/oracle</code> 下</li><li>配置环境变量 <code>./bash_profile</code> 文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /root/.bash_profile</span><br></pre></td></tr></table></figure> 添加内容：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ORACLE_HOME=/usr/local/oracle/instantclient_11_2</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME</span><br></pre></td></tr></table></figure> 使配置生效:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /root/.bash_profile</span><br></pre></td></tr></table></figure></li><li>创建快捷键<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd $ORACLE_HOME</span><br><span class="line">ln -s  libclntsh.so.11.2  libclntsh.so</span><br><span class="line">ln -s /usr/local/oracle/instantclient_11_2 /usr/local/oracle/instantclient_11_2/lib</span><br></pre></td></tr></table></figure></li><li>添加共享目录<br>打开配置文件：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ld.so.conf</span><br></pre></td></tr></table></figure> 添加下面内容：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/oracle/instantclient_11_2</span><br></pre></td></tr></table></figure> 执行命令使生效：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig</span><br></pre></td></tr></table></figure>最后，测试是否正常，或重启服务器后再测试。</li></ol><h2 id="配置SQL-Server"><a href="#配置SQL-Server" class="headerlink" title="配置SQL Server"></a>配置SQL Server</h2><p>必需组件：unixODBC、Microsoft ODBC Driver 11 for linux</p><h3 id="ODBC驱动安装"><a href="#ODBC驱动安装" class="headerlink" title="ODBC驱动安装"></a>ODBC驱动安装</h3><p>用于数据库连接的驱动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install unixODBC* </span><br></pre></td></tr></table></figure><h3 id="微软ODBC-for-linux驱动安装"><a href="#微软ODBC-for-linux驱动安装" class="headerlink" title="微软ODBC for linux驱动安装"></a>微软ODBC for linux驱动安装</h3><ol><li><a href="http://download.microsoft.com/download/6/A/B/6AB27E13-46AE-4CE9-AFFD-406367CADC1D/Linux6/sqlncli-11.0.1790.0.tar.gz">官网下载地址</a><br>如果你需要更高版本的驱动程序请转到官网下载，附<a href="https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017">官网地址</a>(建议旧版安装成功后再选择性升级)</li><li>解压并验证安装条件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/download</span><br><span class="line">tar -zxvf sqlncli-11.0.1790.0.tar.gz</span><br><span class="line">cd sqlncli-11.0.1790.0</span><br><span class="line">./install.sh verify</span><br></pre></td></tr></table></figure> 以下为验证信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server ODBC Driver V1.0 for Linux Installation Script</span><br><span class="line">Copyright Microsoft Corp.</span><br><span class="line">Starting install for Microsoft SQL Server ODBC Driver V1.0 for Linux</span><br><span class="line">Checking for 64 bit Linux compatible OS ..................................... OK</span><br><span class="line">Checking required libs are installed ........................................ OK</span><br><span class="line">unixODBC utilities (odbc_config and odbcinst) installed ..................... OK</span><br><span class="line">unixODBC Driver Manager version 2.3.0 installed ......................... FAILED</span><br><span class="line">unixODBC Driver Manager configuration correct ...................... NOT CHECKED</span><br><span class="line">Microsoft SQL Server ODBC Driver V1.0 for Linux already installed .. NOT CHECKED</span><br><span class="line">See /tmp/sqlncli.10874.17476.965/install.log for more information about installation failures.</span><br></pre></td></tr></table></figure> 查看依赖包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldd lib64/libsqlncli*</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">linux-vdso.so.1 =&gt;  (0x00007fff973fe000)</span><br><span class="line">libcrypto.so.10 =&gt; /lib64/libcrypto.so.10 (0x00007f2deb899000)</span><br><span class="line">libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f2deb695000)</span><br><span class="line">librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f2deb48c000)</span><br><span class="line">libssl.so.10 =&gt; /lib64/libssl.so.10 (0x00007f2deb21a000)</span><br><span class="line">libuuid.so.1 =&gt; /lib64/libuuid.so.1 (0x00007f2deb015000)</span><br><span class="line">libodbcinst.so.1 =&gt; /lib64/libodbcinst.so.1 (0x00007f2deae02000)</span><br><span class="line">libkrb5.so.3 =&gt; /lib64/libkrb5.so.3 (0x00007f2deab1a000)</span><br><span class="line">libgssapi_krb5.so.2 =&gt; /lib64/libgssapi_krb5.so.2 (0x00007f2dea8cd000)</span><br><span class="line">libstdc++.so.6 =&gt; /lib64/libstdc++.so.6 (0x00007f2dea5c4000)</span><br><span class="line">libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f2dea2c2000)</span><br><span class="line">libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007f2dea0ac000)</span><br><span class="line">libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f2de9e8f000)</span><br><span class="line">libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f2de9acc000)</span><br><span class="line">libz.so.1 =&gt; /lib64/libz.so.1 (0x00007f2de98b6000)</span><br><span class="line">/lib64/ld-linux-x86-64.so.2 (0x00007f2dec053000)</span><br><span class="line">libcom_err.so.2 =&gt; /lib64/libcom_err.so.2 (0x00007f2de96b1000)</span><br><span class="line">libk5crypto.so.3 =&gt; /lib64/libk5crypto.so.3 (0x00007f2de947e000)</span><br><span class="line">libltdl.so.7 =&gt; /lib64/libltdl.so.7 (0x00007f2de9274000)</span><br><span class="line">libkrb5support.so.0 =&gt; /lib64/libkrb5support.so.0 (0x00007f2de9065000)</span><br><span class="line">libkeyutils.so.1 =&gt; /lib64/libkeyutils.so.1 (0x00007f2de8e61000)</span><br><span class="line">libresolv.so.2 =&gt; /lib64/libresolv.so.2 (0x00007f2de8c47000)</span><br><span class="line">libselinux.so.1 =&gt; /lib64/libselinux.so.1 (0x00007f2de8a1f000)</span><br><span class="line">libpcre.so.1 =&gt; /usr/local/lib/libpcre.so.1 (0x00007f2de8802000)</span><br></pre></td></tr></table></figure> 如果遇到没有找到的依赖环境组件，如 <code>libodbcinst.so.1 =&gt; not found</code> ，可以建立个此缺少环境组件名称的软连接并指向此环境组件的高版本，如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib64</span><br><span class="line">ln -s libodbcinst.so.2.0.0 libodbcinst.so.1</span><br></pre></td></tr></table></figure> 完成后可以使用ldd再次验证，确认全部可行后再进行下一步:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldd lib64/libsqlncli*</span><br></pre></td></tr></table></figure></li><li>正式安装<br>使用install安装命令进行安装:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh install --force</span><br></pre></td></tr></table></figure> 声明文件敲空格阅读，最后输入 <code>YES</code> 同意安装（注意YES必须使大写）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Enter YES to accept the license or anything else to terminate the installation: YES</span><br><span class="line"> </span><br><span class="line">Checking for 64 bit Linux compatible OS ..................................... OK</span><br><span class="line">Checking required libs are installed ........................................ OK</span><br><span class="line">unixODBC utilities (odbc_config and odbcinst) installed ..................... OK</span><br><span class="line">unixODBC Driver Manager version 2.3.0 installed ......................... FAILED</span><br><span class="line">unixODBC Driver Manager configuration correct ...................... NOT CHECKED</span><br><span class="line">Microsoft SQL Server ODBC Driver V1.0 for Linux already installed .. NOT CHECKED</span><br><span class="line">Microsoft SQL Server ODBC Driver V1.0 for Linux files copied ................ OK</span><br><span class="line">Symbolic links for bcp and sqlcmd created ................................... OK</span><br><span class="line">Microsoft SQL Server ODBC Driver V1.0 for Linux registered ........... INSTALLED</span><br><span class="line"> </span><br><span class="line">Install log created at /tmp/sqlncli.2486.13833.4245/install.log.</span><br><span class="line"> </span><br><span class="line">One or more steps may have an *. See README for more information regarding</span><br><span class="line">these steps.</span><br><span class="line"> </span><br></pre></td></tr></table></figure> 如果出现目录 <code>/opt/microsoft/sqlncli/lib64/libsqlncli-11.0.so.1790.0</code>，表示驱动安装完成。</li><li>配置unixOBDC<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/odbcinst.ini</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SQL Server Native Client 11.0]</span><br><span class="line">Description=Microsoft SQL Server ODBC Driver V1.0 for Linux</span><br><span class="line">Driver=/opt/microsoft/sqlncli/lib64/libsqlncli-11.0.so.1790.0</span><br><span class="line">Threading=1</span><br><span class="line">UsageCount=1</span><br></pre></td></tr></table></figure></li></ol><h3 id="django-配置"><a href="#django-配置" class="headerlink" title="django 配置"></a>django 配置</h3><p>进入Django项目目录，修改配置文件 <code>vi setting.py</code>，在数据库配置项中配置以下信息（基本和Windows配置一样）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">  &#x27;default&#x27;: &#123;</span><br><span class="line">    &#x27;ENGINE&#x27;: &#x27;sql_server.pyodbc&#x27;,      # odbc连接固定写法</span><br><span class="line">    &#x27;NAME&#x27;: &#x27;Mydata&#x27;,                   # 需要连接的数据库名称</span><br><span class="line">    &#x27;USER&#x27;: &#x27;sa&#x27;,                       # 数据库连接账户</span><br><span class="line">    &#x27;PASSWORD&#x27;: &#x27;123456&#x27;,               # 数据库连接密码</span><br><span class="line">    &#x27;HOST&#x27;: &#x27;192.168.88.81&#x27;,            # 数据库服务地址</span><br><span class="line">    &#x27;PORT&#x27;: &#x27;1433&#x27;,                     # 数据库连接端口</span><br><span class="line">    &#x27;OPTIONS&#x27;:&#123;</span><br><span class="line">        &#x27;driver&#x27;:&#x27;SQL Server Native Client 11.0&#x27;,</span><br><span class="line">        &#x27;MARS_Connection&#x27;: True,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后需要重启uwsgi服务才生效。</p><hr><h1 id="安装MySQL5-7"><a href="#安装MySQL5-7" class="headerlink" title="安装MySQL5.7"></a>安装MySQL5.7</h1><blockquote><p>可参考<a href="https://www.suibibk.com/topic/721421244804628480">Linux安装MySQL5.7完整版流程</a></p></blockquote><ol><li><p>解压安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-5.7.32-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-5.7.32-linux-glibc2.12-x86_64 /usr/local/mysql</span><br></pre></td></tr></table></figure></li><li><p>创建mysql用户组和用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure></li><li><p>创建数据目录并赋予权限<br>创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p  /data/mysql</span><br></pre></td></tr></table></figure><p> 赋予权限</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown mysql:mysql -R /data/mysql</span><br></pre></td></tr></table></figure><blockquote><p>通常都会将数据存放目录外置到别的目录，这样子升级mysql不会影响历历史数据。</p></blockquote></li><li><p>修改配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p> 把默认的内容删掉，改为下面的内容即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.err</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">#character config</span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">symbolic-links=0</span><br><span class="line">explicit_defaults_for_timestamp=true</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></li><li><p>初始化数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql/bin/</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mysqld --defaults-file=/etc/my.cnf --basedir=/usr/local/mysql/ --datadir=/data/mysql/ --user=mysql --initialize</span><br></pre></td></tr></table></figure></li><li><p>查看root用户密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /data/mysql/mysql.err</span><br></pre></td></tr></table></figure><p> 初始化完成后，默认会生成一个root用户的密码，在最后位置。这里要记住，后面登录的时候需要使用。</p></li></ol><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>使用systemd管理mysql，先创建服务文件<code>mysql.service</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/mysql.service</span><br></pre></td></tr></table></figure><p>输入以下内容：</p><pre><code>[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)After=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnfLimitNOFILE = 5000</code></pre><p>使文件生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>最后，启动mysql服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure><blockquote><p><a href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/">其它服务命令参考</a></p></blockquote><h2 id="登录mysql，修改root用户的密码"><a href="#登录mysql，修改root用户的密码" class="headerlink" title="登录mysql，修改root用户的密码"></a>登录mysql，修改root用户的密码</h2><p>bin目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mysql -u root -p</span><br></pre></td></tr></table></figure><p>密码为初始化的时候生成的随机密码串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD = PASSWORD(&#x27;123456&#x27;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; PASSWORD EXPIRE NEVER;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>依次执行上面三条命令，这里密码设置为123456。</p><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>如果报没权限，因为我们的root用户默认只能够本机访问，这里要开放下，登录mysql，执行如下三条命令即可.</p><ul><li>访问mysql库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br></pre></td></tr></table></figure></li><li>使root能再任何host访问<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;;</span><br></pre></td></tr></table></figure>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ul><h2 id="自动备份"><a href="#自动备份" class="headerlink" title="自动备份"></a>自动备份</h2><p><a href="/2020/11/08/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/">MySQL自动备份参考</a></p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE `database_name` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;</span><br></pre></td></tr></table></figure><hr><h1 id="安装Gunicorn"><a href="#安装Gunicorn" class="headerlink" title="安装Gunicorn"></a>安装Gunicorn</h1><p>Gunicorn 绿色独角兽’是一个Python WSGI UNIX的HTTP服务器。这是一个pre-fork worker的模型，从Ruby的独角兽（Unicorn ）项目移植。该Gunicorn服务器大致与各种Web框架兼容，只需非常简单的执行，轻量级的资源消耗，以及相当迅速。<br>Gunicorn 服务器作为wsgi app的容器，能够与各种Web框架兼容（flask，django等）,得益于gevent等技术，使用Gunicorn能够在基本不改变wsgi app代码的前提下，大幅度提高wsgi app的性能。</p><p>执行安装命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gunicorn</span><br></pre></td></tr></table></figure><p>创建软连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/gunicorn /usr/bin/gunicorn</span><br></pre></td></tr></table></figure><h2 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h2><p>Gunicorn可以以三种方式读取配置信息。<br>第一种方式:从framework定义的配置信息中读取,目前只对 Paster 框架有效。本方式较少用到。<br>第二种方式:在命令行中定义,命令行中定义的配置信息将会覆盖掉框架中定义的相同的参数名的值。<br>第三种方式:将所有的参数信息,放到一个python文件中,只要是在命令行中可以定义的参数中,在配置文件中都可以定义。</p><h3 id="命令行启动"><a href="#命令行启动" class="headerlink" title="命令行启动"></a>命令行启动</h3><p>命令行有哪些参数可以通过gunicorn -h 查到。<br>常用的有:</p><p>参数短参数说明默认值<br>–bind-b绑定服务的IP和端口号。<br>–workers INT-w工作线程数量1<br>–backlog服务器中在pending状态的最大连接数，即client处于waiting的数目。超过这个数目， client连接会得到一个error。建议值64-2048。<br>–worker_connections客户端最大同时连接数。只适用于eventlet， gevent工作方式。<br>–pidfilepid存储文件路径。<br>–access-logfile FILE访问日志文件<br>–error-logfile FILE–log-file错误日志文件<br><strong>–daemon-D后台运行False</strong><br>–worker-class-k有 sync, eventlet(并发), gevent, tornado, gthread选项sync(同步)<br>–reload当代码有修改时，自动重启workers。适用于开发环境。<br>–reload_extra_files扩展reload配置，增加templates，configurations等文件修改监控。<br>–check_config检查配置</p><p><strong>进入项目根目录下执行</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn cam.wsgi:application -w <span class="number">2</span> -b <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span></span><br></pre></td></tr></table></figure><blockquote><p>cam.wsgi:application cam是你django工程的名称，后面不用改<br>-w –workers 意思是要启动的进程数量<br>-b –bind 绑定的IP地址和端口<br>-k –worker-class 启动的worker类型（gthread,sync,eventlet,gevent,tornado）,默认是同步阻塞方式启动</p></blockquote><h3 id="配置文件启动"><a href="#配置文件启动" class="headerlink" title="配置文件启动"></a>配置文件启动</h3><p>在项目根目录下创建配置文件 <code>gunicorn-config.py</code>（与setting.py同级目录）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"># 配置详解地址：https://blog.csdn.net/wenboyu/article/details/103083395?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_v2~rank_aggregation-1-103083395.pc_agg_rank_aggregation&amp;utm_term=gunicorn+%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE&amp;spm=1000.2123.3001.4430</span><br><span class="line"># 服务访问地址：http://192.168.56.101/</span><br><span class="line"></span><br><span class="line">import multiprocessing</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># 监听地址和端口</span><br><span class="line">bind = &quot;127.0.0.1:8000&quot;  # 与nginx配置的端口一致</span><br><span class="line"></span><br><span class="line"># 进程</span><br><span class="line">workers = multiprocessing.cpu_count() * 2 + 1  # 进程数量</span><br><span class="line"># 工作模式：</span><br><span class="line"># worker_class = &#x27;gevent&#x27;  # 使用gevent模式，还可以使用sync模式（默认模式）</span><br><span class="line"># 同步Worker：sync 默认模式，也就是一次只处理一个请求</span><br><span class="line"># 异步Worker：通过 Eventlet、Gevent 实现的异步模式</span><br><span class="line"># 异步IO Worker：目前支持 gthread 和 gaiohttp 两种类型</span><br><span class="line">worker_connections = 100  # 客户端最大同时连接数，使用于 gevent 和 eventlet 工作模式时</span><br><span class="line"># 线程数：</span><br><span class="line"># threads = 2 # 指定每个进程开启的线程数</span><br><span class="line"># 工作进程中线程的数，建议值2-4 x CPU核心数</span><br><span class="line"># 此配置只适用于 gthread 进程工作方式， 因为gevent这种使用的是协程工作方式。</span><br><span class="line">timeout = 30  # worker超时时间，超时重启</span><br><span class="line">graceful_timeout = 10  # 接收到restart信号后，worker可以在graceful_timeout时间内，继续处理完当前requests</span><br><span class="line">keepalive = 5  # 连接上等待请求的秒数，默认情况下值为2。一般设定在1~5秒之间。</span><br><span class="line"></span><br><span class="line"># 调试</span><br><span class="line">reload = True  # 当代码有修改时，自动重启workers。适用于开发环境。</span><br><span class="line"># reload_extra_files = []  # 扩展reload配置，增加templates，configurations等文件修改监控。</span><br><span class="line"></span><br><span class="line"># server 机制</span><br><span class="line">path_of_current_file = os.path.abspath(__file__)</span><br><span class="line">path_of_current_dir = os.path.split(path_of_current_file)[0]</span><br><span class="line">chdir = path_of_current_dir  # 在app加载之前，进入到此目录</span><br><span class="line"># pidfile = &#x27;&#x27;               # 存储pid的文件路径</span><br><span class="line"></span><br><span class="line"># 日志</span><br><span class="line">loglevel = &#x27;info&#x27;  # 日志等级：debug, info, warning, error, critical. 指的是错误日志的级别，而访问日志的级别无法设置</span><br><span class="line"># capture_output   # 重定向stdout/stderr到error log file</span><br><span class="line">accesslog = &#x27;/usr/local/tps/logs/access.log&#x27;  # 接收访问日志文件路径</span><br><span class="line">access_log_format = &#x27;%(t)s %(p)s %(h)s &quot;%(r)s&quot; %(s)s %(L)s %(b)s %(f)s&quot; &quot;%(a)s&quot;&#x27;  # 设置gunicorn生成的访问日志格式，错误日志无法设置</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">其每个选项的含义如下：</span><br><span class="line">h          remote address</span><br><span class="line">l          &#x27;-&#x27;</span><br><span class="line">u          currently &#x27;-&#x27;, may be user name in future releases</span><br><span class="line">t          date of the request</span><br><span class="line">r          status line (e.g. ``GET / HTTP/1.1``)</span><br><span class="line">s          status</span><br><span class="line">b          response length or &#x27;-&#x27;</span><br><span class="line">f          referer</span><br><span class="line">a          user agent</span><br><span class="line">T          request time in seconds</span><br><span class="line">D          request time in microseconds</span><br><span class="line">L          request time in decimal seconds</span><br><span class="line">p          process ID</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">errorlog = &#x27;/usr/local/tps/logs/error.log&#x27;  # 错误日志文件路径</span><br><span class="line"></span><br><span class="line"># 进程名</span><br><span class="line"># proc_name</span><br><span class="line"># 设置进程名(setproctitle)，在ps，top等命令中会看到. 缺省值为default_proc_name配置。</span><br></pre></td></tr></table></figure><p>启动可在任意路径下执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn cam.wsgi:application -k gthread -c /usr/local/cam/gunicorn-config.py</span><br></pre></td></tr></table></figure><h4 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h4><p>编辑启动文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><p>加入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn cam.wsgi:application -k gthread -c /usr/local/cam/gunicorn-config.py</span><br></pre></td></tr></table></figure><h3 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h3><p>建立服务文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/gunicorn.service</span><br></pre></td></tr></table></figure><p>粘入下面内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">WorkingDirectory=/usr/local/cam</span><br><span class="line">ExecStart=/bin/bash -c &#x27;gunicorn cam.wsgi:application -k gthread -c /usr/local/cam/gunicorn-config.py&#x27;</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><blockquote><p>注意：systemd 不接受非绝对路径执行命令，需要依赖bush-ism，如：<code>/bin/bash -c &#39;gunicorn cam.wsgi:application -k gthread -c /usr/local/cam/gunicorn-config.py&#39;</code>，否则会出现 Executable path is not absolute 的问题 (systemctl status gunicorn.service 中)</p></blockquote><p>使服务文件生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start gunicorn.service</span><br></pre></td></tr></table></figure><blockquote><p><a href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/">其它服务命令参考</a></p></blockquote><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><a href="http://127.0.0.1:8000/">http://127.0.0.1:8000</a></p><hr><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><p>安装教程：<a href="/2022/08/01/Nginx%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/">Nginx下载和安装</a><br>其中，在 <code>server</code> 里增加下面配置：</p><pre><code>    listen       80;    server_name  localhost;    #charset koi8-r;    #access_log  logs/host.access.log  main;    location / &#123;       #root   html;       #index  index.html index.htm;       proxy_pass http://127.0.0.1:8000; #gunicorn       proxy_set_header Host $host;       proxy_set_header X-Real-IP $remote_addr;       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    &#125;    location /static &#123;       alias /usr/local/cam/statics; # your Django project&#39;s static files - amend as required    &#125;</code></pre><hr><h1 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h1><p>为了安全，建议开启防火墙，只允许指定端口。</p><blockquote><p><a href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/">防火墙服务命令参考</a></p></blockquote><hr><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dusaiphoto.com/article/71/">Django 搭建个人博客教程</a></li><li><a href="https://blog.csdn.net/weixin_34004750/article/details/92541378">Django2.1连接使用SQL Server(linux版)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL安装配置</title>
      <link href="/2020/11/08/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/11/08/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>官网下载：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a><br>进入下载页面后，默认显示最新版，我们一般选择的是 MySQL Community Server 社区版本，是官方免费提供使用的。也可点击右侧的<code>Looking for previous GA versions?</code>选择下载其它版本。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装版"><a href="#安装版" class="headerlink" title="安装版"></a>安装版</h2><ol><li>本教程选择的是64位版本：<code>mysql-installer-community-5.7.32.0.msi</code></li><li>选择 ‘Custom’ 安装</li><li>根据操作系统的版本选择32位或64位，且后续软件也必须保持统一。</li><li>选中你要安装的数据库版本，点击右下角显示出来的 <code>Advanced Options</code> ，在弹出窗口设置软件安装位置和数据目录，建议放到D盘。</li><li>此时会检查MySQL运行需要的一些基础支持，如：<code>Microsoft Visual C++ 2013 Redistributable(x64)</code></li><li>后面的步骤按默认安装即可。</li></ol><h2 id="绿色版"><a href="#绿色版" class="headerlink" title="绿色版"></a>绿色版</h2><h3 id="选择版本"><a href="#选择版本" class="headerlink" title="选择版本"></a>选择版本</h3><p>本教程选择版本为：<code>mysql-5.7.32-winx64.zip</code></p><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><p>解压缩下载的zip包到指定安装目录，如：<code>C:\YPN\mysql-5.7.32-winx64</code></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol><li>在系统变量中新建变量<code>MYSQL_HOME</code>，输入 MySQL 解压缩后文件夹的目录，如：<br>变量名：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_HOME</span><br></pre></td></tr></table></figure> 变量值：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\YPN\mysql-5.7.32-winx64</span><br></pre></td></tr></table></figure></li><li>在系统变量中找到<code>Path</code>变量，点击编辑，在最后加上：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;%MYSQL_HOME%\bin</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置my-ini文件"><a href="#配置my-ini文件" class="headerlink" title="配置my.ini文件"></a>配置my.ini文件</h3><ol><li>进入安装目录 <code>C:\YPN\mysql-5.7.32-winx64</code>，新建 <code>my.ini</code> 文件。</li><li>打开 <code>my.ini</code> 文件，输入以下配置内容：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[mysql]  </span><br><span class="line"># 设置 mysql 客户端默认字符集  </span><br><span class="line">default-character-set=utf8 </span><br><span class="line"> </span><br><span class="line">[mysqld]  </span><br><span class="line">#设置 3306 端口  </span><br><span class="line">port = 3306  </span><br><span class="line"></span><br><span class="line"># 设置 mysql 的安装目录  </span><br><span class="line">basedir=C:\YPN\mysql-5.7.32-winx64</span><br><span class="line"></span><br><span class="line"># 设置 mysql 数据库的数据的存放目录  </span><br><span class="line">datadir=C:\YPN\mysql-5.7.32-winx64\data </span><br><span class="line"></span><br><span class="line"># 允许最大连接数  </span><br><span class="line">max_connections=200  </span><br><span class="line"></span><br><span class="line"># 服务端使用的字符集默认为 8 比特编码的 latin1 字符集  </span><br><span class="line">character-set-server=utf8  </span><br><span class="line"></span><br><span class="line"># 创建新表时将使用的默认存储引擎  </span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure> 其中内容中的 <code>basedir</code> 和 <code>datadir</code> 是解压缩后的指定安装目录，注意 <code>datadir</code> 后面要增加 **<code>data</code>**。</li></ol><h3 id="建立默认数据库"><a href="#建立默认数据库" class="headerlink" title="建立默认数据库"></a>建立默认数据库</h3><ol><li>以管理员方式打开cmd，进入安装目录：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\YPN\mysql-5.7.32-winx64\bin</span><br></pre></td></tr></table></figure></li><li>执行下面命令新建 <code>data</code> 文件夹：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></table></figure> 执行完成之后会在指定目录下生成一个 data 文件夹，此时 MySQL 建立了默认的数据库，用户名为 <code>root</code>，密码为空。</li></ol><h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><p>在安装目录下，执行下面语句安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></table></figure><p>第一次安装的话会显示 “Service successfully installed.”<br>如果已经安装过了，会显示”The service already exists!”<br>如果需要移除服务，执行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -remove</span><br></pre></td></tr></table></figure><h3 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h3><ol><li>启动服务<br>通过系统服务启动，或执行下面命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li><li>登录MySQL<br>执行下面命令登录：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure> -u 指的是登录的用户名，-p 是密码，因为是默认安装的数据库，此时密码为空，提示输入密码时直接回车即可。</li><li>设置密码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new_password&#x27;;</span><br></pre></td></tr></table></figure> 其中 <code>new_password</code> 为新密码，注意结尾必须有分号：<code>;</code> 。设置完成后即可使用了。</li><li>退出MySQL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></li><li>停止服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li></ol><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>查看所有数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>新建数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE new_database;</span><br></pre></td></tr></table></figure><p>使用数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use new_database;</span><br></pre></td></tr></table></figure><p>查看当前数据库下所有表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>新建表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE new_table()</span><br></pre></td></tr></table></figure><blockquote><p>如：<code>CREATE TABLE book(name char(20),author char(20));</code></p></blockquote><p>查看表：直接写 select 语句即可。<br>删除表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE new_table</span><br></pre></td></tr></table></figure><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><h2 id="Windows下"><a href="#Windows下" class="headerlink" title="Windows下"></a>Windows下</h2><ol><li><p>编写bat脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set &quot;Ymd=%date:~,4%%date:~5,2%%date:~8,2%&quot;</span><br><span class="line">cd C:\Program Files\MySQL\MySQL Server 5.7\bin\</span><br><span class="line">mysqldump --opt -u root --password=root --host=127.0.0.1 --port=3306 --default-character-set=utf8 new_database &gt; C:\YPN\MYSQLDATAAUTOBACKUP\new_database_backup_%Ymd%.sql</span><br><span class="line">@echo on</span><br></pre></td></tr></table></figure><p> 其中，先进入MySQL安装目录bin下，执行<code>mysqldump</code>命令即可，具体参数如下：</p><pre><code> --user      用户名                    --password  密码                      --host      地址                       --port      端口                       --default-character-set  字符编码               --all-databases          备份整个数据库         --databases new_database 备份指定数据库             new_database new_table   备份指定数据库的指定表     new_database new_table1 new_table2  备份指定数据库的多个指定表</code></pre></li><li><p>设置Windows定时任务</p></li></ol><h2 id="Linux下"><a href="#Linux下" class="headerlink" title="Linux下"></a>Linux下</h2><ol><li>新建目录<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/mysqlbak/data</span><br><span class="line">mkdir -p /data/mysqlbak/scripts</span><br><span class="line">mkdir -p /data/mysqlbak/logs</span><br></pre></td></tr></table></figure></li><li>创建备份脚本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/mysqlbak/scripts</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim backup.sh</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#备份目录</span><br><span class="line">BACKUP_ROOT=/data/mysqlbak</span><br><span class="line">BACKUP_FILEDIR=$BACKUP_ROOT/data</span><br><span class="line"></span><br><span class="line">#当前日期</span><br><span class="line">DATE=$(date +%Y%m%d)</span><br><span class="line"></span><br><span class="line">######备份######</span><br><span class="line"></span><br><span class="line">#查询所有数据库</span><br><span class="line">#-uroot -p123456表示使用root账号执行命令，且root账号的密码为:123456</span><br><span class="line">DATABASES=$(mysql -uroot -p123456 -e &quot;show databases&quot; | grep -Ev &quot;Database|sys|information_schema|performance_schema|mysql&quot;)</span><br><span class="line">#循环数据库进行备份</span><br><span class="line">for db in $DATABASES</span><br><span class="line">do</span><br><span class="line">echo</span><br><span class="line">echo ----------$BACKUP_FILEDIR/$&#123;db&#125;_$DATE.sql.gz BEGIN----------</span><br><span class="line">mysqldump -uroot -p123456 --default-character-set=utf8 -q --lock-all-tables --flush-logs -E -R --triggers -B $&#123;db&#125; | gzip &gt; $BACKUP_FILEDIR/$&#123;db&#125;_$DATE.sql.gz</span><br><span class="line">echo ----------$BACKUP_FILEDIR/$&#123;db&#125;_$DATE.sql.gz COMPLETE----------</span><br><span class="line">echo</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;done&quot;</span><br></pre></td></tr></table></figure></li><li>设置脚本的执行权限<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 backup.sh</span><br></pre></td></tr></table></figure></li><li>将备份操作加入到定时任务(每天凌晨2点定时执行)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 2 * * * /data/mysqlbak/scripts/backup.sh &gt; /data/mysqlbak/logs/backup.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><blockquote><p>如果执行脚本出现异常：<code>/data/mysqlbak/scripts/backup.sh: line 14: mysql: command not found</code><br> 解决办法：<br>     1、查找mysql安装路径<br>     find &#x2F; -name mysql<br>     通常mysql安装路径在:&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql<br>     2、mysql:command not found 建立软连接<br>     ln -s  &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql  &#x2F;usr&#x2F;bin<br>     3、mysqldump:command not found 建立软连接<br>     ln -s  &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqldump  &#x2F;usr&#x2F;bin</p></blockquote></li><li>创建删除脚本(定时删除7天前的备份数据)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim backup_clean.sh</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ----------CLEAN BEGIN----------</span><br><span class="line">find /data/mysqlbak/data -mtime +7 -name &quot;*.gz&quot; -exec rm -rf &#123;&#125; \;</span><br><span class="line">echo ----------CLEAN COMPLETE----------</span><br></pre></td></tr></table></figure></li><li>设置脚本的执行权限<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 backup_clean.sh</span><br></pre></td></tr></table></figure></li><li>将删除操作加入到定时任务(每天凌晨1点定时执行)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 1 * * * /data/mysqlbak/scripts/backup_clean.sh &gt; /data/mysqlbak/logs/backup_full_clean.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li>最后查看定时任务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><blockquote><p>如果需要备份到另外一台机器，可以备份完scp到另外一台机器，具体内容参考<a href="https://www.cnblogs.com/blazeZzz/p/10881297.html">Linux下Mysql每天自动备份</a></p></blockquote></li></ol><h1 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h1><ol><li>以管理员方式打开cmd，进入MySQL安装目录bin下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Program Files\MySQL\MySQL Server 5.7\bin\</span><br></pre></td></tr></table></figure></li><li>进入MySQL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure> 按照提示输入密码。</li><li>查看数据库列表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure> 注意命令后面的分号。</li><li>选择要恢复的数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use xxx;</span><br></pre></td></tr></table></figure></li><li>执行恢复命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source C:\YPN\MYSQLDATAAUTOBACKUP\new_database_backup_20201109.sql</span><br></pre></td></tr></table></figure> 路径中不能有空格。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python之Django项目部署到Windows</title>
      <link href="/2020/10/30/Python%E4%B9%8BDjango%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0Windows/"/>
      <url>/2020/10/30/Python%E4%B9%8BDjango%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0Windows/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h1><p>具体如何安装请参考：<a href="/2020/11/08/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/">MySQL安装配置</a></p><h1 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h1><p>官网下载：<a href="https://www.python.org/getit/">https://www.python.org/getit/</a><br>默认安装即可，本教程安装版本为：python-3.7.3-amd64.exe</p><h1 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h1><h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Django==<span class="number">2.1</span><span class="number">.15</span></span><br></pre></td></tr></table></figure><h2 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h2><ol><li>官网下载：<a href="https://www.djangoproject.com/download/">https://www.djangoproject.com/download/</a><br>下载时注意与Python版本的兼容性，本教程下载安装版本为：Django 2.1.15</li><li>安装<br>解压下载的Django-2.1.15.tar到指定目录，本教程放到了Python的根目录下：<code>C:\Program Files\Python37\Django-2.1.15</code>，接着以管理员方式打开cmd，进入Django解压目录下，执行安装命令：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure> Django将被安装到Python的<code>Lib</code>下<code>site-packages</code>里。</li><li>检查<br>在cmd下进入到Django-*下，进入Python工作环境，导入Django，查看是否安装成功：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Python37\Django-<span class="number">2.1</span><span class="number">.15</span>&gt;python</span><br><span class="line">Python <span class="number">3.7</span><span class="number">.3</span> (v3<span class="number">.7</span><span class="number">.3</span>:ef4ec6ed12, Mar <span class="number">25</span> <span class="number">2019</span>, <span class="number">22</span>:<span class="number">22</span>:05) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> django</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>django.get_version()</span><br><span class="line"><span class="string">&#x27;2.1.15&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure> 如上，出现版本号，表示安装成功！</li></ol><h1 id="配置Django项目（基于admin管理工具）"><a href="#配置Django项目（基于admin管理工具）" class="headerlink" title="配置Django项目（基于admin管理工具）"></a>配置Django项目（基于admin管理工具）</h1><h2 id="配置MySQL数据库"><a href="#配置MySQL数据库" class="headerlink" title="配置MySQL数据库"></a>配置MySQL数据库</h2><ol><li>创建数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database xxgl; </span><br></pre></td></tr></table></figure> 其它的数据库操作命令请参照 <a href="/2020/11/08/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/">MySQL安装配置</a> 里的<strong>使用</strong>章节。</li><li>修改项目下settings.py中DATABASES配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x27;default&#x27;: &#123;</span><br><span class="line">&#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,</span><br><span class="line">&#x27;NAME&#x27;: &#x27;xxgl&#x27;,</span><br><span class="line">&#x27;USER&#x27;: &#x27;root&#x27;,</span><br><span class="line">&#x27;PASSWORD&#x27;: &#x27;root&#x27;,</span><br><span class="line">&#x27;HOST&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置Oracle数据库"><a href="#配置Oracle数据库" class="headerlink" title="配置Oracle数据库"></a>配置Oracle数据库</h2><ol><li>修改项目下settings.py中DATABASES配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x27;default&#x27;: &#123;</span><br><span class="line">&#x27;ENGINE&#x27;: &#x27;django.db.backends.oracle&#x27;,</span><br><span class="line">&#x27;NAME&#x27;: &#x27;orcl&#x27;,</span><br><span class="line">&#x27;USER&#x27;: &#x27;yonghu&#x27;,</span><br><span class="line">&#x27;PASSWORD&#x27;: &#x27;mima&#x27;,</span><br><span class="line">&#x27;HOST&#x27;: &quot;xx.xx.xx.xx&quot;,</span><br><span class="line">&#x27;PORT&#x27;: &#x27;1521&#x27;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>安装驱动模块 <code>cx_Oracle</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cx_Oracle</span><br></pre></td></tr></table></figure> 安装完成后出现如下所示，表示安装成功：<br> Collecting cx_Oracle<br>   Downloading cx_Oracle-8.0.1-cp37-cp37m-win_amd64.whl (201 kB)<br>      |████████████████████████████████| 201 kB 33 kB&#x2F;s<br> Installing collected packages: cx-Oracle<br> Successfully installed cx-Oracle-8.0.1</li><li>最后将Oracle客户端安装路径下的 <code>oci.dll</code>  <code>oraocci11.dll</code>  <code>oraociei11.dll</code> 这三个文件拷贝到python安装路径的 lib&#x2F;site-packages 下面，就OK了。</li></ol><h2 id="安装Django依赖包"><a href="#安装Django依赖包" class="headerlink" title="安装Django依赖包"></a>安装Django依赖包</h2><h3 id="在线安装-1"><a href="#在线安装-1" class="headerlink" title="在线安装"></a>在线安装</h3><p>执行下面命令安装依赖包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果没有<code>requirements.txt</code>文件，则执行下面命令生成：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><blockquote><ul><li>上面命令生成的是开发环境所有的依赖包，不相关的依赖包也会包含进来，如果只想生成与本项目有关的依赖包，则需先安装 <code>pip install pipreqs</code> ，再到项目根目录下执行命令：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipreqs ./ --encoding=utf-<span class="number">8</span> --force</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果执行安装命令有报错或安装失败，可尝试下面命令：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --default-timeout=<span class="number">100</span> install -r requirements.txt</span><br></pre></td></tr></table></figure><blockquote><ul><li>也可指定资源镜像安装：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --default-timeout=<span class="number">100</span> install requirements.txt -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果上面那个豆瓣资源依然不快，可以换成下面的国内镜像网站。<br>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> 阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a><br>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a> 华中科技大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a><br>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a> 豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li></ul></blockquote><blockquote><ul><li>如果启动项目时提示缺少<code>pytz</code>，可执行下面命令安装：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pytz</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果使用了数据库驱动：SQL Server Native Client 11.0，则要安装（仅限Django2）：</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-pyodbc-azure pyodbc</span><br></pre></td></tr></table></figure><blockquote><ul><li>如果使用了数据库驱动：SQL Server Native Client 10.0，首先安装驱动程序 SQL Server Native Client 10.0 ，可直接安装navicat11会自带，或在navicat的安装目录中找到 sqlncli_x64.msi 安装，最后再安装（适用于Django3以上，且该安装包必须最后一步安装才能生效）：</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-mssql-backend</span><br></pre></td></tr></table></figure><h3 id="离线安装-1"><a href="#离线安装-1" class="headerlink" title="离线安装"></a>离线安装</h3><ol><li>有网络下，先下载离线包<ul><li>在项目根目录下新建文件夹<code>package</code>，为的是将下载好的离线包放到这个文件夹里面</li><li>查看项目已经安装的依赖包： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="built_in">list</span></span><br></pre></td></tr></table></figure></li><li>生成requirements.txt <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt;requirements.txt</span><br></pre></td></tr></table></figure></li><li>下载离线包<br> 下载单个离线包：<code>pip download -d your_offline_packages &lt;package_name&gt;</code><br> 批量下载离线包：<code>pip download -d your_offline_packages -r requirements.txt</code><br> 如本项目批量下载命令： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip download -d C:\YPN\ypn_xxgl\package -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul></li><li>无网络下，再安装离线包<ul><li>拷贝项目到目标机器上，确保有package和requirements.txt</li><li>安装<br> 安装单个离线包：<code>pip install --no-index --find-links=/your_offline_packages/ package_name</code><br> 批量安装离线包：<code>pip install --no-index --find-links=/your_offline_packages/ -r requirements.txt</code><br> 如本项目批量安装命令： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --no-index --find-links=C:\YPN\ypn_xxgl\package -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><ol><li><p>重新编译，记录改动到迁移文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations </span><br></pre></td></tr></table></figure><blockquote><p>此时可能会报一些错误，尝试将项目app的 <code>migrations</code> 下面，除了 <code>__init__.py</code> 文件，其它全部删了再执行一遍命令试试。</p></blockquote></li><li><p>通过迁移文件同步表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate  </span><br></pre></td></tr></table></figure></li></ol><h2 id="创建超级用户（基于admin管理平台）"><a href="#创建超级用户（基于admin管理平台）" class="headerlink" title="创建超级用户（基于admin管理平台）"></a>创建超级用户（基于admin管理平台）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser  </span><br></pre></td></tr></table></figure><blockquote><p>更改admin密码：<br>from user.models import UserProfile<br>user&#x3D;UserProfile.objects.filter(username&#x3D;’admin’)[0]<br>user.set_password(‘admin123’)<br>user.save()</p></blockquote><h2 id="启动项目（在开发环境下）"><a href="#启动项目（在开发环境下）" class="headerlink" title="启动项目（在开发环境下）"></a>启动项目（在开发环境下）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span>  </span><br></pre></td></tr></table></figure><blockquote><p>如果提示错误：不存在表 django_admin_log 和 django_session ，可依次执行下面命令生成：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">migrate admin</span><br><span class="line">migrate sessions</span><br></pre></td></tr></table></figure><h1 id="部署Django项目到Windows（Apache-mod-wsgi）"><a href="#部署Django项目到Windows（Apache-mod-wsgi）" class="headerlink" title="部署Django项目到Windows（Apache+mod_wsgi）"></a>部署Django项目到Windows（Apache+mod_wsgi）</h1><h2 id="准备Apache"><a href="#准备Apache" class="headerlink" title="准备Apache"></a>准备Apache</h2><ol><li>下载Apache<br>官网下载：<a href="http://httpd.apache.org/">http://httpd.apache.org/</a><br>本教程下载版本为：httpd-2.4.46-o111h-x64-vc15.zip</li><li>安装Apache<br>下载后是一个压缩文件，直接解压缩，获取文件夹里的Apache24文件夹，这个文件夹就是apache服务器文件了，不需要安装，直接将Apache24文件夹移动到你想放的位置。如：<code>C:\Apache24</code></li><li>配置Apache<br>进入<code>C:\Apache24\conf</code>目录，找到httpd.conf文件，这个就是apache服务器的配置文件。用Notepad打开，找到如下代码行进行修改:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Define SRVROOT &quot;C:\Apache24&quot;  #Apache24文件的路径，其余不用改。</span><br><span class="line">...</span><br><span class="line">Listen 127.0.0.1:80 #此处为你要发布的网站ip地址</span><br><span class="line">...</span><br><span class="line">ServerName 127.0.0.1:80</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>创建Apache服务<br>打开命令行（管理员），cd进入<code>C:\Apache24\bin</code>文件夹，输入如下代码创建服务：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe -k install -n &quot;Apache24&quot;</span><br></pre></td></tr></table></figure> 其中 Apache24 是所创建服务器名称，可更改。如果出现successfully installed说明服务创建成功。同时后面可能会跟一些其他信息，说明你的配置是否正确。<br> 如果需要卸载服务，则执行 <code>httpd.exe -k uninstall -n &quot;Apache24&quot;</code> 命令即可</li><li>测试Apache<br>在浏览器地址栏输入在配置文件中配置的地址，如：<a href="http://127.0.0.1/">http://127.0.0.1:80</a></li></ol><h2 id="准备mod-wsgi"><a href="#准备mod-wsgi" class="headerlink" title="准备mod_wsgi"></a>准备mod_wsgi</h2><ol><li>下载mod_wsgi<br>进入下载地址：<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi</a> ，下载相应版本的mod_wsgi，其中ap24代表Apache的版本2.4，cp367代表Python的版本为3.7。这个插件的作用其实是一个python与apache的接口。本教程下载的版本为：mod_wsgi-4.7.1+ap24vc15-cp37-cp37m-win_amd64.whl</li><li>安装mod_wsgi<br>将下载的<code>mod_wsgi-4.7.1+ap24vc15-cp37-cp37m-win_amd64.whl</code>，后缀名改为.zip进行解压，解压后找mod_wsgi.so文件,如果存在该文件，则根据教程<a href="http://www.cnblogs.com/fnng/p/4119712.html">http://www.cnblogs.com/fnng/p/4119712.html</a> 找到安装mod_wsgi步骤那里操作即可。<br>如果不存在该文件，直接将该whl文件复制到python路径下的script文件夹下，cd进入该路径，命令行输入：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install &quot;mod_wsgi-4.7.1+ap24vc15-cp37-cp37m-win_amd64.whl&quot;</span><br></pre></td></tr></table></figure> 安装成功后再输入:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mod_wsgi-express module-config</span><br></pre></td></tr></table></figure> 出现以下三行提示，这三行一定要记下来，后面配置最重要的就是它了：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LoadFile &quot;c:/program files/python37/python37.dll&quot;</span><br><span class="line">LoadModule wsgi_module &quot;c:/program files/python37/lib/site-packages/mod_wsgi/server/mod_wsgi.cp37-win_amd64.pyd&quot;</span><br><span class="line">WSGIPythonHome &quot;c:/program files/python37&quot;</span><br></pre></td></tr></table></figure> 至此，mod_wsgi安装成功。</li></ol><h2 id="部署Django项目到Apache"><a href="#部署Django项目到Apache" class="headerlink" title="部署Django项目到Apache"></a>部署Django项目到Apache</h2><p>再次打开httpd.conf文件，在最末尾添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#安装wsgi模块后，出来的三行字符，直接复制过来</span><br><span class="line">LoadFile &quot;c:/program files/python37/python37.dll&quot;</span><br><span class="line">LoadModule wsgi_module &quot;c:/program files/python37/lib/site-packages/mod_wsgi/server/mod_wsgi.cp37-win_amd64.pyd&quot;</span><br><span class="line">WSGIPythonHome &quot;c:/program files/python37&quot;</span><br><span class="line">#设置工程中的wsgi路径</span><br><span class="line">WSGIScriptAlias / C:\xxgl\xxgl\wsgi.py</span><br><span class="line">#设置工程路径</span><br><span class="line">WSGIPythonPath C:\xxgl</span><br><span class="line">#设置wsgi路径</span><br><span class="line">&lt;Directory C:\xxgl\xxgl&gt;</span><br><span class="line">    &lt;Files wsgi.py&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Files&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">#设置静态文件路径</span><br><span class="line">Alias /static C:\xxgl\static</span><br><span class="line">&lt;Directory C:\xxgl\static&gt;  </span><br><span class="line">    AllowOverride None  </span><br><span class="line">    Options None  </span><br><span class="line">    Require all granted  </span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">WSGIApplicationGroup %&#123;GLOBAL&#125; </span><br></pre></td></tr></table></figure><pre><code>其中xxgl为我的工程文件夹。编辑完成后保存文件，回到服务器管理器，找到apache2.4服务，重启服务。如果项目配置了Apscheduler定时服务，服务启动后无法正常访问，一直转圈中，则必需增加 WSGIApplicationGroup %&#123;GLOBAL&#125;如果之前配置都没问题，浏览器输入http://127.0.0.1:80 ，就会见到Django页面了。</code></pre><h1 id="升级Django项目"><a href="#升级Django项目" class="headerlink" title="升级Django项目"></a>升级Django项目</h1><ol><li>更新需要升级的文件<br>利用文件对比工具（如Beyond Compare），以二进制比较，查找和更新文件。切记不要更新文件夹 <code>migrations</code> 下的任何文件。</li><li>重新编译，记录改动到迁移文件<br>以管理员方式打开cmd，进入项目根目录，执行下面命令：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations </span><br></pre></td></tr></table></figure></li><li>通过迁移文件同步表<br>以管理员方式打开cmd，进入项目根目录，执行下面命令：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate  </span><br></pre></td></tr></table></figure></li><li>重启Apache服务</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收缩VirtualBox虚拟硬盘文件的大小</title>
      <link href="/2020/08/06/%E6%94%B6%E7%BC%A9VirtualBox%E8%99%9A%E6%8B%9F%E7%A1%AC%E7%9B%98%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%A7%E5%B0%8F/"/>
      <url>/2020/08/06/%E6%94%B6%E7%BC%A9VirtualBox%E8%99%9A%E6%8B%9F%E7%A1%AC%E7%9B%98%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<p>VirtualBox的虚拟硬盘文件大小随着使用时间越来越大，可按如下步骤收缩：</p><span id="more"></span><h2 id="释放空闲空间"><a href="#释放空闲空间" class="headerlink" title="释放空闲空间"></a>释放空闲空间</h2><p>进入虚拟机，执行下面的命令释放。<br>Linux下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd if=/dev/zero of=/EMPTY bs=1M</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -f /EMPTY</span><br></pre></td></tr></table></figure><p>Windows下，需要先下载安装 <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/sysinternals-suite">Sysinternals Suite</a> 后执行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdelete –z d:</span><br></pre></td></tr></table></figure><blockquote><p>必需先进入sdelete所在目录下再执行命令，其中d为要释放的盘符。</p></blockquote><h2 id="收缩虚拟硬盘"><a href="#收缩虚拟硬盘" class="headerlink" title="收缩虚拟硬盘"></a>收缩虚拟硬盘</h2><p>先关闭虚拟机，再进入VBoxManage命令所在目录下，如：<code>cd C:\Program Files\Oracle\VirtualBox</code><br>如果要收缩的虚拟硬盘是VirtualBox自己的VDI格式，找到你的虚拟硬盘文件，如：<code>D:\YPN.VirtualOS\Win7EN\Win7EN.vdi</code>，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage modifyhd D:\YPN.VirtualOS\Win7EN\Win7EN.vdi --compact</span><br></pre></td></tr></table></figure><p>如果虚拟硬盘是Vmware的VMDK格式，因为VirtualBox不支持直接压缩VMDK格式，可以先转换成VDI后再收缩，最后转回VMDK。执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage clonehd &quot;old.vmdk&quot; &quot;new.vdi&quot; --format vdi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage modifyhd new.vdi --compact</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage clonehd &quot;new.vdi&quot; &quot;old.vmdk&quot; --format vmdk</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建私有云同步云盘Nextcloud</title>
      <link href="/2020/07/30/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E5%90%8C%E6%AD%A5%E4%BA%91%E7%9B%98Nextcloud/"/>
      <url>/2020/07/30/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E5%90%8C%E6%AD%A5%E4%BA%91%E7%9B%98Nextcloud/</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>本次搭建使用<code>LAMP</code>运行环境：</p><ul><li>L: Open SUSE Linux 15</li><li>A: apache2</li><li>M: MariaDB</li><li>P: PHP7</li></ul><span id="more"></span><h2 id="系统安装命令准备"><a href="#系统安装命令准备" class="headerlink" title="系统安装命令准备"></a>系统安装命令准备</h2><p>更新命令<code>zypper</code>的源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper ref</span><br></pre></td></tr></table></figure><p>添加源，使用命令 zypper addrepo -f [URL] [Alias] （Alias是自己给这个源随便定义的英文名）添加软件源并开启自动刷新，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper addrepo -f http://mirrors.163.com/openSUSE/update/11.1/ main</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper addrepo -f http://mirrors.163.com/openSUSE/distribution/11.1/repo/non-oss/ nonoss</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper addrepo -f http://mirrors.163.com/openSUSE/distribution/11.1/repo/oss/ oss</span><br></pre></td></tr></table></figure><p>删除源，使用命令 zypper rs [name]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper rs name</span><br></pre></td></tr></table></figure><h2 id="安装apache2"><a href="#安装apache2" class="headerlink" title="安装apache2"></a>安装apache2</h2><p>切换为root用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo</span><br></pre></td></tr></table></figure><p>安装 apache2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper in apache2</span><br></pre></td></tr></table></figure><p>启动 apache2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start apache2</span><br></pre></td></tr></table></figure><p>停止 apache2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop apache2</span><br></pre></td></tr></table></figure><p>重启 apache2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart apache2</span><br></pre></td></tr></table></figure><p>系统重启后自动启动 apache 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable apache2</span><br></pre></td></tr></table></figure><h3 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h3><p>为了检查你的apache2服务是否正常工作，使用<code>touch</code>命令在<code>/srv/www/htdocs/</code>文件夹下创建一个文件名为<code>index.html</code>的文件，写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;body&gt;&lt;h1&gt;Welcome to my web site!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>之后在浏览器访问 <code>http://localhost</code> ，如果正常可以看到大字标题 Welcome to my web site!</p><h3 id="启用web服务可以外部访问"><a href="#启用web服务可以外部访问" class="headerlink" title="启用web服务可以外部访问"></a>启用web服务可以外部访问</h3><p>需要在防火墙中开启http(80)端口，apache默认使用80端口。</p><h2 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h2><p>root权限下，执行下面命令安装php7：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper in php7 php7-mysql apache2-mod_php7</span><br></pre></td></tr></table></figure><p>启用mod-php通过运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a2enmod php7</span><br></pre></td></tr></table></figure><h3 id="安装php7的扩展"><a href="#安装php7的扩展" class="headerlink" title="安装php7的扩展"></a>安装php7的扩展</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper in php7-bcmath php7-opcache php7-bz2 php7-calendar php7-ctype php7-curl php7-dom php7-ftp php7-gd php7-gettext php7-gmp php7-iconv php7-imap php7-ldap php7-mbstring php7-mcrypt php7-odbc php7-openssl php7-pcntl php7-pgsql php7-posix php7-shmop php7-snmp php7-soap php7-sockets php7-sqlite php7-sysvsem php7-tokenizer php7-wddx php7-xmlrpc php7-xsl php7-zlib php7-exif php7-fastcgi php7-pear php7-sysvmsg php7-sysvshm php7-zip php7-intl</span><br></pre></td></tr></table></figure><h3 id="重启web服务器"><a href="#重启web服务器" class="headerlink" title="重启web服务器"></a>重启web服务器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart apache2</span><br></pre></td></tr></table></figure><h3 id="测试安装-1"><a href="#测试安装-1" class="headerlink" title="测试安装"></a>测试安装</h3><p>为了验证php是否已经在运行,在<code>/srv/www/htdocs/</code>文件夹下创建一个<code>index.php</code>的文件，并写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>使用浏览器访问 <code>http://localhost</code> ,你应该可以看到一个页面包含一个表格显示所有的PHP设置。</p><h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><p>MariaDB 是一个MySQL的代替品，而且也是使用的mysql名称。<br>root权限下，执行下面命令安装<code>mariadb</code>和<code>mariadb-tools</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper in mariadb mariadb-tools</span><br></pre></td></tr></table></figure><p>mariadb-tools 是MariaDB的管理工具集。<br>启动MariaDB服务，运行:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysql</span><br></pre></td></tr></table></figure><p>停止 mysql：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysql</span><br></pre></td></tr></table></figure><p>重启 mysql：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure><p>系统重启后自动启动 mysql 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysql</span><br></pre></td></tr></table></figure><h3 id="配置-MariaDB-x2F-MySql-服务和-Leap-42-1"><a href="#配置-MariaDB-x2F-MySql-服务和-Leap-42-1" class="headerlink" title="配置 MariaDB&#x2F;MySql 服务和 Leap 42.1"></a>配置 MariaDB&#x2F;MySql 服务和 Leap 42.1</h3><p>通过配置 MariaDB 服务提高安全性，请使用openSUSE提供的脚本<code>mysql_secure_installation</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>执行后显示：</p><pre><code>root # mysql_secure_installationNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDBSERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#39;ll need the current password for the root user. If you&#39;ve just installed MariaDB, and you haven&#39;t set the root password yet, the password will be blank, so you should just press enter here.Enter current password for root (enter for none):</code></pre><p>按回车(Enter)键：</p><blockquote><p>如果无法正常执行到下一步，则在 <code>/etc/my.cnf</code> 文件中加入 <code>skip-grant-tables</code> ，保存并重启mysql服务。</p></blockquote><pre><code>root #... (output sequel of previous command)OK, successfully used password, moving on...Setting the root password ensures that nobody can log into the MariaDB root user without the proper authorisation.Set root password? [Y/n] y</code></pre><p>输入y：</p><pre><code>root #... (output sequel of previous command)New password:</code></pre><p>输入给root用户的密码：</p><pre><code>root #... (output sequel of previous command)Re-enter new password:</code></pre><p>输入确认密码：</p><pre><code>root #... (output sequel of previous command)Password updated successfully!Reloading privilege tables.. ... Success! By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without having to have a user account created for them. This is intended only for testing, and to make the installation go a bit smoother. You should remove them before moving into a production environment.Remove anonymous users? [Y/n]</code></pre><p>输入y来移除匿名用户：</p><pre><code>root #... (output sequel of previous command)... Success!Normally, root should only be allowed to connect from &#39;localhost&#39;. This ensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y/n]</code></pre><p>输入y：</p><pre><code>root #... (output sequel of previous command)... Success!By default, MariaDB comes with a database named &#39;test&#39; that anyone can access. This is also intended only for testing, and should be removed before moving into a production environment.Remove test database and access to it? [Y/n]</code></pre><p>输入y：</p><pre><code>root #... (output sequel of previous command)- Dropping test database...... Success! - Removing privileges on test database... ... Success! Reloading the privilege tables will ensure that all changes made so far will take effect immediately.Reload privilege tables now? [Y/n]</code></pre><p>输入y，最后输出下面内容，表示成功：</p><pre><code>... Success!Cleaning up...All done!  If you&#39;ve completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB!</code></pre><h3 id="安装-phpMyAdmin"><a href="#安装-phpMyAdmin" class="headerlink" title="安装 phpMyAdmin"></a>安装 phpMyAdmin</h3><p>执行下面命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper in phpMyAdmin</span><br></pre></td></tr></table></figure><p>安装完成后重启apache2服务。<br>登录到phpMyAdmin：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/phpMyAdmin</span><br></pre></td></tr></table></figure><p>输入mysql服务的用户名root和root的密码，点击登录。</p><h3 id="给Nextcloud创建数据库"><a href="#给Nextcloud创建数据库" class="headerlink" title="给Nextcloud创建数据库"></a>给Nextcloud创建数据库</h3><p>在这里，以用户root登录phpMyAdmin后，创建一个新的数据库 ‘nextcloud’ 即可。</p><h2 id="安装Nextcloud"><a href="#安装Nextcloud" class="headerlink" title="安装Nextcloud"></a>安装Nextcloud</h2><p>从<a href="https://nextcloud.com/">官网</a>下载Nextcloud，这里下载的是：<a href="https://download.nextcloud.com/server/releases/nextcloud-19.0.1.zip">https://download.nextcloud.com/server/releases/nextcloud-19.0.1.zip</a><br>上传下载好的压缩包<code>nextcloud-19.0.1.zip</code>到目录<code>/srv/www/htdocs/</code>下，并解压：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /srv/www/htdocs/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upzip nextcloud-19.0.1.zip</span><br></pre></td></tr></table></figure><p>删除压缩包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm nextcloud-19.0.1.zip</span><br></pre></td></tr></table></figure><p>新建一个data文件夹，用于存放文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /srv/www/htdocs/nextcloud/data</span><br></pre></td></tr></table></figure><p>给nextcloud目录赋权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 nextcloud -Rf</span><br></pre></td></tr></table></figure><h3 id="访问Nextcloud"><a href="#访问Nextcloud" class="headerlink" title="访问Nextcloud"></a>访问Nextcloud</h3><p>访问地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/nextcloud</span><br></pre></td></tr></table></figure><p>访问成功后：</p><ul><li>在页面的最上面输入需要给Nextcolud创建的管理员账号和密码</li><li>选择数据存放的位置位刚才新建的data文件夹</li><li>选择数据库MySQL&#x2F;MariaDB，输入数据库的账号，密码，数据库名称</li><li>本地搭建的最后一项一般都填localhost和端口</li></ul><p>最后，点击安装完成。</p><blockquote><p>如果安装时出现如下错误：<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nextcloud install Error while trying to initialise the database: An exception occurred while executing a query: SQLSTATE[HY000]: General error: 4047 InnoDB refuses to write tables with ROW_FORMAT=COMPRESSED or KEY_BLOCK_SIZE.</span><br><span class="line">```  </span><br><span class="line">解决方法：  </span><br><span class="line">1. 进入mariadb控制台，键入以下命令并回车；  </span><br></pre></td></tr></table></figure><br>    mysql -u root -p<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2. 输入mariadb的root密码，回车登录；  </span><br><span class="line">3. 输入以下命令并回车；  </span><br></pre></td></tr></table></figure><br>    SET GLOBAL innodb_read_only_compressed&#x3D;OFF;<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4. 这时候再次注册nextcloud，发现成功解决。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; 如果出现如下错误：  </span><br></pre></td></tr></table></figure><br>    Your Data directory is invalid 请确保文件根目录下包含有一个名为“.ocdata”的文件。<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解决方法：  </span><br><span class="line">使用以下命令更改目录权限即可  </span><br></pre></td></tr></table></figure><br>    chown -R username:groupname &#x2F;path&#x2F;to&#x2F;folder<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">待安装完成后，访问 `http://localhost/nextcloud` ，输入刚刚设置的管理员账号密码登录即可使用。</span><br><span class="line"></span><br><span class="line">### 关闭数据目录权限检查</span><br><span class="line">打开配置文件：</span><br></pre></td></tr></table></figure><br>vim &#x2F;srv&#x2F;www&#x2F;htdocs&#x2F;nextcloud&#x2F;config&#x2F;config.php</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在最后加入：</span><br></pre></td></tr></table></figure><p>‘check_data_directory_permissions’ &#x3D;&gt; false,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">## Nextcloud优化</span><br><span class="line">### 设置后台任务，cron执行</span><br><span class="line">启用wwwrun用户（如已经启用可以忽略，根据自己web服务的用户组和用户而定）</span><br><span class="line">在root用户下执行</span><br></pre></td></tr></table></figure><p>crontab -u wwwrun -e</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">追加以下内容：</span><br></pre></td></tr></table></figure><p>*&#x2F;5 * * * * php -f &#x2F;srv&#x2F;www&#x2F;htdocs&#x2F;nextcloud&#x2F;cron.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 注意 cron.php 的权限：chown -R wwwrun:www cron.php</span><br><span class="line">测试执行任务：</span><br></pre></td></tr></table></figure><p>sudo -u wwwrun php  -f &#x2F;srv&#x2F;www&#x2F;htdocs&#x2F;nextcloud&#x2F;cron.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可参考crontab命令用法：</span><br><span class="line">1)设置定时器的设置文件, 文件名称为mycronset.txt(名称可自行设定)</span><br></pre></td></tr></table></figure><p>cat mycronset.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">      0   4   *   *   *     root    updatedb           #每天早上4:00以root用户身份执行updatedb命令</span><br><span class="line">      0   4   *   *   *     root    sendmail -q        #每天早上4:00以root用户身份执行updatedb命令</span><br><span class="line">     </span><br><span class="line">使用自定义的crontab设置,指定使用者为tom用户</span><br></pre></td></tr></table></figure><p>crontab -u tom mycronset.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2)列出当前定时器的设置</span><br></pre></td></tr></table></figure><p>crontab -l</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3)编辑用户定时器的设置文件</span><br></pre></td></tr></table></figure><p>crontab -e</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4)删除定时器设置</span><br></pre></td></tr></table></figure><p>crontab -r </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 配置缓存</span><br><span class="line">此处利用APCu+memcache实现缓存，具体做法是在配置文件`/srv/www/htdocs/nextcloud/config/config.php`中，加入下面设置：</span><br></pre></td></tr></table></figure><p>‘memcache.local’ &#x3D;&gt; ‘\OC\Memcache\APCu’,<br>‘memcache.distributed’ &#x3D;&gt; ‘\OC\Memcache\Memcached’,<br>‘memcached_servers’ &#x3D;&gt;<br>array(<br>      array(‘localhost’, 11211),<br>),</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果尚未安装APCu或memcache，请参考下面内容安装：</span><br><span class="line">#### 安装APCu</span><br><span class="line">依次执行下面命令安装：</span><br></pre></td></tr></table></figure><p>cd &#x2F;tmp&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">tar -zxvf apcu-5.1.18.tgz</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd apcu-5.1.18/ </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpize</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-php-config=/usr/bin/php-config</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><blockquote><p>在执行<code>phpize</code>命令后，如果提示没有phpize命令，则执行下面命令安装所需的phpize：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper in php7-devel</span><br></pre></td></tr></table></figure><p>最后配置php.ini：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php7/apache2/php.ini</span><br></pre></td></tr></table></figure><p>在php.ini的最后加入以下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extension = apcu.so</span><br><span class="line">apc.enabled = on</span><br><span class="line">apc.shm_size = 64M</span><br><span class="line">apc.ttl = 7200</span><br><span class="line">apc.enable_cli = on</span><br></pre></td></tr></table></figure><h4 id="安装memcache"><a href="#安装memcache" class="headerlink" title="安装memcache"></a>安装memcache</h4><p>Memcached会用到libevent这个库来进行Socket的处理，所以先安装libevent。</p><h5 id="1-先装libevent"><a href="#1-先装libevent" class="headerlink" title="1. 先装libevent"></a>1. 先装libevent</h5><p>安装包的官网下载地址：<a href="https://libevent.org/">https://libevent.org/</a><br>依次执行下面命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf libevent-2.1.12-stable.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd libevent-2.1.12-stable/ </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix=/usr</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><blockquote><p>在执行<code>./configure -prefix=/usr</code>命令后，如果报错：<code>configure: error: openssl is a must but can not be found</code>，则执行下面命令安装所需的openssl：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper in openssl-devel</span><br></pre></td></tr></table></figure><p>测试libevent是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al /usr/lib | grep libevent</span><br></pre></td></tr></table></figure><h5 id="2-再装memcache"><a href="#2-再装memcache" class="headerlink" title="2. 再装memcache"></a>2. 再装memcache</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf memcached-1.6.6.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd memcached-1.6.6/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix=/usr  -with-libevent=/usr</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p>测试memcache是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al /usr/local/bin/mem*</span><br></pre></td></tr></table></figure><h5 id="3-启动Memcached服务"><a href="#3-启动Memcached服务" class="headerlink" title="3. 启动Memcached服务"></a>3. 启动Memcached服务</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">memcached -d -m 10 -u root -l 10.1.90.40 -p 12000 -c 256 -P /home/javadev/memcached_pid/</span><br></pre></td></tr></table></figure><blockquote><p>-d选项是启动一个守护进程，<br>-m是分配给Memcache使用的内存数量，单位是MB，我这里是10MB，<br>-u是运行Memcache的用户，我这里是root，<br>-l是监听的服务器IP地址，如果有多个地址的话，我这里指定了服务器的IP地址192.168.1.132，<br>-p是设置Memcache监听的端口，我这里设置了12000，最好是1024以上的端口，<br>-c选项是最大运行的并发连接数，默认是1024，我这里设置了256，按照你服务器的负载量来设定，<br>-P是设置保存Memcache的pid文件，我这里是保存在 &#x2F;home&#x2F;javadev&#x2F;m emcached_pid&#x2F;</p></blockquote><p>使用命令查看启动的memcached服务进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep memcached</span><br></pre></td></tr></table></figure><p>启动成功后如下：</p><pre><code>root     26084     1  0 14:41 ?        00:00:00 memcached -d -m 10 -u root -l 10.1.90.40 -p 12000 -c 256 -P /home/javadev/memcached_pid/root     26095  9798  0 14:41 pts/0    00:00:00 grep --color=auto memcached</code></pre><h2 id="OCC命令的用法"><a href="#OCC命令的用法" class="headerlink" title="OCC命令的用法"></a>OCC命令的用法</h2><p>occ命令是ownCloud&#x2F;Nextcloud的命令行界面。您可以使用occ执行许多常见的服务器操作，例如安装和升级ownCloud&#x2F;Nextcloud，管理用户，加密，密码，LDAP设置等。<br>一般格式是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u www-data php occ [options] [arguments]</span><br></pre></td></tr></table></figure><p>更多命令可参考：<a href="https://www.orgleaf.com/1719.html">ownCloud&#x2F;Nextcloud OCC命令行工具详解</a></p><h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p>user相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user:add                            添加一个用户</span><br><span class="line">user:delete                         删除特定用户</span><br><span class="line">user:disable                        禁用特定用户</span><br><span class="line">user:enable                         激活特定用户</span><br><span class="line">user:info                           显示用户信息</span><br><span class="line">user:lastseen                       显示用户最后登陆了时间</span><br><span class="line">user:list                           列出所有用户</span><br><span class="line">user:report                         显示有多少用户访问</span><br><span class="line">user:resetpassword                  为一个用户重置密码</span><br><span class="line">user:setting                        读取和修改用户设置</span><br></pre></td></tr></table></figure><p>假如管理员密码忘了，可利用OCC命令按以下步骤重置：</p><ol><li>进入nextcloud目录下</li><li>查看已有用户名列表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u wwwrun php occ user:list</span><br></pre></td></tr></table></figure></li><li>重置管理员账号admin的密码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u wwwrun php occ user:resetpassword admin</span><br></pre></td></tr></table></figure></li><li>按提示输入新密码即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10的秘密</title>
      <link href="/2020/07/22/Windows10%E7%9A%84%E7%A7%98%E5%AF%86/"/>
      <url>/2020/07/22/Windows10%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="如何获取锁屏动态壁纸？"><a href="#如何获取锁屏动态壁纸？" class="headerlink" title="如何获取锁屏动态壁纸？"></a>如何获取锁屏动态壁纸？</h1><p>Win10的锁屏动态壁纸每天都会更新，更新后是缓存在如下位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets</span><br></pre></td></tr></table></figure><p>其中，<code>Administrator</code> 是你的用户名。打开后重命名里面的文件，增加后缀名<code>.jpg</code>，即可看见你刚刚钟意的壁纸。</p><h1 id="设置任务栏透明效果"><a href="#设置任务栏透明效果" class="headerlink" title="设置任务栏透明效果"></a>设置任务栏透明效果</h1><ol><li>设置 -&gt; 颜色 -&gt; 打开“透明效果”开关</li><li>打开注册表，找到路径： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced</span><br></pre></td></tr></table></figure></li><li>右侧找到名称 TaskbarAcrylicOpacity，如果没有，就右键新建一个DWORD（32位）值D</li><li>将值修改为十进制 0 就是全透明，也可以是十进制0-10之间的效果</li><li>不用重启电脑，在任务管理器重启“windows资源管理器”就生效</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令大全</title>
      <link href="/2020/06/25/Git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2020/06/25/Git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/screenshots/Git%E8%B5%84%E6%BA%90%E5%BA%93%E5%9B%BE%E8%A7%A3.jpg" alt="Git"></p><span id="more"></span><p><img src="/img/screenshots/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8.jpg" alt="Git常用命令速查表"></p><h2 id="git常识"><a href="#git常识" class="headerlink" title="git常识"></a>git常识</h2><ul><li>Git专用名词<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Workspace：    工作区</span><br><span class="line">Index / Stage：暂存区</span><br><span class="line">Repository：   仓库区（或本地仓库）</span><br><span class="line">Remote：       远程仓库</span><br><span class="line">branch:        分支</span><br></pre></td></tr></table></figure></li></ul><h2 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h2><h3 id="添加当前目录的所有文件到暂存区"><a href="#添加当前目录的所有文件到暂存区" class="headerlink" title="添加当前目录的所有文件到暂存区"></a>添加当前目录的所有文件到暂存区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit - m [message]</span><br></pre></td></tr></table></figure><h3 id="推送本地指定分支到远程仓库"><a href="#推送本地指定分支到远程仓库" class="headerlink" title="推送本地指定分支到远程仓库"></a>推送本地指定分支到远程仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [remote] [branch]</span><br></pre></td></tr></table></figure><blockquote><p>也可以将以上命令用连接符<code>&amp;&amp;</code>连接起来一起执行</p></blockquote><h2 id="git其它命令"><a href="#git其它命令" class="headerlink" title="git其它命令"></a>git其它命令</h2><h3 id="强行推送当前分支到远程仓库，即使有冲突"><a href="#强行推送当前分支到远程仓库，即使有冲突" class="headerlink" title="强行推送当前分支到远程仓库，即使有冲突"></a>强行推送当前分支到远程仓库，即使有冲突</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [remote] --force</span><br></pre></td></tr></table></figure><p>例如，进入分支<code>source</code>目录下，执行如下命令，推送本地<code>source</code>覆盖远程<code>source</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin source --force</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin source:source -f</span><br></pre></td></tr></table></figure><h3 id="取回远程仓库的变化，并与本地分支合并"><a href="#取回远程仓库的变化，并与本地分支合并" class="headerlink" title="取回远程仓库的变化，并与本地分支合并"></a>取回远程仓库的变化，并与本地分支合并</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull [remote] [branch]</span><br></pre></td></tr></table></figure><h3 id="下载一个项目和它的整个代码历史"><a href="#下载一个项目和它的整个代码历史" class="headerlink" title="下载一个项目和它的整个代码历史"></a>下载一个项目和它的整个代码历史</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone [url]</span><br></pre></td></tr></table></figure><h3 id="git中提交了想要忽略的文件，如何再删除"><a href="#git中提交了想要忽略的文件，如何再删除" class="headerlink" title="git中提交了想要忽略的文件，如何再删除"></a>git中提交了想要忽略的文件，如何再删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached 文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached 文件夹 -r</span><br></pre></td></tr></table></figure><blockquote><p>-f 表示强制删除<br>-r 表示递归删除</p></blockquote><p>删除完成后提交修改，远程git仓库里想要忽略的文件就会成功删除。</p><h3 id="从仓库中删除文件-x2F-文件夹，以及历史记录"><a href="#从仓库中删除文件-x2F-文件夹，以及历史记录" class="headerlink" title="从仓库中删除文件&#x2F;文件夹，以及历史记录"></a>从仓库中删除文件&#x2F;文件夹，以及历史记录</h3><ol><li>从仓库中删除文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --force --index-filter &#x27;git rm --cached -r --ignore-unmatch xxOffline/download&#x27; --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure><blockquote><p>com&#x2F;download 表示要删除的文件或文件夹的相对路径(相对于git仓库的跟目录)<br>-r 表示如果删除文件夹，则递归删除（子）文件夹和文件夹下的所有文件</p></blockquote></li><li>推送修改后的仓库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --force --all</span><br></pre></td></tr></table></figure></li><li>清理和回收空间<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .git/refs/original/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog expire --expire=now --all</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git gc --prune=now</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git gc --aggressive --prune=now</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客更换NexT主题</title>
      <link href="/2020/06/20/Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2NexT%E4%B8%BB%E9%A2%98/"/>
      <url>/2020/06/20/Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2NexT%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>旧的主题因为缺少文章目录，在使用收藏页时总是很不方便，故将主题切换为NexT，这次主要在默认样式基础上做了以下调整：</p><ul><li>设置 博客版式：scheme: Gemini</li><li>设置 博客图标：favicon</li><li>设置 侧边栏头像：avatar</li><li>设置 社交链接：social</li><li>设置 友情链接：links</li><li>关闭 底部由 hexo 强力驱动的广告：powered</li><li>开启 文章阅读更多按钮：read_more_btn</li><li>开启 代码块复制按钮：copy_button</li><li>开启 阅读进度：reading_progress</li><li>开启 回到顶部：back2top</li><li>开启 字数统计：symbols_count_time</li><li>开启 打赏：reward_settings</li><li>开启 知识共享和版权信息：creative_commons</li><li>开启 不蒜子统计：busuanzi_count</li><li>开启 本地搜索：local_search</li><li>开启 数学公式支持：math</li><li>开启 页面鼠标单击效果：”themes\next\_config.yml”: cursor_effect</li><li>增加 博客菜单收藏、相册：menu</li><li>增加 图片点击放大效果：”source\photos\index.md”</li><li>增加 看板娘：”_config.yml”: live2d</li><li>增加 文章结束语：”themes\next\languages\zh-CN.yml”</li><li>增加 网易云音乐：”themes\next\layout_macro\sidebar.njk”</li><li>增加 网站已运行时间：”themes\next\layout_partials\footer.njk”</li><li>增加 一言：”themes\next\layout\_partials\sidebar\site-overview.njk”</li><li>增加 页签标题崩溃特效：”themes\next\layout\ypn-layout\ypn.custom.njk”</li><li>增加 收藏页输入框特效：”themes\next\layout\ypn-layout\ypn.custom.njk”</li><li>增加 收藏页按钮动作：”themes\next\layout\ypn-layout\ypn.custom.njk”</li><li>增加 动态线条背景：”themes\next\layout\ypn-layout\ypn.custom.njk”</li><li>增加 自定义CSS：”themes\next\source\css\ypn.css\APlayer.min.css”</li><li>增加 自定义JS：”themes\next\source\js\ypn.js”</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UNIX命令大全</title>
      <link href="/2020/04/10/UNIX%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2020/04/10/UNIX%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-root登陆"><a href="#1-root登陆" class="headerlink" title="1. root登陆"></a>1. root登陆</h1><p>一般系统不允许root登陆 ，可以用另一个用户登陆后再用 su 切换到root用户<br>如：</p><pre><code>zhgj-dc-/tmp/108434-17&gt; su #回车Password:   #输入密码 成了root登陆了</code></pre><span id="more"></span><h1 id="2-solaris补丁的安装"><a href="#2-solaris补丁的安装" class="headerlink" title="2. solaris补丁的安装"></a>2. solaris补丁的安装</h1><p>solaris的补丁分为两类，一类是Point补丁，另一类是Cluster补丁</p><pre><code>ls /var/sadm/patch #查看安装的补丁</code></pre><p>patchadd用来安装解压缩后的补丁程序。patchadd通过调用pkgadd 命令来安装补丁。安装补丁前，我们需要将补丁解压到&#x2F;var&#x2F;tmp下安装。安装补丁如下命令： </p><pre><code>cd /var/tmppatchadd 110668-04</code></pre><p>同样，solaris提供了另一命令来查看已安装的patch：</p><pre><code>showrev -p</code></pre><p>补丁的卸载用pkgrm 命令</p><h1 id="3-cp"><a href="#3-cp" class="headerlink" title="3. cp"></a>3. cp</h1><pre><code>cp &lt;源文件&gt; &lt;目的文件&gt; </code></pre><p>相当于DOS的copy,和DOS的copy不一样的是,必须指定源文件名和目的文件名.cp -r &lt;源文件&gt; &lt;目的文件&gt; 相当于DOS的xcopy,带子目录的拷贝.例如:cp file1 file2 将文件 file1 复制成 file2 </p><pre><code>cp file1 dir1 将文件 file1 复制到目录 dir1 下,文件名仍为 file1. cp -r /tmp/file1 . 将目录 /tmp 下的文件 file1 复制到当前目录下，文件名仍为 file1。 注意有个.cp /tmp/file1 file2 将目录 /tmp 下的文件 file1 复制到现行目录下，文件名为 file2 cp -r dir1 dir2 复制整个目录。若目录 dir2 已经存在，则将目录 dir1，及其所有文件和子目录，复制到目录 dir2 下，新目录名称为 dir1，即dir2/dir1。若目录 dir2 不存在，则将dir1，及其所有文件和子目录，复制为目录 dir2。 </code></pre><h1 id="4-ftp命令"><a href="#4-ftp命令" class="headerlink" title="4. ftp命令"></a>4. ftp命令</h1><pre><code>ftp ip</code></pre><p>输入用户名<br>输入密码</p><pre><code>bi（改成2进制）get 文件名 #下载文件</code></pre><h1 id="5-查看磁盘空间"><a href="#5-查看磁盘空间" class="headerlink" title="5. 查看磁盘空间"></a>5. 查看磁盘空间</h1><pre><code>df -k</code></pre><p>保证以下几个磁盘分区的使用率最多不超过60％：</p><pre><code>/opt，/var，/tmp</code></pre><p>如果发现使用率过高的磁盘，在相应目录下执行命令：</p><pre><code>du -k</code></pre><p>找出大的文件和目录，对无用的文件执行删除操作。</p><h1 id="6-打包、压缩、解压"><a href="#6-打包、压缩、解压" class="headerlink" title="6. 打包、压缩、解压"></a>6. 打包、压缩、解压</h1><p>.tar</p><pre><code>解包：tar -xvf FileName.tar打包：tar -cvf FileName.tar DirName（打包目录）</code></pre><p>（注：tar是打包，不是压缩！）</p><p>.Z</p><pre><code>解压：uncompress FileName.Z压缩：compress FileName</code></pre><p>.zip</p><pre><code>解压：unzip FileName.zip压缩：zip FileName.zip DirName</code></pre><p>.gz</p><pre><code>解压1：gunzip FileName.gz解压2：gzip -d FileName.gz压缩：gzip FileName.tar.gz解压：tar zxvf FileName.tar.gz压缩：tar zcvf FileName.tar.gz DirName</code></pre><p>.bz2</p><pre><code>解压1：bzip2 -d FileName.bz2解压2：bunzip2 FileName.bz2压缩： bzip2 -z FileName.tar.bz2解压：tar jxvf FileName.tar.bz2压缩：tar jcvf FileName.tar.bz2 DirName</code></pre><p>.bz</p><pre><code>解压1：bzip2 -d FileName.bz解压2：bunzip2 FileName.bz压缩：未知.tar.bz解压：tar jxvf FileName.tar.bz压缩：未知</code></pre><p>.tar.Z</p><pre><code>解压：tar Zxvf FileName.tar.Z压缩：tar Zcvf FileName.tar.Z DirName</code></pre><p>.tgz</p><pre><code>解压：tar zxvf FileName.tgz压缩：未知.tar.tgz解压：tar zxvf FileName.tar.tgz压缩：tar zcvf FileName.tar.tgz FileName</code></pre><p>.rar</p><pre><code>解压：rar a FileName.rar压缩：r ar e FileName.rar</code></pre><h1 id="7-创建文件"><a href="#7-创建文件" class="headerlink" title="7. 创建文件"></a>7. 创建文件</h1><pre><code>mkdir aa #建立aa文件夹（目录）</code></pre><h1 id="8-进informix-数据库，查看数据库"><a href="#8-进informix-数据库，查看数据库" class="headerlink" title="8. 进informix 数据库，查看数据库"></a>8. 进informix 数据库，查看数据库</h1><pre><code>dbaccess 进入数据库 回车进入下一层 最底层退出点Esc 在点回车 退出 其选择exitdbaccess 确定将要备份的数据库名称：dbaccess回车 database 回车select 再回车可以看到所有数据库名称</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> UNIX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之vi命令</title>
      <link href="/2020/04/10/Linux%E4%B9%8Bvi%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/04/10/Linux%E4%B9%8Bvi%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="vi全屏幕编辑器"><a href="#vi全屏幕编辑器" class="headerlink" title="vi全屏幕编辑器"></a>vi全屏幕编辑器</h1><p><img src="/img/screenshots/vi%E9%94%AE%E7%9B%98%E5%9B%BE.png" alt="vi键盘图"></p><span id="more"></span><p>vi(Visual)是以视觉为导向的全屏幕编辑器、共分为三种方式（mode):</p><ul><li>command方式：<br>任何输入都会作为编辑命令，而不会出现在屏幕上，若输入错误则有“岬”的声音；任何输入都引起立即反映。</li><li>insert方式：<br>任何输入的数据都置于编辑寄存器。在command方式下输入（I,a,A等）,可进入insert方式，insert方式下按ESC，可跳回command方式。</li><li>escape方式：<br>以“：”或者“&#x2F;”为前导的指令，出现在屏幕的最下一行，任何输入都被当成特别指令。</li></ul><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td><strong>进入vi</strong></td><td align="left"></td></tr><tr><td>vi filename</td><td align="left">打开或新建文件，并将光标置于第一行首</td></tr><tr><td>vi +n filename</td><td align="left">打开文件，并将光标置于第n行首</td></tr><tr><td>vi + filename</td><td align="left">打开文件，并将光标置于最后一行首</td></tr><tr><td>vi +&#x2F;pattern filename</td><td align="left">打开文件，并将光标置于第一个与pattern匹配的串处</td></tr><tr><td>vi -r filename</td><td align="left">在上次正用vi编辑时发生系统崩溃，恢复filename</td></tr><tr><td>vi filename….filename</td><td align="left">打开多个文件，依次进行编辑</td></tr><tr><td>vi filename(s) </td><td align="left">进入vi并且将各指定文件列入名单内，第一个文件先读入</td></tr><tr><td>vedit</td><td align="left">进入vi并且在输入方式时会在状态行显示“INSERT MODE”</td></tr><tr><td><strong>编辑数个文件（利用vi filename(s))进入vi后）</strong></td><td align="left"></td></tr><tr><td>:args </td><td align="left">显示编辑名单中的各个文件名</td></tr><tr><td>:n</td><td align="left">读入编辑名单中的下一个文件</td></tr><tr><td>:rew</td><td align="left">读入编辑名单中的第一个文件</td></tr><tr><td>:e# </td><td align="left">读入编辑名单内的前一个文件</td></tr><tr><td>:e file </td><td align="left">读入另一个文件进vi(此文件可不在编辑名单内）,若原文件经修改还没有存档，则应先以: w 存档</td></tr><tr><td>:e! file</td><td align="left">强迫读入另一个文件进入vi，原文件不作存档动作</td></tr><tr><td><strong>保存退出</strong></td><td align="left"></td></tr><tr><td>:</td><td align="left">进入Last line mode</td></tr><tr><td>w</td><td align="left">保存当前文件</td></tr><tr><td>w &#x2F;tmp1</td><td align="left">另存为&#x2F;tmp1</td></tr><tr><td>20,59w &#x2F;tmp1</td><td align="left">仅将20-59行之间的内存另存为&#x2F;tmp1</td></tr><tr><td>x 或 wq</td><td align="left">保存并退出</td></tr><tr><td>q</td><td align="left">退出vi</td></tr><tr><td>q!</td><td align="left">退出不保存</td></tr><tr><td>!command</td><td align="left">执行shell命令command</td></tr><tr><td>n1,n2 w !command</td><td align="left">将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</td></tr><tr><td>r !command</td><td align="left">将命令command的输出结果放到当前行</td></tr><tr><td>w !sudo tee %</td><td align="left">保存没权限时，可获取权限再保存</td></tr><tr><td><strong>光标移动</strong></td><td align="left"></td></tr><tr><td>h</td><td align="left">光标左移一个字符</td></tr><tr><td>Backspace</td><td align="left">光标左移一个字符</td></tr><tr><td>l</td><td align="left">光标右移一个字符</td></tr><tr><td>spac</td><td align="left">光标右移一个字符</td></tr><tr><td>k 或 Ctrl+p</td><td align="left">光标上移一行</td></tr><tr><td>j 或 Ctrl+n</td><td align="left">光标下移一行</td></tr><tr><td>Enter</td><td align="left">光标下移一行</td></tr><tr><td>w 或 W</td><td align="left">光标右移一个字至字首</td></tr><tr><td>b 或 B</td><td align="left">光标左移一个字至字首</td></tr><tr><td>e 或 E</td><td align="left">光标右移一个字至字尾</td></tr><tr><td>)</td><td align="left">光标移至句尾</td></tr><tr><td>(</td><td align="left">光标移至句首</td></tr><tr><td>}</td><td align="left">光标移至段落开头</td></tr><tr><td>{</td><td align="left">光标移至段落结尾</td></tr><tr><td>nG</td><td align="left">光标移至第n行首</td></tr><tr><td>n+</td><td align="left">光标下移n行</td></tr><tr><td>n-</td><td align="left">光标上移n行</td></tr><tr><td>n$</td><td align="left">光标移至第n行尾</td></tr><tr><td>H</td><td align="left">光标移至屏幕顶行</td></tr><tr><td>M</td><td align="left">光标移至屏幕中间行</td></tr><tr><td>L</td><td align="left">光标移至屏幕最后行</td></tr><tr><td>0</td><td align="left">（注意是数字零）光标移至当前行首</td></tr><tr><td>$</td><td align="left">光标移至当前行尾</td></tr><tr><td><strong>屏幕翻滚</strong></td><td align="left"></td></tr><tr><td>Ctrl+u</td><td align="left">向文件首翻半屏</td></tr><tr><td>Ctrl+d</td><td align="left">向文件尾翻半屏</td></tr><tr><td>Ctrl+f</td><td align="left">向文件尾翻一屏</td></tr><tr><td>Ctrl+b</td><td align="left">向文件首翻一屏</td></tr><tr><td>nz</td><td align="left">将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td></tr><tr><td><strong>插入</strong></td><td align="left"></td></tr><tr><td>i</td><td align="left">在光标前</td></tr><tr><td>I</td><td align="left">在当前行首</td></tr><tr><td>a</td><td align="left">光标后</td></tr><tr><td>A</td><td align="left">在当前行尾</td></tr><tr><td>o</td><td align="left">在当前行之下新开一行</td></tr><tr><td>O</td><td align="left">在当前行之上新开一行</td></tr><tr><td>r</td><td align="left">替换当前字符</td></tr><tr><td>R</td><td align="left">替换当前字符及其后的字符，直至按ESC键</td></tr><tr><td>s</td><td align="left">从当前光标位置处开始，以输入的文本替代指定数目的字符</td></tr><tr><td>S</td><td align="left">删除指定数目的行，并以所输入文本代替之</td></tr><tr><td>ncw 或 nCW</td><td align="left">修改指定数目的字</td></tr><tr><td>nCC</td><td align="left">修改指定数目的行</td></tr><tr><td><strong>删除</strong></td><td align="left"></td></tr><tr><td>ndw 或 ndW</td><td align="left">删除光标处开始及其后的n-1个字</td></tr><tr><td>do</td><td align="left">删至行首</td></tr><tr><td>d$</td><td align="left">删至行尾</td></tr><tr><td>ndd</td><td align="left">删除当前行及其后n-1行</td></tr><tr><td>x 或 X</td><td align="left">删除一个字符，x删除光标后的，而X删除光标前的</td></tr><tr><td>Ctrl+u</td><td align="left">删除输入方式下所输入的文本</td></tr><tr><td>n1,n2 d</td><td align="left">将n1行到n2行之间的内容删除</td></tr><tr><td>%d</td><td align="left">删除全部内容</td></tr><tr><td>1,$d</td><td align="left">删除全部内容</td></tr><tr><td><strong>复制粘贴、剪切、移动</strong></td><td align="left"></td></tr><tr><td>yy</td><td align="left">复制当前行</td></tr><tr><td>nyy</td><td align="left">复制当前行开始的n行</td></tr><tr><td>先按 v 然后方向键选择区域，按 y 复制选中行</td><td align="left">复制选中行</td></tr><tr><td>dd</td><td align="left">剪切当前行</td></tr><tr><td>p（小）</td><td align="left">在当前光标处下面粘贴内容。</td></tr><tr><td>P（大）</td><td align="left">在当前光标处上面粘贴内容</td></tr><tr><td>n1,n2 co n3</td><td align="left">将n1行到n2行之间的内容拷贝到第n3行下</td></tr><tr><td>n1,n2 m n3</td><td align="left">将n1行到n2行之间的内容移至到第n3行下</td></tr><tr><td>u</td><td align="left">撤销上一步的操作</td></tr><tr><td>Ctrl+r</td><td align="left">恢复上一步被撤销的操作</td></tr><tr><td><strong>搜索（查找）</strong></td><td align="left"></td></tr><tr><td>&#x2F;abc</td><td align="left">从光标开始处向文件尾搜索abc</td></tr><tr><td>?abc</td><td align="left">从光标开始处向文件首搜索abc</td></tr><tr><td>&#x2F;/abc</td><td align="left">从光标开始处向文件尾搜索&#x2F;abc，其中/是转义</td></tr><tr><td>n</td><td align="left">在同一方向重复上一次搜索命令</td></tr><tr><td>N</td><td align="left">在反方向上重复上一次搜索命令</td></tr><tr><td><strong>替换</strong></td><td align="left"></td></tr><tr><td>s&#x2F;vivian&#x2F;sky&#x2F;</td><td align="left">替换当前行第一个 vivian 为 sky</td></tr><tr><td>s&#x2F;vivian&#x2F;sky&#x2F;g</td><td align="left">替换当前行所有 vivian 为 sky</td></tr><tr><td>n,$s&#x2F;vivian&#x2F;sky&#x2F;</td><td align="left">替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</td></tr><tr><td>n,$s&#x2F;vivian&#x2F;sky&#x2F;g</td><td align="left">替换第 n 行开始到最后一行中每一行所有 vivian 为sky</td></tr><tr><td>%s&#x2F;vivian&#x2F;sky&#x2F;g</td><td align="left">（等同于 g&#x2F;vivian&#x2F;s&#x2F;&#x2F;sky&#x2F;） 替换每一行的每一个 vivian 为 sky</td></tr><tr><td>s#vivian&#x2F;#sky&#x2F;#</td><td align="left">替换当前行第一个 vivian&#x2F; 为 sky&#x2F;（可以使用 #或+作为分隔符，此时中间出现的 &#x2F; 不会作为分隔符）</td></tr><tr><td>s&#x2F;p1&#x2F;p2&#x2F;g</td><td align="left">将当前行中所有p1均用p2替代</td></tr><tr><td>n1,n2s&#x2F;p1&#x2F;p2&#x2F;g</td><td align="left">将第n1至n2行中所有p1均用p2替代</td></tr><tr><td>g&#x2F;p1&#x2F;s&#x2F;&#x2F;p2&#x2F;g</td><td align="left">将文件中所有p1均用p2替换</td></tr><tr><td><strong>寄存器</strong></td><td align="left"></td></tr><tr><td>“?nyy</td><td align="left">将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?nyw</td><td align="left">将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?nyl</td><td align="left">将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</td></tr><tr><td>“?p</td><td align="left">取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td></tr><tr><td>ndd</td><td align="left">将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</td></tr><tr><td><strong>选项设置</strong></td><td align="left"></td></tr><tr><td>set number</td><td align="left">显示行号</td></tr><tr><td>set number!</td><td align="left">不显示行号，其它选项同理加！号</td></tr><tr><td>set all</td><td align="left">列出所有选项设置情况</td></tr><tr><td>set term</td><td align="left">设置终端类型</td></tr><tr><td>set ignorance</td><td align="left">在搜索中忽略大小写</td></tr><tr><td>set list</td><td align="left">显示制表位(Ctrl+I)和行尾标志（$)</td></tr><tr><td>set report</td><td align="left">显示由面向行的命令修改过的数目</td></tr><tr><td>set terse</td><td align="left">显示简短的警告信息</td></tr><tr><td>set warn</td><td align="left">在转到别的文件时若没保存当前文件则显示NO write信息</td></tr><tr><td>set nomagic</td><td align="left">允许在搜索模式中，使用前面不带“\”的特殊字符</td></tr><tr><td>set nowrapscan</td><td align="left">禁止vi在搜索到达文件两端时，又从另一端开始</td></tr><tr><td>set mesg</td><td align="left">允许vi显示其他用户用write写到自己终端上的信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之SUN常用命令</title>
      <link href="/2020/04/10/Linux%E4%B9%8BSUN%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/04/10/Linux%E4%B9%8BSUN%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>SUN系统管理员常用概念&#x2F;命令</p><span id="more"></span><h3 id="1-Solaris-操作系统"><a href="#1-Solaris-操作系统" class="headerlink" title="1. Solaris 操作系统"></a>1. Solaris 操作系统</h3><p>操作系统的版本：Solaris 1.x(sunos4.1.x)，Solaris 2.x(sunos 5.x)，Solaris 7，Solaris 8<br>特点：多用户，多任务(or 多进程，多线程)，分布式计算(处理)<br>应用：Client-Server方式中的服务器</p><ul><li>NFS Server，</li><li>Name services Server，</li><li>mail Server，</li><li>Operating system Server，</li><li>Database Server</li><li>Application Server</li></ul><h3 id="2-SUN-服务器体系结构"><a href="#2-SUN-服务器体系结构" class="headerlink" title="2. SUN 服务器体系结构"></a>2. SUN 服务器体系结构</h3><p>硬件(Hardware) –&gt; Solaris 系统内核(Kernel)–&gt;指令 Shell–&gt;应用软件(Applications)</p><ul><li>SUN 服务器的体系结构发展(Kernel and Application Architecture):<br>  [1] SPARC–&gt;[2] SuperSPARC–&gt;[3] UltraSPARC–&gt;[4] sun4c–&gt;[5] sun4m–&gt;[6] sun4u</li><li>常见硬件组成<br>  [1] 处理器 CUP，<br>  [2] 内存 Memory，<br>  [3] 系统总线 bus，<br>  [4] 硬盘 disk，<br>  [5] 显示器 monitor，<br>  [6] 键盘 keyboard，<br>  [7] 光驱 cdrom，<br>  [8] 磁带机 tape，<br>  [9] 网卡 net<br>  ……</li></ul><h3 id="3-Openboot-Prom-常用命令-及-Solaris-操作系统的安装"><a href="#3-Openboot-Prom-常用命令-及-Solaris-操作系统的安装" class="headerlink" title="3. Openboot(Prom) 常用命令 及 Solaris 操作系统的安装"></a>3. Openboot(Prom) 常用命令 及 Solaris 操作系统的安装</h3><p>Openboot(Prom) 常用命令：</p><pre><code>ok&gt; help             (帮助命令)ok&gt; banner           (显示系统hostid，memory，mac addr等nvrom配置信息)ok&gt; .version         (显示prom版本信息)ok&gt; devalias         (系统设备别名)例如：devalias cdrom1 /sbus/SUNW，fas@e8800000/sd@5，0 ok&gt; nvalias          (prom命令/信息别名)ok&gt; probe-scsi-all   (显示所有scsi设备)ok&gt; printenv         (显示prom系统环境变量)ok&gt; setenv           (设置prom系统环境变量)例如：setenv auto-boot false      setenv boot-device disk net cdrom ok&gt; set-defaults     (设置prom系统环境变量为缺省值)ok&gt; reset</code></pre><p>Solaris 操作系统的安装:</p><ul><li>从光盘启动，并安装操作系统命令:<br>  ok&gt; boot cdrom</li><li>终止系统安装&#x2F;启动：<br>  stop+a–&gt; sync–&gt; reset</li><li>继续安装&#x2F;启动<br>  ok&gt; go，</li><li>安装过程中须提供主要信息<br>  [1]主机名host name，<br>  [2]网络network，ip地址，<br>  [3]网络服务器类型nis+&#x2F;other&#x2F;none&#x2F;standlone，<br>  [4]子网掩码netmask，<br>  [5]时区time zone，<br>  [6]日期&#x2F;时间date&#x2F;time<br>  [7]安装方式:升级&#x2F;初始安装upgrade&#x2F;initial，<br>  [8]硬盘分区信息<br>  例如: partition:0 &#x2F;，<br>                  1 swap，<br>                  2 backup，<br>                  3，<br>                  4，<br>                  5，<br>                  6 &#x2F;usr，<br>                  7 &#x2F;export&#x2F;home   </li><li>Solaris操作系统常见分区功能<br>  [1] &#x2F;操作系统根目录<br>  [2] Swap内存交换区<br>  [3] &#x2F;usr        存放系统应用软件及命令<br>  [4] &#x2F;opt        安装用户应用软件<br>  [5] &#x2F;var        系统信息存放区<br>  [6] &#x2F;export&#x2F;home用户目录区<br>系统安装信息日志：&#x2F;var&#x2F;sadm&#x2F;install&#x2F;contents，install_log</li></ul><h3 id="4-应用软件常用安装-x2F-删除命令-add-x2F-delete-software"><a href="#4-应用软件常用安装-x2F-删除命令-add-x2F-delete-software" class="headerlink" title="4. 应用软件常用安装&#x2F;删除命令(add&#x2F;delete software)"></a>4. 应用软件常用安装&#x2F;删除命令(add&#x2F;delete software)</h3><p>   图形工具命令<br>    # admintool&amp;<br>   命令行工具<br>    # pkginfo，       例如：# pkginfo | grep ab<br>    # pkgadd，  例如：# pkgadd -d . SUNWsprot SUNWabc<br>    # pkgrm，   例如：# pkgrm SUNWsport SUNWabc<br>    # pkgchk    例如：# pkgchk SUNWsport SUNWabc</p><h3 id="5-补丁管理命令Patch"><a href="#5-补丁管理命令Patch" class="headerlink" title="5. 补丁管理命令Patch"></a>5. 补丁管理命令Patch</h3><p>   查看patch：# showrev -p，<br>   安装patch：# .&#x2F;installpatch .<br>   备份patch：# .&#x2F;backoutpatch 102972-01<br>   patch安装目录：&#x2F;var&#x2F;sadm&#x2F;patch<br>   patch信息网站：<a href="http://sunsolve.sun.com/">http://sunsolve.sun.com/</a> </p><h3 id="6-操作系统启动过程及运行级别"><a href="#6-操作系统启动过程及运行级别" class="headerlink" title="6. 操作系统启动过程及运行级别"></a>6. 操作系统启动过程及运行级别</h3><p>操作系统启动过程<br>[1] prom         (系统自检selftest) ，<br>[2] bootblk，    (系统引导盘启动扇区)，<br>[3] ufsboot      (&#x2F;platform&#x2F;‘uname -i’&#x2F;ufsboot)，<br>[4] kernel       (initself，&#x2F;kernel&#x2F;genunix，&#x2F;etc&#x2F;system)，<br>[5] init         (&#x2F;sbin&#x2F;init， &#x2F;etc&#x2F;inittab，&#x2F;sbin&#x2F;rc*.d，&#x2F;etc&#x2F;rc*.d，&#x2F;etc&#x2F;init.d) </p><p>操作系统自动配置过程<br>[1] 内核上载入内存(kernel module are load to memory)<br>   o 静态内核static core:<br>       &#x2F;kernel&#x2F;genunix，&#x2F;platform&#x2F;…&#x2F;kernel&#x2F;unix，<br>   o 动态内核dynamically loaded module:<br>        driver module，streams，ufs module，nfs module<br>        &#x2F;kernel&#x2F;，&#x2F;platform&#x2F;…&#x2F;kernel&#x2F;unix，&#x2F;usr&#x2F;kernel<br>   o &#x2F;etc&#x2F;system内容：<br>        moddir，<br>        exclude rootdev，<br>        set pt_cnt&#x3D;100<br>        ……………<br>[2] 设备配置(device configration )<br>   o device tree：&#x2F;devices，&#x2F;dev<br>   o &#x2F;etc&#x2F;path_to_install </p><p>查看操作系统配置<br>      # dmesg，<br>      # printconf，<br>      # sysdef<br>      # &#x2F;usr&#x2F;platform&#x2F;sun4u&#x2F;sbin&#x2F;prtdiag<br>      # &#x2F;usr&#x2F;platform&#x2F;sun43u&#x2F;sbin&#x2F;prtdiag</p><p>重新配置系统硬件<br>      # touch &#x2F;reconfigure<br>      # init 0<br>      ok boot -r (重新启动&#x2F;配置系统硬件)<br>      ok boot -ar </p><p>在系统运行情况下，如果不想重新启动系统，<br>安装硬盘&#x2F;磁带等热插拔硬件，则:<br>      # drvconfig<br>      # devlinks<br>      # disks<br>      # tapes </p><p>查看配置情况:<br>      # dmesg<br>      # printconf<br>      # sysdef </p><p>操作系统运行级别<br>   系统启动时，进入&#x2F;etc&#x2F;inittab中initdefault所定义的运行级别(deafult 3)<br>   各运行级别的定义：<br>     run level:0，       (halt，shotdown，stop+a，sync，go )<br>               1，       (single user，boot -s，init  s )<br>               2，       (multiuser，unshare net)<br>               3，       (multiuser，deafult)<br>               5，       (halt，power off )<br>               6，       (reboot to level 3 )<br>               S         (init 1， boot -s)</p><p>   改变系统运行级别命令<br>       # init 0，halt，shotdown，stop+a，sync，go<br>       # init 1，single user，boot -s，init  s<br>       # init 2，multiuser，unshare net<br>       # init 3，multiuser，deafult<br>       # init 5，halt，power off<br>       # init 6，reboot to level 3<br>       # init s，init 1， boot -s<br>       # init *，shotdown，halt，poweroff，reboot – -r，reboot – -s </p><pre><code>   ok&gt; boot -s，boot -sra </code></pre><p>   启动、关闭Solaris 操作系统<br>       ok&gt; boot -r (一般在安装新设备如硬盘等后，重起机器，重建系统内核)。<br>       ok&gt; boot cdrom - brower (从CDROM启动机器，重新安装系统，界面为浏览器方式)。</p><pre><code>   # sync (将内存中的内容写入硬盘)。   # halt (或 /etc/init 0) (关闭系统)。   # reboot   </code></pre><h3 id="7-操作系统启动-x2F-关闭时运行的脚本命令"><a href="#7-操作系统启动-x2F-关闭时运行的脚本命令" class="headerlink" title="7. 操作系统启动&#x2F;关闭时运行的脚本命令"></a>7. 操作系统启动&#x2F;关闭时运行的脚本命令</h3><p>   Solaris操作系统会在系统启动或关闭时自动运行脚本命令<br>   例如：有一个启动&#x2F;关闭数据库的命令脚本&#x2F;etc&#x2F;init.d&#x2F;rdbms，<br>         想在系统启动&#x2F;停止时自动启动&#x2F;关闭数据库:<br>       # vi &#x2F;etc&#x2F;init.d&#x2F;rdbms<br>       # cd &#x2F;etc&#x2F;init3.d<br>       # ln &#x2F;etc&#x2F;init.d&#x2F;rdbms S22rdbms (在系统启动时，运行命令脚本)<br>       # cd &#x2F;etc&#x2F;init0.d<br>       # ln &#x2F;etc&#x2F;init.d&#x2F;rdbms K8822rdbms (在系统关闭时，运行命令脚本)<br>   也可手动执行：<br>       # &#x2F;etc&#x2F;init.d&#x2F;rdbms stop<br>       # &#x2F;etc&#x2F;init.d&#x2F;rdbms start<br>    要定时运行一个程序</p><pre><code>在/var/spool/cron/crontabs/root中加入  分_时_日_月_年   /运用程序  </code></pre><h3 id="8-硬盘分区及格式化-disk-partition-and-format"><a href="#8-硬盘分区及格式化-disk-partition-and-format" class="headerlink" title="8. 硬盘分区及格式化(disk partition and format )"></a>8. 硬盘分区及格式化(disk partition and format )</h3><pre><code># foramt (可显示硬盘类型，大小，分区情况. 可重新分区，格式化等)  0 &gt;partition&gt;p&gt;0&gt;1&gt;3&gt;4&gt;5&gt;6&gt;7&gt;print&gt;label&gt;format&gt;quit&gt;quit     0       root    wm       0 - 3514        3.62GB    (3515/0/0) 7592400     1       swap    wu    3515 - 3757      256.29MB    (243/0/0)   524880     2     backup    wm       0 - 3879        4.00GB    (3880/0/0) 8380800     3 unassigned    wm    3758 - 3879      128.67MB    (122/0/0)   263520     4 unassigned    wm       0               0         (0/0/0)          0     5 unassigned    wm       0               0         (0/0/0)          0     6 unassigned    wm       0               0         (0/0/0)          0     7 unassigned    wm       0               0         (0/0/0)          0 #foramt  1&gt;type    &lt;SUN4.2G cyl 3880 alt 2 hd 16 sec 135&gt;    &gt;partition&gt;print&gt;0     root    wm    0  1940c  &gt;7     root    wm    0  1940c  &gt;p     0       root    wm       0 -1939        2.00GB    (1940/0/0) 4190400     2     backup    wm       0 - 3879        4.00GB    (3880/0/0) 8380800     7     home    wm       1940-3879        2.00GB  (1940/0/0) 4190400  &gt;label&gt;quit&gt;quit </code></pre><h3 id="9-Solaris-文件系统管理-unix-file-system"><a href="#9-Solaris-文件系统管理-unix-file-system" class="headerlink" title="9. Solaris 文件系统管理(unix file system )"></a>9. Solaris 文件系统管理(unix file system )</h3><p>   常见文件系统类型</p><pre><code>[1]ufs，[2]hsfs，[3]pcfs，[4]vxfs ....</code></pre><p>   设备名描述(硬盘)</p><pre><code>/dev/rdsk/c0t0d0s0，(裸设备/字符设备raw disk) /dev/dsk/c0t0d0s0，(逻辑设备/块设备logicl disk ，block device)</code></pre><p>   存储设备上建立文件系统</p><pre><code>  # newfs /dev/rdsk/c0t1d0s7 </code></pre><p>   系统文件系统记录</p><pre><code> # vi /etc/vfstab       fd - /dev/fd fd - no -       /proc - /proc proc - no -       /dev/dsk/c0t0d0s1 - - swap - no -       /dev/dsk/c0t0d0s0 /dev/rdsk/c0t0d0s0 / ufs 1 no -       /dev/dsk/c0t0d0s3 /dev/rdsk/c0t0d0s3 /cache ufs 2 yes -       /dev/dsk/c0t0d0s7 /dev/rdsk/c0t0d0s7 /export/home ufs 2 yes -       /dev/dsk/c0t1d0s7 /dev/rdsk/c0t1d0s7 /export/home1 ufs 2 yes -       swap - /tmp tmpfs - yes - </code></pre><p>   常用文件系统的操作命令</p><pre><code> 示例: # umount /export/home1                                  # mount /dev/dsk/c0t1d0s7 /export/home1          # umount /dev/dsk/c0t1d0s7  # mount -F pcfs /dev/diskette /floppy                 (mount 软盘) # mount -F hsfs -o ro /dev/rdsk/c0t6d0s0 /cdrom         (mount 光驱) # mountall -l  # umountall -l  # volcheck  # fdformat                                         (软盘格式化) # eject cdrom                                         (弹出光驱) # eject floppy                                         (弹出软盘)</code></pre><p>   wap区文件系统的管理</p><pre><code># swap -l，-a，-d，-s 增加Swap区示例   # mkfile 20m /export/home1/swap    # swap -a /export/home1/swap    # swap -l    # swap -d /export/home1/swap    # vi /etc/vfstab         /dev/dsk/c0t0d0s1 - - swap - no -         /export/home1/swap - - swap - no -         swap - /tmp tmpfs - yes - </code></pre><p>  文件系统的维护&#x2F;管理(maintain file system )<br>      [1] fsck，sync，fslush deamon( 30 second)<br>          stop+a<br>          sync<br>      [2] # umount &#x2F;dev&#x2F;dsk&#x2F;c0t0d0s7<br>          # fsck &#x2F;dev&#x2F;rdsk&#x2F;c0t0d0s7<br>          # fsck &#x2F;export&#x2F;home<br>          # mount &#x2F;dev&#x2F;dsk&#x2F;c0t0d0s7 &#x2F;export&#x2F;home<br>          # ls &#x2F;export&#x2F;home&#x2F;lost+found </p><h3 id="10-系统备份-x2F-恢复-backup-and-restore"><a href="#10-系统备份-x2F-恢复-backup-and-restore" class="headerlink" title="10. 系统备份&#x2F;恢复(backup and restore )"></a>10. 系统备份&#x2F;恢复(backup and restore )</h3><pre><code>系统备份级别 [1] 共10级 level， [2] 0 级为全备份full， [3] 2-9 级为增量备份inc， [4] /etc/dumpdates，备份设备一般为磁带 [1]tape， [2]设备名 /dev/rmt/0lbn (l，m，h density; b BSD behavior，n no rewind)  系统系统备份/恢复命令 [1] ufsdump， [2] ufsrestore，  例如：      # ufsdump 0uf /dev/rmt/0 /export/home       # cd /var/tmp       # ufsrestore tvf /dev/rmt/0       # ufsrestore xvf /dev/rmt/0 /export/home    恢复系统根目录操作举例(restore / file system )      ok&gt; boot cdrom -s       系统启动后，不进行安装，打开一个命令窗口:      # newfs /dev/rdsk/c0t3d0s0       # fsck /dev/rdsk/c0t3d0s0       # mount /dev/dsk/c0t3d0s0 /a       # cd /a       # ufsdump rvf /dev/rmt/0       # rm restoresymtable       # cd /usr/platform/&#39;uname -i&#39;/libfs/ufs       # installboot bootblk /dev/rdsk/c0t3d0s0       # umount /a       # init 6 常用备份/恢复命令(dditional backup command )  [1] mt，  [2] tar，  [3] dd，  [4] cpio  软盘操作  # volcheck  # fdformat -U (unix格式化软盘)，fdformat -d (dos 系统格式化)  # newfs /vol/dev/aliases/floppy0(在软盘上建UFS文件系统)  # mount -t  pcfs /dev/fd0 /pcfs  # eject floppy  光驱操作  # mount -F hsfs /dev/dsk/c0t6d0s0 /mnt/cdrom  # fuser -k /mnt/cdrom  # eject   磁带机操作  # mt -f /dev/rmt/0 rew (到带)  # mt -f /dev/rmt/0n status&#123;eof | rewind | erase | offline | bsf n | fsf n&#125;     (0n        表示磁带操作完后不到带，     status    表示查看磁带状态，     eof       表示到磁带最后一个文件，     rewind    表示到带到磁带最前，     erase     摸掉，     offline   弹出磁带，     bsf n     磁带往回退n个文件，     fsf n     磁带往前n个文件)  # tar xvf /dev/rmt/0     (从磁带到硬盘，解开归档文件)  # tar tvf /dev/rmt/0     (查看磁带内容，查看归档文件内容)  # tar cvf /dev/rmt/0 文件系统    (将文件系统考入磁带，将多个文件、目录建成归档文件)</code></pre><h3 id="11-网络管理-network"><a href="#11-网络管理-network" class="headerlink" title="11. 网络管理(network)"></a>11. 网络管理(network)</h3><pre><code>相关配置文件 [1] /etc/nodename  [2] /etc/hosts  [3] /etc/hostname.hme0       (qe0，le0，hme1，hme2，...，hme0:1，hme0:2，... )  [4] /etc/netmasks  [5] /etc/networks  [6] /etc/defaultrouter  [7] /etc/notrouter  [8] /etc/inetd.conf  [9] /etc/rpc  [10] /etc/services 相关进程deamon: [1] in.tcpipd [2] in.routed  [3] in.rdisc  ...... 常用网络管理命令command： =  [1] ifconfig -a   [2] netstat -rn   [3] snoop -d hme0   [4] route   [5] arp -a   [6] /usr/sbin/ping   [7] /usr/bin/telnet   [8] /usr/bin/rlogin   [9] /usr/bin/ftp   [10] /usr/openwin/bin/xhost </code></pre><p>   配制网络端口</p><pre><code> # ifconfig 示例: # ifconfig qe0 inet 10.10.10.1 netmask 255.255.255.0 broadcast 10.10.10.255 plumb  # ifconfig qe0 inet 10.10.10.1 netmask 255.255.255.0 broadcast 10.10.10.255 up  # ifconfig qe0 inet 10.10.10.1 netmask 255.255.255.0 broadcast 10.10.10.255 down </code></pre><p>   修改路由表</p><pre><code> # netstat -r  # route add net 10.10.10.0 10.10.10.1 1  # route add default 10.10.10.1 1  o 增加静态路由:   # vi /etc/defaultrouter         10.10.10.1 i1    # sync;sync;reboot  o 查看路由进程   # ps -ef |grep routed </code></pre><p>   重新关闭&#x2F;启动tcp&#x2F;ip协议进程</p><pre><code> #sh /etc/init.d/inetinit stop  #sh /etc/init.d/inetinit start </code></pre><h3 id="12-路由服务器"><a href="#12-路由服务器" class="headerlink" title="12. 路由服务器:"></a>12. 路由服务器:</h3><pre><code>系统有两个/或两个以上的网口，可作为路由器或防火墙  禁止两个网口间路由ip  # cd /etc   # touch notrouter   # sync  # sync  # reboot    查看路由进程  # ps -ef |grep routed   # ps -ef |grep in.rdisc</code></pre><h3 id="13-域名服务器-dns"><a href="#13-域名服务器-dns" class="headerlink" title="13. 域名服务器(dns)"></a>13. 域名服务器(dns)</h3><pre><code>相应配置文件[1] /etc/named.boot [2] /etc/named.conf (only for solaris 2.7) [3] /var/named/db.*; [4] /etc/nsswitch.conf [5] /etc/resolv.conf 相应系统进程[1] in.named; [2] bind 相关命令[1] /etc/init.d/inetsvc;     # /etc/init.d/inetsvc stop     # /etc/init.d/inetsvc start [2] nslookup 域名服务client端配置示例= # vi /etc/nsswitch.conf        hosts：     files dns  # vi /etc/resolv.conf       domain leadcom.com      search leadcom.com      nameserver 192.168.0.100      # nslookup </code></pre><h3 id="14-NIS-服务器"><a href="#14-NIS-服务器" class="headerlink" title="14. NIS 服务器"></a>14. NIS 服务器</h3><pre><code>相应配置文件[1] /var/yp，[2] /var/yp/Makefile [3] /etc/defaultdomain [4] /etc/nsswitch.conf [5] /etc/hosts，[6] /etc/networks，... 相应系统进程[1] ypserv;     [2] ypbind 相关命令[1] domainname [2] /etc/init.d/rpc  (start/stop ypserv，ypbind) [3] ypinit -m;    ypinit -c [4] yppush; [5] ypcat NIS 配置示例= # vi /etc/defaultdomain      YP.sun.com  # domainname YP.sun.com  # cd /var/yp  # cp /etc/nsswitch.nis /etc/nsswitch.conf  # vi Makefile       #B=-b nis no dns        B=        B=-b  nis also dns       #B=  # vi resolv.conf  # /usr/ccs/bin/make  # ypinit -m  # /etc/init.d/rpc start  # yppush  # ypcat hosts  # ypinit -c  client端配置 # vi /etc/defaultdomain       YP.sun.com  # domainname YP.sun.com  # cp /etc/nsswitch.nis /etc/nsswitch.conf  # ypinit -c  # /etc/init.d/rpc start  # ypcat hosts </code></pre><h3 id="15-NFS-文件系统-nfs-file-system"><a href="#15-NFS-文件系统-nfs-file-system" class="headerlink" title="15. NFS 文件系统(nfs file system )"></a>15. NFS 文件系统(nfs file system )</h3><pre><code>相应配置文件[1] /etc/dfs/dfstab;(nfs server)例如:   # vi /etc/dfs/dfstab         share  -F nfs  -o rw=engineering -d &quot;home dirs&quot;  /export/home         share  -F nfs  -o ro -d &quot;app dirs&quot;  /export/app         share  -F nfs  -o ro -d &quot;man dirs&quot;  /usr/share/man </code></pre><p>   [2] &#x2F;etc&#x2F;vfstab;(nfs client)<br>      # vi &#x2F;etc&#x2F;vfstab<br>            i2:&#x2F;export&#x2F;home - &#x2F;export&#x2F;home nfs - yes soft，bg<br>            i2:&#x2F;export&#x2F;app - &#x2F;export&#x2F;app nfs - yes soft，bg<br>            i2:&#x2F;usr&#x2F;share&#x2F;man - &#x2F;usr&#x2F;share&#x2F;man nfs - yes soft，bg<br>               rw|ro，bg|fg，soft|hard，intr|nointr，suid|nosuid，timeo&#x3D;n<br>               default&#x3D;11x.1sec，retry&#x3D;n 1k.<br>   相应系统进程</p><pre><code>[1] mountd[2] nfsd[3] statd[4] lockd   相关命令[1] share，例如:   # share -F nfs /export/home    # share -F nfs -o ro /usr/share/man [2] unshare，[3] shareall，[4] unshareall; [5] mount例如:   # mount nfsserver:/export/home /export/home    # mount nfsserver:/export/app /export/app    # mount nfsserver:/usr/share/man /usr/share/man [6] umount，[7] mountall，[8] umountall，[9] dfshares host，[10] dfmounts [11] /etc/init.d/nfs.server;   /etc/init.d/nfs.client 例如:   # /etc/init.d/nfs.server start </code></pre><h3 id="16-并行打印机管理-Parallel-Port-Printer"><a href="#16-并行打印机管理-Parallel-Port-Printer" class="headerlink" title="16. 并行打印机管理(Parallel Port Printer )"></a>16. 并行打印机管理(Parallel Port Printer )</h3><pre><code>并行打印机driver    /dev/bpp0-&gt; /devices/.../...:bpp0   (打印server：i2)        /dev/ecpp0-&gt;/devices/.../...:ecpp0  (打印client：i1)图形管理工具# admintool &amp;   Menu:Browse--&gt;printers   Menu:Edit--&gt;add--&gt;Local Printer...   Printer Name：bpp0   Print Server：i2   Description：bpp on i2   Print Port：/dev/bpp0   Printer Type：PostScript   File Content：PostScript   Fault Notification：None   Option：Accept Print Requests，Process Print Requests   User Access List：all   press OK # admintool &amp;   Menu:Browse--&gt;printers   Menu:Edit--&gt;add--&gt;Access to Printer...   Print Client：i1   Printer Name：bpp0   Print Server：i2   Description：bpp0 on i2   Option：Default Printer   Press OK </code></pre><h1 id="xetops"><a href="#xetops" class="headerlink" title="xetops"></a>xetops</h1><pre><code> convert chinese text file to PostScript file </code></pre><h3 id="17-用户管理user-account"><a href="#17-用户管理user-account" class="headerlink" title="17. 用户管理user account"></a>17. 用户管理user account</h3><pre><code>图形管理工具# admintool &amp; 相关文件[1] /etc/passwd 例如:  # vi /etc/passwd        max::1001:10:max li:/home/max:/bin/csh        frank::1002:10:frank lau:/export/home/frank:/sbin/sh [2] /etc/shaddow [3] /etc/group [4] /export/home/user [5] .cshrc     C shell     # vi .cshrc          umask 022          set path = ( /bin /usr/bin /usr/sbin /usr/bin /usr/ucb \                      /usr/lib /etc/init.d \                      /usr/lib/netsvc/yp /usr/lib/nis \                      /usr/ccs/bin \                       /usr/openwin/bin )          setenv TERM sun-cmd          setenv EDITOR /usr/bin/vi     # source .cshrc     # setenv PATH &quot;/bin:/usr/bin:/usr/sbin:/usr/ucb/bin&quot;     [6] .login [7] .profile     B shell     # vi .profile          umask 022          PATH=/usr/sbin:/sbin:/usr/bin:/usr/ucb:/usr/lib:/etc/init.d：         PATH=$PATH:/usr/lib/netsvc/yp:/usr/lib/nis:/usr/ccs/bin:/usr/openwin/bin          TERM=vt100          DISPLAY=i2:0.0          export PATH TERM DISPLAY     #.  /.profile     #set [8] .Xdefaults [9] .dt </code></pre><p>   用户管理常用命令</p><pre><code>[1] chmod 例如:   #chmod -R 755 /export/home/frank [2] chown 例如:   #chown -R frank:staff /export/home/frank [3] chgrp </code></pre><h3 id="18-常用UNIX命令集锦-Commonly-used-UNIX-commands"><a href="#18-常用UNIX命令集锦-Commonly-used-UNIX-commands" class="headerlink" title="18. 常用UNIX命令集锦(Commonly used UNIX commands )"></a>18. 常用UNIX命令集锦(Commonly used UNIX commands )</h3><pre><code>[1] cat[2] ls -al[3] cd[4] pwd[5] mv[6] cp[7] rm  -r [8] rmdir[9] mkdir[10] find  (find /etc -name host )[11] lp [12] set; setenv; export;[13] df -k [14] du -k (du .)[15] grep  (ps -ef|grep root)[16] ps -ef[17] kill id (kill -9 pid)[18] du[19] ln [20] man(  man -k keyword)[21] catman</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法示例</title>
      <link href="/2020/03/25/Markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B/"/>
      <url>/2020/03/25/Markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><span id="more"></span><hr><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-x2F-Mac-x2F-Linux-全平台客户端"><a href="#Windows-x2F-Mac-x2F-Linux-全平台客户端" class="headerlink" title="Windows&#x2F;Mac&#x2F;Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/">Windows&#x2F;Mac&#x2F;Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C-todo-%E5%88%97%E8%A1%A8">Todo 列表</a></h3><ul><li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li><li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li><input checked="" disabled="" type="checkbox"> 新增 Todo 列表功能</li><li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li><li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E&#x3D;mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SomeClass</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a></h3><div id="flowchart-0" class="flow-chart"></div><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-%E5%BA%8F%E5%88%97%E5%9B%BE">序列图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-%E7%94%98%E7%89%B9%E5%9B%BE">甘特图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-%E9%AB%98%E9%98%B6%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑&#x2F;发布&#x2F;阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统&#x2F;设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通&#x2F;Vim&#x2F;Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert">@ghosert</a><br>2016 年 07月 07日</p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i&#x3D;1}^n a_i&#x3D;0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Startop=>operation: Your Operationcond=>condition: Yes or No?e=>endst->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学快速口算法</title>
      <link href="/2020/03/24/%E7%A7%91%E5%AD%A6%E5%BF%AB%E9%80%9F%E5%8F%A3%E7%AE%97%E6%B3%95/"/>
      <url>/2020/03/24/%E7%A7%91%E5%AD%A6%E5%BF%AB%E9%80%9F%E5%8F%A3%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="加减速算法"><a href="#加减速算法" class="headerlink" title="加减速算法"></a>加减速算法</h1><h2 id="两位数减一位数，被减数个位小于减数"><a href="#两位数减一位数，被减数个位小于减数" class="headerlink" title="两位数减一位数，被减数个位小于减数"></a>两位数减一位数，被减数个位小于减数</h2><p>被减数的个位加上减数的补数，得数作为差的个位。被减数的十位减1作为差的十位。<br>$$<br>82-9&#x3D;<br>\begin{cases}<br>8-1&#x3D;7 \[2ex]<br>2+\color{red}{1}&#x3D;3<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(十位)}\[2ex]<br>\text{(个位)}\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;73<br>$$<br>$$<br>\uparrow\ \ \ \ \ \ \ \ \ \ \ \ \ \ \<br>(9的补数是1)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<br>$$</p><p>$$<br>17-8&#x3D;<br>\begin{cases}<br>1-1&#x3D;0 \[2ex]<br>7+\color{red}{2}&#x3D;9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(十位)}\[2ex]<br>\text{(个位)}\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;9<br>$$<br>$$<br>\uparrow\ \ \ \ \ \ \ \ \ \ \ \ \<br>(8的补数是2)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<br>$$</p><blockquote><p>补数：若两个数字之和为10，则称这两个数互为补数。1的补数是9，2的补数是8，3的补数是7，4的补数是6，5的补数是5，6的补数是4，7的补数是3，8的补数是2，9的补数是1。</p></blockquote><h2 id="首尾相反的两位数相加"><a href="#首尾相反的两位数相加" class="headerlink" title="首尾相反的两位数相加"></a>首尾相反的两位数相加</h2><p>被加数的个位和十位相加，得数的个位作为和的个位，得数的十位作为和的百位。再将得数的个位和十位相加后作为和的十位。例：<br>$$<br>46+64&#x3D;<br>\begin{cases}<br>\[2ex]<br>4+6&#x3D;10\[2ex]<br>\<br>\end{cases}<br>\begin{cases}<br>1 \[2ex]<br>1+0&#x3D;1 \[2ex]<br>0<br>\end{cases}<br>\left.<br>\begin{array}{1}<br>\text{(百位)}\[1.5ex]<br>\text{(十位)}\[1.5ex]<br>\text{(个位)}\<br>\end{array}<br>\right}<br>(连写)&#x3D;110<br>$$</p><p>$$<br>89+98&#x3D;<br>\begin{cases}<br>\[2ex]<br>8+9&#x3D;17\[2ex]<br>\<br>\end{cases}<br>\begin{cases}<br>1 \[2ex]<br>1+7&#x3D;8 \[2ex]<br>7<br>\end{cases}<br>\left.<br>\begin{array}{1}<br>\text{(百位)}\[1.5ex]<br>\text{(十位)}\[1.5ex]<br>\text{(个位)}\<br>\end{array}<br>\right}<br>(连写)&#x3D;187<br>$$<br>原理：$$ab+ba&#x3D;10a+b+10b+a&#x3D;(10a+a)+(10b+b)&#x3D;11a+11b&#x3D;11(a+b)$$</p><blockquote><p>练习：$$68+86&#x3D;\color{white}{154} \qquad 76+67&#x3D;\color{white}{143}$$</p></blockquote><h2 id="首尾相反的两位数相减"><a href="#首尾相反的两位数相减" class="headerlink" title="首尾相反的两位数相减"></a>首尾相反的两位数相减</h2><p>被减数的十位减去个位，得数乘以9就是最终的差。<br>$$<br>64-46&#x3D;<br>\begin{cases}<br>6-4&#x3D;2 \[2ex]<br>9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(相乘)&#x3D;18<br>$$</p><p>$$<br>90-9&#x3D;<br>\begin{cases}<br>9-0&#x3D;9 \[2ex]<br>9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(相乘)&#x3D;81<br>$$<br>原理：$$设\ a&gt;b \ ,$$<br>$$ab-ba&#x3D;10a+b-(10b+a)&#x3D;10a+b-10b-a&#x3D;10a-a+b-10b&#x3D;9a-9b&#x3D;9(a-b)$$</p><blockquote><p>练习：$$92-29&#x3D;\color{white}{63} \qquad 65-56&#x3D;\color{white}{9}$$</p></blockquote><h1 id="乘法速算法"><a href="#乘法速算法" class="headerlink" title="乘法速算法"></a>乘法速算法</h1><h2 id="二至四位数的平方速算法"><a href="#二至四位数的平方速算法" class="headerlink" title="二至四位数的平方速算法"></a>二至四位数的平方速算法</h2><h3 id="二位数的平方速算法"><a href="#二位数的平方速算法" class="headerlink" title="二位数的平方速算法"></a>二位数的平方速算法</h3><p>**(11-19)**：底数的个位数与底数相加，得数为前积，底数的个位数相乘，得数为后积（逢十左进）。例：<br>$$<br>12^2&#x3D;<br>\begin{cases}<br>12+2&#x3D;14 \[2ex]<br>2^2&#x3D;4<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;144<br>$$</p><p>$$<br>17^2&#x3D;<br>\begin{cases}<br>17+7&#x3D;24 \[2ex]<br>7\times7&#x3D;\color{red}{4}9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;289<br>$$</p><p>$$<br>\uparrow \<br>(十位数左进)<br>$$</p><blockquote><p>练习：$$16^2&#x3D;\color{white}{256} \qquad 19^2&#x3D;\color{white}{361}$$</p></blockquote><span id="more"></span><p>**(25-76)**：底数减去25，得数为前积，底数与50的差数的平方为后积（逢百左进，没十位用0补）。例：<br>$$<br>46^2&#x3D;<br>\begin{cases}<br>46-25&#x3D;21 \[2ex]<br>(50-46)^2&#x3D;16<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;2116<br>$$</p><p>$$<br>37^2&#x3D;<br>\begin{cases}<br>37-25&#x3D;12 \[2ex]<br>(50-37)^2&#x3D;\color{red}{1}69<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;1369<br>$$</p><p>$$<br>\uparrow \<br>(满百位左进)<br>$$</p><p>$$<br>51^2&#x3D;<br>\begin{cases}<br>51-25&#x3D;26 \[2ex]<br>(51-50)^2&#x3D;\color{red}{0}1<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;2601<br>$$</p><p>$$<br>\uparrow \<br>(没有十位用0补)<br>$$</p><blockquote><p>练习：$$49^2&#x3D;\color{white}{2401} \qquad 63^2&#x3D;\color{white}{3969}$$</p></blockquote><p>**(75-99)**：底数减去底数的补数，得数为前积，（底数的）补数的平方得数为后积（逢百左进，没有百位用0补）。例：<br>$$<br>96^2&#x3D;<br>\begin{cases}<br>96-(100-96)&#x3D;92 \[2ex]<br>(100-96)^2&#x3D;16<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;9216<br>$$</p><p>$$<br>76^2&#x3D;<br>\begin{cases}<br>76-(100-76)&#x3D;52 \[2ex]<br>(100-76)^2&#x3D;\color{red}{5}76<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;5776<br>$$</p><p>$$<br>\uparrow \<br>(满百位左进)<br>$$</p><p>$$<br>97^2&#x3D;<br>\begin{cases}<br>97-(100-97)&#x3D;94 \[2ex]<br>(100-97)^2&#x3D;\color{red}{0}9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;9409<br>$$</p><p>$$<br>\uparrow \<br>(没有十位用0补)<br>$$</p><blockquote><p>练习：$$87^2&#x3D;\color{white}{7569} \qquad 94^2&#x3D;\color{white}{8836}$$</p></blockquote><h3 id="三位数的平方速算法"><a href="#三位数的平方速算法" class="headerlink" title="三位数的平方速算法"></a>三位数的平方速算法</h3><h1 id="把三位数分为左右两段，左边一段含一个数，简称-a-，右边一段含两个数，简称-b-，先计左边一段的平方（即-a-2-）得数为前积；然后在右边补上两数相乘积的两倍（即-2ab-），满百位左进，最后补上右段的平方（即-b-2-），满百位左进。例：-underbrace-1-a-underbrace-08-2-b"><a href="#把三位数分为左右两段，左边一段含一个数，简称-a-，右边一段含两个数，简称-b-，先计左边一段的平方（即-a-2-）得数为前积；然后在右边补上两数相乘积的两倍（即-2ab-），满百位左进，最后补上右段的平方（即-b-2-），满百位左进。例：-underbrace-1-a-underbrace-08-2-b" class="headerlink" title="把三位数分为左右两段，左边一段含一个数，简称$$a$$，右边一段含两个数，简称$$b$$，先计左边一段的平方（即$$a^2$$）得数为前积；然后在右边补上两数相乘积的两倍（即$$2ab$$），满百位左进，最后补上右段的平方（即$$b^2$$），满百位左进。例：$$\underbrace{1}{a}\underbrace{08^2}{b}"></a>把三位数分为左右两段，左边一段含一个数，简称$$a$$，右边一段含两个数，简称$$b$$，先计左边一段的平方（即$$a^2$$）得数为前积；然后在右边补上两数相乘积的两倍（即$$2ab$$），满百位左进，最后补上右段的平方（即$$b^2$$），满百位左进。例：<br>$$<br>\underbrace{1}<em>{a}<br>\underbrace{08^2}</em>{b}</h1><p>\begin{cases}<br>a^2&#x3D;1 \[2ex]<br>2ab&#x3D;16 \[2ex]<br>b^2&#x3D;64<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[1ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;11664<br>$$</p><h1 id="underbrace-1-a-underbrace-12-2-b"><a href="#underbrace-1-a-underbrace-12-2-b" class="headerlink" title="$$\underbrace{1}{a}\underbrace{12^2}{b}"></a>$$<br>\underbrace{1}<em>{a}<br>\underbrace{12^2}</em>{b}</h1><p>\begin{cases}<br>a^2&#x3D;1 \[2ex]<br>2ab&#x3D;24 \[2ex]<br>b^2&#x3D;\color{red}{1}44<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[1ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;12544<br>$$</p><p>$$<br>\uparrow \<br>(满百位左进)<br>$$</p><h3 id="四位数的平方速算法"><a href="#四位数的平方速算法" class="headerlink" title="四位数的平方速算法"></a>四位数的平方速算法</h3><h1 id="四位数，两段分，每段含两位数，左边一段简称-a-，右边一段简称-b-，先求左平方（即-a-2-），得数为前积，后求左右两数相乘积的两倍（即-2ab-），满百位左进，末数补上油平方（即-b-2-），满百位左进。例：-underbrace-12-a-underbrace-04-2-b"><a href="#四位数，两段分，每段含两位数，左边一段简称-a-，右边一段简称-b-，先求左平方（即-a-2-），得数为前积，后求左右两数相乘积的两倍（即-2ab-），满百位左进，末数补上油平方（即-b-2-），满百位左进。例：-underbrace-12-a-underbrace-04-2-b" class="headerlink" title="四位数，两段分，每段含两位数，左边一段简称$$a$$，右边一段简称$$b$$，先求左平方（即$$a^2$$），得数为前积，后求左右两数相乘积的两倍（即$$2ab$$），满百位左进，末数补上油平方（即$$b^2$$），满百位左进。例：$$\underbrace{12}{a}\underbrace{04^2}{b}"></a>四位数，两段分，每段含两位数，左边一段简称$$a$$，右边一段简称$$b$$，先求左平方（即$$a^2$$），得数为前积，后求左右两数相乘积的两倍（即$$2ab$$），满百位左进，末数补上油平方（即$$b^2$$），满百位左进。例：<br>$$<br>\underbrace{12}<em>{a}<br>\underbrace{04^2}</em>{b}</h1><p>\begin{cases}<br>a^2&#x3D;144 \[2ex]<br>2ab&#x3D;96 \[2ex]<br>b^2&#x3D;16<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[1ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;1449616<br>$$</p><h1 id="underbrace-12-a-underbrace-14-2-b"><a href="#underbrace-12-a-underbrace-14-2-b" class="headerlink" title="$$\underbrace{12}{a}\underbrace{14^2}{b}"></a>$$<br>\underbrace{12}<em>{a}<br>\underbrace{14^2}</em>{b}</h1><p>\begin{cases}<br>a^2&#x3D;144 \[2ex]<br>2ab&#x3D;\color{red}{3}36 \[2ex]<br>b^2&#x3D;\color{red}{1}96<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[1ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(连写)&#x3D;1473796<br>$$</p><p>$$<br>\uparrow \<br>(满百位左进)<br>$$</p><h2 id="两首位相同，两尾数和是10的两位数乘法"><a href="#两首位相同，两尾数和是10的两位数乘法" class="headerlink" title="两首位相同，两尾数和是10的两位数乘法"></a>两首位相同，两尾数和是10的两位数乘法</h2><p>十位数加上1，得出的和与十位相乘，得数为前积，两个位数相乘，得数为后积（没有十位用0补）。例：<br>$$<br>63\times67&#x3D;<br>\begin{cases}<br>(6+1)\times6&#x3D;42 \[2ex]<br>3\times7&#x3D;21<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;4221<br>$$</p><p>$$<br>71\times79&#x3D;<br>\begin{cases}<br>(7+1)\times7&#x3D;56 \[2ex]<br>1\times9&#x3D;\color{red}{0}9<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;5609<br>$$</p><p>$$<br>\uparrow \<br>(没有十位用0补)<br>$$</p><blockquote><p>两位数的平方尾数是5的亦可用此法。例如：<br>$$25^2&#x3D;625 \qquad 75^2&#x3D;5625$$<br>$$45^2&#x3D;2025 \qquad 95^2&#x3D;9025$$</p></blockquote><h2 id="一百零几乘一百零几"><a href="#一百零几乘一百零几" class="headerlink" title="一百零几乘一百零几"></a>一百零几乘一百零几</h2><p>被乘数与乘数个位数相加，得数放积前；被乘数个位与乘数个位相乘，得数放积后。例：<br>$$<br>104\times103&#x3D;<br>\begin{cases}<br>104+3&#x3D;107 \[2ex]<br>4\times3&#x3D;12<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\text{(前积)} \[1ex]<br>\text{(后积)}<br>\end{array}<br>\right}<br>&#x3D;10712<br>$$</p><blockquote><p>练习：$$108\times103&#x3D;\color{white}{11124} \qquad 107\times106&#x3D;\color{white}{11342}$$</p></blockquote><h2 id="两首位相同，两尾数和不等于10的两位数乘法"><a href="#两首位相同，两尾数和不等于10的两位数乘法" class="headerlink" title="两首位相同，两尾数和不等于10的两位数乘法"></a>两首位相同，两尾数和不等于10的两位数乘法</h2><p>首先两尾数相乘得一积，然后两尾之和与被乘数的首位相乘又得一积，最后两首位相乘（首位数的平方）再得一积，三积连加起来即为所求之积。例：<br>$$<br>\begin{array}{r}<br>52 \<br>\times53 \<br>\hline<br>2756<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>61 \<br>\times62 \<br>\hline<br>3782<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>73 \<br>\times74 \<br>\hline<br>5402<br>\end{array}<br>$$</p><blockquote><p>两位数的平方尾数不是5的亦可用此法。例如：<br>$$<br>\begin{array}{r}<br>22 \<br>\times22 \<br>\hline<br>484<br>\end{array}<br>\qquad<br>\begin{array}{r}<br>66 \<br>\times66 \<br>\hline<br>4356<br>\end{array}<br>$$</p></blockquote><h2 id="被乘数首尾相同，乘数首尾和是10的两位数乘法"><a href="#被乘数首尾相同，乘数首尾和是10的两位数乘法" class="headerlink" title="被乘数首尾相同，乘数首尾和是10的两位数乘法"></a>被乘数首尾相同，乘数首尾和是10的两位数乘法</h2><p>（乘数首位加1）然后两尾数相乘得一积，两首位再相乘又得一积，最后两积相连就是所求之积。例：<br>$$<br>\begin{array}{r}<br>22 \<br>\times19 \<br>\hline<br>418<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>44 \<br>\times28 \<br>\hline<br>1232<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>88 \<br>\times37 \<br>\hline<br>3256<br>\end{array}<br>$$</p><h2 id="两首位和是10，两尾数相同得两位数乘法"><a href="#两首位和是10，两尾数相同得两位数乘法" class="headerlink" title="两首位和是10，两尾数相同得两位数乘法"></a>两首位和是10，两尾数相同得两位数乘法</h2><p>首先两尾数相乘得一积，两首位相乘之积再加上一个相同得尾数，又得一积，两积连起来就是所求之积。例：<br>$$<br>\begin{array}{r}<br>26 \<br>\times86 \<br>\hline<br>2236<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>75 \<br>\times35 \<br>\hline<br>2625<br>\end{array}</p><p>\qquad</p><p>\begin{array}{r}<br>47 \<br>\times67 \<br>\hline<br>3149<br>\end{array}<br>$$</p><h2 id="两首位相差是1，两尾数和是10得两位数乘法。例："><a href="#两首位相差是1，两尾数和是10得两位数乘法。例：" class="headerlink" title="两首位相差是1，两尾数和是10得两位数乘法。例："></a>两首位相差是1，两尾数和是10得两位数乘法。例：</h2><p>$$<br>38\times22&#x3D;836 \[2ex]<br>可分解为 \[2ex]<br>(30+8)\times(30-8)&#x3D;30^2-8^2&#x3D;836<br>$$<br>原理：$$a^2-b^2&#x3D;(a+b)\times(a-b)$$<br>又如：$$46\times34&#x3D;1564 \qquad 85\times75&#x3D;6375$$</p><h2 id="任意两位数乘法"><a href="#任意两位数乘法" class="headerlink" title="任意两位数乘法"></a>任意两位数乘法</h2><p>（十字相乘法或对角线相乘法）首先用十字相乘法得一和数（被乘数首位与乘数尾数相乘之积加上被乘数尾数与乘数首位数相乘之积）加上两首位数相乘与两尾数相乘之积。例：<br>$$<br>43\times85&#x3D;3655 \<br>\begin{array}{rcl}<br>4 &amp; &amp; 3 \<br>&amp; \times &amp; \<br>\times8 &amp; &amp; 5 \<br>\hline<br>4 &amp; &amp; 4 \<br>+32 &amp; &amp; 15 \<br>\hline<br>36 &amp; &amp; 55<br>\end{array}<br>$$</p><p>$$<br>34\times65&#x3D;2210 \<br>\begin{array}{rcl}<br>3 &amp; &amp; 4 \<br>&amp; \times &amp; \<br>\times6 &amp; &amp; 5 \<br>\hline<br>3 &amp; &amp; 9 \<br>+18 &amp; &amp; 20 \<br>\hline<br>22 &amp; &amp; 10<br>\end{array}<br>$$</p><h2 id="三位数乘法，首位和中位相同，尾位之和等于10的三位数乘法"><a href="#三位数乘法，首位和中位相同，尾位之和等于10的三位数乘法" class="headerlink" title="三位数乘法，首位和中位相同，尾位之和等于10的三位数乘法"></a>三位数乘法，首位和中位相同，尾位之和等于10的三位数乘法</h2><p>首先两尾位相乘得一积，（给被乘数中位加1）再两中位相乘又得一积。然后两中位相加再和被乘数首位相乘得一积，最后两首位相乘得一积，四积连起来就是所求之积。例：<br>$$<br>112\times118&#x3D;13216 \<br>\begin{array}{r}<br>112 \<br>\times118 \<br>\hline<br>13216<br>\end{array}<br>$$</p><h2 id="任意数与11、22、…99等数相乘"><a href="#任意数与11、22、…99等数相乘" class="headerlink" title="任意数与11、22、…99等数相乘"></a>任意数与11、22、…99等数相乘</h2><p>首先从尾数算起。任意数与11、22、……99相乘，就给任意数得尾数乘以1、2、……9，然后两相邻数相加，再乘以1、2、……9，满十向前进位。例：<br>$$<br>12468\times11&#x3D;137148 \<br>25124\times11&#x3D;276364 \<br>421514\times22&#x3D;9273308 \<br>135712\times22&#x3D;2985664 \<br>1327145\times33&#x3D;43795785 \<br>51481\times33&#x3D;1698873 \<br>$$</p><h2 id="9、99、999等与任意数相乘"><a href="#9、99、999等与任意数相乘" class="headerlink" title="9、99、999等与任意数相乘"></a>9、99、999等与任意数相乘</h2><p>首先找出任意数得补数，然后将补数连在9、99、999等数末位，最后由所得新数最高位减去补数，就是所求之积。例：<br>$$<br>99\times891&#x3D;88209 \<br>99\times891&#x3D;<br>\begin{cases}<br>{<br>    \begin{cases}<br>    99 \[2ex]<br>    1000-891&#x3D;109<br>    \end{cases}<br>    \left.<br>    \begin{array}{l}<br>    \[1ex]<br>    \[1ex]<br>    \end{array}<br>    \right}<br>    (连写)&#x3D;99109<br>} \[2ex]<br>1000-891&#x3D;109<br>\end{cases}<br>\left.<br>\begin{array}{l}<br>\[2ex]<br>\[1ex]<br>\[2ex]<br>\end{array}<br>\right}<br>(最高位相减)&#x3D;<br>\begin{array}{rl}<br>&amp; 99109 \</p><ul><li>&amp; 109 \<br>\hline<br>&amp; 88209<br>\end{array}<br>&#x3D;88209<br>$$</li></ul><h1 id="开立方绝技"><a href="#开立方绝技" class="headerlink" title="开立方绝技"></a>开立方绝技</h1><p>首先背熟表一、表二：<br>$$<br>\begin{array}{|c|c|}<br>\hline<br>原数 &amp; 立方数 \ \hline<br>1 &amp; 1 \ \hline<br>2 &amp; 8 \ \hline<br>3 &amp; 27 \ \hline<br>4 &amp; 64 \ \hline<br>5 &amp; 125 \ \hline<br>6 &amp; 216 \ \hline<br>7 &amp; 343 \ \hline<br>8 &amp; 512 \ \hline<br>9 &amp; 729 \ \hline<br>10 &amp; 1000 \ \hline<br>\end{array}</p><p>\qquad</p><p>\begin{array}{|c|c|}<br>\hline<br>原数 &amp; 立方数末位 \ \hline<br>1 &amp; 1 \ \hline<br>2 &amp; 8 \ \hline<br>3 &amp; 7 \ \hline<br>4 &amp; 4 \ \hline<br>5 &amp; 5 \ \hline<br>6 &amp; 6 \ \hline<br>7 &amp; 3 \ \hline<br>8 &amp; 2 \ \hline<br>9 &amp; 9 \ \hline<br>10 &amp; 0 \ \hline<br>\end{array}<br>$$<br>$$(表一) \qquad \qquad \qquad (表二)$$</p><p>例：某两位数的立方是21956 或 274625</p><ol><li><strong>拆分</strong>：首先设想将这个数的个、十、百三位“剪掉”，将剪掉的部分看成一个“新数”。<br>如：21952剪掉952后，剩下的新数是21；274652剪掉652后，剩下的新数是274</li><li><strong>十位数</strong>：然后与表一中十个立方数比较，看新数落在哪两个立方数之间，选较小的那个原数就是原两位数的十位数字。<br>如：新数21，落在表一中8和27之间，选较小的原数为2，2就是原两位数的十位数字；新数274落在表一中216和343之间，选较小的原数6，6就是原两位的十位数字。</li><li><strong>个位数</strong>：首先看21952的个位是2，然后在表二“立方数的末位”中看2的“原数”是8。8和2不相同，在不相同时，只要用10减去21952的个位数2，得数为8，8就是原两位数的个位数；<br>新数274625个位是5，然后在表二“立方数的末位”中看5的“原数”是5。5和5相同，在相同时，5就是原两位数的个位数。</li><li><strong>最后</strong>：21952，十位数是2，个位数是8，即：$$28^3&#x3D;21952$$<br>27425，十位数是6，个位数是5，即：$$65^3&#x3D;274625$$</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MathJax </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活小窍门</title>
      <link href="/2020/03/01/%E7%94%9F%E6%B4%BB%E5%B0%8F%E7%AA%8D%E9%97%A8/"/>
      <url>/2020/03/01/%E7%94%9F%E6%B4%BB%E5%B0%8F%E7%AA%8D%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>巧用牙膏6:若有小面积皮肤损伤或烧伤、烫伤，抹上少许牙膏，可立即止血止痛，也可防止感染，疗效颇佳。</li><li>巧除纱窗油腻3:可将洗衣粉、吸烟剩下的烟头一起放在水里，待溶解后，拿来擦玻璃窗、纱窗，效果均不错。</li><li>将虾仁放入碗内，加一点精盐、食用碱粉，用手抓搓一会儿后用清水浸泡，然后再用清水洗净，这样能使炒出的虾仁透明如水晶，爽嫩可口</li></ol><span id="more"></span><ol start="4"><li>和饺子面的窍门1:在1斤面粉里掺入6个蛋清，使面里蛋白质增加，包的饺子下锅后蛋白质会很快凝固收缩，饺子起锅后收水快，不易粘连</li><li>将残茶叶浸入水中数天后，浇在植物根部，可促进植物生长；把残茶叶晒干，放到厕所或沟渠里燃熏，可消除恶臭，具有驱除蚊蝇的功能。</li><li>夹生饭重煮法:如果是米饭夹生，可用筷子在饭内扎些直通锅底的孔，洒入少许黄酒重焖，若只表面夹生，只要将表层翻到中间再焖即可。</li><li>烹调蔬菜时如果必须要焯，焯好菜的水最好尽量利用。如做水饺的菜，焯好的水可适量放在肉馅里，这样即保存营养，又使水饺馅味美有汤</li><li>炒鸡蛋的窍门:将鸡蛋打入碗中，加入少许温水搅拌均匀，倒入油锅里炒，炒时往锅里滴少许酒，这样炒出的鸡蛋蓬松、鲜嫩、可口。</li><li>如何使用砂锅1:新买来的砂锅第一次使用时，最好用来熬粥，或者用它煮一煮浓淘米水，以堵塞砂锅的微细孔隙，防止渗水_</li><li>巧用“十三香”:炖肉时用陈皮，香味浓郁；吃牛羊肉加白芷，可除膻增鲜；自制香肠用肉桂，味道鲜美；熏肉熏鸡用丁香，回味无穷。</li><li>和饺子面的窍门2:面要和的略硬一点，和好后放在盆里盖严密封，饧10-15分钟，等面中麦胶蛋白吸水膨胀，充分形成面筋后再包饺子</li><li>香菜是一种伞形花科类植物，富含香精油，香气浓郁，但香精油极易挥发，且经不起长时间加热，香菜最好在食用前加入，以保留其香气。</li><li>当进行高温洗涤或干衣程序时，不可碰触机门玻璃，以免烫伤。拿出烘干的衣物时，要小心衣物上的金属部分，如拉链、纽扣等，以免烫伤。</li><li>如果衣领和袖口较脏，可将衣物先放进溶有洗衣粉的温水中浸泡15-20分钟，再进行正常洗涤，就能洗干净。</li><li>如何使用砂锅2:用砂锅熬汤、炖肉时，要先往砂锅里放水，再把砂锅置于火上，先用文火，再用旺火。</li><li>烹调蔬菜时，加点菱粉类淀粉，使汤变得稠浓，不但可使烹调出的蔬菜美味可口，而且由于淀粉含谷胱甘肽，对维生素有保护作用。</li><li>米饭若烧糊了，赶紧将火关掉，在米饭上面放一块面包皮，盖上锅盖，5分钟后，面包皮即可把糊味吸收。</li><li>洗衣粉用量:若衣服不太脏或洗涤时泡沫过多，则要减少洗衣粉用量。避免洗衣粉使用过量，不仅省钱而且保护环境，可令洗衣机更耐用。</li><li>煮饺子时要添足水，待水开后加入2%的食盐，溶解后再下饺子，能增加面筋的韧性，饺子不会粘皮、粘底，饺子的色泽会变白，汤清饺香。 </li><li>许多人爱吃青菜却不爱喝菜汤，事实上，烧菜时，大部分维生素已溶解在菜汤里。比如小白菜炒好后，会有70%的维生素Ｃ溶解在菜汤里。 </li><li>白袜子若发黄了，可用洗衣粉溶液浸泡30分钟后再进行洗涤。</li><li>如何使用砂锅3:从火上端下砂锅时，一定要放在干燥的木板或草垫上，切不要放在瓷砖或水泥地面上。</li><li>烧荤菜时，在加了酒后，再加点醋，菜就会变得香喷喷的。烧豆芽之类的素菜时，适当加点醋，味道好营养也好，因为醋对维生素有保护作用</li><li>面包能消除衣服油迹:用餐时，衣服如果被油迹所染，可用新鲜白面包轻轻摩擦，油迹即可消除。</li><li>用残茶叶擦洗木、竹桌椅，可使之更为光洁。把残茶叶晒干，铺撒在潮湿处，能够去潮；残茶叶晒干后，还可装入枕套充当枕芯，非常柔软</li><li>饺子煮熟以后，先用笊篱把饺子捞出，随即放入温开水中浸涮一下，然后再装盘，饺子就不会互相粘在一起了。</li><li>炒鲜虾的窍门:炒鲜虾之前，可先将虾用浸泡桂皮的沸水冲烫一下，然后再炒，这样炒出来的虾，味道更鲜美。</li><li>蔬菜尽可能做到现炒现吃，避免长时间保温和多次加热。另外，为使菜梗易熟，可在快炒后加少许水闷熟。</li><li>面包能消除地毯污迹:家中的小块地毯如果脏了，可用热面包渣擦拭，然后将其挂在阴凉处，24小时后，污迹即可除净。</li><li>男子剃须时，可用牙膏代替肥皂，由于牙膏不含游离碱，不仅对皮肤无刺激，而且泡沫丰富，气味清香，使人有清凉舒爽之感。 </li><li>风油精的妙用（1）:在电风扇的叶子上洒上几滴风油精，随着风叶的不停转动，可使满室清香，而且有驱赶蚊子的效用。</li><li>刷油漆前，先在双手上抹层面霜，刷过油漆后把奶油涂于沾有油漆的皮肤上，用干布擦拭，再用香皂清洗，就能把附着于皮肤上的油漆除掉。</li><li>豆腐一般都会有一股卤水味。豆腐下锅前，如果先在开水中浸泡10多分钟，便可除去卤水味，这样做出的豆腐不但口感好，而且味美香甜。</li><li>煮鸡蛋时，可先将鸡蛋放入冷水中浸泡一会，再放入热水里煮，这样煮好的鸡蛋蛋壳不破裂，且易于剥掉。</li><li>手表受磁，会影响走时准确。消除方法很简单，只要找一个未受磁的铁环，将表放在环中，慢慢穿来穿去，几分钟后，手表就会退磁复原。</li><li>豆腐性偏寒，平素有胃寒者，如食用豆腐后有胸闷、反胃等现象，则不宜食用；易腹泻、腹胀脾虚者，也不宜多食豆腐</li><li>牙膏也有洁肤功能！洗澡时用牙膏代替浴皂搓身去污，既有明显的洁肤功能，还能使浴后浑身凉爽，而且还有预防痱子的作用</li><li>用微波炉做菜时，首先要用调料将原料浸透。这是因为微波烹任过程快，若不浸润透很难入味，且葱、姜、蒜等增香的作用也难以发挥</li><li>葡萄汁送服降压药效果好！用葡萄汁代替白开水送服降压药，能使血压降得平稳，且不会出现血压忽高忽低的现象。</li><li>煮饭不宜用生水。因为自来水中含有氯气，在烧饭过程中，它会破坏粮食中所含的维生素B1，若用开水煮饭，维生素B1可免受损失。</li><li>砧板防裂小窍门:买回新砧板后，在砧板上下两面及周边涂上食用油，待油吸干后再涂，涂三四遍，油干后即可使用，这样砧板便会经久耐</li><li>风油精的妙用（2）:洗澡时，在水中加入数滴风油精，浴后会有浑身清凉舒爽感觉，还有防治痱子、防蚊叮咬、祛除汗臭的作用。</li><li>炸馒头片时，先将馒头片在冷水里浸一下，然后再入锅炸，这样炸好的馒头片焦黄酥脆，既好吃又省油。 </li><li>做菜或做汤时，如果做咸了，可拿一个洗净的土豆切成两半放入汤里煮几分钟，这样，汤就能由咸变淡了。 </li><li>舒缓眼部疲劳小窍门:用水浸泡药用小米草或母菊花，然后将毛巾浸湿，敷于眼部10到15分钟，可有效舒缓眼部疲劳。</li><li>夏日天气炎热，身上容易长痱子，可用温水将长有痱子的部位洗净，涂擦一层牙膏，痱子不久即可消失。</li><li>室内厕所即使冲洗得再干净，也常会留下一股臭味，只要在厕所内放置一小杯香醋，臭味便会消失。其有效期为六、七天，可每周换一次。</li><li>如果用陈米做米饭，淘过米之后，可在往米中加水的同时，加入1&#x2F;4或1&#x2F;5啤酒，这样蒸出来的米饭香甜，且有光泽，如同新米一样。</li><li>煮饺子时，饺子皮和馅中的水溶性营养素除因受热小部分损失之外，大部分都溶解在汤里，所以，吃水饺最好把汤也喝掉。</li><li>热水泡双手可治偏头痛。把双手浸入热水中，水量以浸过手腕为宜，并不断地加热水，以保持水温。半小时后，痛感即可减轻，甚至完全消失 </li><li>忌食鲜黄花菜！因为鲜黄花菜内含秋水仙碱有毒物质，食用后会导致恶心、腹泻等。而加工后的干黄花菜已将秋水仙碱溶出，食用则不会中毒</li><li>风油精的妙用（3）:在点燃的蚊香上洒几滴风油精，蚊香放出的烟气不会呛，而且清香扑鼻，驱蚊效果也会更佳。</li><li>在洗碗水中放几片柠檬皮和橘子皮，或滴几滴醋，能消除碗碟等餐具上的异味。同时，它还能使硬水软化，同时增加瓷器的光泽感。</li><li>皮肤小面积擦伤会导致局部肿胀，这时可在伤口处涂些牙膏，不仅具有止痛、止血、减轻肿胀的功效，还有防止伤口化脓的作用。</li><li>烤肉防焦小窍门:烤肉时，可在烤箱里放一只盛有水的器皿，因为器皿中的水可随烤箱内温度的升高而变成水蒸气，防止烤肉焦糊。 </li><li>巧洗带鱼:带鱼身上的腥味和油腻较大，用清水很难洗净，可把带鱼先放在碱水中泡一下，再用清水洗，就会很容易洗净，而且无腥味。</li><li>芥末煮水洗脚可降血压。将80克芥末面放在洗脚盆里，加半盆水搅匀，用炉火煮开，稍凉后洗脚。每天早晚1次，1天后血压就可下降。</li><li>煮排骨时放点醋，可使排骨中的钙、磷、铁等矿物质溶解出来，利于吸收，营养价值更高。此外，醋还可以防止食物中的维生素被破坏。</li><li>巧剥蒜皮:将蒜用温水泡3-5分钟捞出，用手一搓，蒜皮即可脱落。如需一次剥好多蒜，可将蒜摊在案板上，用刀轻轻拍打即可脱去蒜皮。</li><li>蚊香定时熄灭法:用一个铁夹子，用时夹在蚊香所需要的长度上，当蚊香烧到铁夹夹的地方时，就会熄灭，既不影响睡眠，也可节约蚊香。 </li><li>面包与饼干不宜一起存放。面包含水分较多，饼干一般则是干而脆，两者如果存放在一起，就会使面包变硬，饼干也会因受潮失去酥脆感</li><li>烧糖醋鱼块及其它需放醋的菜肴时，最好在即将起锅时再放醋，这样能充分保持醋味，若放的过早，醋就会在烹调过程中蒸发掉而使醋味大减</li><li>梨可防晒！常食梨能使肌肤保持弹性，不起皱纹。梨中含有丰富的维生素E，对太阳光的暴晒能起到防护作用。</li><li>各种染发剂在室温或炎热的天气中，均会失去部分功能或改变色泽。若放在冰箱中保存，可长期保持其原有的功能，不会变质</li><li>冷冻食品解冻法1:肉类:适宜在室温下自然解冻，在水中解冻会使营养流失；家禽:宜在水中解冻，但未去内脏的最好在室温下自然解冻。</li><li>彩电不能自行接地线，如果接地线，一旦电源插头接反时，会使机内地线与电源的火线接通而使机架等部件带电，这样会有触电的危险。 </li><li>揭胶纸、胶带的妙法:贴在墙上的胶纸或胶带，如果生硬去揭，会损坏物件，可用蒸汽熨斗熨一下，就能很容易揭去了。</li><li>皮鞋霉斑清除法:皮鞋放久了发霉时，可用软布蘸酒精加水（1:1）溶液进行擦拭，然后放在通风处晾干。对发霉的皮包也可如此处理。</li><li>巧制肉馅:将要做馅的肉放入冰箱冷冻，待完全冻实后取出，用擦菜板擦肉，很容易就能擦把冻肉成细条，之后，只需用刀剁几下就可以了。 </li><li>皱褶身份证复原法:将身份证放在桌上，上面盖一两层纸，用熨斗隔纸熨烫（温度不易过高），熨好一面再熨另一面，即可使之平展如初。</li><li>电吹风治疗肩周炎！用电吹风以适当距离对准患者肩部用热风吹约10分钟，每天两次，3周可愈。若先在患者肩部擦上药酒再吹，效果更佳</li><li>煮肉的时候，如果想使汤味鲜美，应该把肉放入冷水中慢慢地煮；如果想使肉味鲜美，则应该把肉放在热水里煮。</li><li>宝石戒指如何清洗？可用棉棒在氧化镁和氨水混合物，或花露水、甘油中沾湿，擦洗宝石和框架，然后用绒布擦亮即可。</li><li>芦笋可减肥！芦笋能提高人体的基础代谢，促进人体内热量的消耗，并有很强的脱水能力，因此，多吃新鲜芦笋能变得苗条。 </li><li>如何让蜡烛不“流泪”？生日蜡烛用之前先放到冰箱的冷冻室里冷冻24小时，再插到蛋糕上，点燃后就没有烛油流下而弄脏蛋糕了。 </li><li>夏天甲鱼易被蚊子叮咬而死亡，但如果将甲鱼养在冰箱冷藏的果盘盒内，既可防止蚊子叮咬，又可延长甲鱼的存活时间。</li><li>冷冻食品解冻法2:鱼类:宜在5%的40-50度食盐水中解冻；蛋品:可装在不透水的金属容器中，将容器浸在20度的水中迅速解冻~</li><li>茶叶与食糖、糖果不宜一起存放。茶叶易吸潮，而食糖、糖果却恰恰含水分多，这两类物品存放在一起，就会使茶叶因受潮而发霉或变味。</li><li>洗涤面粉袋时不要在水中搓洗，可将面袋放在清水中泡1-2天，待发酵后，面粉会从面袋上自动脱落，这时再用清水漂洗，即可干净如初。</li><li>茶叶受潮不要晒！夏季茶叶容易受潮，若把受潮的茶叶放到太阳下晒就会走味。可用铁锅慢火炒至水气消失，晾干后密封保存，可保持其原味</li><li>牛仔裤穿时间长了就会褪色。可以把新买来的牛仔裤放入浓盐水中浸泡12小时后，再用清水洗净，以后再洗涤时就不会褪色了</li><li>丝瓜治慢性喉炎。用丝瓜绞汁或将丝瓜藤切断，让其汁自然滴出，放入碗内，上锅蒸熟，再加适量冰糖饮用，就能有效治疗慢性喉炎。</li><li>有的人吃药总是把药片掰开吃，以为药片小了利于吞咽。其实药片掰开后变成尖的，反而不利于下咽，还易划伤食道，所以药片不要掰开吃。</li><li>指甲油长久不脱落法:涂指甲油之前，先用棉花蘸点醋把指甲擦干净，等醋干后再涂指甲油，这样指甲油就不容易脱落了。</li><li>识别手机的窍门:正版手机机身号码，外包装号码，从手机上调出的号码三号一致。在验钞机下，进网许可标签右下角显示CMII字样。</li><li>巧切松花蛋:用刀切松花蛋，蛋黄会粘在刀上，可用丝线将松花蛋割开，既均匀又不粘蛋黄。将刀在热水中烫一下再切，也能切的整齐漂亮。 </li><li>不能用茶叶煮鸡蛋！因为茶叶中除含有生物碱外，还有多种酸化物质，这些化合物与鸡蛋中的铁元素结合，对胃有刺激作用，不利于消化吸收</li><li>瓜果的清洗:食用前，先将瓜果在盐水中浸泡20-30分钟，可去除瓜果表皮残存的农药或寄生虫卵，且盐水还有杀灭某些病菌的作用。</li><li>高压锅烹调火候:高压锅烹调时间从限压阀首次出气算起。鸡1千克加水2千克，18分钟可脱骨；排骨1千克加水2千克，20分钟可脱骨</li><li>巧选茶叶:看匀度，将茶叶倒入茶盘里，手拿茶盘向一定方向旋转数圈，使不同形状的茶叶分出层次中段茶越多，表明匀度越好。 </li><li>洋葱防衰老。洋葱对人体的结缔组织和关节有益。洋葱不仅能提供人体需要的许多养分，还含有微量元素硒，因此，多食洋葱能够预防衰老。</li><li>巧除家电缝隙的灰尘:家用电器的缝隙里常常会积藏很多灰尘，且用布不宜擦净，可将废旧的毛笔用来清除缝隙里的灰尘，非常方便。</li><li>首饰收藏与保养的窍门:轻拿轻放，避免碰撞与磨擦；避免受高温和酸、碱溶液接触；经常检查，防止宝石脱落；及时取下收藏和清洗保存。</li><li>牛奶渍鱼格外香！把收拾好的鱼放到牛奶里泡一下，取出后裹一层干面粉，再入热油锅中炸制，其味道格外香美。</li><li>鉴别珍珠的窍门:将珍珠放在阴暗处，闪闪发光的是上等珍珠；珍珠表面的清洁度和颜色决定珍珠的价值；珍珠越大、越圆越有价值。</li><li>大枣巧去皮:将干的大枣用清水浸泡3小时，然后放入锅中煮沸，待大枣完全泡开发胖时，将其捞起剥皮，很容易就能剥掉。</li><li>巧选茶叶:看茶叶松紧，紧而重实的质量好，粗而松弛、细而碎的质量差；看净度，茶叶中有较多茶梗、叶柄、茶籽及杂质的质量差。</li><li>空腹不宜吃柿子。如果空腹吃大量未加工或未去皮的柿子，而胃里的游离酸含量又较高时，就会凝结成块，形成柿石，引起肚子疼、呕吐等。</li><li>巧洗铁锅油垢:炒菜锅用久了，锅上积存的油垢很难清除掉，如果将新鲜的梨皮放在锅里加水煮一会儿，油垢就很容易清除了。</li><li>瓶子上的芰掀扛怯惺币蚺〉锰舳虿豢耸笨山銎孔臃湃氡渲校ǘ究煞旁谑彝猓├涠骋换岫缓笤倥。苋菀拙湍芘】?</li><li>豆腐可用来美容！每天早晨起床后，用豆腐一块，放在掌心，用以摩擦面部几分钟，坚持一个月，面部肌肤就会变得白嫩滋润。</li><li>高压锅烹调火候:牛肉1千克加水2千克，17分钟即可将肉煮烂；大米1500克加水1千克，9分钟即可煮熟</li><li>拉链的保养:拉链不能拉得太急、太猛；不能崩得太紧；保持干燥，防止和酸、碱东西接触；拉链发涩，可涂点蜡，轻轻拉几下，即可。</li><li>巧选茶叶:看色泽，绿茶翠绿有光的质量好；红茶褐色带油润的质量好；若绿茶含较多白毫，红茶含较多橙黄色芽头，均为高级茶。</li><li>海参的贮藏:将海参晒得干透，装入双层食品塑料袋中，加几头蒜，然后扎紧袋口，悬挂在高处，不会变质生虫。</li><li>在灯下挂一把香葱，或用纱袋装几根葱段，各种小虫都不会飞来。蚊子最怕橘红色光，用橘红色玻璃纸或绸布套在灯泡上，蚊子就不会*近了</li><li>在房间里放上几盒开盖的风油精、清凉油，或在墙上涂点薄荷可驱蚊。在室内栽一两株西红柿，西红柿枝叶发出的气味会把蚊子赶走。</li><li>碱水去鲜桃毛！在清水中放入少许食用碱，将鲜桃放入浸泡3分钟，搅动几下，桃毛便会自动脱落，清洗几下毛就没有了，很方便！ </li><li>白背心穿久了会出现黑斑，可取鲜姜2两捣烂放锅内加1斤水煮沸，稍凉后倒入洗衣盆，浸泡白背心十分钟，再反复揉搓几遍，黑斑即可消除_</li><li>切肥肉的窍门:切肥肉时，可先将肥肉蘸一下凉水，然后放在案板上，一边切一边洒点凉水，这样切着省力，肥肉也不会滑动，且不易粘案板 </li><li>抽烟或长时间使用深色指甲油会使指甲变色，可每天用半个新鲜柠檬擦拭，连续擦上两周即可除去污渍。</li><li>减少洗衣粉泡沫的窍门:往洗涤液中加少量肥皂粉，泡沫会显著减少。若用洗衣机洗衣，可在洗衣缸里放一杯醋，洗衣粉泡沫就会消失。</li><li>在服用四环素类药物时，不宜吃豆腐，因豆腐中含有较多钙，用盐卤做的石膏中含有较多镁，四环素遇到钙、镁会发生反应，降低杀菌效果。</li><li>丸子、松肉的配料比例:在烹饪丸子或松肉菜肴时，只要是按50克肉、10克淀粉的比例调料，就能使松肉松酥、丸子软嫩。</li><li>巧除领带上的皱纹。打皱了的领带，不用熨斗烫也能变得既平整又漂亮，只要把领带卷在啤酒瓶上，第二天再用时，原来的皱纹就消除了。 </li><li>取适量红糖放口中含十分钟后刷牙2-3分钟，漱口。再用盐碱水（清水掺食盐、食碱各50克）刷牙2分钟。每日2次，1周后烟垢可脱落</li><li>将废药瓶上的橡皮盖子搜集起来，按纵横交错位置，一排排钉在一块长方形木板上（钉子须钉在盖子凹陷处），就成为一块很实用的搓衣板。</li><li>使衣物香气袭人:用完的香水瓶、化妆水瓶等不要立即扔掉，把它们的盖打开，放在衣箱或衣柜里，会使衣物变得香气袭人。</li><li>咸肉放时间长了会有一股辛辣味，在煮咸肉时放一个白萝卜，然后再烹调，辛辣味即可除去。若咸肉仅表面有异味，用水加少量醋清洗即可。</li><li>手表内不小心进水，可用一种叫硅胶的颗粒状物质与手表一起放入密闭的容器内，数小时后取出，表中的积水即可消失。硅胶可反复使用。</li><li>擀面条时，如果一时找不到擀面杖，可用空玻璃瓶代替。用灌有热水的瓶子擀面条，还可以使硬面变软。</li><li>用洁厕灵当疏通剂:隔三差五地将适量洁厕灵倒入马桶，盖上马桶盖闷一会儿，再用水冲洗，能保持马桶通畅。</li><li>被蚊虫叮咬后可将热水瓶盖子（取自约90度水温的热水瓶）放在患处摩擦2-3秒钟，然后拿起，连续2-3次，瘙痒即会消失。</li><li>将待熟的香蕉放入冰箱内贮存，能使香蕉在较长时间内保鲜，即使外皮变色，里面也一样新鲜如初。</li><li>巧用84消毒液:洗衣时，白色纯棉织物易被其他衣服染色，可将被染衣服泡到稀释后的84消毒液中，利用其脱色性，还您衣服的本来面目</li><li>用墩布拖地很沉，且容易腰酸背疼，地面也要很长时间才干。用旧毛巾当抹布擦地，干净、干得快、省时间，用旧化纤料效果更好。</li><li>忍坦陌拙贫匀颂逵幸妗Ｒ虬拙浦械娜┒匀颂逅鸷洗螅灰丫铺倘纫恍涂墒勾蟛糠秩┗臃⒌簦庋匀松硖宓奈：突嵘僖恍?</li><li>巧用废瓶盖洁墙壁。将几只小瓶盖钉在小木板上，即成一个小铁刷，用它可刮去贴在墙壁上的纸张和鞋底上的泥土等，用途很广。</li><li>当你非常口渴而家中又无凉开水时，可把装有热水的杯子放入冷水中浸泡，然后在冷水中撒上一把盐，这样能加速开水的冷却。</li><li>写钢笔字时，如写了错别字，抹点牙膏，一擦就净。圆珠笔芯写字不流利时，将笔头插进吸过香烟的过滤嘴中转一转即可。 </li><li>如果你身边只有温开水而又想喝到浓郁的香茶，可在温开水中放少许白糖或红糖，搅拌溶解，然后放入茶叶，5分钟后，你便能如愿以偿。</li><li>将废弃无用的橡皮盖子用双面胶固定在房门的后面，可防止门在开关时与墙的碰撞，能起到保护房门的作用。</li><li>将西瓜浸入15%的盐水中3-5日，捞出揩干，再用西瓜蔓叶中挤出的水汁涂一遍，密封于聚乙稀塑料袋内，放入地窖，可使西瓜保鲜半年</li><li>鉴别宝石的窍门:将宝石放在衬物上让日光照射，穿透宝石的光线在衬物上呈现金星样子的为真品。若是假宝石，衬物上会呈现一块黑影</li><li>怎样烧鱼鱼不碎？1烧鱼之前，先将鱼下油锅炸一下。如烧鱼块，应裹一层薄薄的淀粉再炸。炸时注意油温宜高不宜低。</li><li>怎样烧鱼鱼不碎？2烧鱼时汤以刚没过鱼为宜，待汤烧开后，要改用小火煨焖至汤浓放香时即可，煨焖时要少翻动鱼，可将锅端起轻轻晃动。</li><li>鸡肉与芹菜同食会伤元气；牛肉与栗子同食后会呕吐；兔肉与芹菜同食会伤头发；蟹与柿子同食会中毒；洋葱与蜂蜜同食会伤眼睛。</li><li>戳伤手指的救护窍门:用冷湿布冷却患处，用厚纸作夹板固定受伤手指，再用绷带包扎好。普通扭伤或脱位，可自行将患处整复好，恢复原状</li><li>面粉能洗净葡萄！葡萄去蒂放在水盆里，加入适量面粉，用手轻搅几下，然后将浑浊的面粉水倒掉，用清水冲净即可。</li><li>车船行驶途中，将鲜姜片随时放在鼻孔下面闻，使辛辣味吸入鼻中，可以防晕车；将姜片贴在肚脐上，用伤湿止痛膏固定好，有相同效果。 </li><li>旅途中处理脚泡的方法:先用热水烫脚十分钟，用消过毒的针刺破脚泡，使泡内液体流出、排干，再将脚泡部位消毒。忌剪去泡皮，以防感染</li><li>旅途中小腿抽筋的防治:扳脚法:取坐姿，一手用力压迫痉挛的腿肚肌肉，一手抓住足趾向后扳脚，使足部背曲，再活动一下，即可缓解。</li><li>旅途中遭遇雷雨时，千万不要在巨石、悬崖下和山洞口躲避，电流从这些地方通过时会产生电弧，击伤避雨者。若山洞很深，可躲在里面</li><li>受潮软化的饼干放入冰箱冷藏几天，即可恢复原状；切洋葱等蔬菜时，可将其去皮放入冰箱冷冻室存放数小时后再切，就不会刺眼流泪了。</li><li>酿酒用的葡萄皮有丰富的抗氧化剂，经常适量饮点红酒，能增加好的胆固醇，减少血管硬化。</li><li>熬粥加碱的做法是不科学的，加碱熬出来的粥虽然显得粘稠、滑口，但粥内的一些重要的营养成分大部分都被破坏了，因此，熬粥不宜加碱。</li><li>治疗风湿症的窍门:生姜皮晒干研末，装入瓶内储存备用。每次取姜皮末半茶匙冲酒（低度白酒）饮服，可缓解症状。 </li><li>吃羊肉有助于保持健美体形，羊肉是理想的肉碱来源，这种和氨基酸类似的物质能帮助细胞“烧”掉人体多余的脂肪。</li><li>炒青菜脆嫩法:在炒黄瓜、莴笋等青菜时，洗净切好后，撒少许盐拌合，腌渍几分钟，控去水分后再炒，能保持脆嫩清鲜。</li><li>鱼刺卡喉的救治窍门1:吞咽橙皮。鱼刺卡喉时，可剥取橙皮，块窄一点，含着慢慢咽下，可化解鱼刺。</li><li>鱼刺卡喉的救治窍门2:用维生素C软化。细小鱼刺卡喉，可取维生素C一片，含服慢慢咽下，数分钟后，鱼刺就会软化清除。</li><li>皮肤粗糙者可将醋与甘油以5:1比例调和涂抹面部，每日坚持，会使皮肤变细嫩。在洗脸水中加一汤匙醋洗脸，也有美容功效。 </li><li>晾晒衣服要诀1:衣服最好不要在阳光下曝晒，应在阴凉通风处晾至半干时，再放到较弱的太阳光下晒干，以保护衣服的色泽和穿着寿命。</li><li>晾晒衣服要诀2:晾晒衣服不可拧得太干，应带水晾晒，并用手将衣服的襟、领、袖等处拉平，这样晾晒干的衣服会保持平整，不起皱褶。</li><li>西红柿、黄瓜不宜放冰箱储存。将西红柿、黄瓜放入冰箱存放，其表皮会呈现水浸状态，从而失去它们特有的风味，乃至变质腐败，不能食用</li><li>常吃苹果可防治口腔疾病，因为苹果的纤维质能清除牙龈中的污垢。但有一点需注意，吃完苹果后应漱口，以防龋齿的发生。</li><li>巧除室内怪味:室内通风不畅时，经常有碳酸怪味，可在灯泡上滴几滴香水或花露水，待遇热后慢慢散发出香味，室内就清香扑鼻了。</li><li>炒洋葱宜放面粉、酒。切好的洋葱蘸点干面粉，炒熟后色泽金黄，质地脆嫩，味美可口。炒洋葱时，加少许白葡萄酒，不易炒焦。 </li><li>巧除软刺:仙人掌之类的植物软刺扎进皮肤时，可用伤湿止痛膏贴在扎刺的部位，在灯泡下烘烤一会儿，然后快速将其揭去，刺就会被拔出。</li><li>巧识香油是否掺假1:看颜色。颜色淡红或红中带黄为正品。机榨香油比小磨香油颜色淡。如颜色黑红或深黄，则可能掺进了棉籽油或菜籽油</li><li>熬粥防溢妙法:熬粥时，稍不注意便会溢锅。如果往锅里加5-6滴植物油或动物油，就可避免粥汁溢锅了。</li><li>报纸油墨味可驱虫。在放衣服的箱子底上铺一层报纸，再放入衣物（最好使深色衣物贴着报纸），这样可使衣物免遭虫咬，报纸每半年换一次</li><li>巧识香油是否掺假2:看变化。香油在日光下清晰透明，如掺进凉水，在光照下则不透明，如果掺水过多，香油还会分层并容易沉淀变质。</li><li>旧邮票出现黄斑后，可将少许盐放在热牛奶中化开，然后把邮票放在冷却的奶液中浸泡2小时后取出，再用清水冲净、晾干，黄斑即可消除。</li><li>白萝卜美容:将白萝卜切碎捣烂取汁，加入适量清水，用来洗脸，长期坚持，可以使皮肤变得清爽润滑。</li><li>拔丝糖汁的熬制:在熬制做拔丝菜用的糖汁时，加入同大米粒差不多大小的明矾，就能延长凝结时间，并使糖丝拉得更长。</li><li>变质葡萄糖粉是好肥料。变质的葡萄糖粉捣碎撒入花盆土四周，三日后黄叶就会变绿，长势茂盛。其适用于吊兰、刺梅、万年青、龟背竹等。</li><li>电动剃须刀可修整衣裤。毛料衣裤、毛衣等穿久了会起很多小球，很不美观，可用电动剃须刀像剃胡须一样将衣服剃一遍，衣服即可平整如新</li><li>巧治气管炎:将蜂蜜和白酒（多少根据自己的酒量大小而定）掺在一起，用火烧热，凉后喝下，每天1-2次，坚持喝一个月，即可见效。</li><li>防衣物褪色二法:洗涤深色棉织物时加适量醋，可防止其褪色，且光泽如新；新买的有色花布第一次下水时，加盐浸泡十分钟可防止布料褪色。 </li><li>身上有伤口流血时，可立即在伤口上撒些白糖，因为白糖能减少伤口局部的水分，抑制细菌的繁殖，有助于伤口收敛愈合。</li><li>吃过大蒜后，喝杯牛奶，可消除大蒜遗留在口中的异味。抽屉、壁橱、衣箱里有霉味时，在里面放块肥皂，即可去除。 </li><li>巧选羽绒服1:一般以选含绒量多的为好。可将羽绒服放在案子上，用手拍打，蓬松度越高说明绒质越好，含绒量也越多。</li><li>巧选羽绒服2:全棉防绒布表面有一层蜡质，耐热性强，但耐磨性差；防绒尼龙绸面料耐磨耐穿，但怕烫怕晒。选购涤棉面料的羽绒服较好。</li><li>珍珠不佩戴时，先用弱碱性的肥皂水洗涤一下，再用清水充分冲洗，然后用洁净软布将其擦净、阴干，放在丝绒盒内，置于避晒、防潮处保存</li><li>发面加盐好！面发酵得好坏是制作馒头、包子等各类主食的关键，发面时可加入少量食盐，这样发出的面气泡多，蒸出的主食松软可口。</li><li>根据美国国家药典规定，药品一旦开罐，罐内所附的棉花和干燥剂，就必须立刻丢弃，否则它们会因吸附水气，成为药罐内的一项污染源！</li><li>化妆时，先把微湿的化妆绵放到冰箱里，几分钟后把冰凉的海绵拍在抹好粉底的肌肤上，你会觉得肌肤格外清爽，彩妆也显得特别清新 </li><li>蜂蜜能洁齿。蜂蜜含有类似溶菌酶的成分，对各种致病病菌有较强的杀菌和抑菌能力，经常食用蜂蜜并注意口腔卫生，能预防龋齿的发生。</li><li>在粮食中放少量干海带，可吸收粮食中水分，防止其生虫发霉，海带用后会变湿，可晾干后再次放入，仍保持吸湿和杀菌能力，且不影响食用 </li><li>电视机或电脑着火时，先拔掉插头或关上总开关，再用毯状物扑灭火焰。切勿用水或灭火器救火，因机体内可能仍有残余电力，会引致电击。</li><li>画眼线的小技巧:要画好一双细致的眼线，可以先把手肘固定在桌上，然后平放一块小镜子，让双眼朝下望向镜子，就可以放心描画眼线了。</li><li>糕点的保存:保存糕点时，可在贮藏糕点的密封容器里加1片新鲜的面包，当面包发硬时，再及时更换一块新鲜的，这样糕点能保鲜较长时间</li><li>日光灯管使用数月后会两端发黑，照明度降低。这时把灯管取下，颠倒一下其两端接触极，日光灯管的寿命就可延长一倍，还可提高照明度</li><li>圆珠笔油弄到手上很难洗掉，可用酒精棉球（也可用白酒）放在手上被污染处，圆珠笔油很快就被吸附，再用清水冲洗即能洗净。 </li><li>要防止毛线衣缩水，洗涤时水温不要超过30度，用中性肥皂片或洗涤剂洗涤，过最后一遍水时加少许食醋,，能有效保持毛衣的弹性和光泽</li><li>浴室用电注意事项:宜用12伏低压电源，用防潮照明灯，里面的任何电气设备都要有足够高度（2米以上），以保证不会有人误触电源</li><li>识别优质酱油:摇晃瓶子看沿瓶壁流下的速度快慢，优质酱油浓度高流动慢；瓶底无沉淀物；颜色呈红褐色、棕褐色、有光泽而发乌。 </li><li>米饭做好后，挑些比较软、温热的揉成团，放在面部轻揉，直到米饭团变得油腻污黑，然后用清水洗掉，这样可使皮肤呼吸通畅，减少皱纹。</li><li>珍珠的保养:不宜在阳光下曝晒，少与香水、油脂以及强酸强碱等化学物质接触，防止珍珠失光、褪色。佩戴时要常用洁净的软布擦抹。</li><li>识别优质酱油:打开后未触及瓶口就可闻到浓香，劣质的则香气少或有异味；优质酱油品尝起来味道鲜美，咸甜适口，醇厚柔和，口味绵长。</li><li>活窍门:心绞痛病人的急救:让患者保持最舒适坐姿，头部垫起；如随身携带药品则给患者用药；松开紧身的衣服使其呼吸通畅；安慰患者。 </li><li>将一头大蒜切成薄片，与三百毫升凉开水一起装入密封容器内6-7小时，然后加入三十克碎冰糖，每天早晚漱口一次，可防感冒。 </li><li>购买保暖内衣应选内外表层均用40支以上全棉的产品，用手轻抖不出现“沙沙”声，手感柔顺无异物感，有优良回弹性，最好选知名品牌。</li><li>自来水刚煮沸就关火对健康不利，煮沸3-5分钟再熄火，烧出来的开水亚硝酸盐和氯化物等有毒物质含量都处于最低值，最适合饮用。</li><li>电毯失火时应先拔掉插头，然后向床泼水灭火，切勿揭起床单，否则空气进入，冒烟的床容易着火。如情势严重，则立即通知消防队。</li><li>巧煮牛肉:在头天晚上将牛肉涂上一层芥末，第二天洗净后加少许醋煮；或用纱布包一小撮茶叶与牛肉同煮，都可使牛肉易熟快烂。</li><li>西红柿可治病，每天生食1-2个鲜熟西红柿可防癌，每早吃1-2个鲜熟西红柿蘸白糖可降血压，西红柿汁和西瓜汁各半杯混饮，可退烧。</li><li>煤气中毒的急救:迅速打开门窗使空气流通；尽可能把中毒者转移至通风处，同时注意保暖；保证呼吸道通畅，及时给氧，必要时做人工呼吸</li><li>专家建议冬天多吃红辣椒、胡萝卜、西红柿、洋葱、山楂等红颜色食品，可预防感冒；每天喝一杯酸奶、一碗鸡汤也有预防感冒的作用。</li><li>巧刮鱼鳞:将鱼装一较大塑料袋里，放到案板上，用刀背反复拍打鱼体两面的鳞，然后将勺伸入袋内轻轻地刮，鱼鳞即可刮净，且不外溅。</li><li>鲜蛋与生姜、洋葱不能混放，生姜和洋葱有强烈气味，易透进蛋壳上的小气孔，使鲜蛋变质。粮食与水果混放，则水果易干瘪、粮食易霉变。</li><li>巧煮面条:煮面时在水面加一汤匙油，面条就不会沾了，还能防止面汤起泡沫溢出锅外。</li><li>买肉常识:看肉色，新鲜肉肥肉乳白，瘦肉粉红。如肥肉发黄或肉呈黑紫色有淤血，不能要。含瘦肉精的肉则特别鲜亮，色泽红艳。 </li><li>煮挂面时不要等水沸再下，当锅底有小气泡往上冒时就可下面，搅几下盖锅煮沸，适量加冷水，再盖锅煮沸即熟。这样煮出的面，面柔而汤清</li><li>毛巾科学消毒法:将毛巾先用开水煮沸10分钟左右，再用肥皂洗涤，然后用清水充分洗净，最后将毛巾折叠好放入微波炉中，加热5分钟。</li><li>将白菜帮叶切斜片，锅内油热后放花椒10粒左右，炸黑后放白菜，紧跟将一小酒杯米醋入锅，翻炒后勾淀粉少许，此菜有助防流感。</li><li>亮光可以帮助你早起，在床头准备一盏明灯，闹钟一响就打开，坚持下去，有一天你会发现，每天起床后你都会精神奕奕。</li><li>9种让你笑容绽放的食物:芹菜、乳酪、绿茶、洋葱、香菇、芥末、无糖口香糖、薄荷、水；常食这些食物可消除口臭、防止蛀牙。</li><li>背阴客厅的“亮”招:补充人工光源。厅内色调统一，忌沉闷。选白榉、枫木饰面哑光漆家具并合理摆放。地面砖宜亮色，如浅米黄色光面的 </li><li>识别假蜂蜜:在蜂蜜中加入少量冷开水，也可滴几滴碘酒或酒精，如滴入物呈紫、绿或红褐色的，就是假蜂蜜。</li><li>头皮屑过多可通过饮食改善。多吃碱性食物如水果、蔬菜、蜂蜜等；多吃含维生素B2、B6食物，如动物肝、肾、心、奶类、蛋黄、麦胚等</li><li>挑选瓷器餐具时，用食指在瓷器上轻轻拍弹，如发出清脆的罄一般的声响，表明瓷器胚胎细腻、烧制好，如拍弹声发哑，则有破损或瓷胚质劣</li><li>枕头应有一定弹性，但过强也不好，头部不断受到外加的弹力作用，易产生肌肉疲劳和损伤。如弹簧枕、气枕等，都不能算是有利健康的枕头</li><li>鉴别香油:纯正香油色泽透明鲜亮，不纯香油有混浊物。冰箱中低温存放24小时后，纯正香油保持晶莹剔透液体状，不纯香油则有明显结晶[</li><li>表面多刺、多斑、釉质不够均匀甚至有裂纹的陶瓷品，其釉中所含铅易溢出，不宜做餐具。瓷器粘合剂大多含铅高，瓷器补过后也不宜做餐具</li><li>冬季当心“低热烫伤”！热水袋内水温不要太热，热力表面不要直接贴近皮肤。糖尿病人或末梢感觉神经迟钝者及婴幼儿最好不用热水袋取暖</li><li>挑选熟透的西红柿，将柿肉挖出，搅拌均匀，敷在眼睛上，约十分钟后用湿毛巾擦掉。此法可淡化黑眼圈，同时还可延缓眼周皮肤的老化。</li><li>苹果的另类疗效:治疗头痛！头痛时，把苹果磨成泥状，涂在纱布上，贴在头痛部位，头痛症状可减轻。</li><li>减少电脑伤害策略:连续工作1小时后应休息十分钟左右。室内光线要适宜，且保持通风干爽。注意正确的操作姿势。保持皮肤清洁。 </li><li>苹果的另类疗效:消除口臭！用苹果汁刷牙，可消除口臭，还可保持牙齿洁白，但切记刷完后要再用牙膏刷一遍牙。</li><li>用大号针头的废旧注射器，把胶水或其他无色、无腐蚀、流动性较好的粘合剂，均匀适量注入西服的气泡处，再熨干、熨平，西服会挺括如初</li><li>开启干白葡萄酒的软木瓶塞:将酒瓶握手中，用瓶底轻撞墙壁，木塞会慢慢向外顶，当顶出近一半时，停，待瓶中气泡消失后，木塞一拔即起</li><li>仰卧位是护送急症病人的常用体位。如病人处于昏迷状态，还应将其头部偏向一侧，以免咽喉部分泌物或呕吐物吸入气管，引起窒息。</li><li>毛巾常洗且每隔一段时间用肥皂、洗衣粉或碱液煮沸数分钟，可防发硬。煮沸时毛巾应全部浸水中，以免与空气接触发生氧化而降低柔软度</li><li>将急症病人护送医院时，心力衰竭或支气管哮喘病人适用坐位；一侧肺炎、气胸、胸腔积液病人适用侧卧位，且歪向患侧，有利保持呼吸功能</li><li>袋装牛奶冬季或冰箱放置后，其油脂会凝结附着在袋壁上，不易刮下，可在煮之前将其放暖气片上或火炉旁预热片刻，油脂即溶。</li><li>冬季室内湿度不够易诱发疾病！家中应配备加湿器，此外，向地上洒些水、用湿拖把每天拖几次地，或在室内养几盆水仙花也能增加湿度！</li><li>毛衣穿久了，有些部位会磨得发亮，可用醋、水各半的混合液在发亮部位喷洒一下，再洗涤，就可恢复原样。</li><li>辨识鲜鱼:鲜鱼外表鲜艳、鱼体完整无损害、鳞片整齐、眼球清晰、鳃无异味、肌肉坚实有弹性；冻鱼除以上要求外，表层要无干缩、油烧状 </li><li>巧克力不宜放冰箱中冷存！巧克力在冰箱中冷存后，一旦取出，在室温条件下其表面会结出一层白霜，且极易发霉变质，失去原味。 </li><li>清洗钻石:先将钻饰放盛有温和清洁剂或肥皂的小碟中约半小时，再用小软刷轻刷，用自来水冲洗后擦干即可，冲洗时将水池堵住，以防万一</li><li>市场上的海蟹以梭子蟹为多，也称枪蟹，优质的枪蟹蟹体暗紫发青，比较重，蟹甲有青白色云斑，两尖角无损，四对足硬朗。</li><li>很多除油烟机上有油盒，油满倒掉后，油盒很难清洗，可在干净油盒里先放点水再安在油烟机上，让油滴在水上，快满时一倒，油就全出来了</li><li>白色毛衣穿旧了会逐渐发黑，将毛衣清洗后放入冰箱冷冻1小时，再取出晾干，即可洁白如新。</li><li>钻石保养:不要将钻饰堆放在一起，以免镶托间相互摩擦刮花；做粗重、剧烈活动时，先将钻饰脱下；每隔半年送珠宝店作一次专业性清洗。</li><li>选择睡衣:棉质睡衣柔软、贴身、透气性能好；睡衣忌色彩鲜丽，浅色有安眠宁神作用；要足够肥，不能过小或刚刚好，要易穿、易脱。</li><li>防止涂料变色:对最易发生变色情况的虫胶清漆，用非金属容器盛装；使用清漆前再加入金粉、银粉，不要过早加入清漆中存放。</li><li>据报道市场上有废毛发为原料制成的劣质酱油。消协提醒:合格酱油必须有QS标志，且标签规范，标明生产日期、生产厂家、酿造或配制等</li><li>不同用途的酱油卫生指标不同，供佐餐用的可直接入口，卫生指标较好的，也可用于烹调，但如果是供烹调用的，则千万别用于凉拌菜。</li><li>专家指出，学生用纸应注意:纸并非越白越好！有些厂家为使纸色更白，加入大量超标的荧光增白剂，该物质含多种致病物，且危害视力！</li><li>纸的重量和厚度不是鉴定纸质的标准，劣质原料只须加入适量机油、漂白粉等，就可做出厚纸，而机油含铅等毒害神经系统物质，危害极大！</li><li>辨识驼毛:优质驼毛纤维长、有光泽，毛色有杏黄色、棕红色、银灰色、白色等，较差的呈黑色，毛也较粗。假驼毛一般毛纤维短且粗。</li><li>辨识驼毛:优质驼毛手感柔软，富有弹性，干燥，假驼毛手感和弹性一般较差，有的还有潮湿感；取适量毛浸泡或水煮几分钟。假驼毛会褪色</li><li>清除黄金饰品污渍:放冷开水与中性洗衣粉调和水中浸泡15分钟（忌用自来水和偏酸碱洗衣粉），再用软毛刷轻刷表面，最后用冷开水过清</li><li>冬瓜五百克、赤豆40克加水两碗煮沸再小火煨20分钟，不加或少加盐，日服2次，利小便、消水肿、解热毒；慢性肾炎、脾肾虚寒者不宜</li><li>春节前四五天菜价最高，可提前储备蔬菜，如大白菜、卷心菜、芹菜、黄瓜、西红柿、冬瓜、胡萝卜、青萝卜、马铃薯、大葱、生姜、山药等</li><li>不宜提前购买的蔬菜:青椒、豆角、菜花、韭菜、菠菜、茴香、生笋、蘑菇、生菜、油麦菜等，即使温度适宜，最好也别存放三天以上。</li><li>街头散装炒货慎买！看起来有光泽且摸时有油状物的黑瓜子，很可能表面涂有矿物油，用漂白剂漂过或硫磺熏过的白瓜子、开心果有异味。</li><li>购年货当心“洗衣粉”鱼！卫生部门提醒:用甲醛和洗衣粉泡过的海产品颜色偏白，鱼的肉与刺粘连较紧，肉质僵硬，入口腥涩，闻之有药味。</li><li>春运期识破犯罪伎俩:看票:罪犯利用同乡和同程的借口同乘客搭讪，借故拿过乘客的票来看，看完后还给对方的是张已被调换了的过期车票</li><li>春运期识破犯罪伎俩:碰瓷:一些罪犯走过旅客身边时故意将自己物品扔到地上，然后诈骗旅客钱财。旅客不要被吓住，糊涂就范，应报警。</li><li>春运拥挤，乘客易遭受疾病侵袭，可适度打开车窗，或*站间隙多到站台走动，也可乘车前服用些抗感染或增加免疫力的药物，注意饮食卫生</li><li>营造节日气氛:可买些鲜艳可爱的卡通*垫等小摆设来装饰房间，鲜花和植物更是永不过时的装饰品，也可在灯下、窗上挂些彩色玻璃吊球。</li><li>节日应酬多，易导致营养过剩和肥胖，应注意肉类等避免过量，适当多吃豆制品和鱼类，不挑食，不偏食，最后要吃点米饭，饭后再吃点水果</li><li>炒菜时冒出的油烟中含有害物质，若整天泡在厨房做菜，会导致腰酸背痛、乏力，应注意一打开燃气开关就打开排气设备，炒完菜再抽一会。</li><li>个人使用毛巾数量最低标准为男二女三，用完后及时清洗，每周消毒一次，晾挂通风处，毛巾使用期限一般为3个月，忌一巾多人、一巾多用</li><li>宜鲜吃的食物每次要少做；剩菜应用保鲜膜包好，放冰箱内冷藏；厨房最好准备两套砧板和刀具，熟食、生食分开处理，以免交*污染。</li><li>轻度烫伤，可涂紫药水，不必包扎。皮肤若起泡，不要把泡弄破，可用涂有凡士林纱布轻轻包扎。病人要注意保暖，多喝开水，吃点止痛药。</li><li>烹调时要少油、少糖、少盐分，有利健康；烹调方法用蒸、煮、烫、炖、烤、卤、凉拌等，可减少油脂吸收；鸡汤、高汤置于冰箱，可去浮油 </li><li>哮喘、过敏性疾病患者，应少吃“发食”，如鸡、羊、鱼、虾、蟹等；水肿病人少吃碱性食物，皮肤病患者忌食虾、鱼、羊肉等</li><li>被子晒法:以化纤面料为被里、被面的棉被不宜在阳光下曝晒，以防温度过高烤坏化学纤维，晒时可在被子上盖一层布，防止阳光直接晒到。</li><li>每日饮水（含汤）至少6碗（杯），每碗（杯）以250cc计算，喝饮料不要加糖，充足水分可促进和改善便秘，对高血压的人特别重要。</li><li>羽绒被吸湿性能和排湿性能都十分好，不需频繁晾晒，若在户外晒时，也需盖上一块布，经一小时的“通风”即可，也可在阴凉处晾一个小时</li><li>漱口能按摩大脑，连续漱口5-10分钟，可引起中枢神经系统兴奋，这些复杂的变化是一种特殊的大脑按摩，对大脑起到良好的保护作用。</li><li>晒好的被子切忌拍打，因棉花纤维粗而短，易碎，拍打棉被会使里面的纤维断裂，变成棉尘跑出来，如被子上落了灰尘，用刷子刷刷就干净了</li><li>冬季装修时，木材要注意保湿，以免变形；木工制品要及时封油，以防收缩；施工过程要注意保暖；木地板要留出2毫米左右的伸缩缝儿。</li><li>识虾:海生的虾一般比养殖的虾肉质坚实且肥美；鲜对虾色青、皮亮、身硬、头体相连；如虾体发灰，体软发散，说明鲜度差。</li><li>中药食物搭配禁忌:薄荷，忌食鳖肉。茯苓，忌食醋。蜂蜜，忌食生葱。白术，忌食大蒜、桃子、李子等。 </li><li>鉴别珍珠:真珍珠看上去有不均匀的彩虹，假的色调单一；真珍珠摸起来有清凉感；相互摩擦，有粗糙感的是真珍珠，明显光滑感的是人造珠 </li><li>将大葱葱根朝下竖直插在有水的盆中，大葱不仅不会烂，还会生长呢！将大葱叶晒蔫，然后带着叶子捆好放在阴暗处，就可存放长久。</li><li>购物谨防发票七陷阱:借口无发票；发票无品名；不注明换货日期；以购销合同代替发票；消费者承担税金；不盖公章；加盖“不退”图章。</li><li>春季为流行病高发期，家里可多做些提高人体免疫力的凉拌菜:海带丝、芦笋丝、萝卜丝、鱼腥草、枸杞菜等，适当多吃，可预防感染疾病。</li><li>红木家具宜阴湿，忌干燥，不宜曝晒，切忌空调对着家具吹；每三个月用少许蜡擦一次；用轻度肥皂水清除表面的油垢，忌用汽油、煤油。 </li><li>衣橱里可喷些普通香水，去除霉味；用棉花蘸点香水，塞在文胸里，使人通体透香；洗头最后一次用清水冲时，放少许香水，头发会洋溢香气。</li><li>煮熟的鸡蛋晾凉后，置入冰箱1-2分钟，再用刀切时，切口整齐，不易切碎。因受潮而软化的肥皂，放在冰箱中，就可恢复坚硬。</li><li>将各种花瓣晒干后混合置于一匣中，放在起居室或餐厅，就能使满室飘香。将其置于袋中，放在衣柜里，能把柜内的衣物熏上一股淡淡的幽香</li><li>塑胶地板忌水，清洁刷洗后，必须尽快让水分蒸发，以防清洁剂及水分和胶质起化学作用，造成地板面脱胶或翘起现象。</li><li>不要因为兔毛衫掉毛就不再穿它了，可把它装进一个塑料袋中放入冰箱内冷藏3-4天，就可以防止它掉毛了。</li><li>在流感流行期间，在服用维生素C的同时，应多吃一些杏、苹果、香瓜、蘑菇、牛肝等富含铜元素的食物，两者结合才能起到预防流感的作用</li><li>如何知道蒸锅内食物是否蒸熟？打开蒸锅锅盖，用划燃的火柴凑近热蒸汽，若火焰奄奄一息甚至熄灭了，就说明食物基本熟了。</li><li>用100克左右的食盐投入半盆温水中，先浸湿头发，再按通常的方式洗净头发，每周洗一次，仅二三次后，梳头洗发就再不大把脱落了。</li><li>做三明治时，应先把吐司放在冰箱内冰一下，这时吐司会变硬，不但好切也易涂奶油，等到三明治做好要吃时，吐司已恢复原来膨松的弹性</li><li>德国专家试验表明，在催眠效果方面，通俗的摇篮曲竟使各种安眠药物甘拜下风，人们在摇篮曲陪伴中睡得特别香甜。</li><li>意外烫伤后，用大葱叶劈开成片，将有粘液的一面贴在烫伤处，面积大可多贴几片，并轻轻包扎，既止痛，又防止起泡，一二天基本痊愈。</li><li>意外烫伤后，还可用鸡蛋清、熟蜂蜜或香油，混合调匀涂敷在受伤处，有消炎止痛作用。</li><li>要睡觉的时候，拿小黄瓜切薄放置脸上过几分钟拿下来，由于皮肤吸收了天然瓜果中的营养成分，一个月后您的脸就会变得白嫩。</li><li>恢复羊毛衫光泽与柔软度的方法:洗涤时在温水中加放适量干洗剂和氨水，漂洗时再加几滴醋，可以帮助恢复毛织物原有的光泽及柔软度。</li><li>防止羊毛衫衣物缩小的方法:把洗衣服的水温控制在35摄氏度左右，用高级中性洗涤剂洗涤，水与洗涤剂的比例应为3:1。</li><li>若一侧的鼻孔内塞入异物，可用一张纸条，刺激另一个鼻孔，人就会打喷嚏，鼻子里的异物自然会被喷出来。</li><li>睡前用最便宜的化妆棉加上化妆水完全浸湿后，敷在脸上20分钟，每周3次，您的皮肤会有想不到的水亮清透喔！</li><li>羊毛衫不掉毛的窍门:用半盆凉水溶解一汤匙淀粉，把羊毛衫浸透后拿出来，不要拧，沥净水后放在溶有少量洗衣粉的水中，浸泡5分钟漂净</li><li>铝壶或铝锅用一段时间后，会结有薄层水垢。将土豆皮放在里面，加适量水，烧沸，煮10分钟左右，即可除去。</li><li>厨房地面油污多，不易擦净。擦地前可用热水将油污的地面湿润，使污迹软化，然后给拖把上倒一些醋，再拖地，就能去除地面上的油污。</li><li>打开煤气开关点火后，火苗如呈绿色飘火，则说明煤气燃烧不完全，这样浪费煤气，这时应将空气调节阀调到火苗“呼呼”发响的位置为宜。</li><li>使用热水器时，最好把温度调节在50-60度之间，这样能防止热水器水垢的生成；当水温超过85度时，水垢的生成会加剧。</li><li>蒸东西时，蒸锅水不要放得太多，一般以蒸好后锅内剩半碗水为宜，这样做，可最大程度节约煤气。</li><li>擦水龙头的窍门:用干布蘸面粉或香烟灰来擦，再用湿布擦，最后用干布擦，可擦得光亮，又不损伤金属表面。</li><li>残茶妙用:用干净的残茶叶煮茶鸡蛋，味道清香可口。吃生葱、蒜后，弄一些残茶叶在口里嚼一会儿，葱、蒜味便能慢慢消除。</li><li>点蜡烛时，在烛芯周围撒上几粒盐，可以防止蜡油淌流，从而延长蜡烛的点燃时间。生炉子时撒上一把盐，会使烟雾消散，火苗旺盛。</li><li>不锈钢厨具去渍窍门:用做菜剩下的萝卜头反复擦拭渍迹处，便能除去。如果渍迹产生的时间已久，那么在萝卜头上沾些去污粉，效果很好。</li><li>锅用久了，锅底常有厚厚一层黑渍难以除去。如果在使用新锅前先在锅底涂上厚厚一层肥皂，那么锅底变黑后，轻轻一擦，即可除去。</li><li>塑料砧板使用方便，但菜刀留下的裂痕容易生污纳垢，用去污粉不易洗掉，可改用漂白剂沾在海绵上，挤压着洗刷干净后再用水冲一下即可。</li><li>残茶妙用:把残茶晒干后，放在厕所或臭水沟渠旁燃烧，能消除恶臭。将晒干后的残茶燃烧，可以驱除蚊虫。</li><li>感冒鼻塞时，可用大蒜头1瓣，用刀削成与鼻孔相吻合的形状，塞进鼻孔，连续几次，即可治愈。用薄荷油闻鼻，也可以即刻使鼻孔通畅。</li><li>鼻塞严重影响睡眠时，用热水洗脚，促使鼻粘膜充血消退。既能解除鼻塞，又能调节大脑皮层的兴奋与抑制，从而促进睡眠。 </li><li>皮肤瘙痒时，可将一撮香烟灰放在一容器内，滴上几滴水，使其呈糊状，敷于患处，即可止痒。用鲜丝瓜叶捣烂搽患处，效果也不错。</li><li>桔皮妙用:将粥煮至半熟时加入两块鲜桔皮，煮熟的粥生津开胃，格外香甜。沏茶时加入几丝桔皮条，饮服时清香爽口，润肺祛痰。</li><li>拌凉菜宜先放入花椒油、芝麻油、糖、醋等调味佐料，以使凉菜更加进味、爽口，待食用前再放入食盐，可防止凉菜水分渗出，带走营养成分</li><li>油热几成？一二成时锅底中部略有小油泡泛起；三四成时油面始波动，无油烟；五六成时波动加剧，油烟上升；七八成时油面平静，油烟滚滚 </li><li>炖牛肉时，把泡开的茶根装入纱布袋，放在水中与牛肉共炖，牛肉很快便会炖烂，且风味独特、鲜美。</li><li>鉴别注水肉！在切开的肉表面贴上一张薄纸，稍后若能完整揭开，且纸已湿透的可能是注水肉；切开粘膜处，有较多稀粘液的肉要慎食。</li><li>侧卧按摩治鼻塞:左侧鼻塞面向右躺下，右侧鼻塞面向左躺下，用食指和中指捏住鼻子，按摩鼻梁两侧迎香穴1-2分钟，鼻塞即可消除。</li><li>外出旅游面包保鲜小窍门:把面包用原来的包装蜡纸包好，再拿两张报纸，用水浸湿后包在蜡纸外层，放在一个塑料袋里，将袋口扎牢。</li><li>生花生米放在容器里晒2-3天，然后晾凉，用塑料食品袋装好，封口扎紧，放置冰箱内冷藏，可保存1-2年，随吃随取随加工，不会坏掉</li><li>白萝卜和蜂蜜都有润肺止咳作用，可用来治干咳:将白萝卜洗净，捣烂取汁，每次60毫升，加入适量蜂蜜调均匀，每日3次，连服3-5日 </li><li>煮豆粥时，豆子一定不能提前用水泡，否则就不容易煮烂；待水开锅时，兑入几次凉水，被凉水“激”几次，豆子就很容易开花了。</li><li>春天是哮喘病多发季节，可用大蒜瓣自疗:大蒜2-4瓣捣成泥状装入瓶中，闻大蒜气味，每日3-5次，大蒜瓣一日一换，连用3-4日。</li><li>当心买到假碘盐！将碘盐撒在切开的土豆片上或淀粉溶液中，可变成浅紫色，颜色越深，含碘量越高，无颜色反应的则是假碘盐。</li><li>竹笋越新鲜吃起来口感越好，要想竹笋保鲜，可以在竹笋切面上涂抹一些食盐，然后将它放入冰箱中冷藏，就可使其吃起来鲜嫩爽口。 </li><li>巧用废瓶盖:刮鱼鳞。取长约15厘米的小圆棒，在其一端钉上2-4个酒瓶盖，利用瓶盖端面的齿来刮鱼鳞，是一种很好的刮鳞工具。</li><li>绿豆蛋花汤治口疮:鸡蛋1个，打入碗内捣散；将适量绿豆浸泡10多分钟，煮沸1-5分钟，用此汤冲蛋花，早晚各服一次，服1-2天。</li><li>掺假食用油的鉴别:鉴别掺入蓖麻油的食用油时，将油样静置一段时间后，油样能自动分离成两层，食用油在上，蓖麻油在下。</li><li>市场上常出现假粉丝，所以买粉丝时应细辨，慎买发黄、发绿等色泽鲜艳的粉丝；用水煮时有酸味或其他异味的粉丝应引起警惕。</li><li>如何去竹笋涩味？将竹笋连皮放入淘米水中，放一个去籽红辣椒，用温火煮好后熄火，让它自然冷却，再取出来用水冲洗，涩味就没了。</li><li>鼻塞家疗:将葱白一小把或洋葱头三四个切碎，熬汤，熬好后趁热用鼻子使劲吸热气，也可以将食醋烧开，用鼻子吸醋气，疗效都很好。</li><li>巧用废瓶盖:削姜皮。姜的形状弯曲不平，体积又小，欲削除姜皮十分麻烦，可用汽水瓶或酒瓶盖周围的齿来削姜皮，既快又方便。 </li><li>勾中指止鼻血:鼻子流血时，自己双手的中指互勾，一般一会儿就能止血。幼儿不会中指互勾，大人用中指勾住幼儿的左右中指，同样可止血 </li><li>衣领及袖口上的污垢，用一般的肥皂很难洗净，可以用洗发水涂于污迹处，再用刷子刷，或将剃须膏涂在污垢处，几分钟后再洗，效果会更好</li><li>巧手清除絮状物！衣物晾干后，有些面料的衣物爱沾絮状物，可以找一块浸水后拧干的海绵来擦拭衣物表面，可轻松除去其表面的杂物。</li><li>食盐还有这样的妙用，你知道吗？盐可使蔬菜黄叶返绿:菠菜等青菜的叶，如果有些轻度变黄，焯时放一点盐，颜色能由黄变绿。</li><li>最近南京惊现有毒水发货！水发货选购:手感滑腻的可能用工业氢氧化钠处理过；有刺激性气味的可能用甲醛泡过；颜色过于鲜亮的要慎买。 </li><li>自己清洁皮衣毛领！用干洗剂或者用羊毛专用洗涤剂清洗，清洗时要轻揉，并用清水涮净，之后要阴干，或者用吹风机吹干并用梳子理顺。</li><li>街头“现炒茶”别忙喝！现炒茶火气大，且未经氧化，易刺激胃、肠粘膜，饮用后易引发胃痛、胃胀，专家建议现炒茶存放10天以后再喝。</li><li>巧除室内甲醛异味:购买800克颗粒状活性碳，将活性碳分成8份，放入盘中，每个房间放两至三盘，72小时可基本除尽室内异味。</li><li>巧识色素葡萄酒！将白色餐巾纸铺在桌上，将酒晃几下，倒少许在纸面上，如果红色不能均匀分布，或纸面上有沉淀物，则酒是用色素兑成的</li><li>用高汤煮制的菜不宜放味精，因为高汤本来就有一种鲜味，而味精的鲜味与之不同，加味精会把高汤的鲜味掩盖，使菜的味道不伦不类。</li><li>芦笋含有多种微量元素，可提高免疫力:将鲜芦笋300克洗净，削皮后切丝，加盐、芝麻酱等调料拌匀，即可食用，口味独特，赶快尝尝吧</li><li>在做好的鱼里放一些切段的干辣椒，可以让鱼永久告别腥味；把要熬汤的鱼先在锅里炸一下再做汤，可使熬出的汤呈现诱人的乳白色。</li><li>巧用生姜治烫伤:若不小心被烫伤，可将生姜捣烂，取其汁液，然后用药棉蘸上姜汁擦患处，此法可使起泡者消炎除泡，破皮者促进结痂。</li><li>巧除蔬菜残余农药:取500毫升清水加食用碱5至10克配成碱水，将蔬菜放入其中，据菜量配足碱水，浸泡几分钟后，用清水洗净。</li><li>葡萄酒保存方法正确可维持其美味芳香，先将酒存在具有隔热、隔光效果的纸箱内，再置于阴凉通风且温度变化不大的地方，可长时间保存。 </li><li>菜叶小虫巧清除:用淡盐水浸泡菜叶，小虫受到盐的刺激，便很快和菜叶分开，由于盐水的比重较大，小虫会浮在水面上，很容易从盆中倒出</li><li>如果你不小心把饭烧糊了，别着急，此法可帮你轻松除去糊味:将8-10厘米长的葱洗净，插入饭中，盖严锅盖，片刻糊味即除。</li><li>巧用桔子皮去除肉类异味:炖肉或排骨时，在锅里加入几块洗干净的桔子皮，可除异味和油腻感，同时，可以使你的汤味道更鲜美。</li><li>家里的精美铜器不小心沾染污垢后，不易清除，在此向你奉上两妙法:一是用锅灰加明矾擦拭，二是用醋泡一段时间后擦洗，不妨一试！ </li><li>如果你有牙痛的毛病，此法是缓兵之计:用筷子蘸上一点味精放在疼痛的牙齿上，疼痛会得到缓解。一次不要用太多，用筷子头蘸一点即可。</li><li>装修房巧除味:用300克红茶在两只脸盆中泡热茶，放入室内，并开窗透气，48小时内室内甲醛含量将剧降，刺激性气味基本消除。</li><li>驾驶员不宜空腹吃香蕉！香蕉中含大量钾元素，空腹食用会使血液中的钾大量增加，对心血管有抑制作用，使人嗜睡、乏力，不利行车安全。 </li><li>天热了，清凉的椰子汁深受市民喜爱，挑选时将椰子晃一晃，若水声清脆，则椰子汁多。若喜吃椰子肉，则应选手感较重，摇起来较沉的椰子 </li><li>青椒去蒂再清洗！多数人洗青椒时，习惯将它剖为两半或直接冲洗，这是不正确的，因为青椒独特的造型与长势，易使农药积在凹陷的果蒂上</li><li>真假奶粉巧鉴别:试手感，真奶粉质地细腻，用手指搓捻会发出“吱吱”声；而假奶粉由于掺有其他成分，颗粒较粗，捏时会发出“沙沙”声</li><li>真假奶粉巧鉴别:尝味道，入口品尝时，真奶粉细腻发粘，易粘牙齿、舌头和上腭，溶解较快且无糖的甜味；假奶粉溶化快，不粘牙，甜味浓</li><li>最近市场上的一些所谓“红心柴鸡蛋”，其实是给鸡喂了含“加丽素红”添加剂饲料造成的。购买时最好挑那些外观干净、表面粗糙的鸡蛋。</li><li>五一窝在家里看碟？！先把影碟机除除尘吧:在停机状态下，用电吹风冷吹或吸尘器吸，动作幅度要小，小心损坏机器，最好不要拆机除尘。</li><li>假期饭局多，防醉小妙方:饮酒时多吃点豆腐类菜肴，因为豆腐含有一种能解酒的氨基酸，食后能使酒通过尿液迅速排出，减少醉酒几率。</li><li>清水加白醋为花朵延寿！天气渐热，鲜花买回家后易枯萎，不妨在花瓶中加几滴白醋或漂白水，再把花枝底部剪一下，可延长花朵保鲜期！</li><li>上海滩购物小贴士:个体商店价格差异较大，应多比较；侃价分路段，华亭路多侃一些，陕西路侃价余地较小；有些大商场也是可以侃价的。</li><li>旅途中不幸扭脚，可冷敷自救:冷水浸湿毛巾，拧干敷在伤处，隔3-4小时敷一次，每次5-8分钟，可消肿、止疼；也可用冷水淋洗伤部k4T</li><li>您知道正确的进餐顺序吗？那就是先喝汤，然后蔬菜、饭、肉按序摄入，半小时后再食用水果最佳，而不是饭后立即吃水果。 </li><li>刚买的水果和非叶类蔬菜，不宜立即放入冰箱冷藏，因为低温会抑制果菜酵素活动，无法分解残毒，应先放一两天，使残毒有时间被分解掉。</li><li>刚刚用油漆刷过的墙壁或家具常有浓烈的刺激性气味，只需在室内放两盆冷盐水，几天气味便可除去。此外，将洋葱浸泡盆中同样有效。 </li><li>苦瓜清热降火，但实在太苦，很多人吃不惯，奉上一法:只要在切好的苦瓜上撒上盐，腌渍一会儿并用水过滤，很快不太苦的苦瓜就形成喽！ </li><li>最近中央电视台曝光了一批毒粉丝，教您鉴别:正常粉丝的色泽略微偏黄，接近淀粉原色，那种特别白特别亮的粉丝最好别买。</li><li>将粉丝点燃，正常粉丝燃烧时应有黑色的炭，并且粉丝有多长炭就应该有多长，而毒粉丝燃烧时没有炭残留，而且还会伴随很大的声响。</li><li>牙膏洗葡萄更干净！葡萄经淡盐水浸泡可杀菌，但冲洗后有时表面还残留一层白膜，可挤些牙膏，把葡萄粒置于手掌间轻揉，再以清水洗净。</li><li>饮水机加柠檬巧去垢！饮水机用久了，里面有一层白色的渣，取一新鲜柠檬，切半，去籽，放进饮水机内煮二三个小时，可去除白渣。</li><li>喝茶有道！草酸易与钙结合形成结石，而茶中含有草酸，因此日常饮茶要浓淡适度且不过量，食用含钙食物如豆腐、虾皮后尤其不宜马上喝茶.</li><li>选用含氟牙膏要谨慎，使用要更加小心，因为含氟牙膏虽有防龋效果，但长期使用易造成氟中毒，少年儿童和老人尤其要慎用。</li><li>对于女人来说，醋除了饮食之外，还可用来美容，每次在洗手之后先敷一层醋，保留20分钟后再洗掉，可以使手部的皮肤柔白细嫩。 </li><li>不慎将葡萄的汁液滴在棉质衣服上，用肥皂洗涤不但不能去掉污渍，反而会使其颜色加重，应立即用白醋浸泡污渍处数分钟，然后用清水洗净 </li><li>丝巾的妙用！在美容院做好发型，一觉醒来就变形了！不必烦恼，睡前在枕头上铺一条质地光滑的丝巾，就不会弄乱头发，美丽发型得以保持</li><li>天热更要防感冒！天热流汗使人们消耗大量的能量，人体抵抗力下降，易患感冒，应注意多喝白开水，少量多次，以每次三百至五百毫升为宜</li><li>天热了，许多人有脚臭，以下两法不妨一试:穿鞋时将少许茶叶放鞋里；盆里放温水，放入少许茶叶，把双脚放进去浸泡十分钟，可除臭味。</li><li>自制杏仁露:杏仁12克、桂花6克、冰糖适量，杏仁捣碎加水煮15分钟，加桂花再煮10分钟，取滤液加冰糖调味，经常饮用可祛斑护肤。</li><li>不吃药缓解感冒症状！可在患者关节处，如手腕、膝盖内侧、脚踝两侧等，用纱布蘸高浓度酒擦拭三四十下，然后盖被睡觉，此法尤适用孕妇 </li><li>夏天犯了脚气，可将患脚洗净擦干，再用风油精涂擦患处，每天1-2次，一般坚持数天后便可见效，也可将生大蒜瓣捣碎连续涂抹。</li><li>被蚊子叮咬后奇痒难耐，可将一两片阿司匹林研碎，以适量凉开水化开，调成糊状。清洗被叮咬处，然后涂上药糊，很快即可止痒，不妨一试</li><li>糖醋大蒜的妙用:每天早晨空腹吃糖醋大蒜一头，并连带喝些醋汁，坚持10-15天，可降血压，适用于高血压病人。</li><li>巧除居室烟味！用食醋将毛巾浸湿，稍稍一拧，在居室中轻轻甩动，可去除室内烟味。如果用喷雾器来喷洒稀释后的醋溶液，效果会更好。</li><li>冰箱用一段时间之后，门有时候会变得很紧而不好开。用软布擦去箱体与箱门接触平面上的凝露，然后敷上一层滑石粉，即可手到病除了。</li><li>墙上被孩子涂上蜡笔渍后十分不雅，可用布（绒布最佳）遮住污渍处，用熨斗熨烫一下即可，蜡笔油遇热就会熔化，此时迅速用布将污垢擦净</li><li>用洋葱擦玻璃更明亮！将洋葱一切两半，用切面来擦玻璃表面。趁葱汁还未干时，迅速用干布擦拭，玻璃就会非常亮哟，赶快试试吧！</li><li>鲜花低头，深水急救！减去花枝末端一小段，然后将鲜花放到盛满冷水的容器中，仅留花头露出水面，一两个小时后花朵就会苏醒过来哟！ </li><li>汤做咸了，可在汤里加入几片西红柿，煮两分钟后，咸味会明显减轻，且不会冲淡汤的鲜味，也可将一个土豆放入汤中，煮5分钟，效果相同</li><li>你用QQ吗？木马病毒“QQ叛徒”被截获，如您在使用QQ时收到含有“wsdgs”字样的信息，表明机器已经中毒，应立刻进行杀毒。</li><li>将柚子皮的白筋撕下，置通风处，待干硬时，用刺有小孔的塑胶袋装好，可用做肉类去膻的辛香料，也可放在橱柜内防虫蚁，或放入米缸防虫</li><li>银行卡收费了，你有不常用的银行卡吗？若你有这类银行卡，又不想负担年费，可将储蓄卡退掉，保留存折账户，比办理整套销户更简便。</li><li>小心买到劣质西瓜子！优质瓜子中间是黄色的，四周黑色，劣质瓜子表面颜色模糊不清，一些加了滑石粉、石蜡的瓜子表面还有白色结晶。</li><li>切牛肉先冷冻！切牛肉丝或牛肉片时，为使刀工漂亮，可将整块牛肉包好，放冰柜冰冻半小时，待外形冻硬固定时，再取出切割，就容易多了 </li><li>煮豆子秘诀:煮红豆、绿豆时，先浸水一小时再以小火煮十分钟，然后熄火焖半小时再煮，可保持豆粒完整而汤汁香浓，且豆壳和豆沙不脱离</li><li>手机照片想备份？我有妙法！将图像从手机邮箱发送到电脑邮箱，然后在电脑中接收该邮件并保存，此法基本上对所有的手机都适用噢！ </li><li>过有效期一两天的鲜奶，为免倒掉浪费，可小火加热煮至开锅，凉后可用来做菜肴或点心，如做蛋糕，亦可和蛋液混合用来煎吐司。</li><li>电子邮件巧防病毒！发送邮件时附上签名信息或朋友能识别的暗号，就可使接收方确认该电子邮件是由好友发送的，而不是病毒。 </li><li>热水法减少蔬菜农药残留:适用于芹菜、菠菜、菜花、豆角等。将蔬菜表面污物洗净，然后放入沸水中，两三分钟后捞出，再用清水洗一两遍 </li><li>夏季消除痱子妙方一:新鲜的西瓜皮洗净，削去内层残留瓜瓤，用来擦拭患处，两分钟左右，每天三次，一般两天后即可见效，同时美肤养颜</li><li>夏季消除痱子妙方二:将新鲜苦瓜切片，用带汁的苦瓜肉全面擦拭患处，每天两次，一至三天后，痱子即可消退！ </li><li>腰粗者穿衣窍门:较宽大或伞状上衣可成功掩饰浑圆腰部，其中个子较高者，适合宽大的上衣；个子较小者，要选刚好过腰的宽上衣。</li><li>地毯因家具等的重压，会形成凹痕，可将浸过热水的毛巾拧干，敷在凹痕处七八分钟，移去毛巾，用吹风机和细毛刷边吹边刷，即可恢复原状</li><li>忘了屏保密码，电脑打不开？只要在进入Windows时，按住Shift不放，就会略过启动文件夹内容而不启动屏保，你就可以进去了。 </li><li>炸过鱼、虾的花生油用来炒菜时，常会影响菜肴的清香，但只要用此油炸一次茄子，即可使油变得清爽，而吸收了鱼虾味的茄子也格外好吃。</li><li>汽车省油经:装饰过度会破坏原车设计的风阻，提高油耗；放置过多不常用的东西，也会增加无谓负担；长时间原地热车会增加油耗。</li><li>想冬暖夏凉，拒绝“落地大窗”！很多人喜欢居室大落地窗设计，但这样易造成室内外冷热交流，达不到冬暖夏凉效果，且还消耗电力等能源</li><li>荔枝食用技巧:将表皮冲洗干净，因荔枝表皮存有保鲜剂，易致肠胃不适；荔枝性温热，一次不宜多吃，吃后最好饮用盐水或绿豆茶消暑降火</li><li>除狐臭小妙方:取500毫升西红柿汁放于浴盆中，使患处浸泡水中15分钟左右，每周2-3次，坚持数周，臭味可减轻，不妨一试哟！</li><li>矮个MM巧穿衣！避免穿两截式服装，不妨多穿连身的小碎花洋装。如果有腰带，应选用质料轻柔的，宽而硬挺的皮质、塑胶硬带都应避免。</li><li>喝剩的可乐倒掉十分可惜，可将之倒入马桶中，浸泡10分钟左右，污垢一般便能被清除，若清除不彻底，可进一步用刷子刷除。</li><li>家庭急救需注意:胃肠病人不可喝水进食，烧伤病人不宜喝白开水，急性胰腺炎病人应禁食，昏迷病人不可强灌饮料否则易误进气道引起窒息</li><li>光盘日常保养窍门:防尘并远离磁场；表面有污渍时，用干净棉布蘸专用清洁剂由光盘中心向边缘轻擦，切勿用汽油、酒精等，以免腐蚀光盘</li><li>办公室瘦身之咖啡版:午饭后半小时至1个小时内，喝杯浓郁的不加糖咖啡，可促进脂肪燃烧；下班前再喝一杯咖啡，并配合步行。 </li><li>隔夜茶中含有丰富的酸类、氟类，不但可以防止毛细血管出血，还能起到杀菌消炎作用，如口腔出血、皮肤出血等都可用它含漱洗浴。</li><li>电脑族护眼鲜招:菊花茶和柿叶茶能明目，防止眼部出现细纹，菊花茶还能吸收屏幕射线，电脑族可每天饮用这两种茶，以减少对眼睛的伤害</li><li>李子好吃要挑选！李子美味多汁，清肝热、活血脉，有美颜乌发的功效。据前人经验，如李子味苦涩或放入水中漂浮者为有毒，不宜食之。</li><li>太阳镜能减少紫外线对眼睛的损伤，但镜片颜色过深会影响视力，镜片颜色过浅，紫外线仍可透过镜片损伤眼睛，故夏季宜选灰色或绿色镜片</li><li>钢琴除尘有窍门:钢琴的键盘、琴弦的表面有灰尘时，切忌用湿布擦或用嘴吹，可用吸尘器将尘土吸去，也可用干净的绒布轻擦。</li><li>劣质香水识别窍门:将香水搽一点在手上，等酒精挥发后再闻，只能闻到酒精和合成香料的味儿，而闻不到正宗的香味的为劣质香水。</li><li>清除瓶中油污:瓶内油污不易刷干净，如果放进一把砂子，再加适量清水，用力摇晃几分钟，然后倒出来，再用清水洗刷几遍，瓶子就干净了</li><li>手表被磁化怎么办？手表接近电视机时会被磁化而走时不准，可找一块圆形空心、未受磁化的铁块，置于手表附近，使之将手表上的磁性吸去</li><li>小心买到假奔4处理器！真品包装盒塑料薄膜上Intel Corporation印字牢固，用指甲刮不下来，假货印字可刮下或变淡。</li><li>巧除铝锅污垢:用水泡适量石碱，用蛋壳蘸碱水擦拭铝锅，可使之表面光亮。擦时最好用块布盖在蛋壳上，以防蛋壳摩擦时划破手指。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript实现黑客帝国数字雨</title>
      <link href="/2020/03/01/JavaScript%E5%AE%9E%E7%8E%B0%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD%E6%95%B0%E5%AD%97%E9%9B%A8/"/>
      <url>/2020/03/01/JavaScript%E5%AE%9E%E7%8E%B0%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD%E6%95%B0%E5%AD%97%E9%9B%A8/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="/asset/hkdg.html">黑客帝国数字雨</a></p></li><li><p><a href="/asset/hkdgNumbers.html">黑客帝国数字雨（纯数字）</a></p></li><li><p><a href="/asset/hkdgWait6S.html">黑客帝国数字雨（页面静止不动6S后自动播放）</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器常用插件</title>
      <link href="/2020/02/24/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/02/24/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ul><li><p>广告过滤<br>uBlock Origin</p></li><li><p>鼠标控制<br>CrxMouse Chrome 手势</p></li><li><p>自动刷新网页<br>Super Auto Refresh Plus</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建轻量级网盘webd</title>
      <link href="/2019/12/27/%E6%90%AD%E5%BB%BA%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%BD%91%E7%9B%98webd/"/>
      <url>/2019/12/27/%E6%90%AD%E5%BB%BA%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%BD%91%E7%9B%98webd/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><h4 id="1-网盘软件-webd"><a href="#1-网盘软件-webd" class="headerlink" title="1. 网盘软件 webd"></a>1. 网盘软件 webd</h4><p>webd 轻量级(self-hosted)自建网盘软件程序仅 60 ~ 90 KB，含 server 端，无其它依赖，速度快资源占用低，纯便携软件，解压即用。支持 Windows、Linux、OpenWrt、Armbian界面简洁易用，无繁琐设置，支持移动设备。</p><p><a href="https://webd.cf/">官网</a><br><a href="https://webd.cf/latest/">下载地址</a></p><span id="more"></span><h4 id="2-服务器环境"><a href="#2-服务器环境" class="headerlink" title="2. 服务器环境"></a>2. 服务器环境</h4><p>本次使用服务器环境为 SUSE Linux Enterprise Server 12</p><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h4 id="1-首先设定安装包变量"><a href="#1-首先设定安装包变量" class="headerlink" title="1. 首先设定安装包变量"></a>1. 首先设定安装包变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pkg=webd-linux-x86_64.tar.gz</span><br><span class="line">cd /tmp</span><br><span class="line">wget http://webd.cf/latest/$&#123;pkg&#125;</span><br><span class="line">tar -xzvf $&#123;pkg&#125;</span><br><span class="line">cp -fv webd/webd /usr/bin/</span><br><span class="line">cp -fv webd/webd.conf /etc/</span><br><span class="line">rm -rf /tmp/webd /tmp/$&#123;pkg&#125; # 删除无用的残留文件</span><br></pre></td></tr></table></figure><h4 id="2-假设要把硬盘挂载目录-x2F-fileDisk-x2F-webdRoot-当作网盘目录"><a href="#2-假设要把硬盘挂载目录-x2F-fileDisk-x2F-webdRoot-当作网盘目录" class="headerlink" title="2. 假设要把硬盘挂载目录 &#x2F;fileDisk&#x2F;webdRoot 当作网盘目录"></a>2. 假设要把硬盘挂载目录 &#x2F;fileDisk&#x2F;webdRoot 当作网盘目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv mkdir -p /fileDisk/webdRoot/.Trash # 创建回收站文件夹，否则不能删除文件</span><br></pre></td></tr></table></figure><h4 id="3-根据官网-配置文件-环节的说明编辑-x2F-etc-x2F-webd-conf"><a href="#3-根据官网-配置文件-环节的说明编辑-x2F-etc-x2F-webd-conf" class="headerlink" title="3. 根据官网 [配置文件] 环节的说明编辑 &#x2F;etc&#x2F;webd.conf"></a>3. 根据官网 [配置文件] 环节的说明编辑 &#x2F;etc&#x2F;webd.conf</h4><p>设置 Webd.Root 为 &#x2F;fileDisk&#x2F;webdRoot 以及设置用户名密码权限等。</p><h4 id="4-修改防火墙配置，添加端口（默认端口9212）"><a href="#4-修改防火墙配置，添加端口（默认端口9212）" class="headerlink" title="4. 修改防火墙配置，添加端口（默认端口9212）"></a>4. 修改防火墙配置，添加端口（默认端口9212）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/SuSEfirewall2</span><br><span class="line">rcSuSEfirewall2 restart</span><br></pre></td></tr></table></figure><h4 id="5-添加开机脚本-注意不要漏掉引号"><a href="#5-添加开机脚本-注意不要漏掉引号" class="headerlink" title="5. 添加开机脚本, 注意不要漏掉引号"></a>5. 添加开机脚本, 注意不要漏掉引号</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/usr/bin/webd &amp;&gt;/dev/null &amp;&quot; &gt;&gt; /etc/init.d/boot.local</span><br></pre></td></tr></table></figure><h4 id="6-重启生效"><a href="#6-重启生效" class="headerlink" title="6. 重启生效"></a>6. 重启生效</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>局域网内访问 <a href="http://ip:9212/">http://IP:9212</a> 即可。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> webd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows利用robocopy命令实现文件同步</title>
      <link href="/2019/06/17/Windows%E5%88%A9%E7%94%A8robocopy%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/"/>
      <url>/2019/06/17/Windows%E5%88%A9%E7%94%A8robocopy%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<p>Robocopy 是 Microsoft 在 Windows Server 2003 Resource Kit Tools 提供的复制工具。</p><span id="more"></span><h1 id="1-下载rktools-exe"><a href="#1-下载rktools-exe" class="headerlink" title="1. 下载rktools.exe"></a>1. <a href="http://download.microsoft.com/download/8/e/c/8ec3a7d8-05b4-440a-a71e-ca3ee25fe057/rktools.exe">下载rktools.exe</a></h1><p>使用默认选项安装即可。一般情况下Windows Server 2003不带robocopy，所以需要安装。</p><h1 id="2-使用命令robocopy，实现镜像同步，且输出日志到log-txt"><a href="#2-使用命令robocopy，实现镜像同步，且输出日志到log-txt" class="headerlink" title="2. 使用命令robocopy，实现镜像同步，且输出日志到log.txt"></a>2. 使用命令robocopy，实现镜像同步，且输出日志到log.txt</h1><pre><code>robocpy C:\源文件夹\ D:\目标文件夹\ /LOG+:C:\log.txt /MIR</code></pre><p>robocopy提供了很多xcopy不具备的功能：</p><ul><li>可选择多种文件类型复制到目标文件夹</li><li>可指定在复制时不复制的文件类型</li><li>可指定复制目录的级次，如只复制两级目录</li><li>可按文件的修改时间或访问时间进行复制，如只复制三天内修改的文件</li><li>按文件大小，如只复制大于100K小于1M的文件</li><li>镜像模式，拷贝时删除在目标文件夹里存在但源文件夹里并没有的文件</li><li>支持文件移动</li><li>监控文件夹，一旦文件夹内文件发生变化，自动复制变化的文件</li></ul><p>更多参数使用请参照 <a href="https://www.cnblogs.com/zhanglei1371/p/6724167.html">robocopy的用法</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库增加时间列</title>
      <link href="/2019/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%8A%A0%E6%97%B6%E9%97%B4%E5%88%97/"/>
      <url>/2019/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%8A%A0%E6%97%B6%E9%97%B4%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>在表中增加时间列，用于记录创建时间和修改时间</p><span id="more"></span><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> 表名;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (</span><br><span class="line">  id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  name <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  createtime datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  updatetime datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>gbk;</span><br></pre></td></tr></table></figure><h3 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a>SQL Server</h3><p>只能通过触发器实现，将A表的数据变化，通过触发器记录到B表中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@update</span>_hostname <span class="type">VARCHAR</span> (<span class="number">10</span>),</span><br><span class="line">        <span class="variable">@update</span>_progname <span class="type">VARCHAR</span> (<span class="number">16</span>),</span><br><span class="line">        <span class="variable">@update</span>_time <span class="type">VARCHAR</span> (<span class="number">22</span>),</span><br><span class="line">        <span class="variable">@update</span>_type <span class="type">VARCHAR</span> (<span class="number">3</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@update</span>_hostname <span class="operator">=</span> hostname, <span class="variable">@update</span>_progname <span class="operator">=</span> program_name <span class="keyword">FROM</span> master.dbo.sysprocesses <span class="keyword">WHERE</span> spid <span class="operator">=</span> @<span class="variable">@spid</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@update</span>_time <span class="operator">=</span> <span class="keyword">CONVERT</span>(<span class="type">CHAR</span>(<span class="number">10</span>), getdate(), <span class="number">111</span>) <span class="operator">+</span> <span class="string">&#x27; &#x27;</span> <span class="operator">+</span> <span class="keyword">CONVERT</span>(<span class="type">CHAR</span>(<span class="number">12</span>), getdate(), <span class="number">114</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@update</span>_type <span class="operator">=</span> <span class="string">&#x27;Delete&#x27;</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表B</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>, <span class="variable">@update</span>_hostname, <span class="variable">@update</span>_progname, <span class="variable">@update</span>_time, <span class="variable">@update</span>_type</span><br><span class="line"><span class="keyword">FROM</span> deleted</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加音乐</title>
      <link href="/2019/03/29/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90/"/>
      <url>/2019/03/29/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>根据你的需求，在合适地方加入音乐。例如，打开主题layout下的文件common-article.ejs，加入：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- YPN Add 2019-03-29 增加背景音乐Aplayer--&gt;</span><br><span class="line">&lt;!-- 参数如下：（粗体为必填项） --&gt;</span><br><span class="line">&lt;!-- data-id: 歌曲/专辑/歌单 ID --&gt;</span><br><span class="line">&lt;!-- data-server: 音乐平台，支持如下参数 --&gt;</span><br><span class="line">&lt;!-- netease （网易云音乐） --&gt;</span><br><span class="line">&lt;!-- tencent （qq音乐） --&gt;</span><br><span class="line">&lt;!-- xiami （虾米音乐） --&gt;</span><br><span class="line">&lt;!-- kugou （酷狗音乐） --&gt;</span><br><span class="line">&lt;!-- baidu （百度音乐） --&gt;</span><br><span class="line">&lt;!-- data-type: 请求类型，支持如下参数 --&gt;</span><br><span class="line">&lt;!-- song （单曲） --&gt;</span><br><span class="line">&lt;!-- album （专辑） --&gt;</span><br><span class="line">&lt;!-- playlist （歌单） --&gt;</span><br><span class="line">&lt;!-- search （搜索） --&gt;</span><br><span class="line">&lt;!-- data-mode: 播放模式 --&gt;</span><br><span class="line">&lt;!-- random （随机） --&gt;</span><br><span class="line">&lt;!-- single （单曲） --&gt;</span><br><span class="line">&lt;!-- circulation （列表循环） --&gt;</span><br><span class="line">&lt;!-- order （列表） --&gt;</span><br><span class="line">&lt;!-- data-autoplay: 自动播放  --&gt;</span><br><span class="line">&lt;!-- true --&gt;</span><br><span class="line">&lt;!-- false --&gt;</span><br><span class="line">&lt;section class=&#x27;music&#x27;&gt;</span><br><span class="line">&lt;div class=&#x27;content material&#x27;&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div class=&quot;aplayer&quot;</span><br><span class="line">data-theme=&quot;#1BCDFC&quot;</span><br><span class="line">data-mode=&quot;random&quot;</span><br><span class="line">data-server=&quot;netease&quot;</span><br><span class="line">data-type=&quot;playlist&quot;</span><br><span class="line">data-list-folded=&quot;false&quot;</span><br><span class="line">data-id=&quot;745065239&quot;</span><br><span class="line">data-volume=&quot;0.7&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加相册</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9B%B8%E5%86%8C/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9B%B8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="1-增加菜单，命令如下："><a href="#1-增加菜单，命令如下：" class="headerlink" title="1. 增加菜单，命令如下："></a>1. 增加菜单，命令如下：</h4><pre><code>hexo new page photos</code></pre><span id="more"></span><h4 id="2-编辑菜单photos下的文件index-md，添加如下内容："><a href="#2-编辑菜单photos下的文件index-md，添加如下内容：" class="headerlink" title="2. 编辑菜单photos下的文件index.md，添加如下内容："></a>2. 编辑菜单photos下的文件index.md，添加如下内容：</h4><pre><code>&lt;div class=&quot;content&quot;&gt;    &lt;div class=&quot;iw_wrapper&quot;&gt;        &lt;ul class=&quot;iw_thumbs&quot; id=&quot;iw_thumbs&quot;&gt;            &lt;!-- &lt;li&gt;&lt;img src=&quot;/img/thumbs/1.jpg&quot; data-img=&quot;/img/full/1.jpg&quot; alt=&quot;Thumb1&quot;/&gt;&lt;div&gt;&lt;h2&gt;Serenity&lt;/h2&gt;&lt;p&gt;Far far away, behind the word mountains there live the blind texts.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; --&gt;        &lt;/ul&gt;    &lt;/div&gt;    &lt;div id=&quot;iw_ribbon&quot; class=&quot;iw_ribbon&quot;&gt;        &lt;span class=&quot;iw_close&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;iw_zoom&quot;&gt;Click thumb to zoom&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/addphoto.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.masonry.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.easing.1.3.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;    $(window).load(function()&#123;        var $iw_thumbs= $(&#39;#iw_thumbs&#39;),            $iw_ribbon= $(&#39;#iw_ribbon&#39;),            $iw_ribbon_close= $iw_ribbon.children(&#39;span.iw_close&#39;),            $iw_ribbon_zoom= $iw_ribbon.children(&#39;span.iw_zoom&#39;);                        ImageWall= (function() &#123;                    // window width and height                var w_dim,                    // index of current image                    current= -1,                    isRibbonShown= false,                    isFullMode= false,                    // ribbon / images animation settings                    ribbonAnim= &#123;speed : 500, easing : &#39;easeOutExpo&#39;&#125;,                    imgAnim= &#123;speed : 400, easing : &#39;jswing&#39;&#125;,                    // init function : call masonry, calculate window dimentions, initialize some events                    init= function() &#123;                        $iw_thumbs.imagesLoaded(function()&#123;                            $iw_thumbs.masonry(&#123;                                isAnimated: true                            &#125;);                        &#125;);                        getWindowsDim();                        initEventsHandler();                    &#125;,                    // calculate window dimentions                    getWindowsDim= function() &#123;                        w_dim = &#123;                            width: $(window).width(),                            height: $(window).height()                        &#125;;                    &#125;,                    // initialize some events                    initEventsHandler= function() &#123;                                                // click on a image                        $iw_thumbs.delegate(&#39;li&#39;, &#39;click&#39;, function() &#123;                            if($iw_ribbon.is(&#39;:animated&#39;)) return false;                                                        var $el = $(this);                                                        if($el.data(&#39;ribbon&#39;)) &#123;                                showFullImage($el);                            &#125;                            else if(!isRibbonShown) &#123;                                isRibbonShown = true;                                                                $el.data(&#39;ribbon&#39;,true);                                                                // set the current                                current = $el.index();                                                            showRibbon($el);                            &#125;                        &#125;);                                                // click ribbon close                        $iw_ribbon_close.bind(&#39;click&#39;, closeRibbon);                                                // on window resize we need to recalculate the window dimentions                        $(window).bind(&#39;resize&#39;, function() &#123;                                    getWindowsDim();                                    if($iw_ribbon.is(&#39;:animated&#39;))                                        return false;                                    closeRibbon();                                 &#125;)                                 .bind(&#39;scroll&#39;, function() &#123;                                    if($iw_ribbon.is(&#39;:animated&#39;))                                        return false;                                    closeRibbon();                                 &#125;);                                            &#125;,                    showRibbon= function($el) &#123;                        var$img= $el.children(&#39;img&#39;),                            $descrp= $img.next();                                                // fadeOut all the other images                        $iw_thumbs.children(&#39;li&#39;).not($el).animate(&#123;opacity : 0.2&#125;, imgAnim.speed);                                                // increase the image z-index, and set the height to 100px (default height)                        $img.css(&#39;z-index&#39;, 100)                            .data(&#39;originalHeight&#39;,$img.height())                            .stop()                            .animate(&#123;                                height : &#39;100px&#39;                            &#125;, imgAnim.speed, imgAnim.easing);                                                // the ribbon will animate from the left or right                        // depending on the position of the image                        var ribbonCssParam = &#123;                                top: $el.offset().top - $(window).scrollTop() - 6 + &#39;px&#39;                            &#125;,                            descriptionCssParam,                            dir;                                                if( $el.offset().left &lt; (w_dim.width / 2) ) &#123;                            dir = &#39;left&#39;;                            ribbonCssParam.left = 0;                            ribbonCssParam.right = &#39;auto&#39;;                        &#125;                        else &#123;                            dir = &#39;right&#39;;                            ribbonCssParam.right = 0;                            ribbonCssParam.left = &#39;auto&#39;;                        &#125;                                                $iw_ribbon.css(ribbonCssParam)                                  .show()                                  .stop()                                  .animate(&#123;width : &#39;100%&#39;&#125;, ribbonAnim.speed, ribbonAnim.easing, function() &#123;                                        switch(dir) &#123;                                            case &#39;left&#39; :                                                descriptionCssParam= &#123;                                                    &#39;left&#39; : $img.outerWidth(true) + &#39;px&#39;,                                                    &#39;text-align&#39; : &#39;left&#39;                                                &#125;;                                                break;                                            case &#39;right&#39; :                                                descriptionCssParam= &#123;                                                    &#39;left&#39; : &#39;-200px&#39;,                                                    &#39;text-align&#39; : &#39;right&#39;                                                &#125;;                                                break;                                        &#125;;                                        $descrp.css(descriptionCssParam).fadeIn();                                        // show close button and zoom                                        $iw_ribbon_close.show();                                        $iw_ribbon_zoom.show();                                  &#125;);                                            &#125;,                    // close the ribbon                    // when in full mode slides in the middle of the page                    // when not slides left                    closeRibbon= function() &#123;                        isRibbonShown = false                                                $iw_ribbon_close.hide();                        $iw_ribbon_zoom.hide();                                                if(!isFullMode) &#123;                                                    // current wall image                            var $el = $iw_thumbs.children(&#39;li&#39;).eq(current);                                                        resetWall($el);                                                        // slide out ribbon                            $iw_ribbon.stop()                                      .animate(&#123;width : &#39;0%&#39;&#125;, ribbonAnim.speed, ribbonAnim.easing);                                                           &#125;                        else &#123;                            $iw_ribbon.stop().animate(&#123;                                opacity: 0.8,                                height : &#39;0px&#39;,                                marginTop: w_dim.height/2 + &#39;px&#39; // half of window height                            &#125;, ribbonAnim.speed, function() &#123;                                $iw_ribbon.css(&#123;                                    &#39;width&#39;: &#39;0%&#39;,                                    &#39;height&#39;: &#39;126px&#39;,                                    &#39;margin-top&#39;: &#39;0px&#39;                                &#125;).children(&#39;img&#39;).remove();                            &#125;);                                                        isFullMode= false;                        &#125;                    &#125;,                    resetWall= function($el) &#123;                        var $img= $el.children(&#39;img&#39;),                            $descrp= $img.next();                                                    $el.data(&#39;ribbon&#39;,false);                                                // reset the image z-index and height                        $img.css(&#39;z-index&#39;,1).stop().animate(&#123;                            height : $img.data(&#39;originalHeight&#39;)                        &#125;, imgAnim.speed,imgAnim.easing);                                                // fadeOut the description                        $descrp.fadeOut();                        // fadeIn all the other images                        $iw_thumbs.children(&#39;li&#39;).not($el).animate(&#123;opacity : 1&#125;, imgAnim.speed);                    &#125;,                    showFullImage= function($el) &#123;                        isFullMode= true;                                                $iw_ribbon_close.hide();                                                var$img= $el.children(&#39;img&#39;),                            large= $img.data(&#39;img&#39;),                                                    // add a loading image on top of the image                            $loading = $(&#39;&lt;span class=&quot;iw_loading&quot;&gt;&lt;/span&gt;&#39;);                                                $el.append($loading);                                                // preload large image                        $(&#39;&lt;img/&gt;&#39;).load(function() &#123;                            var $largeImage= $(this);                                                        $loading.remove();                                                        $iw_ribbon_zoom.hide();                                                        resizeImage($largeImage);                                                        // reset the current image in the wall                            resetWall($el);                                                        // animate ribbon in and out                            $iw_ribbon.stop().animate(&#123;                                opacity: 1,                                height : &#39;0px&#39;,                                marginTop: &#39;63px&#39; // half of ribbons height                            &#125;, ribbonAnim.speed, function() &#123;                                // add the large image to the DOM                                $iw_ribbon.prepend($largeImage);                                                                $iw_ribbon_close.show();                                                                $iw_ribbon.animate(&#123;                                    height : &#39;100%&#39;,                                    marginTop: &#39;0px&#39;,                                    top: &#39;0px&#39;                                &#125;, ribbonAnim.speed);                            &#125;);                        &#125;).attr(&#39;src&#39;,large);                                                &#125;,                    resizeImage= function($image) &#123;                        var widthMargin= 100,                            heightMargin = 100,                                                    windowH      = w_dim.height - heightMargin,                            windowW      = w_dim.width - widthMargin,                            theImage     = new Image();                                                    theImage.src     = $image.attr(&quot;src&quot;);                                                var imgwidth     = theImage.width,                            imgheight    = theImage.height;                        if((imgwidth &gt; windowW) || (imgheight &gt; windowH)) &#123;                            if(imgwidth &gt; imgheight) &#123;                                var newwidth = windowW,                                    ratio = imgwidth / windowW,                                    newheight = imgheight / ratio;                                                                    theImage.height = newheight;                                theImage.width= newwidth;                                                                if(newheight &gt; windowH) &#123;                                    var newnewheight = windowH,                                        newratio = newheight/windowH,                                        newnewwidth = newwidth/newratio;                                                                    theImage.width = newnewwidth;                                    theImage.height= newnewheight;                                &#125;                            &#125;                            else &#123;                                var newheight = windowH,                                    ratio = imgheight / windowH,                                    newwidth = imgwidth / ratio;                                                                theImage.height = newheight;                                theImage.width= newwidth;                                                                if(newwidth &gt; windowW) &#123;                                    var newnewwidth = windowW,                                        newratio = newwidth/windowW,                                        newnewheight = newheight/newratio;                                                                theImage.height = newnewheight;                                    theImage.width= newnewwidth;                                &#125;                            &#125;                        &#125;                                                    $image.css(&#123;                            &#39;width&#39;: theImage.width + &#39;px&#39;,                            &#39;height&#39;: theImage.height + &#39;px&#39;,                            &#39;margin-left&#39;: -theImage.width / 2 + &#39;px&#39;,                            &#39;margin-top&#39;: -theImage.height / 2 + &#39;px&#39;                        &#125;);                    &#125;;                                    return &#123;init : init&#125;;            &#125;)();                ImageWall.init();    &#125;);&lt;/script&gt;</code></pre><h4 id="3-拷贝需要的4个js文件，到主题的js目录下"><a href="#3-拷贝需要的4个js文件，到主题的js目录下" class="headerlink" title="3. 拷贝需要的4个js文件，到主题的js目录下"></a>3. 拷贝需要的4个js文件，到主题的js目录下</h4><p>addphoto.js<br>jquery.min.js<br>jquery.masonry.min.js<br>jquery.easing.1.3.js<br>jquery-1.11.3.min.js</p><h4 id="4-编辑layout下的文件head-ejs，引入js"><a href="#4-编辑layout下的文件head-ejs，引入js" class="headerlink" title="4. 编辑layout下的文件head.ejs，引入js"></a>4. 编辑layout下的文件head.ejs，引入js</h4><pre><code>&lt;!-- YPN Add 2019-03-25 增加相册所需js --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;%- config.root %&gt;js/jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code></pre><h4 id="5-新建图片数据源配置文件data-json，保存到菜单目录photos下面，内容如下"><a href="#5-新建图片数据源配置文件data-json，保存到菜单目录photos下面，内容如下" class="headerlink" title="5. 新建图片数据源配置文件data.json，保存到菜单目录photos下面，内容如下"></a>5. 新建图片数据源配置文件data.json，保存到菜单目录photos下面，内容如下</h4><pre><code>[    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;,    &#123;&quot;url&quot;:&quot;https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg&quot;,&quot;title&quot;:&quot;昜丿捺&quot;,&quot;desc&quot;:&quot;2019-03-25 22:06:26&quot;&#125;]</code></pre><p>其中，图片地址为网络地址，示例中图床由腾讯云提供。</p><h4 id="最后，重启hexo服务生效。"><a href="#最后，重启hexo服务生效。" class="headerlink" title="最后，重启hexo服务生效。"></a>最后，重启hexo服务生效。</h4><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加文本输入框特效</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%A1%86%E7%89%B9%E6%95%88/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%A1%86%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p>打开layout下的文件footer.ejs，增加文本输入框特效：</p><pre><code>&lt;!--2017-10-06 YPN Add 添加输入框特效。 --&gt;&lt;script src=&quot;/js/activate-power-mode.js&quot;&gt;&lt;/script&gt;&lt;script&gt;  POWERMODE.colorful = true;  // 控制开启/开启礼花特效    POWERMODE.shake    = false; // 控制开启/关闭屏幕震动特效    document.body.addEventListener(&#39;input&#39;, POWERMODE);&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加鼠标点击特效</title>
      <link href="/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/"/>
      <url>/2019/03/27/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以NexT主题举例</p></blockquote><p>##配置<br>在主题<code>_config.yml</code>中添加动态配置项</p><pre><code>cursor_effect:enabled: truetype: love  # fireworks：礼花 | explosion：爆炸 | love：浮出爱心 | text：浮出文字</code></pre><span id="more"></span><p>##代码<br>文件位置：&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_custom&#x2F;custom.swig ，如没有请自建，添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;% if theme.cursor_effect.type == &quot;fireworks&quot; %&#125;</span><br><span class="line">&lt;script src=&quot;/js/custom/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;explosion&quot; %&#125;</span><br><span class="line">&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/js/custom/explosion.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;love&quot; %&#125;</span><br><span class="line">&lt;script src=&quot;/js/custom/love.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;text&quot; %&#125;</span><br><span class="line">&lt;script src=&quot;/js/custom/text.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>如果是第一次使用这个<code>custom.swig</code>，则需要在 &#x2F;themes&#x2F;next&#x2F;layout&#x2F;_layout.swig 中引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#x27;_custom/custom.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure><p>将以下4个 JS 文件复制到目录 &#x2F;themes&#x2F;next&#x2F;source&#x2F;js&#x2F;custom&#x2F; 下</p><blockquote><p>fireworks.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">position</span> = &#123; ...<span class="variable language_">this</span>.<span class="property">origin</span> &#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">color</span> = color</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">speed</span> = speed</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">angle</span> = angle</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderCount</span> = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">beginPath</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">fill</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> = (<span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> = (<span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> + (<span class="variable language_">this</span>.<span class="property">renderCount</span> * <span class="number">0.3</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderCount</span>++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boom</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">circleCount</span> = circleCount</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">area</span> = area</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">false</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">circles</span> = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomArray</span>(<span class="params">range</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> length = range.<span class="property">length</span></span><br><span class="line"><span class="keyword">const</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length * <span class="title class_">Math</span>.<span class="title function_">random</span>())</span><br><span class="line"><span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomRange</span>(<span class="params">start, end</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> (end - start) * <span class="title class_">Math</span>.<span class="title function_">random</span>() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">circleCount</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">Circle</span>(&#123;</span><br><span class="line"><span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">context</span>,</span><br><span class="line"><span class="attr">origin</span>: <span class="variable language_">this</span>.<span class="property">origin</span>,</span><br><span class="line"><span class="attr">color</span>: <span class="variable language_">this</span>.<span class="title function_">randomColor</span>(),</span><br><span class="line"><span class="attr">angle</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="title class_">Math</span>.<span class="property">PI</span> - <span class="number">1</span>, <span class="title class_">Math</span>.<span class="property">PI</span> + <span class="number">1</span>),</span><br><span class="line"><span class="attr">speed</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">push</span>(circle)</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (circle.<span class="property">position</span>.<span class="property">x</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">width</span> || circle.<span class="property">position</span>.<span class="property">y</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">height</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  circle.<span class="title function_">move</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">circles</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">circle</span> =&gt;</span> circle.<span class="title function_">draw</span>())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CursorSpecialEffects</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">computerCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">computerContext</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderContext</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">globalWidth</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">globalHeight</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handleMouseDown</span>(<span class="params">e</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> boom = <span class="keyword">new</span> <span class="title class_">Boom</span>(&#123;</span><br><span class="line">  <span class="attr">origin</span>: &#123; <span class="attr">x</span>: e.<span class="property">clientX</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> &#125;,</span><br><span class="line">  <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">computerContext</span>,</span><br><span class="line">  <span class="attr">area</span>: &#123;</span><br><span class="line"><span class="attr">width</span>: <span class="variable language_">this</span>.<span class="property">globalWidth</span>,</span><br><span class="line"><span class="attr">height</span>: <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">boom.<span class="title function_">init</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">push</span>(boom)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">running</span> || <span class="variable language_">this</span>.<span class="title function_">run</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handlePageHide</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">const</span> style = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">style</span></span><br><span class="line">style.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">style.<span class="property">top</span> = style.<span class="property">left</span> = <span class="number">0</span></span><br><span class="line">style.<span class="property">zIndex</span> = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">style.<span class="property">pointerEvents</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">style.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">globalWidth</span></span><br><span class="line">style.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">renderCanvas</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousedown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleMouseDown</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pagehide&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handlePageHide</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">booms</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(<span class="variable language_">this</span>.<span class="property">run</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">computerContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (boom.<span class="property">stop</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  boom.<span class="title function_">move</span>()</span><br><span class="line">  boom.<span class="title function_">draw</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">drawImage</span>(<span class="variable language_">this</span>.<span class="property">computerCanvas</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> <span class="title class_">CursorSpecialEffects</span>()</span><br><span class="line">cursorSpecialEffects.<span class="title function_">init</span>()</span><br></pre></td></tr></table></figure><blockquote><p>explosion.min.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>)&#123;pointerX=(e.<span class="property">clientX</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>)-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>,pointerY=e.<span class="property">clientY</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span>-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>&#125;<span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">360</span>)*<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">180</span>,a=anime.<span class="title function_">random</span>(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.<span class="property">x</span>+n*<span class="title class_">Math</span>.<span class="title function_">cos</span>(t),<span class="attr">y</span>:e.<span class="property">y</span>+n*<span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;&#125;<span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=colors[anime.<span class="title function_">random</span>(<span class="number">0</span>,colors.<span class="property">length</span>-<span class="number">1</span>)],a.<span class="property">radius</span>=anime.<span class="title function_">random</span>(<span class="number">16</span>,<span class="number">32</span>),a.<span class="property">endPos</span>=<span class="title function_">setParticuleDirection</span>(a),a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">fillStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">fill</span>()&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=<span class="string">&quot;#F00&quot;</span>,a.<span class="property">radius</span>=<span class="number">0.1</span>,a.<span class="property">alpha</span>=<span class="number">0.5</span>,a.<span class="property">lineWidth</span>=<span class="number">6</span>,a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="property">globalAlpha</span>=a.<span class="property">alpha</span>,ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">lineWidth</span>=a.<span class="property">lineWidth</span>,ctx.<span class="property">strokeStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">stroke</span>(),ctx.<span class="property">globalAlpha</span>=<span class="number">1</span>&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">animatables</span>.<span class="property">length</span>;t++)&#123;e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="title function_">createCircle</span>(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e,t))&#125;anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>&#125;,<span class="attr">y</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.<span class="title function_">random</span>(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,i=<span class="variable language_">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;canvasEl.<span class="property">width</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerWidth</span>,canvasEl.<span class="property">height</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerHeight</span>,canvasEl.<span class="property">style</span>.<span class="property">width</span>=<span class="variable language_">window</span>.<span class="property">innerWidth</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="property">style</span>.<span class="property">height</span>=<span class="variable language_">window</span>.<span class="property">innerHeight</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=<span class="title function_">anime</span>(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,canvasEl.<span class="property">width</span>,canvasEl.<span class="property">height</span>)&#125;&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;(render.<span class="title function_">play</span>(),<span class="title function_">updateCoords</span>(e),<span class="title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="number">1</span>),<span class="title function_">setCanvasSize</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>)&#123;pointerX=(e.<span class="property">clientX</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>)-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>,pointerY=e.<span class="property">clientY</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span>-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>&#125;<span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">360</span>)*<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">180</span>,a=anime.<span class="title function_">random</span>(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.<span class="property">x</span>+n*<span class="title class_">Math</span>.<span class="title function_">cos</span>(t),<span class="attr">y</span>:e.<span class="property">y</span>+n*<span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;&#125;<span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=colors[anime.<span class="title function_">random</span>(<span class="number">0</span>,colors.<span class="property">length</span>-<span class="number">1</span>)],a.<span class="property">radius</span>=anime.<span class="title function_">random</span>(<span class="number">16</span>,<span class="number">32</span>),a.<span class="property">endPos</span>=<span class="title function_">setParticuleDirection</span>(a),a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">fillStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">fill</span>()&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=<span class="string">&quot;#F00&quot;</span>,a.<span class="property">radius</span>=<span class="number">0.1</span>,a.<span class="property">alpha</span>=<span class="number">0.5</span>,a.<span class="property">lineWidth</span>=<span class="number">6</span>,a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="property">globalAlpha</span>=a.<span class="property">alpha</span>,ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">lineWidth</span>=a.<span class="property">lineWidth</span>,ctx.<span class="property">strokeStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">stroke</span>(),ctx.<span class="property">globalAlpha</span>=<span class="number">1</span>&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">animatables</span>.<span class="property">length</span>;t++)&#123;e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="title function_">createCircle</span>(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e,t))&#125;anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>&#125;,<span class="attr">y</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.<span class="title function_">random</span>(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,i=<span class="variable language_">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;canvasEl.<span class="property">width</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerWidth</span>,canvasEl.<span class="property">height</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerHeight</span>,canvasEl.<span class="property">style</span>.<span class="property">width</span>=<span class="variable language_">window</span>.<span class="property">innerWidth</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="property">style</span>.<span class="property">height</span>=<span class="variable language_">window</span>.<span class="property">innerHeight</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=<span class="title function_">anime</span>(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,canvasEl.<span class="property">width</span>,canvasEl.<span class="property">height</span>)&#125;&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;(render.<span class="title function_">play</span>(),<span class="title function_">updateCoords</span>(e),<span class="title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="number">1</span>),<span class="title function_">setCanvasSize</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>love.min.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(<span class="params">e,t,a</span>)&#123;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>)&#123;<span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),<span class="title function_">o</span>(),<span class="title function_">r</span>()&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.<span class="property">length</span>;e++)d[e].<span class="property">alpha</span>&lt;=<span class="number">0</span>?(t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>),d.<span class="title function_">splice</span>(e,<span class="number">1</span>)):(d[e].<span class="property">y</span>--,d[e].<span class="property">scale</span>+=<span class="number">.004</span>,d[e].<span class="property">alpha</span>-=<span class="number">.013</span>,d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span>=<span class="string">&quot;left:&quot;</span>+d[e].<span class="property">x</span>+<span class="string">&quot;px;top:&quot;</span>+d[e].<span class="property">y</span>+<span class="string">&quot;px;opacity:&quot;</span>+d[e].<span class="property">alpha</span>+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;,&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].<span class="property">color</span>+<span class="string">&quot;;z-index:99999&quot;</span>);<span class="title function_">requestAnimationFrame</span>(r)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">onclick</span>&amp;&amp;e.<span class="property">onclick</span>;e.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;t&amp;&amp;<span class="title function_">t</span>(),<span class="title function_">i</span>(e)&#125;&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);a.<span class="property">className</span>=<span class="string">&quot;heart&quot;</span>,d.<span class="title function_">push</span>(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.<span class="property">clientX</span>-<span class="number">5</span>,<span class="attr">y</span>:e.<span class="property">clientY</span>-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="title function_">s</span>()&#125;),t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);a.<span class="property">type</span>=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))&#125;<span class="keyword">catch</span>(t)&#123;a.<span class="property">styleSheet</span>.<span class="property">cssText</span>=e&#125;t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.<span class="property">requestAnimationFrame</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span>||e.<span class="property">webkitRequestAnimationFrame</span>||e.<span class="property">mozRequestAnimationFrame</span>||e.<span class="property">oRequestAnimationFrame</span>||e.<span class="property">msRequestAnimationFrame</span>||<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),<span class="title function_">n</span>()&#125;(<span class="variable language_">window</span>,<span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure><blockquote><p>clickShowText.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params">$</span>) &#123;</span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span> ,<span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).<span class="title function_">text</span>(a[a_idx]);</span><br><span class="line">a_idx = (a_idx + <span class="number">1</span>) % a.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">var</span> x = e.<span class="property">pageX</span>,</span><br><span class="line">y = e.<span class="property">pageY</span>;</span><br><span class="line">$i.<span class="title function_">css</span>(&#123;</span><br><span class="line"><span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class="line"><span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line"><span class="string">&quot;left&quot;</span>: x,</span><br><span class="line"><span class="string">&quot;cursor&quot;</span>:<span class="string">&quot;default&quot;</span>,</span><br><span class="line"><span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line"><span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line"><span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($i);</span><br><span class="line">$i.<span class="title function_">animate</span>(&#123;</span><br><span class="line"><span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line"><span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;,<span class="number">1500</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">$i.<span class="title function_">remove</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客增加一言API</title>
      <link href="/2019/03/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A8%80API/"/>
      <url>/2019/03/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A8%80API/</url>
      
        <content type="html"><![CDATA[<p>根据你的需求，在合适地方加入一言。例如，打开主题layout下的文件common-article.ejs，加入一言：</p><span id="more"></span><h2 id="增加普通一言"><a href="#增加普通一言" class="headerlink" title="增加普通一言"></a>增加普通一言</h2><pre><code>&lt;!-- YPN Add 2019-03-22 没有authorDesc时，显示一言经典语句--&gt;&lt;% if (post.authorDesc) &#123; %&gt;    &lt;p&gt;&lt;%= post.authorDesc ? post.authorDesc : theme.webmaster.desc %&gt;&lt;/p&gt;&lt;% &#125;else &#123; %&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;https://api.lwl12.com/hitokoto/v1?encode=js&amp;charset=utf-8&quot;&gt;&lt;/script&gt;    &lt;p&gt;&lt;span id=&quot;lwlhitokoto&quot;&gt;&lt;script&gt;lwlhitokoto()&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;&lt;% &#125; %&gt;</code></pre><h2 id="增加彩色滚动变换一言"><a href="#增加彩色滚动变换一言" class="headerlink" title="增加彩色滚动变换一言"></a>增加彩色滚动变换一言</h2><p>下面示例，由固定内容方式，切换为了一言</p><pre><code>&lt;p&gt;&lt;span id=&quot;lwlhitokoto&quot;&gt;&lt;script&gt;    var binft = function (r) &#123;        function t() &#123;        return b[Math.floor(Math.random() * b.length)]        &#125;          function e() &#123;        return String.fromCharCode(94 * Math.random() + 33)        &#125;        function n(r) &#123;        for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) &#123;          var l = document.createElement(&quot;span&quot;);          l.textContent = e(), l.style.color = t(), n.appendChild(l)        &#125;        return n        &#125;        function i() &#123;            //var t = o[c.skillI];            var t = v_yiYan;            c.step ? c.step-- : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : &quot;forward&quot; === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = &quot;backward&quot;, c.delay = a) : c.skillP &gt; 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = &quot;forward&quot;)), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)        &#125;        var l = &quot;&quot;,        o = [&quot;青青陵上柏，磊磊涧中石。&quot;, &quot;人生天地间，忽如远行客。&quot;,&quot;斗酒相娱乐，聊厚不为薄。&quot;, &quot;驱车策驽马，游戏宛与洛。&quot;,&quot;洛中何郁郁，冠带自相索。&quot;,&quot;长衢罗夹巷，王侯多第宅。&quot;,&quot;两宫遥相望，双阙百余尺。&quot;,&quot;极宴娱心意，戚戚何所迫？&quot;].map(function (r) &#123;            return r + &quot;&quot;        &#125;),        a = 2,        g = 1,        s = 5,        d = 75,        b = [&quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;],        c = &#123;            text: &quot;&quot;,            prefixP: -s,            skillI: 0,            skillP: 0,            direction: &quot;forward&quot;,            delay: a,            step: g        &#125;;          //YPN Add 2019-03-29 请求获得从7种分类中随机抽取一个句子，并以纯文本格式输出：https://v1.hitokoto.cn/?encode=text        //https://v1.hitokoto.cn/（从7种分类中随机抽取）        //https://v1.hitokoto.cn/?c=b （请求获得一个分类是漫画的句子）        //https://v1.hitokoto.cn/?c=f&amp;encode=text （请求获得一个来自网络的句子，并以纯文本格式输出）        var v_yiYan = &quot;让我安静一会儿&quot;;        var xhr = new XMLHttpRequest();        xhr.onreadystatechange = function () &#123;            if (xhr.readyState === 4) &#123;                v_yiYan = xhr.responseText;            &#125;        &#125;        xhr.open(&quot;GET&quot;, &quot;https://v1.hitokoto.cn/?encode=text&quot;,true);        xhr.send();        i()    &#125;;    binft(document.getElementById(&#39;lwlhitokoto&#39;));&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git下载安装</title>
      <link href="/2018/12/19/Git%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2018/12/19/Git%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><h3 id="Git官网下载"><a href="#Git官网下载" class="headerlink" title="Git官网下载"></a>Git<a href="https://www.git-scm.com/download/">官网下载</a></h3><span id="more"></span><hr><h2 id="Linux平台"><a href="#Linux平台" class="headerlink" title="Linux平台"></a>Linux平台</h2><h3 id="一-源码安装（以SUSE-Linux-12为例）"><a href="#一-源码安装（以SUSE-Linux-12为例）" class="headerlink" title="一. 源码安装（以SUSE Linux 12为例）"></a>一. 源码安装（以SUSE Linux 12为例）</h3><h4 id="1-源码下载"><a href="#1-源码下载" class="headerlink" title="1. 源码下载"></a>1. <a href="https://github.com/git/git/releases">源码下载</a></h4><h4 id="2-编译安装"><a href="#2-编译安装" class="headerlink" title="2. 编译安装"></a>2. 编译安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf git-2.20.1.tar.gz </span><br><span class="line">cd git-2.20.1/</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make all doc info</span><br><span class="line">sudo make install install-doc install-html install-info</span><br></pre></td></tr></table></figure><p>执行命令：<code>make all doc info</code> 报如下错误：</p><pre><code>    * new build flags    CC fuzz-pack-headers.oIn file included from packfile.h:4:0,                 from fuzz-pack-headers.c:1:cache.h:20:18: fatal error: zlib.h: No such file or directory #include &lt;zlib.h&gt;                  ^compilation terminated.Makefile:2302: recipe for target &#39;fuzz-pack-headers.o&#39; failedmake: *** [fuzz-pack-headers.o] Error 1</code></pre><p>原因是需要安装依赖包：<a href="http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html">zlib-devel</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm</span><br></pre></td></tr></table></figure><p>之后便可继续安装了。</p><h4 id="3-执行命令：git-version，得到如下结果表示安装成功。"><a href="#3-执行命令：git-version，得到如下结果表示安装成功。" class="headerlink" title="3. 执行命令：git --version，得到如下结果表示安装成功。"></a>3. 执行命令：<code>git --version</code>，得到如下结果表示安装成功。</h4><pre><code>git version 2.20.1</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL收缩数据库</title>
      <link href="/2018/10/29/SQL%E6%94%B6%E7%BC%A9%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2018/10/29/SQL%E6%94%B6%E7%BC%A9%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h4 id="1-查询当前数据库的基本信息"><a href="#1-查询当前数据库的基本信息" class="headerlink" title="1. 查询当前数据库的基本信息"></a>1. 查询当前数据库的基本信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sysfiles;</span><br></pre></td></tr></table></figure><blockquote><p>记录查询结果的fileid值，在第2、3步要使用</p></blockquote><span id="more"></span><h4 id="2-收缩数据库"><a href="#2-收缩数据库" class="headerlink" title="2. 收缩数据库"></a>2. 收缩数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKDATABASE(<span class="string">&#x27;数据库名&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小"><a href="#3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小" class="headerlink" title="3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小"></a>3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKFILE(<span class="number">2</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小"><a href="#4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小" class="headerlink" title="4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小"></a>4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKFILE(<span class="number">1</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="5-执行更新操作"><a href="#5-执行更新操作" class="headerlink" title="5. 执行更新操作"></a>5. 执行更新操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC UPDATEUSAGE(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库SQL Server与Access在写法上的区别</title>
      <link href="/2018/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93SQL-Server%E4%B8%8EAccess%E5%9C%A8%E5%86%99%E6%B3%95%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93SQL-Server%E4%B8%8EAccess%E5%9C%A8%E5%86%99%E6%B3%95%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="1-查询语句WHERE条件带布尔类型值时"><a href="#1-查询语句WHERE条件带布尔类型值时" class="headerlink" title="1. 查询语句WHERE条件带布尔类型值时"></a>1. 查询语句WHERE条件带布尔类型值时</h3><p>Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">AND</span> IsA <span class="operator">=</span> <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">AND</span> IsA <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">AND</span> IsA <span class="operator">=</span> <span class="string">&#x27;true&#x27;</span>;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-查询语句WHERE条件带日期时"><a href="#2-查询语句WHERE条件带日期时" class="headerlink" title="2. 查询语句WHERE条件带日期时"></a>2. 查询语句WHERE条件带日期时</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> TimeTag <span class="operator">=</span> FORMAT(<span class="string">&#x27;2016-1-6&#x27;</span>,<span class="string">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> TimeTag <span class="operator">=</span> FORMAT(&quot;2016-1-6&quot;,&quot;yyyy-MM-dd hh:mm:ss&quot;);</span><br></pre></td></tr></table></figure><h3 id="3-多分支的判断情况"><a href="#3-多分支的判断情况" class="headerlink" title="3. 多分支的判断情况"></a>3. 多分支的判断情况</h3><p>Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SWITCH(IsA <span class="operator">=</span> <span class="literal">false</span>, <span class="number">0</span>, IsA <span class="operator">=</span> <span class="literal">true</span>, <span class="number">1</span>) <span class="keyword">AS</span> ColName <span class="keyword">FROM</span> 表;</span><br><span class="line"><span class="keyword">SELECT</span> IIF(IsA <span class="keyword">IS</span> <span class="keyword">NULL</span>, <span class="number">0</span>, IsA)              <span class="keyword">AS</span> ColName <span class="keyword">FROM</span> 表;</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> IsA <span class="keyword">WHEN</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">ELSE</span> <span class="number">1</span> <span class="keyword">END</span> <span class="keyword">AS</span> ColName <span class="keyword">AS</span> A <span class="keyword">FROM</span> 表;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> IsA <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">ELSE</span> <span class="number">1</span> <span class="keyword">END</span> <span class="keyword">AS</span> ColName <span class="keyword">AS</span> A <span class="keyword">FROM</span> 表;</span><br></pre></td></tr></table></figure><h3 id="4-将字符类型转换成数值类型"><a href="#4-将字符类型转换成数值类型" class="headerlink" title="4. 将字符类型转换成数值类型"></a>4. 将字符类型转换成数值类型</h3><p>Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Val(str)</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CONVERT</span>(<span class="type">INT</span>, str)</span><br><span class="line"><span class="built_in">CAST</span>(str <span class="keyword">AS</span> <span class="type">INT</span>)</span><br></pre></td></tr></table></figure><h3 id="5-将数值类型转换成字符类型"><a href="#5-将数值类型转换成字符类型" class="headerlink" title="5. 将数值类型转换成字符类型"></a>5. 将数值类型转换成字符类型</h3><p>Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Str(num)</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">20</span>), num)</span><br><span class="line"><span class="built_in">CAST</span>(num <span class="keyword">AS</span> <span class="type">VARCHAR</span>)</span><br></pre></td></tr></table></figure><h3 id="6-格式化日期"><a href="#6-格式化日期" class="headerlink" title="6. 格式化日期"></a>6. 格式化日期</h3><p>Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FORMAT(NOW(),<span class="string">&#x27;yyyy-MM-dd&#x27;</span>)</span><br><span class="line">FORMAT(NOW(),<span class="string">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span>)</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">20</span>),GETDATE(),<span class="number">23</span>)</span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">20</span>),GETDATE(),<span class="number">120</span>)</span><br></pre></td></tr></table></figure><h3 id="7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致"><a href="#7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致" class="headerlink" title="7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致"></a>7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致</h3><p>如更新SQL：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表 <span class="keyword">SET</span> Name <span class="operator">=</span> <span class="variable">@Name</span>, Age <span class="operator">=</span> <span class="variable">@Age</span> <span class="keyword">WHERE</span> ID <span class="operator">=</span> <span class="variable">@ID</span></span><br></pre></td></tr></table></figure><p>则参数必须定义为：</p><p>      OleDbParameter[] param &#x3D; new OleDbParameter<br>      {<br>          new OleDbParameter(“@Name”, model.Name),<br>          new OleDbParameter(“@Age”, model.Age),<br>          new OleDbParameter(“@ID”, model.ID), <br>       }</p><h3 id="8-Access类似于SQL-Server的函数ISNULL"><a href="#8-Access类似于SQL-Server的函数ISNULL" class="headerlink" title="8. Access类似于SQL Server的函数ISNULL()"></a>8. Access类似于SQL Server的函数ISNULL()</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IIF(IsA <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> IsA <span class="keyword">IS</span> <span class="keyword">NULL</span>, <span class="string">&#x27;&#x27;</span>, IsA)</span><br></pre></td></tr></table></figure><h3 id="9-Access创建表或添加列时，必须附带默认约束（Defualt）"><a href="#9-Access创建表或添加列时，必须附带默认约束（Defualt）" class="headerlink" title="9. Access创建表或添加列时，必须附带默认约束（Defualt）"></a>9. Access创建表或添加列时，必须附带默认约束（Defualt）</h3><h3 id="10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值"><a href="#10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值" class="headerlink" title="10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值"></a>10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值</h3><p>如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表 <span class="keyword">ADD</span> A <span class="type">VARCHAR</span>(<span class="number">23</span>)</span><br><span class="line"><span class="keyword">SELECT</span> IIF(STR(A) <span class="keyword">IS</span> <span class="keyword">NULL</span>, <span class="string">&#x27;空&#x27;</span>, <span class="string">&#x27;非空&#x27;</span>) <span class="keyword">FROM</span> 表</span><br></pre></td></tr></table></figure><h3 id="11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。"><a href="#11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。" class="headerlink" title="11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。"></a>11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。</h3><h3 id="12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。"><a href="#12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。" class="headerlink" title="12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。"></a>12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。</h3><h3 id="13-多表关联查询"><a href="#13-多表关联查询" class="headerlink" title="13. 多表关联查询"></a>13. 多表关联查询</h3><p>Access（可理解为始终是两表间的操作）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span>  (A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID <span class="operator">=</span> B.ID ) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID <span class="operator">=</span> C.ID;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> ((A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID <span class="operator">=</span> B.ID ) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID <span class="operator">=</span> C.ID) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> D <span class="keyword">ON</span> C.ID <span class="operator">=</span> D.ID;</span><br></pre></td></tr></table></figure><p>SQL Server</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B <span class="keyword">ON</span> A.ID <span class="operator">=</span> B.ID <span class="keyword">INNER</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> B.ID <span class="operator">=</span> C.ID;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> Access </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VS2017中使用C#创建和使用DLL</title>
      <link href="/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8CSharp%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/"/>
      <url>/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8CSharp%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/</url>
      
        <content type="html"><![CDATA[<h4 id="创建DLL"><a href="#创建DLL" class="headerlink" title="创建DLL"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png"></p><span id="more"></span><p>2、在类中定义接口类和接口实现类<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png"><br>输入以下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Guid(<span class="string">&quot;710CA75B-1193-4BBF-ADA6-C92763616B85&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IDWGNoEnde</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">Encode</span>(<span class="params"><span class="built_in">string</span> i_DWGNo</span>)</span>;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">Decode</span>(<span class="params"><span class="built_in">string</span> i_DWGNo</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">Guid(<span class="string">&quot;F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DWGNoEnDe</span> : <span class="title">IDWGNoEnde</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Encode</span>(<span class="params"><span class="built_in">string</span> i_DWGNo</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> o_EncodeDWGNo;</span><br><span class="line">        o_EncodeDWGNo = i_DWGNo + <span class="string">&quot;_YPN&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> o_EncodeDWGNo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Decode</span>(<span class="params"><span class="built_in">string</span> i_DWGNo</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> o_DecodeDWGNo;</span><br><span class="line">        o_DecodeDWGNo = i_DWGNo.Substring(<span class="number">0</span>, i_DWGNo.Length - <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">return</span> o_DecodeDWGNo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，GUID通过点击VS工具》创建GUID，复制得到<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png"></p><p>3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png"></p><p>4、右键项目》属性》生成，勾选为COM互操作注册<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png"></p><p>5、打开VS2017的开发人员命令提示符，输入<code>sn -k c:\myKey.snk</code>，生成密钥文件<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png"></p><p>6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png"></p><p>7、点击生成》重新生成解决方案，生成DLL</p><h4 id="使用DLL"><a href="#使用DLL" class="headerlink" title="使用DLL"></a>使用DLL</h4><h5 id="VB调用"><a href="#VB调用" class="headerlink" title="VB调用"></a>VB调用</h5><p>1、生成tlb文件</p><blockquote><p>一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。</p></blockquote><p>在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录<code>C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319&gt;</code>，执行以下命令生成tlb文件：</p><pre><code>regasm F:\TestC#DLL\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase</code></pre><p><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png"></p><p>2、打开VB工程，引用tlb文件<br>点击浏览，选择刚刚生成的tlb文件，确定即可。<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png"></p><p>3、在代码中定义和使用DLL</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> v_dwgnoEnde <span class="keyword">As</span> <span class="built_in">New</span> DWGNoEnDe.DWGNoEnDe</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Text2.<span class="keyword">Text</span> = v_dwgnoEnde.Encode(Text1.<span class="keyword">Text</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VS2017中使用C++创建和使用DLL</title>
      <link href="/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8C++%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/"/>
      <url>/2018/07/03/%E5%9C%A8VS2017%E4%B8%AD%E4%BD%BF%E7%94%A8C++%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8DLL/</url>
      
        <content type="html"><![CDATA[<h4 id="创建DLL"><a href="#创建DLL" class="headerlink" title="创建DLL"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png"><br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png"></p><span id="more"></span><p>2、右键项目》添加》新建项》头文件(.h)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png"><br>在头文件中输入以下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">__declspec(dllexport) <span class="function"><span class="type">int</span> __stdcall <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png"><br>在C++文件中输入以下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DWGNoEnDe.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="type">int</span> __stdcall <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">c = a + b;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、右键项目》添加》新建项》模块定义文件(.def)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png"><br>在模块定义文件中输入以下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY</span><br><span class="line">EXPORTS</span><br><span class="line">add</span><br></pre></td></tr></table></figure><blockquote><p>add为方法名</p></blockquote><p>5、右键项目》属性》配置属性》C&#x2F;C++》代码生成，设置运行库为：多线程 DLL（&#x2F;MD）<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png"></p><p>6、编译项目，生成Release版的DLL<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png"><br>可编译为x86或x64。</p><h4 id="使用DLL"><a href="#使用DLL" class="headerlink" title="使用DLL"></a>使用DLL</h4><h5 id="一、C-调用"><a href="#一、C-调用" class="headerlink" title="一、C++调用"></a>一、C++调用</h5><p>1、新建项目<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png"></p><p>2、拷贝编译生成的dll和头文件，到测试项目下面<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png"></p><p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png"><br>在C++文件中输入以下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DWGNoEnDe.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">23</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输出：%d\n&quot;</span>,c);</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、点击“本地Windows调试器”运行项目，调用成功<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png"></p><h5 id="二、VB调用"><a href="#二、VB调用" class="headerlink" title="二、VB调用"></a>二、VB调用</h5><p>1、拷贝C++DLL到exe程序同一目录下</p><p>2、在exe程序中引用C++DLL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Public Declare Function add Lib &quot;DWGNoEnDe.dll&quot; (ByVal a As Long, ByVal b As Long) As Long</span><br></pre></td></tr></table></figure><p>3、调用C++DLL的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Private Sub Command1_Click()</span><br><span class="line">    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h5 id="三、C-调用"><a href="#三、C-调用" class="headerlink" title="三、C#调用"></a>三、C#调用</h5><p>1、新建控制台应用项目</p><p>2、拷贝C++DLL到<code>项目名称\bin\Debug</code>下，与exe处于同一目录</p><p>3、在<code>Program.cs</code>中输入如下代码：<br><img src="https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs"></p><p>4、点击启动运行项目，调用成功</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VB下载网页文件或图片的方法</title>
      <link href="/2018/04/26/VB%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2018/04/26/VB%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地"><a href="#一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地" class="headerlink" title="一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地"></a>一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地</h1><p>引入API：</p><pre><code>Private Declare Function URLDownloadToFile Lib &quot;urlmon&quot; Alias &quot;URLDownloadToFileA&quot; (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long</code></pre><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Private Sub test()</span><br><span class="line">    Dim v_URL As String, v_FileName As String, v_Result As Long</span><br><span class="line">    v_URL = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class="line">    v_FileName = App.Path &amp; &quot;\Baidu.bmp&quot;  &#x27;下载百度Logo图片</span><br><span class="line">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &#x27;下载文件，返回 0 表示成功</span><br><span class="line">    v_URL = &quot;http://www.baidu.com&quot;</span><br><span class="line">    v_FileName = App.Path &amp; &quot;\Baidu.html&quot; &#x27;下载百度首页的网页</span><br><span class="line">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &#x27;下载文件，返回 0 表示成功</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation"><a href="#二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation" class="headerlink" title="二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation"></a>二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation</h1><p>引入API：</p><pre><code>Private Declare Function OleLoadPicturePath Lib &quot;oleaut32.dll&quot; (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As LongPrivate Type TGUID    Data1 As Long    Data2 As Integer    Data3 As Integer    Data4(0 To 7) As ByteEnd Type</code></pre><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Public Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture</span><br><span class="line">    Dim riid As TGUID</span><br><span class="line">    riid.Data1    = &amp;H7BF80980</span><br><span class="line">    riid.Data2    = &amp;HBF32</span><br><span class="line">    riid.Data3    = &amp;H101A</span><br><span class="line">    riid.Data4(0) = &amp;H8B</span><br><span class="line">    riid.Data4(1) = &amp;HBB</span><br><span class="line">    riid.Data4(2) = &amp;H0</span><br><span class="line">    riid.Data4(3) = &amp;HAA</span><br><span class="line">    riid.Data4(4) = &amp;H0</span><br><span class="line">    riid.Data4(5) = &amp;H30</span><br><span class="line">    riid.Data4(6) = &amp;HC</span><br><span class="line">    riid.Data4(7) = &amp;HAB</span><br><span class="line">    OleLoadPicturePath StrPtr(i_ImgUrl), 0&amp;, 0&amp;, 0&amp;, riid, LoadNetPicture</span><br><span class="line">End Function</span><br><span class="line">Private Sub test()</span><br><span class="line">    Dim v_ImgUrl As String, v_Picture As Picture</span><br><span class="line">    v_ImgUrl = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class="line">    Set v_Picture = LoadNetPicture(v_ImgUrl)          &#x27;将图片下载到变量</span><br><span class="line">    SavePicture v_Picture, App.Path &amp; &quot;\MyImg.bmp&quot;    &#x27;保存到硬盘</span><br><span class="line">    Picture1.Picture = v_Picture</span><br><span class="line">    &#x27;如果要将图片装载到控件</span><br><span class="line">    Picture1.Picture = LoadNetPicture(v_ImgUrl)</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地"><a href="#三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地" class="headerlink" title="三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地"></a>三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地</h1><p>定义公用下载过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Public Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)</span><br><span class="line">    Dim XmlHttp, B() As Byte</span><br><span class="line">    Set XmlHttp = CreateObject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class="line">    XmlHttp.Open &quot;GET&quot;, i_Url, False</span><br><span class="line">    XmlHttp.Send</span><br><span class="line">    If XmlHttp.ReadyState = 4 Then</span><br><span class="line">        B() = XmlHttp.ResponseBody</span><br><span class="line">        Open i_File For Binary As #1</span><br><span class="line">        Put #1, , B()</span><br><span class="line">        Close #1</span><br><span class="line">    End If</span><br><span class="line">    Set XmlHttp = Nothing</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><p>用法:</p><pre><code>DownNetFile &quot;http://www.baidu.com/img/baidu_logo.gif&quot;, App.Path &amp; &quot;\My-1.bmp&quot; &#39;下载百度图片DownNetFile &quot;http://www.baidu.com&quot;, App.Path &amp; &quot;\Baidu.html&quot;                  &#39;下载百度首页的网页</code></pre><h1 id="四、使用WebBrowser的Document对象，保存网页的所有图片"><a href="#四、使用WebBrowser的Document对象，保存网页的所有图片" class="headerlink" title="四、使用WebBrowser的Document对象，保存网页的所有图片"></a>四、使用WebBrowser的Document对象，保存网页的所有图片</h1><p>先用 WebBrowser1 显示一个网页，如：</p><pre><code>WebBrowser1.Navigate &quot;http://www.baidu.com&quot;</code></pre><p>待网页加载完毕后，再执行以下语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Dim v_Path As String, I As Long, E, v_Range</span><br><span class="line">v_Path = App.Path &amp; &quot;\Tu\&quot;</span><br><span class="line">WebBrowser1.Silent = True &#x27;关闭交互，禁止脚本错误</span><br><span class="line">For Each E In WebBrowser1.Document.All</span><br><span class="line">    If E.tagName = &quot;IMG&quot; Then</span><br><span class="line">        Set v_Range = WebBrowser1.Document.body.createControlRange()</span><br><span class="line">        v_Range.Add E</span><br><span class="line">        v_Range.execCommand &quot;Copy&quot; &#x27;复制到剪贴板</span><br><span class="line">        I = I + 1</span><br><span class="line">        SavePicture Clipboard.GetData, v_Path &amp; I &amp; &quot;.bmp&quot; &#x27;保存到硬盘</span><br><span class="line">    End If</span><br><span class="line">Next</span><br></pre></td></tr></table></figure><h1 id="五、用API调用系统的另存为下载对话框，进行文件下载"><a href="#五、用API调用系统的另存为下载对话框，进行文件下载" class="headerlink" title="五、用API调用系统的另存为下载对话框，进行文件下载"></a>五、用API调用系统的另存为下载对话框，进行文件下载</h1><p>引入API:</p><pre><code>Private Declare Function DoFileDownload Lib &quot;shdocvw.dll&quot; (ByVal lpszFile As String) As Long</code></pre><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dim v_Url As String</span><br><span class="line">v_Url = StrConv(&quot;http://www.baidu.com&quot;, vbUnicode)</span><br><span class="line">Call DoFileDownload(v_Url)</span><br></pre></td></tr></table></figure><h1 id="六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载"><a href="#六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载" class="headerlink" title="六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载"></a>六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载</h1><pre><code>WebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT</code></pre><hr><p>以上方法各有优缺点。<br>Microsoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。<br>对于谷歌地图图片，图片链接形如：<a href="http://mt1.google.cn/vt/lyrs=s@63&gl=cn&x=51694&s=&y=26884&z=16&s=Galile">http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile</a> ，仅第四种方法有效。</p><blockquote><p>本文根据<a href="https://blog.csdn.net/rztyfx/article/details/7605624">rztyfx的专栏</a>整理发表。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux共享目录和远程挂载</title>
      <link href="/2018/04/11/Linux%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%8C%82%E8%BD%BD/"/>
      <url>/2018/04/11/Linux%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="共享目录"><a href="#共享目录" class="headerlink" title="共享目录"></a>共享目录</h2><h3 id="1-编辑并添加共享目录配置"><a href="#1-编辑并添加共享目录配置" class="headerlink" title="1. 编辑并添加共享目录配置"></a>1. 编辑并添加共享目录配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>添加内容格式如下：</p><pre><code>[xxFileServer]        path = /filedisk/xxFileServer        guest ok = yes        writable = yes        read only = No        create mask = 0777        directory mask = 0777</code></pre><span id="more"></span><h3 id="2-给共享目录设置相应的权限"><a href="#2-给共享目录设置相应的权限" class="headerlink" title="2. 给共享目录设置相应的权限"></a>2. 给共享目录设置相应的权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /filedisk/xxFileServer</span><br></pre></td></tr></table></figure><h3 id="3-重启共享服务"><a href="#3-重启共享服务" class="headerlink" title="3. 重启共享服务"></a>3. 重启共享服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><h3 id="4-设置开机启动共享服务"><a href="#4-设置开机启动共享服务" class="headerlink" title="4. 设置开机启动共享服务"></a>4. 设置开机启动共享服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 5 smb on</span><br></pre></td></tr></table></figure><!-- more --><hr><h2 id="远程挂载"><a href="#远程挂载" class="headerlink" title="远程挂载"></a>远程挂载</h2><h3 id="1-创建本地目录"><a href="#1-创建本地目录" class="headerlink" title="1. 创建本地目录"></a>1. 创建本地目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/xxFileServer</span><br></pre></td></tr></table></figure><h3 id="2-挂载远程目录"><a href="#2-挂载远程目录" class="headerlink" title="2. 挂载远程目录"></a>2. 挂载远程目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Apache ftpserver安装配置</title>
      <link href="/2018/04/10/Apache-ftpserver%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/04/10/Apache-ftpserver%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="apache-ftpserver下载"><a href="#apache-ftpserver下载" class="headerlink" title="apache ftpserver下载"></a>apache ftpserver下载</h3><p><a href="http://mina.apache.org/ftpserver-project/downloads.html">官网下载</a></p><span id="more"></span><hr><h3 id="apache-ftpserver安装"><a href="#apache-ftpserver安装" class="headerlink" title="apache ftpserver安装"></a>apache ftpserver安装</h3><h4 id="1-Linux下"><a href="#1-Linux下" class="headerlink" title="1. Linux下"></a>1. Linux下</h4><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/download/</span><br><span class="line">wget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-2-解压"><a href="#1-2-解压" class="headerlink" title="1.2 解压"></a>1.2 解压</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-ftpserver-1.1.1 /usr/local/ftpserver</span><br></pre></td></tr></table></figure><h5 id="1-4-修改配置文件"><a href="#1-4-修改配置文件" class="headerlink" title="1.4 修改配置文件"></a>1.4 修改配置文件</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/ftpserver/res/conf/</span><br><span class="line">vim users.properties</span><br></pre></td></tr></table></figure><p>users.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：</p><pre><code>#用户名为anonymous，密码为空tpserver.user.anonymous.userpassword=#主目录ftpserver.user.anonymous.homedirectory=./res/home#当前用户可用ftpserver.user.anonymous.enableflag=true#具有上传权限ftpserver.user.anonymous.writepermission=true#最大登陆用户数为20，0为不限ftpserver.user.anonymous.maxloginnumber=20#同IP登陆用户数为2，0为不限ftpserver.user.anonymous.maxloginperip=2 #空闲时间为300秒，0为不限ftpserver.user.anonymous.idletime=300#上传速率限制为48字节每秒，0为不限ftpserver.user.anonymous.uploadrate=4800#下载速率限制为48字节每秒，0为不限ftpserver.user.anonymous.downloadrate=4800</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ftpd-typical.xml</span><br></pre></td></tr></table></figure><p>修改配置文件ftpd-file.xml，增加encrypt-passwords&#x3D;”clear”，将密码加密方式修改为clear，默认为MD5加密方式。</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;server xmlns=&quot;http://mina.apache.org/ftpserver/spring/v1&quot;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;    xsi:schemaLocation=&quot;http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd&quot;    id=&quot;myServer&quot; max-logins=&quot;999999&quot; max-threads=&quot;9999&quot; anon-enabled=&quot;true&quot; max-anon-logins=&quot;10&quot;&gt;    &lt;!-- anon-enabled 表示是否开通匿名访问；max-anon-logins 表示匿名访问的数量限制--&gt;    &lt;listeners&gt;            &lt;nio-listener name=&quot;default&quot; port=&quot;21&quot;&gt;                &lt;ssl&gt;                    &lt;keystore file=&quot;./res/ftpserver.jks&quot; password=&quot;password&quot; /&gt;                &lt;/ssl&gt;                &lt;!--设置多少时间后关闭一个闲置的链接，单位是秒--&gt;                &lt;data-connection idle-timeout=&quot;1&quot;&gt;                    &lt;!--设置主动链接配置，端口号“2120”--&gt;                    &lt;!--&lt;active local-port=&quot;2120&quot;/&gt;--&gt;                                        &lt;!--设置被动链接配置，端口设置为“2120”，或者开通更多端口“2120-3120”，扩展地址为“0.0.0.0”。当客户端连接时，服务器使用 0.0.0.0:2120-3120 为客户端提供数据传输服务。--&gt;                    &lt;passive ports=&quot;2120-3120&quot; address=&quot;0.0.0.0&quot; external-address=&quot;&quot;/&gt;                &lt;/data-connection&gt;            &lt;/nio-listener&gt;    &lt;/listeners&gt;    &lt;file-user-manager file=&quot;./res/conf/users.properties&quot; encrypt-passwords=&quot;clear&quot; /&gt;&lt;/server&gt;</code></pre><h5 id="1-5-启动"><a href="#1-5-启动" class="headerlink" title="1.5 启动"></a>1.5 启动</h5><p>在ftpserver目录下，执行命令：</p><ul><li>方式一：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh  bin/ftpd.sh  /res/conf/ftpd-typical.xml</span><br></pre></td></tr></table></figure>此方式有局限，当命令窗口退出时，FTP服务停止。</li><li>方式二：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &amp;</span><br></pre></td></tr></table></figure>此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。</li><li>方式三：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml &gt; ftplog/`date &#x27;+%Y%m%d&#x27;`ftp.log  &gt; /dev/null   2&gt;&amp;1  &amp;</span><br></pre></td></tr></table></figure>方式一、二无法启动时，可用此种方式。</li></ul><h5 id="1-5-测试"><a href="#1-5-测试" class="headerlink" title="1.5 测试"></a>1.5 测试</h5><p>在浏览器输入<a href="ftp://IP:21后，输入用户名，密码，可以登录ftp目录。">ftp://IP:21后，输入用户名，密码，可以登录ftp目录。</a></p><hr><h3 id="Suse-Linux-Enterprise-12下实现脚本启动和关闭"><a href="#Suse-Linux-Enterprise-12下实现脚本启动和关闭" class="headerlink" title="Suse Linux Enterprise 12下实现脚本启动和关闭"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id="1-在-目录下，执行下面命令"><a href="#1-在-目录下，执行下面命令" class="headerlink" title="1. 在~目录下，执行下面命令"></a>1. 在~目录下，执行下面命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .profile</span><br></pre></td></tr></table></figure><h4 id="2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下："></a>2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code>export RC_LANG=zh_CN.UTF-8export FTPSERVER_HOME=/usr/local/ftpserverexport PATH=$PATH:$FTPSERVER_HOME</code></pre><p>保存并退出。</p><h4 id="3-执行下面命令，使立即生效"><a href="#3-执行下面命令，使立即生效" class="headerlink" title="3. 执行下面命令，使立即生效"></a>3. 执行下面命令，使立即生效</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><h4 id="4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，"><a href="#4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，" class="headerlink" title="4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，"></a>4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。</p><pre><code>#!/bin/bash# /usr/local/ftpserver# YPN 2018-04-11 Createif [ &quot;$1&quot;x = &quot;start&quot;x ]; then  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1&gt;/usr/local/ftpserver/res/log/ftpd.log 2&gt;&amp;1 &amp;fiif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then  kill $(ps aux|grep &quot;ftpserver&quot; | grep -v grep |awk &#39;&#123;print $2&#125;&#39;)fiif [ &quot;$1&quot;x = &quot;check&quot;x ]; then  ps -aux|grep &quot;ftpserver&quot; | grep -v grepfiif [ &quot;$1&quot;x = &quot;log&quot;x ]; then  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000fi</code></pre><h4 id="5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="5. 给文件添加权限，使脚本文件可以执行，命令为"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure><h4 id="6-最后，执行下面命令可启动、关闭ftpserver或查看日志"><a href="#6-最后，执行下面命令可启动、关闭ftpserver或查看日志" class="headerlink" title="6. 最后，执行下面命令可启动、关闭ftpserver或查看日志"></a>6. 最后，执行下面命令可启动、关闭ftpserver或查看日志</h4><p>启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver start</span><br></pre></td></tr></table></figure><p>关闭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver stop</span><br></pre></td></tr></table></figure><p>查看日志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver log</span><br></pre></td></tr></table></figure><p>检查ftpserver进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpserver check</span><br></pre></td></tr></table></figure><h4 id="7-随系统自启动"><a href="#7-随系统自启动" class="headerlink" title="7. 随系统自启动"></a>7. 随系统自启动</h4><p>打开linux设置开启启动的文件，将下面的配置写入此文件的最后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/after.local</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 启动ftpserver服务</span><br><span class="line">nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1&gt;/usr/local/ftpserver/res/log/ftpd.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FTP </tag>
            
            <tag> 安装配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS网络连接system eth0不可用解决办法</title>
      <link href="/2018/02/13/CentOS%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5system-eth0%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2018/02/13/CentOS%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5system-eth0%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-6-x"><a href="#CentOS-6-x" class="headerlink" title="CentOS 6.x"></a>CentOS 6.x</h3><p>VMware克隆CentOS 6导致网络连接system eth0不可用的解决办法</p><span id="more"></span><h6 id="1-打开下面文件，注释掉原eth0，将eth1改为eth0"><a href="#1-打开下面文件，注释掉原eth0，将eth1改为eth0" class="headerlink" title="1. 打开下面文件，注释掉原eth0，将eth1改为eth0"></a>1. 打开下面文件，注释掉原eth0，将eth1改为eth0</h6><pre><code>    vim /etc/udev/rules.d/70-persistent-net.rules</code></pre><p>一般能看到eth0、eth1两个配置规则，注释掉NAME&#x3D;”eth0”的配置规则，将另一个配置规则的NAME&#x3D;”eth1”改成NAME&#x3D;”eth0”。</p><h6 id="2-将改后eth0的ATTR-address-x3D-x3D-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件"><a href="#2-将改后eth0的ATTR-address-x3D-x3D-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件" class="headerlink" title="2. 将改后eth0的ATTR{address}&#x3D;&#x3D;”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件"></a>2. 将改后eth0的ATTR{address}&#x3D;&#x3D;”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件</h6><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code></pre><p>保存到HWADDR&#x3D;”00:50:56:a9:4c:f9”处。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUSE Linux Enterprise 12 防火墙开放服务及端口</title>
      <link href="/2018/02/01/SUSE-Linux-Enterprise-12-%E9%98%B2%E7%81%AB%E5%A2%99%E5%BC%80%E6%94%BE%E6%9C%8D%E5%8A%A1%E5%8F%8A%E7%AB%AF%E5%8F%A3/"/>
      <url>/2018/02/01/SUSE-Linux-Enterprise-12-%E9%98%B2%E7%81%AB%E5%A2%99%E5%BC%80%E6%94%BE%E6%9C%8D%E5%8A%A1%E5%8F%8A%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="一、图形化界面方式"><a href="#一、图形化界面方式" class="headerlink" title="一、图形化界面方式"></a>一、图形化界面方式</h1><h2 id="1-使用以下命令进入防火墙"><a href="#1-使用以下命令进入防火墙" class="headerlink" title="1. 使用以下命令进入防火墙"></a>1. 使用以下命令进入防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yast2</span><br></pre></td></tr></table></figure><p>然后选择Security and Users -&gt; Firewall，或用下面命令直接进入Firewall</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yast2 firewall</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-开放服务"><a href="#2-开放服务" class="headerlink" title="2. 开放服务"></a>2. 开放服务</h2><p>选择Allowed Services -&gt; Add，可以添加如ssh, http, https等服务。</p><h2 id="3-开放端口"><a href="#3-开放端口" class="headerlink" title="3. 开放端口"></a>3. 开放端口</h2><p>选择右下角的Advanced…，然后填写要开放的端口，多个端口之间用空格隔开。</p><h2 id="4-保存设置重启防火墙使生效"><a href="#4-保存设置重启防火墙使生效" class="headerlink" title="4. 保存设置重启防火墙使生效"></a>4. 保存设置重启防火墙使生效</h2><p>选择Save Settings and Restart Firewall Now即可。</p><hr><h1 id="二、命令方式"><a href="#二、命令方式" class="headerlink" title="二、命令方式"></a>二、命令方式</h1><h2 id="1-修改防火墙配置"><a href="#1-修改防火墙配置" class="headerlink" title="1. 修改防火墙配置"></a>1. 修改防火墙配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/SuSEfirewall2</span><br></pre></td></tr></table></figure><p>在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP&#x3D;”ssh” 或 FW_SERVICES_EXT_TCP&#x3D;”22″<br>如果要开放多个端口则为 FW_SERVICES_EXT_TCP&#x3D;”22 80 8090″<br>最后，保存退出。</p><h2 id="2-重启防火墙使生效"><a href="#2-重启防火墙使生效" class="headerlink" title="2. 重启防火墙使生效"></a>2. 重启防火墙使生效</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rcSuSEfirewall2 restart</span><br></pre></td></tr></table></figure><h2 id="3-查看防火墙状态"><a href="#3-查看防火墙状态" class="headerlink" title="3. 查看防火墙状态"></a>3. 查看防火墙状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rcSuSEfirewall2 status</span><br></pre></td></tr></table></figure><h2 id="4-关闭防火墙"><a href="#4-关闭防火墙" class="headerlink" title="4. 关闭防火墙"></a>4. 关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop SuSEfirewall2.service</span><br></pre></td></tr></table></figure><h2 id="5-取消开机启动防火墙"><a href="#5-取消开机启动防火墙" class="headerlink" title="5. 取消开机启动防火墙"></a>5. 取消开机启动防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable SuSEfirewall2.service</span><br></pre></td></tr></table></figure><h2 id="6-开启防火墙"><a href="#6-开启防火墙" class="headerlink" title="6. 开启防火墙"></a>6. 开启防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start SuSEfirewall2.service</span><br></pre></td></tr></table></figure><h2 id="7-开机启动防火墙"><a href="#7-开机启动防火墙" class="headerlink" title="7. 开机启动防火墙"></a>7. 开机启动防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable SuSEfirewall2.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy脚本启动和关闭</title>
      <link href="/2018/02/01/HAProxy%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/"/>
      <url>/2018/02/01/HAProxy%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS下实现脚本启动和关闭"><a href="#CentOS下实现脚本启动和关闭" class="headerlink" title="CentOS下实现脚本启动和关闭"></a>CentOS下实现脚本启动和关闭</h3><h4 id="1-编写启动脚本"><a href="#1-编写启动脚本" class="headerlink" title="1. 编写启动脚本"></a>1. 编写启动脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.d/init.d/haproxy</span><br></pre></td></tr></table></figure><span id="more"></span><p>本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。<br>打开文件haproxy，贴入如下内容：</p><pre><code>#!/bin/sh#chkconfig: 2345 10 90#description:haproxy## chkconfig: - 85 15# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \#              for high availability environments.# processname: haproxy# config: /etc/haproxy/haproxy.cfg# pidfile: /var/run/haproxy.pid# Script Author: Simon Matter &lt;simon.matter@invoca.ch&gt;# Version: 2004060600# Source function library.if [ -f /etc/init.d/functions ]; then  . /etc/init.d/functionselif [ -f /etc/rc.d/init.d/functions ] ; then  . /etc/rc.d/init.d/functionselse  exit 0fi# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ $&#123;NETWORKING&#125; = &quot;no&quot; ] &amp;&amp; exit 0# This is our service nameBASENAME=`basename $0`if [ -L $0 ]; then  BASENAME=`find $0 -name $BASENAME -printf %l`  BASENAME=`basename $BASENAME`fiBIN=/usr/local/haproxy/sbin/haproxyCFG=/usr/local/haproxy/haproxy.cfg[ -f $CFG ] || exit 1PIDFILE=/var/run/$BASENAME.pidLOCKFILE=/var/lock/subsys/$BASENAMERETVAL=0start() &#123;  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &#39;$BASENAME check&#39;.&quot;    return 1  fi  echo -n &quot;Starting $BASENAME: &quot;  daemon $BIN -D -f $CFG -p $PIDFILE  RETVAL=$?  echo  [ $RETVAL -eq 0 ] &amp;&amp; touch $LOCKFILE  return $RETVAL&#125;stop() &#123;  echo -n &quot;Shutting down $BASENAME: &quot;  killproc $BASENAME -USR1  RETVAL=$?  echo  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $LOCKFILE  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $PIDFILE  return $RETVAL&#125;restart() &#123;  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &#39;$BASENAME check&#39;.&quot;    return 1  fi  stop  start&#125;reload() &#123;  if ! [ -s $PIDFILE ]; then    return 0  fi  quiet_check  if [ $? -ne 0 ]; then    echo &quot;Errors found in configuration file, check it with &#39;$BASENAME check&#39;.&quot;    return 1  fi  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)&#125;check() &#123;  $BIN -c -q -V -f $CFG&#125;quiet_check() &#123;  $BIN -c -q -f $CFG&#125;rhstatus() &#123;  status $BASENAME&#125;condrestart() &#123;  [ -e $LOCKFILE ] &amp;&amp; restart || :&#125;# See how we were called.case &quot;$1&quot; in  start)    start    ;;  stop)    stop    ;;  restart)    restart    ;;  reload)    reload    ;;  condrestart)    condrestart    ;;  status)    rhstatus    ;;  check)    check    ;;  *)    echo $&quot;Usage: $BASENAME &#123;start|stop|restart|reload|condrestart|status|check&#125;&quot;    exit 1esac exit $?</code></pre><p>如果安装路径有变动，则只需修改上面的<code>BIN=/usr/local/haproxy/sbin/haproxy</code>和<code>CFG=/usr/local/haproxy/haproxy.cfg</code>即可。</p><h4 id="2-脚本随系统自启动"><a href="#2-脚本随系统自启动" class="headerlink" title="2. 脚本随系统自启动"></a>2. 脚本随系统自启动</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性</span><br><span class="line">chkconfig --add haproxy            # 添加服务</span><br><span class="line">chkconfig haproxy on</span><br></pre></td></tr></table></figure><p>如果出现结果： <em>service haproxy does not support chkconfig</em><br>解决办法是在 <strong>&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;haproxy</strong> 中添加下面两句到 <strong>#!&#x2F;bin&#x2F;bash</strong> 之后:<br>    #chkconfig: 2345 10 90<br>    #description:haproxy<br>—-其中2345是默认启动级别，级别有0-6共7个级别。<br>—-等级0表示：表示关机<br>—-等级1表示：单用户模式<br>—-等级2表示：无网络连接的多用户命令行模式<br>—-等级3表示：有网络连接的多用户命令行模式<br>—-等级4表示：不可用<br>—-等级5表示：带图形界面的多用户模式<br>—-等级6表示：重新启动<br>—-10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。</p><blockquote><p>添加后效果如下：<br>    [root@Linux-xx ~]# cat &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;haproxy<br>    #!&#x2F;bin&#x2F;bash<br>    #chkconfig: 2345 10 90<br>    #description:haproxy<br>    BASE_DIR&#x3D;”&#x2F;usr&#x2F;local&#x2F;haproxy”<br>    ARGV&#x3D;”$@”<br>    start()<br>    …<br>    …</p></blockquote><h4 id="3-启动与关闭"><a href="#3-启动与关闭" class="headerlink" title="3. 启动与关闭"></a>3. 启动与关闭</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service haproxy start</span><br><span class="line">service haproxy stop</span><br></pre></td></tr></table></figure><hr><h3 id="Suse-Linux-Enterprise-12下实现脚本启动和关闭"><a href="#Suse-Linux-Enterprise-12下实现脚本启动和关闭" class="headerlink" title="Suse Linux Enterprise 12下实现脚本启动和关闭"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id="1-在-目录下，执行下面命令"><a href="#1-在-目录下，执行下面命令" class="headerlink" title="1. 在~目录下，执行下面命令"></a>1. 在~目录下，执行下面命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .profile</span><br></pre></td></tr></table></figure><h4 id="2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下："></a>2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code>    # .profile    # Get the aliases and functions    if [ -f ~/.bashrc ]; then            . ~/.bashrc    fi    # User specific environment and startup programs    HAPROXY_HOME=/usr/local/haproxy    PATH=$PATH:$HOME/bin:$HAPROXY_HOME    export HAPROXY_HOME    export PATH</code></pre><p>保存并退出。</p><h4 id="3-执行下面命令，使立即生效"><a href="#3-执行下面命令，使立即生效" class="headerlink" title="3. 执行下面命令，使立即生效"></a>3. 执行下面命令，使立即生效</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><h4 id="4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，"><a href="#4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，" class="headerlink" title="4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，"></a>4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。</p><pre><code>#!/bin/bash# /usr/local/haproxy# YPN 2018-02-01 Createif [ &quot;$1&quot;x = &quot;start&quot;x ]; then  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfgfiif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then  killall haproxyfiif [ &quot;$1&quot;x = &quot;check&quot;x ]; then  ps -e|grep haproxyfiif [ &quot;$1&quot;x = &quot;log&quot;x ]; then  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000fi</code></pre><h4 id="5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="5. 给文件添加权限，使脚本文件可以执行，命令为"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure><h4 id="6-最后，执行下面命令可启动、关闭haproxy或查看日志"><a href="#6-最后，执行下面命令可启动、关闭haproxy或查看日志" class="headerlink" title="6. 最后，执行下面命令可启动、关闭haproxy或查看日志"></a>6. 最后，执行下面命令可启动、关闭haproxy或查看日志</h4><p>启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy start</span><br></pre></td></tr></table></figure><p>关闭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy stop</span><br></pre></td></tr></table></figure><p>查看日志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy log</span><br></pre></td></tr></table></figure><p>检查haprxy进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haproxy check</span><br></pre></td></tr></table></figure><h4 id="7-随系统自启动"><a href="#7-随系统自启动" class="headerlink" title="7. 随系统自启动"></a>7. 随系统自启动</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/boot.local</span><br></pre></td></tr></table></figure><p>加入以下内容，保存退出后生效。</p><pre><code>/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy介绍和应用</title>
      <link href="/2017/12/22/HAProxy%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%BA%94%E7%94%A8/"/>
      <url>/2017/12/22/HAProxy%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="HAProxy简介"><a href="#HAProxy简介" class="headerlink" title="HAProxy简介"></a>HAProxy简介</h3><p>HAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。</p><p>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。</p><p>HAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。</p><p>包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。</p><p>HAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。</p><span id="more"></span><hr><h3 id="HAProxy基础概念"><a href="#HAProxy基础概念" class="headerlink" title="HAProxy基础概念"></a>HAProxy基础概念</h3><p>代理的作用</p><ul><li>正向代理，反向代理</li><li>代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查</li><li>内容路由：根据流量以及内容类型将请求转发至特定的服务器</li><li>转码器：支持压缩功能，将数据以压缩形式发送给客户端</li></ul><p>缓存的作用</p><ul><li>减少访冗余内容传输</li><li>节省带宽，缓解网络瓶颈</li><li>降低了对原始服务器的请求压力</li><li>降低了传输延迟</li></ul><p>负载均衡集群</p><ul><li><p>四层代理：lvs, nginx(stream)，HAProxy(mode tcp)<br>通过分析IP层及TCP&#x2F;UDP层的流量实现的基于“IP+端口”的负载均衡。</p></li><li><p>七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound…<br>可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。</p></li></ul><p>七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。</p><p><strong>HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容</strong></p><hr><h3 id="HAProxy功能"><a href="#HAProxy功能" class="headerlink" title="HAProxy功能"></a>HAProxy功能</h3><ul><li>HAProxy是TCP&#x2F;HTTP反向代理服务器，尤其适合于高可用性环境</li><li>可以针对HTTP请求添加cookie，进行路由后端服务器</li><li>可平衡负载至后端服务器，并支持持久连接</li><li>支持基于cookie进行调度</li><li>支持所有主服务器故障切换至备用服务器</li><li>支持专用端口实现监控服务</li><li>支持不影响现有连接情况下停止接受新连接请求</li><li>可以在双向添加，修改或删除HTTP报文首部</li><li>支持基于pattern实现连接请求的访问控制</li><li>通过特定的URI为授权用户提供详细的状态信息</li><li>支持http反向代理</li><li>支持动态程序的反向代理</li><li>支持基于数据库的反向代理<br>版本：1.4 1.5 1.6 1.7 1.8</li></ul><hr><h3 id="HAProxy应用"><a href="#HAProxy应用" class="headerlink" title="HAProxy应用"></a>HAProxy应用</h3><h5 id="HAProxy进行安全加固"><a href="#HAProxy进行安全加固" class="headerlink" title="HAProxy进行安全加固"></a>HAProxy进行安全加固</h5><p>用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如</p><pre><code>backend dynamic    mode http    acl being_scanned be_sess_rate gt 100    redirect location /denied.html if being_scanned</code></pre><h5 id="通过ACL指定可访问的用户"><a href="#通过ACL指定可访问的用户" class="headerlink" title="通过ACL指定可访问的用户"></a>通过ACL指定可访问的用户</h5><p>阻断来自非指定IP的访问80端口的请求</p><pre><code>acl myhost src 172.16.100.1acl myport dst_port 80tcp-request connection reject if !myhost myport　　</code></pre><p>还可以用block</p><pre><code>block if ! myhost myport</code></pre><h5 id="根据用户访问内容实现动静分离"><a href="#根据用户访问内容实现动静分离" class="headerlink" title="根据用户访问内容实现动静分离"></a>根据用户访问内容实现动静分离</h5><pre><code>frontend http-in    bind            *:80    mode            http    log             global    option          httpclose    acl             url_static path_beg -i /static /images /javascript /stylesheets    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js    use_backend     static_servers if url_static    default_backend dynamic_serversbackend static_servers    balance roundrobin    server  imgsrv1 172.18.64.7:80 check maxconn 6000    server  imgsrv2 172.18.64.107:80 check maxconn 6000backend dynamic_servers    balance source    server  websrv1 172.18.64.17:80 check maxconn 1000    server  websrv2 172.18.64.106:80 check maxconn 1000</code></pre><h5 id="HAProxy实现浏览器控制"><a href="#HAProxy实现浏览器控制" class="headerlink" title="HAProxy实现浏览器控制"></a>HAProxy实现浏览器控制</h5><p>阻断火狐浏览器发送的请求  </p><pre><code>acl firefox hdr_reg(User-Agent) -i .*firefox.*block if firefox</code></pre><p>将IE用户请求分配到静态服务器</p><pre><code>acl ie_useragent hdr_reg(User-Agent) -i .*ie.*use_backend static_servers if ie_useragent</code></pre><h5 id="HAProxy实现真实日志记录"><a href="#HAProxy实现真实日志记录" class="headerlink" title="HAProxy实现真实日志记录"></a>HAProxy实现真实日志记录</h5><p>option forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。<br>HAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。</p><pre><code>frontend wwwmode httpoption forwardfor except 127.0.0.1</code></pre><h5 id="HAProxy实现会话保持"><a href="#HAProxy实现会话保持" class="headerlink" title="HAProxy实现会话保持"></a>HAProxy实现会话保持</h5><ol><li><p>源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。<br>缺点：当后端一台服务器挂了以后会造成部分session丢失</p><p> backend SOURCE_srv<br>     mode    http<br>     balance source<br>     server  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3<br>     server  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3<br>     server  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3</p></li><li><p>cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。</p><p> backend COOKIE_srv<br>     mode   http<br>     cookie SERVERID insert indirect nocache<br>     server app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3<br>     server app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3<br>     server app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3</p></li></ol><p>在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID&#x3D;A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID&#x3D;A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。</p><h5 id="HAProxy性能优化参数"><a href="#HAProxy性能优化参数" class="headerlink" title="HAProxy性能优化参数"></a>HAProxy性能优化参数</h5><p>option redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器<br>option dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包<br>retries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查<br>maxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy配置详解</title>
      <link href="/2017/12/22/HAProxy%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2017/12/22/HAProxy%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>haproxy.cfg主要有两部分组成：global和proxies配置段</p><h5 id="global：全局配置段"><a href="#global：全局配置段" class="headerlink" title="global：全局配置段"></a>global：全局配置段</h5><p>进程及安全配置相关的参数<br>性能调整相关参数<br>Debug参数</p><h5 id="proxies：代理配置段"><a href="#proxies：代理配置段" class="headerlink" title="proxies：代理配置段"></a>proxies：代理配置段</h5><ul><li>defaults：为frontend, backend, listen提供默认配置</li><li>fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend</li><li>backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器</li><li>listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置</li></ul><span id="more"></span><blockquote><p>所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。</p></blockquote><blockquote><p>时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。<br> us: 微秒(microseconds)，即1&#x2F;1000000秒；<br> ms: 毫秒(milliseconds)，即1&#x2F;1000秒；<br> s: 秒(seconds)；<br> m: 分钟(minutes)；<br> h：小时(hours)；<br> d: 天(days)；</p></blockquote><hr><h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h3><h5 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h5><p>通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。</p><pre><code>###################### 全局配置 ######################global      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出    # log     127.0.0.1 local0 info      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制      chroot  /usr/local/haproxy                  # 改变当前工作目录      uid     5040                                # 运行haproxy的用户（自定义）      gid     5040                                # 运行haproxy的用户所在的组（自定义）      daemon                                      # 以后台形式运行harpoxy    # nbproc  2                                   # 设置进程数量      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试    # quiet</code></pre><ul><li>log<br>全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；</li><li>maxconn<br>设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li><li>chroot<br>修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；</li><li>daemon<br>让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；</li><li>nbproc<br>指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；</li><li>pidfile<br>将haproxy的进程写入pid文件。</li><li>ulimit-n<br>设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。</li><li>stats<br>可开启一个unix socket管理接口。</li><li>gid<br>以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。</li><li>group<br>同gid，不过指定的组名。</li></ul><h5 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h5><p>在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。</p><pre><code>###################### 默认配置 ######################defaults      log             global      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK      option          httpclose    # 每次请求完毕后主动关闭http通道    # option          dontlognull  # 不记录健康检查日志信息      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数      timeout connect 3000         # 连接超时      timeout client  50000        # 客户端超时      timeout server  50000        # 服务器超时    # timeout check   2000         # 心跳检测超时    # timeout http-keep-alive 10s  # 默认持久连接超时时间    # timeout http-request    10s  # 默认http请求超时时间    # timeout queue   1m           # 默认队列超时时间</code></pre><ul><li>mode { tcp|http|health }<br>设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。<ul><li>tcp<br>  实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；</li><li>http<br>  实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；</li><li>health<br>  实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能</li></ul></li><li>log   global<br>设置日志继承全局配置段的设置。</li><li>option httplog<br>表示开始打开记录http请求的日志功能。</li><li>option dontlognull<br>如果产生了一个空连接，那这个空连接的日志将不会记录。</li><li>option http-server-close<br>打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。</li><li>option forwardfor except 127.0.0.0&#x2F;8<br>如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。</li><li>option redispatch<br>当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。</li><li>retries 3<br>向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。</li><li>option abortonclose<br>当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。</li><li>timout http-request 10s<br>客户端发送http请求的超时时间。</li><li>timeout queue 1m<br>当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。</li><li>timeout connect 5s<br>haproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。</li><li>timeout client 1m<br>定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。</li><li>timeout server 1m<br>定义haproxy与上游服务器非活动连接的超时时间。</li><li>timeout http-keep-alive 10s<br>设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。</li><li>timeout check 10s<br>健康检测的时间的最大超时时间。</li><li>maxconn 3000<br>最大并发连接数。</li><li>contimeout 5000<br>设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。</li><li>clitimeout 3000<br>设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。</li><li>srvtimeout 3000<br>设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。</li><li>balance roundrobin<br>设置负载算法为：轮询算法</li></ul><h5 id="frontend前端配置"><a href="#frontend前端配置" class="headerlink" title="frontend前端配置"></a>frontend前端配置</h5><p>frontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。</p><pre><code>###################### frontend前端配置 ######################frontend main   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。   default_backend dynamic          # 不满足则响应backend的默认页面</code></pre><ul><li>frontend http_80_in<br>定义一个名为http_80_in的frontend。</li><li>bind 0.0.0.0:80<br>定义haproxy前端部分监听的端口。</li><li>mode http<br>定义为http模式。</li><li>log global<br>继承global中log的定义。</li><li>option forwardfor<br>使后端server获取到客户端的真实IP。</li><li>default_backend<br>default_backend 在没有匹配的”use_backend”规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在”frontend”和”backend”之间进行内容交换时，通常使用”use- backend”定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。<br>使用案例：<br>  use_backend dynamic  if  url_dyn<br>  use_backend static  if url_css url_img extension_img<br>  default_backend dynamic</li></ul><h5 id="backend后端配置"><a href="#backend后端配置" class="headerlink" title="backend后端配置"></a>backend后端配置</h5><p>在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。</p><pre><code>###################### backend后端配置 ######################backend webserver        mode    http        balance roundrobin                   # 负载轮询        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率         # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重backend imgserver        mode    http        option  httpchk /index.php        balance roundrobin         server  img01 192.168.137.101:80 check inter 2000 fall 3        server  img02 192.168.137.102:80 check inter 2000 fall 3backend dynamic         balance roundrobin         server  test1 192.168.1.23:80 check maxconn 2000         server  test2 192.168.1.24:80 check maxconn 2000</code></pre><ul><li>cookie<br>表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。</li><li>option httpchk<br>此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。<br>option httpchk用法：<ul><li>method<br>  表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。<br>  一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。</li><li>uri<br>  表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。</li><li>version<br>  指定心跳检测时的HTTP的版本号。</li></ul></li><li>server<br>用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*<ul><li>name<br>  为后端真实服务器指定一个内部名称，随便这下义一个即可。</li><li>address<br>  后端真实服务器的iP地址或主机名。</li><li>port<br>  指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。</li><li>param<br>  为后端服务器设定的一系列参数，可用参数非常多，</li></ul></li><li>check<br>表示启用对此后端服务器执行健康检查。</li><li>inter<br>设置健康状态检查的时间间隔，单位为毫秒。</li><li>rise<br>设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。</li><li>fall<br>设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。</li><li>cookie<br>为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。</li><li>cookie server1<br>表示web1的serverid为server1。</li><li>weigth<br>设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。</li><li>maxconn<br>设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li><li>backup<br>设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。</li></ul><h5 id="listen配置"><a href="#listen配置" class="headerlink" title="listen配置"></a>listen配置</h5><p>常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体</p><pre><code>###################### 统计页面配置 ######################listen stats       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       mode          http                 # http的7层模式       option        httplog              # 采用http日志格式     # log           127.0.0.1 local0 err # 错误日志记录       maxconn       10                   # 默认的最大连接数       stats refresh 30s                  # 统计页面自动刷新时间       stats uri     /stats               # 统计页面url       stats realm   YANGPIENA\ Haproxy   # 统计页面密码框上提示文本       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)</code></pre><h5 id="errorfile配置"><a href="#errorfile配置" class="headerlink" title="errorfile配置"></a>errorfile配置</h5><p>格式为: errorfile  错误代码code  错误代码文件路径<br>errorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：</p><pre><code>###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre><hr><h3 id="一份完整的haproxy配置文件实例："><a href="#一份完整的haproxy配置文件实例：" class="headerlink" title="一份完整的haproxy配置文件实例："></a>一份完整的haproxy配置文件实例：</h3><pre><code>###################### 全局配置 ######################global       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制       daemon                                      # 以后台形式运行harpoxy       uid     5040                                # 运行haproxy的用户       gid     5040                                # 运行haproxy的用户所在的组       chroot  /usr/local/haproxy                  # 改变当前工作目录       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件###################### 默认配置 ######################defaults       log             global       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK       option          httpclose  # 每次请求完毕后主动关闭http通道       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器       retries         3          # 3次连接失败就认为是服务器不可用       timeout connect 300000     # 连接超时       timeout client  500000     # 客户端超时       timeout server  500000     # 服务器超时###################### 统计页面配置 ######################listen stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       bind          0.0.0.0:8888 # 监听端口       maxconn       1            # 默认的最大连接数       option        httplog      # 采用http日志格式       stats         enable       # 启用状态监控       stats refresh 30s          # 统计页面自动刷新时间       stats uri     /stats       # 统计页面url       stats realm   YANGPIENA    # 统计页面密码框上提示文本       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)###################### 业务前端配置 ######################frontend xx         bind            0.0.0.0:80         default_backend xxServers###################### 业务后端配置 ######################backend xxServers        balance source        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy之ACL规则定义</title>
      <link href="/2017/12/20/HAProxy%E4%B9%8BACL%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89/"/>
      <url>/2017/12/20/HAProxy%E4%B9%8BACL%E8%A7%84%E5%88%99%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>HAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。<br>HAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。</p><span id="more"></span><hr><h3 id="ACL规则定义"><a href="#ACL规则定义" class="headerlink" title="ACL规则定义"></a>ACL规则定义</h3><p>格式：<code>acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] [&lt;value&gt;]</code></p><p><code>&lt;aclname&gt;</code>：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；<br><code>&lt;criterion&gt;</code>：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在<code>&lt;value&gt;</code>之前指定一个操作符[operator]；<br><code>[flags]</code>：目前haproxy的acl支持的标志位有3个：</p><ul><li>-i：不区分中模式字符的大小写；</li><li>-f：从指定的文件中加载模式；</li><li>–：标志符的强制结束标记，在模式中的字符串像标记符时使用；</li></ul><p><code>&lt;value&gt;</code>：acl测试条件支持的值有以下4类：</p><ul><li>整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；</li><li>字符串：支持使用“-i”以忽略字符大小写，支持使用“\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；</li><li>正则表达式：其机制类同字符串匹配；</li><li>IP地址及网络地址；<blockquote><p>注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。</p></blockquote></li></ul><hr><h6 id="常用的测试标准-criteria"><a href="#常用的测试标准-criteria" class="headerlink" title="常用的测试标准(criteria)"></a>常用的测试标准(criteria)</h6><ul><li><strong>基于七层协议（http）规则acl测试标准</strong></li></ul><ol><li><p>method <code>&lt;string&gt;</code><br>测试HTTP请求报文中请求类型。<br>例如： 利用method来实现前段读写分离：<br> acl  read method GET<br> acl  read method HEAD<br> acl write method PUT<br> acl write method POST<br> use_backend imgservers if read<br> use_backend uploadservers if write</p></li><li><p>path_beg <code>&lt;string&gt;</code> ||url_beg<br>用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 &#x2F;static、&#x2F;images、&#x2F;javascript或&#x2F;stylesheets头。<br>例如：利用path_beg实现以&#x2F;static &#x2F;images开头的请求转交到 static server上：<br> acl url_static path_beg -i &#x2F;static &#x2F;images<br> use_backend static if url_static </p></li><li><p>path_end <code>&lt;string&gt;</code> || url_reg<br>用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾<br>例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：<br> acl url_static path_end -i .jpg .gif .png .css .js .html<br> use_backend static if url_static</p></li><li><p>hdr_beg <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。<br>例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上<br> acl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080<br> use_backend lvs3 if is_lvs3 </p></li><li><p>hdr_end <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式<br>例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上<br> acl is_lvs3 hdr_end(host) -i lvs3.test.net:8080<br> use_backend lvs3 if is_lvs2 </p></li><li><p>hdr <code>&lt;string&gt;</code><br>用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。<br>例如 当用户访问172.16.1.100时，重定向到<a href="http://www.afwing.com/">http://www.afwing.com</a><br> acl  dstipaddr  hdr(Host) 172.16.1.100<br> redirect  location   <a href="http://www.afwing.com/">http://www.afwing.com</a> if  dstipaddr</p></li><li><p>hdr_reg <code>&lt;string&gt;</code><br>如果请求的域名满足正则表达式，返回true， -i是忽略大小写<br> acl denali_policy hdr_reg(host) -i ^(<a href="http://www.inbank.com|image.inbank.com)$/">www.inbank.com|image.inbank.com)$</a></p></li><li><p>hdr_dom <code>&lt;string&gt;</code><br>如果请求域名满足<a href="http://www.inbank.com,返回true,/">www.inbank.com，返回true，</a> -i是忽略大小写<br> acl tm_policy hdr_dom(host) -i <a href="http://www.inbank.com/">www.inbank.com</a></p></li><li><p>url_sub<br>在请求url中包含sip_apiname&#x3D;，则此控制策略返回true，否则为false<br> acl invalid_req url_sub -i sip_apiname&#x3D;#定义一个名为invalid_req的策略</p></li><li><p>url_dir<br>在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false<br>acl timetask_req url_dir -i timetask</p></li><li><p>hdr_cnt <code>&lt;string&gt;</code><br>当请求的header中Content-length等于0时，返回true<br>acl missing_cl hdr_cnt(Content-length) eq 0</p></li></ol><ul><li><strong>基于四层协议（ip）规则acl测试标准</strong></li></ul><ol><li><p>dst和dst_port<br>定义访问地址为目标地址或目标端口的acl规则</p></li><li><p>src和src_port<br>定义访问地址为源地址或源端口的acl规则<br>例如： 允许10.0.0.0&#x2F;24的用户访问，其他用户将禁止<br> acl net10  src  10.0.0.0&#x2F;24<br> tcp-request content  accept  if  net10<br> tcp-request  content  reject<br> tcp-request content accept [ {if | unless} ]<br> Accept a connection if&#x2F;unless a content inspection condition is matched</p></li></ol><hr><h3 id="ACL规则引用"><a href="#ACL规则引用" class="headerlink" title="ACL规则引用"></a>ACL规则引用</h3><p>当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：</p><ol><li><p>正常写法：<br> use_backend static if url_static</p></li><li><p>或者写法：<br> use_backend backend1 if aclA || aclB<br> use_backend backend1 if aclA || !aclC</p></li></ol><p>注意上面“||”也可以使用or来表示</p><ol start="3"><li><p>非（不符合）写法：<br> use_backend backend1 if aclA !aclB<br> use_backend backend1 if aclA !aclB !aclC</p></li><li><p>与（and）写法：<br> use_backend backend1 if aclA !aclB<br> use_backend backend1 if aclA !aclB !aclC</p></li></ol><hr><h6 id="常见应用实例"><a href="#常见应用实例" class="headerlink" title="常见应用实例"></a>常见应用实例</h6><ol><li><p>当请求中header中Content-length等于0，阻止请求返回403<br> block if missing_cl</p></li><li><p>block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。<br> block if !invalid_req || timetask_req</p></li><li><p>当满足denali_policy的策略时，使用denali_server的backend<br> use_backend denali_server if denali_policy</p></li><li><p>当满足tm_policy的策略时，使用tm_server的backend<br> use_backend tm_server if tm_policy</p></li><li><p>reqisetbe关键字定义，根据定义的关键字选择backend<br> reqisetbe ^Host:\ img dynamic<br> reqisetbe ^[^\ ]*\ &#x2F;(img|css)&#x2F; dynamic<br> reqisetbe ^[^\ ]*\ &#x2F;admin&#x2F;stats stats</p></li><li><p>以上都不满足的时候使用默认mms_server的backend<br> default_backend mms</p></li><li><p>利用acl实现页面动静分离;</p><pre><code> frontend webservs          bind            *:80          acl             url_static path_beg -i /static /images /javascript /stylesheets          acl             url_static path_end -i .jpg .gif .png .css .js .html          acl             url_php    path_end  -i .php          use_backend     static if url_static or host_static          use_backend     dynamic if url_php          default_backend dynamic backend static         balance roundrobin         server  node1 192.168.1.111:80 check maxconn 3000 backend dynamic         balance roundrobin         server  node2 192.168.1.112:80 check maxconn 1000</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy负载均衡算法</title>
      <link href="/2017/12/20/HAProxy%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/"/>
      <url>/2017/12/20/HAProxy%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。</p><span id="more"></span><ol><li><p>roundrobin<br>表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>static-rr<br>基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。<br>例如：<br>server APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1<br>server APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p></li><li><p>leastconn<br>新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>source<br>将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!</p></li><li><p>uri<br>对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。<br>例如：<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p></li><li><p>url_param<br>表示根据请求的URl参数’balance url_param’ requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；<br>该算法一般用于将同一个用户的信息发送到同一个后端服务器；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>balance url_param <a href="http://www.blog.51cto.com/">www.blog.51cto.com</a><br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>hdr(name)<br>表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；<br>如果缺少头或者头没有任何值，则用roundrobin代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p></li><li><p>rdp-cookie(name)<br>表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；<br>该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。<br>如果没有cookie，则使用roundrobin算法代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p></li><li><p>first<br>根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy安装配置</title>
      <link href="/2017/12/19/HAProxy%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/12/19/HAProxy%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="HAProxy下载"><a href="#HAProxy下载" class="headerlink" title="HAProxy下载"></a>HAProxy下载</h3><p><a href="https://www.haproxy.org/">官网下载</a><br><a href="https://fossies.org/linux/misc/">Fossies下载</a><br><a href="http://cbonte.github.io/haproxy-dconv/">官方文档</a></p><span id="more"></span><hr><h3 id="HAProxy安装"><a href="#HAProxy安装" class="headerlink" title="HAProxy安装"></a>HAProxy安装</h3><h4 id="1-Linux下"><a href="#1-Linux下" class="headerlink" title="1. Linux下"></a>1. Linux下</h4><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/download/</span><br><span class="line">wget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-2-解压"><a href="#1-2-解压" class="headerlink" title="1.2 解压"></a>1.2 解压</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd haproxy-1.8.1</span><br><span class="line">make TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy</span><br><span class="line">make install PREFIX=/usr/local/haproxy</span><br></pre></td></tr></table></figure><p>参数说明:<br><strong>TARGET&#x3D;linux26</strong>            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用<code>uname -r</code>可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。<br><strong>ARCH&#x3D;x86_64</strong>               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。<br>注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。<br><strong>PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;haprpxy</strong> # 指定安装目录，默认为&#x2F;usr&#x2F;local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如&#x2F;usr&#x2F;local&#x2F;haprpxy为haprpxy的安装路径。</p><blockquote><p>CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。</p><ul><li>安装make<br>yum -y install gcc automake autoconf libtool make</li><li>安装gcc<br>yum install gcc gcc-c++</li></ul><p>SUSE Linux Enterprise Server 12安装gcc<br>安装命令：zypper install gcc<br>如果出现如下错误：<br>Failed to mount cd:&#x2F;&#x2F;&#x2F;?devices&#x3D;&#x2F;dev&#x2F;disk&#x2F;by-id&#x2F;ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on &#x2F;var&#x2F;adm&#x2F;mount&#x2F;AP_0x63by2U: Mounting media failed (mount: no medium found on &#x2F;dev&#x2F;sr0)<br>意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。</p></blockquote><h4 id="2-Windows下"><a href="#2-Windows下" class="headerlink" title="2. Windows下"></a>2. Windows下</h4><p><em>暂无</em></p><hr><h3 id="HAProxy配置"><a href="#HAProxy配置" class="headerlink" title="HAProxy配置"></a>HAProxy配置</h3><p>安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr&#x2F;local&#x2F;haproxy下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure><p>粘贴如下内容至haproxy.cfg</p><pre><code>###################### 全局配置 ######################global       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制       daemon                                      # 以后台形式运行harpoxy       uid     5040                                # 运行haproxy的用户       gid     5040                                # 运行haproxy的用户所在的组       chroot  /usr/local/haproxy                  # 改变当前工作目录       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件###################### 默认配置 ######################defaults       log             global       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK       option          httpclose  # 每次请求完毕后主动关闭http通道       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器       retries         3          # 3次连接失败就认为是服务器不可用       timeout connect 300000     # 连接超时       timeout client  500000     # 客户端超时       timeout server  500000     # 服务器超时###################### 统计页面配置 ######################listen stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称       bind          0.0.0.0:8888 # 监听端口       maxconn       1            # 默认的最大连接数       option        httplog      # 采用http日志格式       stats         enable       # 启用状态监控       stats refresh 30s          # 统计页面自动刷新时间       stats uri     /stats       # 统计页面url       stats realm   YANGPIENA    # 统计页面密码框上提示文本       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)###################### 业务前端配置 ######################frontend xx         bind            0.0.0.0:80         default_backend xxServers###################### 业务后端配置 ######################backend xxServers        balance source        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3###################### 错误页面配置 ######################errorfile 403 /usr/local/haproxy/errorfiles/403.httperrorfile 500 /usr/local/haproxy/errorfiles/500.httperrorfile 502 /usr/local/haproxy/errorfiles/502.httperrorfile 503 /usr/local/haproxy/errorfiles/503.httperrorfile 504 /usr/local/haproxy/errorfiles/504.http</code></pre><h6 id="实现日志记录"><a href="#实现日志记录" class="headerlink" title="实现日志记录"></a>实现日志记录</h6><p>haproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。<br>修改rsyslog配置文件：<code>vim /etc/rsyslog.conf</code></p><pre><code># Provides UDP syslog reception$ModLoad imudp      #取消注释$UDPServerRun 514   #取消注释local0.*            /usr/local/haproxy/logs/haproxy.log# 指定设备local0日志存放位置</code></pre><p>修改rsyslog配置文件：<code>vim /etc/sysconfig/rsyslog</code></p><pre><code>SYSLOGD_OPTIONS=&quot;-r -m 0&quot;service syslog restart</code></pre><p>haproxy的日志信息也可以设置存放在专门的日志服务器中。</p><hr><h3 id="HAProxy启动"><a href="#HAProxy启动" class="headerlink" title="HAProxy启动"></a>HAProxy启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure><p>检查是否启动：</p><pre><code>[root@Linux-xx ~]# ps -e|grep haproxy 1221 ?        00:01:32 haproxy</code></pre><p>看到上面结果，表明haproxy已经正常启动了。</p><hr><h3 id="HAProxy查看状态"><a href="#HAProxy查看状态" class="headerlink" title="HAProxy查看状态"></a>HAProxy查看状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8888/stats</span><br></pre></td></tr></table></figure><p>参数说明：<br><strong>8888</strong>  即haproxy配置文件中的监听端口<br><strong>stats</strong> 即haproxy配置文件中的监听名称</p><p>如果无法访问，请查看防火墙中端口是否开启。</p><blockquote><p>Centos查看8888端口占用情况，使用命令：<code>lsof -i tcp:8888</code><br>Centos列出所有使用的端口，使用命令：<code>netstat -ntlp</code></p></blockquote><p>如果端口未开启，请设置防火墙开放端口。</p><h4 id="1-开启端口（以80端口为例）"><a href="#1-开启端口（以80端口为例）" class="headerlink" title="1. 开启端口（以80端口为例）"></a>1. 开启端口（以80端口为例）</h4><ul><li>方法一：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 </span><br><span class="line">/etc/init.d/iptables save                             ## 保存修改 </span><br><span class="line">service iptables restart                              ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure></li><li>方法二：<br>  先打开配置文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>  再加入下面内容<br>  -A INPUT -p tcp -m state –state NEW -m tcp –dport 80 -j ACCEPT<br>  最后，重启防火墙或重启计算机，修改完成。<blockquote><p>修改防火墙时注意最好留下VNC和SSH的管理端口。</p></blockquote></li></ul><h4 id="2-关闭端口"><a href="#2-关闭端口" class="headerlink" title="2. 关闭端口"></a>2. 关闭端口</h4><ul><li>方法一：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 </span><br><span class="line">/etc/init.d/iptables save                           ## 保存修改 </span><br><span class="line">service iptables restart                            ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure></li><li>方法二：<br>  先打开配置文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>  再加入下面内容<br>  -A INPUT -p tcp -m state –state NEW -m tcp –dport 80 -j DROP<br>  最后重启防火墙或重启计算机，修改完成。</li></ul><h4 id="3-查看端口状态"><a href="#3-查看端口状态" class="headerlink" title="3. 查看端口状态"></a>3. 查看端口状态</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure><h4 id="4-临时性完全关闭防火墙，可以不重启计算机"><a href="#4-临时性完全关闭防火墙，可以不重启计算机" class="headerlink" title="4. 临时性完全关闭防火墙，可以不重启计算机"></a>4. 临时性完全关闭防火墙，可以不重启计算机</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#/etc/init.d/iptables status                ## 查看防火墙状态</span><br><span class="line">#/etc/init.d/iptable stop                   ## 本次关闭防火墙</span><br><span class="line">#/etc/init.d/iptable restart                ## 重启防火墙</span><br></pre></td></tr></table></figure><h4 id="5-永久性关闭防火墙"><a href="#5-永久性关闭防火墙" class="headerlink" title="5. 永久性关闭防火墙"></a>5. 永久性关闭防火墙</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启</span><br></pre></td></tr></table></figure><h4 id="6-CentOS的iptables示例"><a href="#6-CentOS的iptables示例" class="headerlink" title="6. CentOS的iptables示例"></a>6. CentOS的iptables示例</h4><pre><code># Firewall configuration written by system-config-securitylevel# Manual customization of this file is not recommended.*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]:RH-Firewall-1-INPUT - [0:0]-A INPUT -j RH-Firewall-1-INPUT-A FORWARD -j RH-Firewall-1-INPUT-A RH-Firewall-1-INPUT -i lo -j ACCEPT-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT-A RH-Firewall-1-INPUT -p 50 -j ACCEPT-A RH-Firewall-1-INPUT -p 51 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibitedCOMMIT</code></pre><p>要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令<code>iptables -L</code>可验证一下是否规则都已经生效，至此完成防火墙设置修改。</p><hr><h3 id="HAProxy关闭"><a href="#HAProxy关闭" class="headerlink" title="HAProxy关闭"></a>HAProxy关闭</h3><p>直接kill pid即可。</p><h3 id="HAProxy脚本启动和关闭"><a href="#HAProxy脚本启动和关闭" class="headerlink" title="HAProxy脚本启动和关闭"></a><a href="http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/">HAProxy脚本启动和关闭</a></h3>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> HAProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat部署项目访问不加项目名设置</title>
      <link href="/2017/08/17/Tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%8A%A0%E9%A1%B9%E7%9B%AE%E5%90%8D%E8%AE%BE%E7%BD%AE/"/>
      <url>/2017/08/17/Tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%8A%A0%E9%A1%B9%E7%9B%AE%E5%90%8D%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ol><li><p>打开conf目录下server.xml；</p></li><li><p>在Host内添加如下Context，其中docBase改为自己的项目路径即可。<br> <Context path="" docBase="/usr/tomcat/webapps/xxExpert" reloadable="false" /></p></li></ol><span id="more"></span><ol start="3"><li>添加后效果如下：<br> <Host name="localhost"  appBase="webapps"     unpackWARs="true" autoDeploy="true"><br><br>     <!-- SingleSignOn valve, share authentication between web applications          Documentation at: /docs/config/valve.html --><br>     <!--     <Valve className="org.apache.catalina.authenticator.SingleSignOn" />     --><br><br>     <!-- Access log processes all example.          Documentation at: /docs/config/valve.html          Note: The pattern used is equivalent to using pattern="common" --><br>     <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"            prefix="localhost_access_log." suffix=".txt"            pattern="%h %l %u %t &quot;%r&quot; %s %b" /><br><br>     <Context path="" docBase="/usr/tomcat/webapps/testProject" reloadable="false" /><br><br> </Host></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS使用iptables</title>
      <link href="/2017/08/11/CentOS%E4%BD%BF%E7%94%A8iptables/"/>
      <url>/2017/08/11/CentOS%E4%BD%BF%E7%94%A8iptables/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-6-x"><a href="#CentOS-6-x" class="headerlink" title="CentOS 6.x"></a>CentOS 6.x</h3><h5 id="1-任意运行一条iptables防火墙规则配置命令"><a href="#1-任意运行一条iptables防火墙规则配置命令" class="headerlink" title="1. 任意运行一条iptables防火墙规则配置命令"></a>1. 任意运行一条iptables防火墙规则配置命令</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure><h5 id="2-对iptables服务进行保存"><a href="#2-对iptables服务进行保存" class="headerlink" title="2. 对iptables服务进行保存"></a>2. 对iptables服务进行保存</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h5 id="3-重启iptables服务"><a href="#3-重启iptables服务" class="headerlink" title="3. 重启iptables服务"></a>3. 重启iptables服务</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><span id="more"></span><hr><h3 id="CentOS-7-x"><a href="#CentOS-7-x" class="headerlink" title="CentOS 7.x"></a>CentOS 7.x</h3><h5 id="1-关闭firewall"><a href="#1-关闭firewall" class="headerlink" title="1. 关闭firewall"></a>1. 关闭firewall</h5><p>停止firewall服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>禁止firewall开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h5 id="2-安装iptables防火墙"><a href="#2-安装iptables防火墙" class="headerlink" title="2. 安装iptables防火墙"></a>2. 安装iptables防火墙</h5><p>执行yum命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services</span><br></pre></td></tr></table></figure><p>编辑防火墙配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>在配置文件中加入以下内容后，保存并退出：</p><pre><code># sample configuration for iptables service# you can edit this manually or use system-config-firewall# please do not ask us to add additional ports/services to this default configuration*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j REJECT --reject-with icmp-host-prohibitedCOMMIT</code></pre><p>最后重启防火墙使配置生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart iptables.service</span><br></pre></td></tr></table></figure><h5 id="3-设置防火墙开机启动"><a href="#3-设置防火墙开机启动" class="headerlink" title="3. 设置防火墙开机启动"></a>3. 设置防火墙开机启动</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable iptables.service</span><br></pre></td></tr></table></figure><h5 id="4-关闭SELinux"><a href="#4-关闭SELinux" class="headerlink" title="4. 关闭SELinux"></a>4. 关闭SELinux</h5><p>编辑SELinux的配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br></pre></td></tr></table></figure><p>如下图，注释掉<code>SELINUX=enforcing</code>和<code>SELINUXTYPE=targeted</code>。</p><pre><code># This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:#     enforcing - SELinux security policy is enforced.#     permissive - SELinux prints warnings instead of enforcing.#     disabled - No SELinux policy is loaded.SELINUX=disabled# SELINUXTYPE= can take one of three two values:#     targeted - Targeted processes are protected,#     minimum - Modification of targeted policy. Only selected processes are protected.#     mls - Multi Level Security protection.#SELINUXTYPE=targeted</code></pre><p>最后执行以下命令，使配置立即生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux数据盘分区以及格式化</title>
      <link href="/2017/08/10/Linux%E6%95%B0%E6%8D%AE%E7%9B%98%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
      <url>/2017/08/10/Linux%E6%95%B0%E6%8D%AE%E7%9B%98%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="首先切换到root账户下"><a href="#首先切换到root账户下" class="headerlink" title="首先切换到root账户下"></a>首先切换到root账户下</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="查看数据盘信息"><a href="#查看数据盘信息" class="headerlink" title="查看数据盘信息"></a>查看数据盘信息</h1><p>登录Linux云主机后，使用命令<code>fdisk -l</code>查看数据盘相关信息。</p><blockquote><p>使用命令<code>df -h</code>是无法查看到未分区和格式化的数据盘的。</p></blockquote><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# df -hFilesystem      Size  Used Avail Use% Mounted on/dev/vda1        40G  1.5G   36G   4% /devtmpfs        3.9G     0  3.9G   0% /devtmpfs           3.9G     0  3.9G   0% /dev/shmtmpfs           3.9G  392K  3.9G   1% /runtmpfs           3.9G     0  3.9G   0% /sys/fs/cgrouptmpfs           783M     0  783M   0% /run/user/0[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytes[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><hr><h1 id="fdisk分区（最大支持2T）"><a href="#fdisk分区（最大支持2T）" class="headerlink" title="fdisk分区（最大支持2T）"></a>fdisk分区（最大支持2T）</h1><h2 id="数据盘分区"><a href="#数据盘分区" class="headerlink" title="数据盘分区"></a>数据盘分区</h2><p>接第2章节，看到需要分区的数据盘后。执行以下命令，对数据盘进行分区。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vdb</span><br></pre></td></tr></table></figure><p>按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdbWelcome to fdisk (util-linux 2.23.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Device does not contain a recognized partition tableBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.Command (m for help): nPartition type:   p   primary (0 primary, 0 extended, 4 free)   e   extendedSelect (default p): pPartition number (1-4, default 1): 1First sector (2048-209715199, default 2048): Using default value 2048Last sector, +sectors or +size&#123;K,M,G&#125; (2048-209715199, default 209715199): Using default value 209715199Partition 1 of type Linux and of size 100 GiB is setCommand (m for help): wThe partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks.[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h2 id="查看新分区"><a href="#查看新分区" class="headerlink" title="查看新分区"></a>查看新分区</h2><p>使用命令<code>fdisk -l</code>，即可查看到，新的分区vdb1已经创建完成。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x6ea9e5ce   Device Boot      Start         End      Blocks   Id  System/dev/vdb1            2048   209715199   104856576   83  Linux[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h2 id="格式化新分区"><a href="#格式化新分区" class="headerlink" title="格式化新分区"></a>格式化新分区</h2><p>使用下面的命令对新分区进行格式化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/vdb1</span><br></pre></td></tr></table></figure><blockquote><p>在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。</p></blockquote><p>格式化完成后如下：</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1mke2fs 1.42.9 (28-Dec-2013)Filesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks6553600 inodes, 26214144 blocks1310707 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=4294967296800 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks:         32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,         4096000, 7962624, 11239424, 20480000, 23887872Allocating group tables: done                            Writing inode tables: done                            Creating journal (32768 blocks): doneWriting superblocks and filesystem accounting information: done   [root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h2 id="挂载新分区"><a href="#挂载新分区" class="headerlink" title="挂载新分区"></a>挂载新分区</h2><p>使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /fimeson</span><br><span class="line">mount /dev/vdb1 /fimeson</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><p>出现以下信息说明挂载成功，即可以查看到数据盘了。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# df -hFilesystem      Size  Used Avail Use% Mounted on/dev/vda1        40G  1.5G   36G   4% /devtmpfs        3.9G     0  3.9G   0% /devtmpfs           3.9G     0  3.9G   0% /dev/shmtmpfs           3.9G  368K  3.9G   1% /runtmpfs           3.9G     0  3.9G   0% /sys/fs/cgrouptmpfs           783M     0  783M   0% /run/user/0/dev/vdb1        99G   60M   94G   1% /fimeson[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><h2 id="添加分区信息"><a href="#添加分区信息" class="headerlink" title="添加分区信息"></a>添加分区信息</h2><p>如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到&#x2F;etc&#x2F;fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。</p><blockquote><p>注意：请确认分区路径是否为 “&#x2F;dev&#x2F;vdb1”，若路径错误，将会造成云主机重启失败</p></blockquote><p>使用下面的命令添加分区信息，最后查看添加结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;/dev/vdb1 /fimeson ext3 defaults 0 0&#x27; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br></pre></td></tr></table></figure><p>出现以下信息表示添加分区信息成功。</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# echo &#39;/dev/vdb1 /fimeson ext3 defaults 0 0&#39; &gt;&gt; /etc/fstab[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab## /etc/fstab# Created by anaconda on Fri Jun  2 07:36:28 2017## Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39;# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#UUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1/dev/vdb1 /fimeson ext3 defaults 0 0[root@iZwe12zdi799668qfxdm5oZ ~]# </code></pre><hr><h1 id="parted分区（支持2T以上）"><a href="#parted分区（支持2T以上）" class="headerlink" title="parted分区（支持2T以上）"></a>parted分区（支持2T以上）</h1><h2 id="数据盘分区-1"><a href="#数据盘分区-1" class="headerlink" title="数据盘分区"></a>数据盘分区</h2><p>接第2章节，看到需要分区的数据盘后。依次执行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sdc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklabel gpt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkpart primary 0KB 3299GB</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><p>整体执行结果如下：</p><pre><code>ftp:~ # parted /dev/sdcGNU Parted 3.2Using /dev/sdcWelcome to GNU Parted! Type &#39;help&#39; to view a list of commands.(parted) mklabel gpt                                                      Warning: The existing disk label on /dev/sdc will be destroyed and all data on this disk will be lost. Do you want to continue?Yes/No? Yes(parted) print                                                            Model: VMware Virtual disk (scsi)Disk /dev/sdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start  End  Size  File system  Name  Flags(parted) mkpart primary 0KB 3299GB                                        Warning: You requested a partition from 0.00B to 3299GB (sectors 0..6442450943).The closest location we can manage is 17.4kB to 3299GB (sectors 34..6442450910).Is this still acceptable to you?Yes/No? Yes                                                               Warning: The resulting partition is not properly aligned for best performance.Ignore/Cancel? i                                                          (parted) print                                                            Model: VMware Virtual disk (scsi)Disk /dev/sdc: 3299GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start   End     Size    File system  Name     Flags 1      17.4kB  3299GB  3299GB               primary(parted) quit                                                             Information: You may need to update /etc/fstab.</code></pre><h2 id="查看新分区-1"><a href="#查看新分区-1" class="headerlink" title="查看新分区"></a>查看新分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p>结果如下：</p><pre><code>Disk /dev/sdc: 3 TiB, 3298534883328 bytes, 6442450944 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: 09E8A9B1-0BF5-4801-98C1-0211C39B8EF9Device     Start        End    Sectors Size Type/dev/sdc1     34 6442450910 6442450877   3T Linux filesystem</code></pre><h2 id="格式化新分区-1"><a href="#格式化新分区-1" class="headerlink" title="格式化新分区"></a>格式化新分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdc1</span><br></pre></td></tr></table></figure><p>结果如下：</p><pre><code>mke2fs 1.43.8 (1-Jan-2018)Creating filesystem with 805306359 4k blocks and 201326592 inodesFilesystem UUID: 1c69270c-532f-4ad3-a922-e922abcdbf58Superblock backups stored on blocks:         32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,         4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968,         102400000, 214990848, 512000000, 550731776, 644972544Allocating group tables: done                            Writing inode tables: done                            Creating journal (262144 blocks): doneWriting superblocks and filesystem accounting information: done       You have new mail in /var/mail/root</code></pre><h2 id="挂载新分区-1"><a href="#挂载新分区-1" class="headerlink" title="挂载新分区"></a>挂载新分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /wzyb</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdc1 /wzyb</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>结果如下：</p><pre><code>/dev/sdc1       3.0T   89M  2.9T   1% /wzyb</code></pre><h2 id="添加分区信息-1"><a href="#添加分区信息-1" class="headerlink" title="添加分区信息"></a>添加分区信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;/dev/sdc1 /wzyb ext4 defaults 0 0&#x27; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br></pre></td></tr></table></figure><p>结果如下：</p><pre><code>/dev/sdc1 /wzyb ext4 defaults 0 0</code></pre><h1 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h1><p>保证添加分区信息无误后，重启操作系统，使用 <code>df -h</code> 命令查看结果。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统盘和数据盘</title>
      <link href="/2017/08/10/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
      <url>/2017/08/10/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h3 id="系统盘"><a href="#系统盘" class="headerlink" title="系统盘"></a>系统盘</h3><p>类似于Windows的C盘，Linux的系统盘可用命令<code>df -l</code>查看，可以看到根路径 &#x2F; 都是位于系统盘。而&#x2F;root、&#x2F;home、&#x2F;usr就如同Windows的C盘下的C:\Windows、C:\usr这些目录。</p><span id="more"></span><h3 id="数据盘"><a href="#数据盘" class="headerlink" title="数据盘"></a>数据盘</h3><p>如果单独有数据盘，且数据盘没有分区和挂载，使用<code>df -l</code>命令是看不到的，可以使用 <code>fdisk -l</code>命令，看到有哪些硬盘，如下：</p><pre><code>[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -lDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x0008fd2d   Device Boot      Start         End      Blocks   Id  System/dev/vda1   *        2048    83886079    41942016   83  LinuxDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytes</code></pre><p>可以看到，Disk &#x2F;dev&#x2F;vda和Disk &#x2F;dev&#x2F;vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git如何用命令将本地项目上传到git</title>
      <link href="/2017/06/20/Git%E5%A6%82%E4%BD%95%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0git/"/>
      <url>/2017/06/20/Git%E5%A6%82%E4%BD%95%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0git/</url>
      
        <content type="html"><![CDATA[<h3 id="先在GitHub网站上New一个资源库，如：demo"><a href="#先在GitHub网站上New一个资源库，如：demo" class="headerlink" title="先在GitHub网站上New一个资源库，如：demo"></a>先在GitHub网站上New一个资源库，如：demo</h3><span id="more"></span><h3 id="进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库，默认分支为master"><a href="#进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库，默认分支为master" class="headerlink" title="进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库，默认分支为master"></a>进入本地项目文件夹，通过命令 <code>git init</code> 把这个目录变成Git可以管理的仓库，默认分支为<code>master</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件"><a href="#把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件" class="headerlink" title="把文件添加到版本库中，使用命令 git add . 添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件"></a>把文件添加到版本库中，使用命令 <code>git add .</code> 添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明"><a href="#用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明" class="headerlink" title="用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明"></a>用命令 <code>git commit</code> 告诉Git，把文件提交到仓库。引号内为提交说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#x27;first commit&#x27;</span><br></pre></td></tr></table></figure><h3 id="关联到远程库"><a href="#关联到远程库" class="headerlink" title="关联到远程库"></a>关联到远程库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的远程库地址</span><br></pre></td></tr></table></figure><blockquote><p>例如：<code>git remote add origin https://github.com/yangpiena/demo.git</code><br>  或者：<code>git remote add origin git@github.com:yangpiena/demo.git</code></p></blockquote><h3 id="此时有两种推送情况：与远程库合并、强制推送到远程库"><a href="#此时有两种推送情况：与远程库合并、强制推送到远程库" class="headerlink" title="此时有两种推送情况：与远程库合并、强制推送到远程库"></a>此时有两种推送情况：与远程库合并、强制推送到远程库</h3><h4 id="与远程库合并"><a href="#与远程库合并" class="headerlink" title="与远程库合并"></a>与远程库合并</h4><ul><li>获取远程库分支<code>main</code>与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin main</span><br></pre></td></tr></table></figure></li><li>把本地库的内容推送到远程，使用 <code>git push</code> 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><blockquote><p>GitHub将master改为main后，如果本地分支为master，则会报错 <code>error: src refspec main does not match any.</code> ，可执行下面命令将本地创建分支的信息推送到github上，最后在GitHub上修改master为默认即可。<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin HEAD -u</span><br></pre></td></tr></table></figure></p></blockquote></li></ul><h4 id="强制推送到远程（可能会覆盖远程上已有的分支或文件）"><a href="#强制推送到远程（可能会覆盖远程上已有的分支或文件）" class="headerlink" title="强制推送到远程（可能会覆盖远程上已有的分支或文件）"></a>强制推送到远程（可能会覆盖远程上已有的分支或文件）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master -f</span><br></pre></td></tr></table></figure><h5 id="状态查询命令"><a href="#状态查询命令" class="headerlink" title="状态查询命令"></a>状态查询命令</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text快捷键</title>
      <link href="/2017/05/15/Sublime-Text%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2017/05/15/Sublime-Text%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>快捷键</th><th align="left">说明</th></tr></thead><tbody><tr><td>Ctrl+X</td><td align="left">删除当前行</td></tr><tr><td>Ctrl+Shift+D</td><td align="left">复制光标所在整行，插入到下一行</td></tr><tr><td>Ctrl+Shift+↑</td><td align="left">将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）</td></tr><tr><td>Ctrl+Shift+↓</td><td align="left">将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）</td></tr><tr><td>Shift+鼠标右键拖动</td><td align="left">列编辑模式</td></tr><tr><td>Ctrl+K+U</td><td align="left">转换大写</td></tr><tr><td>Ctrl+K+L</td><td align="left">转换小写</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime Text </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows设置磁盘背景</title>
      <link href="/2017/05/15/Windows%E8%AE%BE%E7%BD%AE%E7%A3%81%E7%9B%98%E8%83%8C%E6%99%AF/"/>
      <url>/2017/05/15/Windows%E8%AE%BE%E7%BD%AE%E7%A3%81%E7%9B%98%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<p>如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：</p><ol><li>首先，准备一张自己喜欢的图片。例如：D:\图片\其它\1741962.jpeg </li><li>在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[ExtShellFolderViews] </span><br><span class="line">&#123;BE098140-A513-11D0-A3A4-00C04FD706EC&#125;=    &#123;BE098140-A513-11D0-A3A4-00C04FD706EC&#125; </span><br><span class="line">[&#123;BE098140-A513-11D0-A3A4-00C04FD706EC&#125;] </span><br><span class="line">Attributes=1 </span><br><span class="line">IconArea_Image=D:\图片\其它\1741962.jpeg</span><br><span class="line">IconArea_Text=0x00000000 </span><br><span class="line">[.ShellClassInfo] </span><br><span class="line">ConfirmFileOp=0 </span><br><span class="line">[Ctrl+A Select All] </span><br></pre></td></tr></table></figure></li><li>最后，将文档另存为<code>desktop.ini</code>即可。<span id="more"></span></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kettle使用命令行来运行数据库job</title>
      <link href="/2016/12/28/Kettle%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%9D%A5%E8%BF%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93job/"/>
      <url>/2016/12/28/Kettle%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%9D%A5%E8%BF%90%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93job/</url>
      
        <content type="html"><![CDATA[<p>当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：</p><pre><code>d:cd d:\data-integrationkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\KettleLog\kettlelog.logpause</code></pre><span id="more"></span><blockquote><p>其中，“d:\data-integration”表示kitchen命令所在路径；<br>        &#x2F;rep 后跟资源库名称<br>        &#x2F;dir 后跟job所在目录名称，如实际路径为：&#x2F;taby&#x2F;tabyToXX_Job<br>        &#x2F;user 后跟用户名<br>        &#x2F;pass 后跟密码<br>        &#x2F;job 后跟job名称<br>        &#x2F;level 后跟日志等级<br>        &#x2F;logfile 后跟日志文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kettle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat启动jvm内存设置</title>
      <link href="/2016/12/28/Tomcat%E5%90%AF%E5%8A%A8jvm%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE/"/>
      <url>/2016/12/28/Tomcat%E5%90%AF%E5%8A%A8jvm%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>在&#x2F;usr&#x2F;local&#x2F;apache-tomcat-7.0.57&#x2F;bin目录下的catalina.sh中添加：</p><pre><code>JAVA_OPTS=&#39;-Xms512m -Xmx1024m&#39;</code></pre><blockquote><p>-Xms：初始值<br>  -Xmx：最大值<br>  -Xmn：最小值</p></blockquote><span id="more"></span><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><ul><li><p>若使用startup.bat启动tomcat，则在C:\apache-tomcat-7.0.57\bin\catalina.bat最前面加入：</p><pre><code>set JAVA_OPTS=-Xms512m -Xmx1024m</code></pre></li><li><p>而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin&#x2F;tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。</p><p><strong>解决办法：</strong></p></li></ul><p>修改注册表HKEY_LOCAL_MACHINE&#x2F;SOFTWARE&#x2F;Apache Software Foundation&#x2F;Tomcat Service Manager&#x2F;Tomcat5&#x2F;Parameters&#x2F;JavaOptions</p><p>  原值为</p><pre><code>      -Dcatalina.home=&quot;C:/ApacheGroup/Tomcat 5.0&quot;      -Djava.endorsed.dirs=&quot;C:/ApacheGroup/Tomcat 5.0/common/  endorsed&quot;      -Xrs</code></pre><p>  在最后加入</p><pre><code>      -Xms300m -Xmx350m  </code></pre><p>  退出注册表，重起tomcat服务，设置生效。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat下载和安装</title>
      <link href="/2016/12/28/Tomcat%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>/2016/12/28/Tomcat%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Tomcat-官网下载"><a href="#Tomcat-官网下载" class="headerlink" title="Tomcat 官网下载"></a>Tomcat <a href="https://tomcat.apache.org/">官网下载</a></h1><hr><h1 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h1><h2 id="1-Windows下"><a href="#1-Windows下" class="headerlink" title="1. Windows下"></a>1. Windows下</h2><h3 id="1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。"><a href="#1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。" class="headerlink" title="1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。"></a>1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。</h3><h3 id="1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容："><a href="#1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：" class="headerlink" title="1.2 修改\bin\startup.bat文件，在第一行前面加入以下内容："></a>1.2 修改\bin\startup.bat文件，在第一行前面加入以下内容：</h3><pre><code>REM JDK安装所在的路径SET JAVA_HOME=D:\Program Files\Java\jdk1.6.0_30REM 免安装的Tomcat解压后的路径SET CATALINA_HOME=D:\Program Files\tomcat6.0.35</code></pre><p>如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。</p><h3 id="1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。"><a href="#1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。" class="headerlink" title="1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。"></a>1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。</h3><h3 id="1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入"><a href="#1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入" class="headerlink" title="1.4 修改\conf\tomcat-users.xml文件，在&lt;tomcat-users&gt;标签内加入"></a>1.4 修改\conf\tomcat-users.xml文件，在<code>&lt;tomcat-users&gt;</code>标签内加入</h3><pre><code>&lt;role rolename=&quot;manager&quot;/&gt;&lt;role rolename=&quot;admin&quot;/&gt;&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,manager&quot;/&gt;</code></pre><p>这样才可以使用Tomcat的管理界面。</p><span id="more"></span><hr><h2 id="2-Linux下"><a href="#2-Linux下" class="headerlink" title="2. Linux下"></a>2. Linux下</h2><h3 id="2-1-下载或拷贝tomcat安装包到user目录下，然后解压"><a href="#2-1-下载或拷贝tomcat安装包到user目录下，然后解压" class="headerlink" title="2.1 下载或拷贝tomcat安装包到user目录下，然后解压"></a>2.1 下载或拷贝tomcat安装包到user目录下，然后解压</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz</span><br><span class="line">apache-tomcat-7.0.65/bin/catalina.sh</span><br><span class="line">apache-tomcat-7.0.65/bin/configtest.sh</span><br><span class="line">apache-tomcat-7.0.65/bin/daemon.sh</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/index.jsp</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/status.xsd</span><br><span class="line">apache-tomcat-7.0.65/webapps/manager/xform.xsl</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">apache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# </span><br></pre></td></tr></table></figure><h3 id="2-2-删除安装包，并重命名解压后的文件夹为tomcat"><a href="#2-2-删除安装包，并重命名解压后的文件夹为tomcat" class="headerlink" title="2.2 删除安装包，并重命名解压后的文件夹为tomcat"></a>2.2 删除安装包，并重命名解压后的文件夹为tomcat</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz </span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class="line">bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat</span><br><span class="line">[root@iZwe13xjwyedbm0tjgmez1Z usr]# </span><br></pre></td></tr></table></figure><h3 id="2-3-启动tomcat"><a href="#2-3-启动tomcat" class="headerlink" title="2.3 启动tomcat"></a>2.3 启动tomcat</h3><p>执行startup.sh启动tomcat，如下表示启动成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# </span><br></pre></td></tr></table></figure><h3 id="2-4-查看log信息"><a href="#2-4-查看log信息" class="headerlink" title="2.4 查看log信息"></a>2.4 查看log信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class="line">INFO: Deploying web application directory /usr/tomcat/webapps/ROOT</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class="line">INFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;http-bio-8080&quot;]</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;ajp-bio-8009&quot;]</span><br><span class="line">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start</span><br><span class="line">INFO: Server startup in 77809 ms</span><br></pre></td></tr></table></figure><h3 id="2-5-防火墙开放8080端口"><a href="#2-5-防火墙开放8080端口" class="headerlink" title="2.5 防火墙开放8080端口"></a>2.5 防火墙开放8080端口</h3><p>打开防火墙配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><blockquote><p>部分系统没有iptables文件，请参考<a href="http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/">CentOS使用iptables</a></p></blockquote><p>增加以下代码：</p><pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT</code></pre><p>重启防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart</span><br></pre></td></tr></table></figure><h3 id="2-6-访问tomcat"><a href="#2-6-访问tomcat" class="headerlink" title="2.6 访问tomcat"></a>2.6 访问tomcat</h3><p>在浏览器访问地址：<a href="http://ip:8080/">http://IP:8080</a></p><h3 id="2-7-停止tomcat"><a href="#2-7-停止tomcat" class="headerlink" title="2.7 停止tomcat"></a>2.7 停止tomcat</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class="line">[root@izwe12zdi799668qfxdm5oz tomcat]# </span><br></pre></td></tr></table></figure><hr><h1 id="Tomcat设置服务"><a href="#Tomcat设置服务" class="headerlink" title="Tomcat设置服务"></a>Tomcat设置服务</h1><h2 id="1-Windows下-1"><a href="#1-Windows下-1" class="headerlink" title="1. Windows下"></a>1. Windows下</h2><h3 id="1-1-修改-bin目录中的service-bat"><a href="#1-1-修改-bin目录中的service-bat" class="headerlink" title="1.1 修改\bin目录中的service.bat"></a>1.1 修改\bin目录中的service.bat</h3><pre><code>    rem 在第一个if语句的前面一行添加下面的行：    SET CATALINA_HOME=D:\Program Files\tomcat6.0.35    rem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录</code></pre><p>如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：<br>按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：</p><pre><code>    set SERVICE_NAME=tomcat6.0    rem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。    set PR_DISPLAYNAME=Apache Tomcat    rem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。    set PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcat    rem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。</code></pre><h3 id="1-2-运行cmd打开控制台，进入解压后的Tomat的-x2F-bin目录下，运行service-bat-install命令"><a href="#1-2-运行cmd打开控制台，进入解压后的Tomat的-x2F-bin目录下，运行service-bat-install命令" class="headerlink" title="1.2 运行cmd打开控制台，进入解压后的Tomat的&#x2F;bin目录下，运行service.bat install命令"></a>1.2 运行cmd打开控制台，进入解压后的Tomat的&#x2F;bin目录下，运行<code>service.bat install</code>命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\tomcat6.0.35\bin&gt;service.bat install</span><br><span class="line">Installing the service  &#x27;tomcat6.0&#x27; ...</span><br><span class="line">Using CATALINA_HOME:    &quot;D:\Program Files\tomcat6.0.35&quot;</span><br><span class="line">Using CATALINA_BASE:    &quot;D:\Program Files\tomcat6.0.35&quot;</span><br><span class="line">Using JAVA_HOME:        &quot;D:\Program Files\Java\jdk1.6.0_30&quot;</span><br><span class="line">Using JVM:              &quot;D:\Program Files\Java\jdk1.6.0_30\jre\bin\server\jvm.dll&quot;</span><br><span class="line">The service &#x27;tomcat6.0&#x27; has been installed.</span><br></pre></td></tr></table></figure><p>程序提示：The service ‘tomcat6.0（你修改以后的SERVICE_NAME）’ has been installed说明服务Tomcat已经被安装成功。相应的，运行<code>service.bat remove</code>可以移除服务。</p><h3 id="1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。"><a href="#1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。" class="headerlink" title="1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。"></a>1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。</h3><hr><h2 id="2-Linux下-1"><a href="#2-Linux下-1" class="headerlink" title="2. Linux下"></a>2. Linux下</h2><h3 id="2-1-在-目录下，执行下面命令"><a href="#2-1-在-目录下，执行下面命令" class="headerlink" title="2.1 在~目录下，执行下面命令"></a>2.1 在~目录下，执行下面命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .bash_profile</span><br></pre></td></tr></table></figure><h3 id="2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下："><a href="#2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：" class="headerlink" title="2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下："></a>2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：</h3><pre><code>    # .bash_profile    # Get the aliases and functions    if [ -f ~/.bashrc ]; then            . ~/.bashrc    fi    # User specific environment and startup programs    TOMCAT_HOME=/usr/tomcat    PATH=$PATH:$HOME/bin:$TOMCAT_HOME/bin    export TOMCAT_HOME    export PATH</code></pre><p>保存并退出。</p><h3 id="2-3-执行下面命令，使立即生效"><a href="#2-3-执行下面命令，使立即生效" class="headerlink" title="2.3 执行下面命令，使立即生效"></a>2.3 执行下面命令，使立即生效</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ./.bash_profile</span><br></pre></td></tr></table></figure><h3 id="2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，"><a href="#2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，" class="headerlink" title="2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，"></a>2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure><p>在文件中写入如下代码，保存并退出。<br>        #!&#x2F;bin&#x2F;bash<br>        # &#x2F;usr&#x2F;tomcat&#x2F;bin<br>        # YPN 2017-08-21 Create</p><pre><code>    if [ &quot;$1&quot;x = &quot;start&quot;x ]; then      exec $TOMCAT_HOME/bin/startup.sh    fi    if [ &quot;$1&quot;x = &quot;stop&quot;x ]; then      exec $TOMCAT_HOME/bin/shutdown.sh    fi    if [ &quot;$1&quot;x = &quot;log&quot;x ]; then      tail -f $TOMCAT_HOME/logs/catalina.out -n 1000    fi</code></pre><h3 id="2-5-给文件添加权限，使脚本文件可以执行，命令为"><a href="#2-5-给文件添加权限，使脚本文件可以执行，命令为" class="headerlink" title="2.5 给文件添加权限，使脚本文件可以执行，命令为"></a>2.5 给文件添加权限，使脚本文件可以执行，命令为</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure><h3 id="2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志"><a href="#2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志" class="headerlink" title="2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志"></a>2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志</h3><p>启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat start</span><br></pre></td></tr></table></figure><p>关闭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat stop</span><br></pre></td></tr></table></figure><p>查看日志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat log</span><br></pre></td></tr></table></figure><hr><h1 id="Tomcat设置开机启动（Linux）"><a href="#Tomcat设置开机启动（Linux）" class="headerlink" title="Tomcat设置开机启动（Linux）"></a>Tomcat设置开机启动（Linux）</h1><p>打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><p>配置文件：</p><pre><code>export JAVA_HOME=/usr/java/jdk1.7.0_80export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/binexport CATALINA_HOME=/usr/tomcat/#tomcat自启动/usr/tomcat/bin/startup.</code></pre><p>tomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jdk下载安装</title>
      <link href="/2016/12/28/Jdk%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2016/12/28/Jdk%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="JDK官网下载"><a href="#JDK官网下载" class="headerlink" title="JDK官网下载"></a>JDK<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">官网下载</a></h2><span id="more"></span><h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><h3 id="1-Windows下"><a href="#1-Windows下" class="headerlink" title="1. Windows下"></a>1. Windows下</h3><h4 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h4><p>安装目录建议自定义为C:\Java下，其它按默认安装即可。</p><h4 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2 配置环境变量"></a>1.2 配置环境变量</h4><p>在系统变量里，<br>新建变量名：<code>JAVA_HOME</code>   变量值：C:\Java\jdk1.7.0_80<br>编辑变量名：<code>Path</code>  追加值：;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin<br>新建变量名：<code>CLASSPATH</code> 变量值：.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</p><blockquote><p>注意：在设置变量的末尾不要加上“；”）</p></blockquote><h4 id="1-3-测试"><a href="#1-3-测试" class="headerlink" title="1.3 测试"></a>1.3 测试</h4><p>设置完成之后我们需要测试，打开<code>运行</code>，输入<code>CMD</code>，在命令行上执行以下命令：</p><pre><code>java -version</code></pre><p>如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。</p><pre><code>java version &quot;1.7.0_80&quot;Java(TM) SE Runtime Environment (build 1.7.0_80-b15)Java HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)</code></pre><h3 id="2-Linux下"><a href="#2-Linux下" class="headerlink" title="2. Linux下"></a>2. Linux下</h3><h4 id="2-1-在-x2F-usr-x2F-目录下创建java目录"><a href="#2-1-在-x2F-usr-x2F-目录下创建java目录" class="headerlink" title="2.1 在&#x2F;usr&#x2F;目录下创建java目录"></a>2.1 在&#x2F;usr&#x2F;目录下创建java目录</h4><pre><code>[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java[root@izwe12zdi799668qfxdm5oz java]# </code></pre><h4 id="2-2-下载或拷贝jdk到java目录下，然后解压"><a href="#2-2-下载或拷贝jdk到java目录下，然后解压" class="headerlink" title="2.2 下载或拷贝jdk到java目录下，然后解压"></a>2.2 下载或拷贝jdk到java目录下，然后解压</h4><pre><code>[root@izwe12zdi799668qfxdm5oz java]# lsjdk-7u80-linux-x64.gz[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz jdk1.7.0_80/jdk1.7.0_80/LICENSEjdk1.7.0_80/releasejdk1.7.0_80/jre/...jdk1.7.0_80/db/NOTICEjdk1.7.0_80/README.htmljdk1.7.0_80/THIRDPARTYLICENSEREADME.txt[root@izwe12zdi799668qfxdm5oz java]# lsjdk1.7.0_80  jdk-7u80-linux-x64.gz[root@izwe12zdi799668qfxdm5oz java]# </code></pre><blockquote><p>安装包也可以使用命令<code>curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz </code>下载，这里我直接拷贝了已下载好的。</p></blockquote><h4 id="2-3-设置环境变量"><a href="#2-3-设置环境变量" class="headerlink" title="2.3 设置环境变量"></a>2.3 设置环境变量</h4><pre><code>[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile</code></pre><p>在profile中最后的<code>done</code>和<code>unset i</code>之间添加如下内容:</p><pre><code>#set java environmentJAVA_HOME=/usr/java/jdk1.7.0_80JRE_HOME=/usr/java/jdk1.7.0_80/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATH</code></pre><p>添加后如下：</p><pre><code>[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile ...for i in /etc/profile.d/*.sh ; do    if [ -r &quot;$i&quot; ]; then        if [ &quot;$&#123;-#*i&#125;&quot; != &quot;$-&quot; ]; then             . &quot;$i&quot;        else            . &quot;$i&quot; &gt;/dev/null        fi    fidone#set java environmentJAVA_HOME=/usr/java/jdk1.7.0_80JRE_HOME=/usr/java/jdk1.7.0_80/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATHunset iunset -f pathmunge[root@izwe12zdi799668qfxdm5oz java]# </code></pre><p>再执行以下命令，使修改生效：</p><pre><code>[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile</code></pre><blockquote><p>如果出现错误<code>-bash: TMOUT: readonly variable</code>，解决办法是编辑<code>vi /etc/profile</code>，然后修改TMOUT的值，或直接注释掉<code>#TMOUT=1800</code></p></blockquote><h4 id="2-4-测试"><a href="#2-4-测试" class="headerlink" title="2.4 测试"></a>2.4 测试</h4><p>执行命令：</p><pre><code>java -version</code></pre><p>出现如下，表示安装成功。</p><pre><code>java version &quot;1.7.0_80&quot;Java(TM) SE Runtime Environment (build 1.7.0_80-b15)Java HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)</code></pre><h3 id="3-可能出现的错误信息"><a href="#3-可能出现的错误信息" class="headerlink" title="3. 可能出现的错误信息"></a>3. 可能出现的错误信息</h3><h4 id="3-1-bash-java-cannot-execute-binary-file"><a href="#3-1-bash-java-cannot-execute-binary-file" class="headerlink" title="3.1 bash: ./java: cannot execute binary file"></a>3.1 <code>bash: ./java: cannot execute binary file</code></h4><p>出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。<br>查看linux是32位还是64位系统用如下命令</p><pre><code>sudo uname --m</code></pre><p>i686   &#x2F;&#x2F;表示是32位<br>x86_64 &#x2F;&#x2F; 表示是64位</p><h4 id="3-2-linux安装jdk后发现系统带有openjdk的处理"><a href="#3-2-linux安装jdk后发现系统带有openjdk的处理" class="headerlink" title="3.2 linux安装jdk后发现系统带有openjdk的处理"></a>3.2 linux安装jdk后发现系统带有openjdk的处理</h4><p>如下，java -version和javac -version会出现不一样版本：</p><pre><code>[root@ecs-d93d-0415186 java]# java -version java version &quot;1.7.0_151&quot;OpenJDK Runtime Environment (rhel-2.6.11.0.el6_9-x86_64 u151-b00)OpenJDK 64-Bit Server VM (build 24.151-b00, mixed mode)[root@ecs-d93d-0415186 java]# javac -versionjavac 1.7.0_80</code></pre><p><strong>解决办法：</strong>切勿直接删除openjdk，这样会导致依赖于openjdk的软件出现异常。最好的解决办法是修改默认的jdk，把默认的openjdk改成刚新装的jdk：</p><pre><code>[root@ecs-d93d-0415186 java]# cd /usr/bin/[root@ecs-d93d-0415186 bin]# ln -s -f /usr/java/jdk1.7.0_80/jre/bin/java[root@ecs-d93d-0415186 bin]# ln -s -f /usr/java/jdk1.7.0_80/bin/javac</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash builder常见问题</title>
      <link href="/2016/12/27/Flash%20builder%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2016/12/27/Flash%20builder%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>以下记录Flash Builder在使用过程中出现的问题和解决方法：</p><span id="more"></span><h4 id="1-重新连接“数据-x2F-服务”时，出现错误，如“数据类型重复”等问题"><a href="#1-重新连接“数据-x2F-服务”时，出现错误，如“数据类型重复”等问题" class="headerlink" title="1. 重新连接“数据&#x2F;服务”时，出现错误，如“数据类型重复”等问题"></a>1. 重新连接“数据&#x2F;服务”时，出现错误，如“数据类型重复”等问题</h4><p>此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：</p><ul><li>删除文件夹services和valueObjects；</li><li>删除xx.fml文件中的数据&#x2F;服务内容。保留model标签和annotation标签内容，其它全删除。<br>  <model xmlns="http://ns.adobe.com/Fiber/1.0"><br>          <annotation name="ActionScriptGeneration"><br>          <item name="FullyQualifyReferences">true</item><br>          </annotation><br>      …<br>  </model></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flash builder </tag>
            
            <tag> FAQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash builder 4.6效率优化方法</title>
      <link href="/2016/12/27/Flash%20builder%204.6%E6%95%88%E7%8E%87%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/27/Flash%20builder%204.6%E6%95%88%E7%8E%87%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Flash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：</p><ol><li>在安装路径下找到<code>FlexBuilder.ini</code>文件，进行编辑，加入以下参数：<br> -vmargs<br> -Xms128m<br> -Xmx512m<br> -XX:MaxPermSize&#x3D;256m<br> -XX:PermSize&#x3D;64m    #不要设置太高，否则会更加慢<br> -Djava.net.preferIPv4Stack&#x3D;true</li></ol><p>加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。</p><span id="more"></span><ol start="2"><li>由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑<code>&#123;Flex SDK&#125;</code>安装路径<code>/bin/jvm.config</code>文件如下：<br> java.args&#x3D;-Xmx512m -Dsun.io.useCanonCaches&#x3D;false</li></ol><p>如果还是有Error，可以增加到1024或者更多试试。</p><blockquote><p>我的flex4.6安装路径中的sdk位置：D:\Adobe\Adobe Flash Builder 4\sdks\4.0.0\bin\jvm.config，只需在这里调整即可！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
            <tag> flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash builder 4.6免费使用方法</title>
      <link href="/2016/12/27/Flash%20builder%204.6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/27/Flash%20builder%204.6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Flash Builder 4.6免费使用具体步骤如下：</p><ol><li>到Adobe官网下载FlashBuilder 4.6，有简体中文版；<span id="more"></span></li><li>安装时，不用序列号，直接选择安装试用版；</li><li>安装完成后在安装目录下依次修改下列3个文件：<br> (1)<code>.eclipse\plugins\com.adobe.flexbuilder.project_4.6.0.328916\META-INF</code>下面的<code>MANIFEST.MF</code>修改：<br>  Bundle-Version: 0.0.0</li></ol><p> (2)<code>.eclipse\features\com.adobe.flexide.feature_4.6.0.328916</code>下面的<code>feature.xml</code>修改：<br>        <plugin         id="com.adobe.flexbuilder.project"         download-size="0"         install-size="0"         version="0.0.0"/><br> (3)<code>.eclipse\plugins\com.adobe.flexbuilder.flex_4.6.0.328916</code>下面，复制<code>config.xml</code>并重命名为<code>config_builder.xml</code>即可。</p><blockquote><p>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
            <tag> flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注释模板设置</title>
      <link href="/2016/12/27/%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%E8%AE%BE%E7%BD%AE/"/>
      <url>/2016/12/27/%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-注释"><a href="#Java-注释" class="headerlink" title="Java 注释"></a>Java 注释</h1><h2 id="Eclipse-注释模板"><a href="#Eclipse-注释模板" class="headerlink" title="Eclipse 注释模板"></a>Eclipse 注释模板</h2><p>设置注释模板的入口：<code>Window-&gt;Preference-&gt;Java-&gt;Code Style-&gt;Code Template</code>，然后展开<code>Comments</code>节点就是所有需设置注释的元素。现就每一元素逐一介绍：</p><h3 id="文件-Files-注释标签："><a href="#文件-Files-注释标签：" class="headerlink" title="文件(Files)注释标签："></a>文件(Files)注释标签：</h3><pre><code>/** * @Title       : $&#123;file_name&#125; * @Package     : $&#123;package_name&#125; * @Description : $&#123;todo&#125; * @author      : YPN * @date        : $&#123;date&#125; $&#123;time&#125; * @version     : V1.0 */</code></pre><span id="more"></span><h3 id="类型-Types-注释标签（类的注释）："><a href="#类型-Types-注释标签（类的注释）：" class="headerlink" title="类型(Types)注释标签（类的注释）："></a>类型(Types)注释标签（类的注释）：</h3><pre><code>/** * @ClassName   : $&#123;type_name&#125; * @Description : $&#123;todo&#125; * @author      : YPN * @date        : $&#123;date&#125; $&#123;time&#125; *  * $&#123;tags&#125; */</code></pre><h3 id="字段-Fields-注释标签："><a href="#字段-Fields-注释标签：" class="headerlink" title="字段(Fields)注释标签："></a>字段(Fields)注释标签：</h3><pre><code>/** * @Fields $&#123;field&#125; : $&#123;todo&#125; */</code></pre><h3 id="构造函数标签："><a href="#构造函数标签：" class="headerlink" title="构造函数标签："></a>构造函数标签：</h3><pre><code>/** * &lt;p&gt;Title       : &lt;/p&gt; * &lt;p&gt;Description : &lt;/p&gt; * $&#123;tags&#125; */</code></pre><h3 id="方法-Constructor-amp-Methods-标签："><a href="#方法-Constructor-amp-Methods-标签：" class="headerlink" title="方法(Constructor &amp; Methods)标签："></a>方法(Constructor &amp; Methods)标签：</h3><pre><code>/** * @Title       : $&#123;enclosing_method&#125; * @Description : $&#123;todo&#125; * @author      : YPN * @date        : $&#123;date&#125; $&#123;time&#125; * @param       : $&#123;tags&#125; * @return      : $&#123;return_type&#125; * @throws */</code></pre><h3 id="覆盖方法-Overriding-Methods-标签："><a href="#覆盖方法-Overriding-Methods-标签：" class="headerlink" title="覆盖方法(Overriding Methods)标签："></a>覆盖方法(Overriding Methods)标签：</h3><pre><code>/* * &lt;p&gt;Title       : $&#123;enclosing_method&#125;&lt;/p&gt; * &lt;p&gt;Description : &lt;/p&gt; * $&#123;tags&#125; * $&#123;see_to_overridden&#125; */</code></pre><h3 id="代表方法-Delegate-Methods-标签："><a href="#代表方法-Delegate-Methods-标签：" class="headerlink" title="代表方法(Delegate Methods)标签："></a>代表方法(Delegate Methods)标签：</h3><pre><code>/** * $&#123;tags&#125; * $&#123;see_to_target&#125; */</code></pre><h3 id="getter方法标签："><a href="#getter方法标签：" class="headerlink" title="getter方法标签："></a>getter方法标签：</h3><pre><code>/** * @return $&#123;bare_field_name&#125; */</code></pre><h3 id="setter方法标签："><a href="#setter方法标签：" class="headerlink" title="setter方法标签："></a>setter方法标签：</h3><pre><code>/** * @param $&#123;param&#125; 要设置的 $&#123;bare_field_name&#125; */</code></pre><h2 id="Idea-注释模板"><a href="#Idea-注释模板" class="headerlink" title="Idea 注释模板"></a>Idea 注释模板</h2><h3 id="类的注释"><a href="#类的注释" class="headerlink" title="类的注释"></a>类的注释</h3><p>设置入口：<code>File–&gt;Settings–&gt;Editor–&gt;File and Code Templates-&gt;Includes-&gt;File Header</code></p><pre><code>/*** TODO** @author YANGPIENA* @create $&#123;DATE&#125; $&#123;TIME&#125;*/</code></pre><h1 id="Python-注释"><a href="#Python-注释" class="headerlink" title="Python 注释"></a>Python 注释</h1><h1 id="C-注释"><a href="#C-注释" class="headerlink" title="C# 注释"></a>C# 注释</h1>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Python </tag>
            
            <tag> 注释模板 </tag>
            
            <tag> Java </tag>
            
            <tag> Eclipse </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex属性说明</title>
      <link href="/2016/12/22/Flex%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2016/12/22/Flex%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>以下记录一些常用的Flex控件属性，按字母排序：</p><span id="more"></span><p>| <strong>属性</strong> | <strong>说明</strong> |<br>| ——————————————— | :——- |<br>| <code>maxDisplayedLines</code> &#x3D; “0”                      | 设置textInput控件为多行显示</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
            <tag> 属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex设置scroller的速度</title>
      <link href="/2016/12/22/Flex%E8%AE%BE%E7%BD%AEscroller%E7%9A%84%E9%80%9F%E5%BA%A6/"/>
      <url>/2016/12/22/Flex%E8%AE%BE%E7%BD%AEscroller%E7%9A%84%E9%80%9F%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>Flex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:</p><span id="more"></span><p>假设我的滚动条id &#x3D; mainScroller</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">protected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void</span><br><span class="line">&#123;</span><br><span class="line">event.preventDefault();</span><br><span class="line">var modifier:int       = 5;</span><br><span class="line">var delta:Number       = Number(event.delta) * modifier;</span><br><span class="line">var viewport:IViewport = mainScroller.verticalScrollBar.viewport;</span><br><span class="line">var vPos:Number        = viewport.verticalScrollPosition;</span><br><span class="line">var maximum:Number     = mainScroller.verticalScrollBar.maximum;</span><br><span class="line"></span><br><span class="line">if (delta &lt; 0) </span><br><span class="line">&#123;</span><br><span class="line">mainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        </span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">mainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex之dataGrid自动生成序号</title>
      <link href="/2016/12/22/Flex%E4%B9%8BdataGrid%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%BA%8F%E5%8F%B7/"/>
      <url>/2016/12/22/Flex%E4%B9%8BdataGrid%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%BA%8F%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>通过LabelFunction属性实现自动生成序号。<br>定义方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 生成datagrid第一列用的序号</span><br><span class="line">*/</span><br><span class="line">private function formatIndexNumber(item:Object, colum:Object):String</span><br><span class="line">&#123;</span><br><span class="line">    return indexNumLabelFun(item, colum.mx_internal::owner);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public static function indexNumLabelFun(value:Object, dataGrid:Object):String</span><br><span class="line">&#123;</span><br><span class="line">   var arr: Array = dataGrid.dataProvider.source;</span><br><span class="line">   var indexNum: int = (arr.indexOf(value) + 1);            </span><br><span class="line">   return indexNum.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>设置界面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">------------------- Item中设置 LabelFunction 属性----------------------</span><br><span class="line">&lt;mx:DataGridColumn headerText=&quot;序号&quot; width=&quot;50&quot; labelFunction=&quot;formatIndexNumber&quot; /&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex之dataGrid设置列对齐方式</title>
      <link href="/2016/12/22/Flex%E4%B9%8BdataGrid%E8%AE%BE%E7%BD%AE%E5%88%97%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F/"/>
      <url>/2016/12/22/Flex%E4%B9%8BdataGrid%E8%AE%BE%E7%BD%AE%E5%88%97%E5%AF%B9%E9%BD%90%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>可参照以下实例设置：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:GridColumn dataField=&quot;sex&quot; headerText=&quot;Sex&quot;&gt;</span><br><span class="line">&lt;s:headerRenderer&gt;</span><br><span class="line">&lt;fx:Component&gt;</span><br><span class="line">&lt;s:DefaultGridHeaderRenderer&gt;</span><br><span class="line">&lt;s:labelDisplay&gt;</span><br><span class="line">&lt;s:Label left=&quot;0&quot; right=&quot;0&quot; top=&quot;0&quot; bottom=&quot;0&quot;</span><br><span class="line"> fontWeight=&quot;bold&quot; maxDisplayedLines=&quot;1&quot;</span><br><span class="line"> textAlign=&quot;center&quot; verticalAlign=&quot;middle&quot;/&gt;</span><br><span class="line">&lt;/s:labelDisplay&gt;</span><br><span class="line">&lt;/s:DefaultGridHeaderRenderer&gt;</span><br><span class="line">&lt;/fx:Component&gt;</span><br><span class="line">&lt;/s:headerRenderer&gt;</span><br><span class="line">&lt;s:itemRenderer&gt;</span><br><span class="line">&lt;fx:Component&gt;</span><br><span class="line">&lt;s:DefaultGridItemRenderer textAlign=&quot;center&quot;/&gt;</span><br><span class="line">&lt;/fx:Component&gt;</span><br><span class="line">&lt;/s:itemRenderer&gt;</span><br><span class="line">&lt;/s:GridColumn&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java与actionScript类型对应表</title>
      <link href="/2016/12/22/Java%E4%B8%8EactionScript%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E8%A1%A8/"/>
      <url>/2016/12/22/Java%E4%B8%8EactionScript%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：</p><span id="more"></span><h2 id="Java-gt-ActionScript"><a href="#Java-gt-ActionScript" class="headerlink" title="Java -&gt; ActionScript"></a>Java -&gt; ActionScript</h2><table><thead><tr><th>Java</th><th align="left">ActionScript</th></tr></thead><tbody><tr><td>java.lang.String</td><td align="left">string</td></tr><tr><td>java.lang.Boolean, boolean</td><td align="left">Boolean</td></tr><tr><td>java.lang.Integar</td><td align="left">int</td></tr><tr><td>java.lang.Short</td><td align="left">int</td></tr><tr><td>java.lang.Byte</td><td align="left">int</td></tr><tr><td>java.lang.Byte[]</td><td align="left">Flash.utils.ByteArray</td></tr><tr><td>java.lang.Double</td><td align="left">Number</td></tr><tr><td>java.lang.Float</td><td align="left">Number</td></tr><tr><td>java.lang.Long</td><td align="left">Number</td></tr><tr><td>java.lang.Character</td><td align="left">String</td></tr><tr><td>java.lang.Character[]</td><td align="left">String</td></tr><tr><td>java.util.Calendar</td><td align="left">Date</td></tr><tr><td>java.util.Date</td><td align="left">Date</td></tr><tr><td>java.util.Collection</td><td align="left">mx.collection.ArrayCollection</td></tr><tr><td>java.lang.Object[]</td><td align="left">Array</td></tr><tr><td>java.util.Map</td><td align="left">Array (sparse)</td></tr><tr><td>java.util.Dictionary</td><td align="left">Object (untyped)</td></tr><tr><td>org.w3c.dom.Document</td><td align="left">XML object</td></tr></tbody></table><h2 id="ActionScript-gt-Java"><a href="#ActionScript-gt-Java" class="headerlink" title="ActionScript -&gt; Java"></a>ActionScript -&gt; Java</h2><table><thead><tr><th>ActionScript</th><th align="left">Java</th></tr></thead><tbody><tr><td>Array (dense)</td><td align="left">java.util.List</td></tr><tr><td>Array (sparse)</td><td align="left">java.util.Map</td></tr><tr><td>flash.utils.ByteArray</td><td align="left">byte[]</td></tr><tr><td>flash.utils.IExternalizable</td><td align="left">java.io.Externalizable</td></tr><tr><td>Date</td><td align="left">java.util.Date</td></tr><tr><td>int&#x2F;uint</td><td align="left">java.lang.Integer</td></tr><tr><td>null</td><td align="left">null</td></tr><tr><td>Number</td><td align="left">java.lang.Double</td></tr><tr><td>String</td><td align="left">java.lang.String</td></tr><tr><td>XML</td><td align="left">org.w3c.dom.Document</td></tr><tr><td>XMLDocument</td><td align="left">org.w3c.dom.Document</td></tr></tbody></table><blockquote><p>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。<br>例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
            <tag> actionscript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4j.properties</title>
      <link href="/2016/12/22/log4j-properties/"/>
      <url>/2016/12/22/log4j-properties/</url>
      
        <content type="html"><![CDATA[<p>log4j的配置方法很多，下面记录一个简单配置，以供常用：</p><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL</span><br><span class="line">#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL</span><br><span class="line">log4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile</span><br><span class="line">#</span><br><span class="line">#输出到控制台 </span><br><span class="line">log4j.appender.systemOut = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.systemOut.layout.ConversionPattern = [%-5p][%-<span class="number">22d</span>&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.systemOut.Threshold = INFO</span><br><span class="line">log4j.appender.systemOut.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.systemOut.Target = System.out</span><br><span class="line">#</span><br><span class="line">#输出到文件 </span><br><span class="line">log4j.appender.logFile = org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logFile.layout.ConversionPattern = [%-5p][%-<span class="number">22d</span>&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logFile.Threshold = ERROR</span><br><span class="line">log4j.appender.logFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logFile.Append = TRUE</span><br><span class="line">log4j.appender.logFile.File = $&#123;catalina.home&#125;/logs/error.log</span><br><span class="line">log4j.appender.logFile.Encoding = UTF-<span class="number">8</span></span><br><span class="line">#</span><br><span class="line">#设定文件大小输出到文件 </span><br><span class="line">log4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logRollingFile.layout.ConversionPattern = [%-5p][%-<span class="number">22d</span>&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">log4j.appender.logRollingFile.Threshold = INFO</span><br><span class="line">log4j.appender.logRollingFile.ImmediateFlush = TRUE</span><br><span class="line">log4j.appender.logRollingFile.Append = TRUE</span><br><span class="line">log4j.appender.logRollingFile.File = $&#123;catalina.home&#125;/logs/log.log</span><br><span class="line">log4j.appender.logRollingFile.MaxFileSize = 10MB</span><br><span class="line">log4j.appender.logRollingFile.MaxBackupIndex = <span class="number">10</span></span><br><span class="line">log4j.appender.logRollingFile.Encoding = UTF-<span class="number">8</span></span><br><span class="line">#</span><br><span class="line">##按DatePattern输出到文件 </span><br><span class="line">#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-<span class="number">22d</span>&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class="line">#log4j.appender.logDailyFile.Threshold = DEBUG</span><br><span class="line">#log4j.appender.logDailyFile.ImmediateFlush = TRUE</span><br><span class="line">#log4j.appender.logDailyFile.Append = TRUE</span><br><span class="line">#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts</span><br><span class="line">#log4j.appender.logDailyFile.DatePattern = <span class="string">&#x27;.&#x27;</span>yyyy-MM-dd-HH-mm<span class="string">&#x27;.log&#x27;</span></span><br><span class="line">#log4j.appender.logDailyFile.Encoding = UTF-<span class="number">8</span></span><br><span class="line">#</span><br><span class="line">##用Email发送日志 </span><br><span class="line">#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender</span><br><span class="line">#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout</span><br><span class="line">#log4j.appender.logMail.layout.LocationInfo = TRUE</span><br><span class="line">#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile</span><br><span class="line">#log4j.appender.logMail.Threshold = DEBUG</span><br><span class="line">#log4j.appender.logMail.SMTPDebug = FALSE</span><br><span class="line">#log4j.appender.logMail.SMTPHost = SMTP<span class="number">.163</span>.com</span><br><span class="line">#log4j.appender.logMail.From = xly3000@<span class="number">163.</span>com</span><br><span class="line">#log4j.appender.logMail.To = xly3000<span class="meta">@gmail</span>.com</span><br><span class="line">##log4j.appender.logMail.Cc = xly3000<span class="meta">@gmail</span>.com</span><br><span class="line">##log4j.appender.logMail.Bcc = xly3000<span class="meta">@gmail</span>.com</span><br><span class="line">#log4j.appender.logMail.SMTPUsername = xly3000</span><br><span class="line">#log4j.appender.logMail.SMTPPassword = <span class="number">1234567</span></span><br><span class="line">#log4j.appender.logMail.Subject = Log4j Log Messages</span><br><span class="line">##log4j.appender.logMail.BufferSize = <span class="number">1024</span></span><br><span class="line">##log4j.appender.logMail.SMTPAuth = TRUE</span><br><span class="line">#</span><br><span class="line">##将日志登录到MySQL数据库 </span><br><span class="line">#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender</span><br><span class="line">#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver</span><br><span class="line">#log4j.appender.logDB.URL = jdbc:mysql:<span class="comment">//127.0.0.1:3306/xly</span></span><br><span class="line">#log4j.appender.logDB.User = root</span><br><span class="line">#log4j.appender.logDB.Password = <span class="number">123456</span></span><br><span class="line">#log4j.appender.logDB.Sql = INSERT <span class="title function_">INTOT_log4j</span><span class="params">(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)</span>values(<span class="string">&#x27;Struts2&#x27;</span>,<span class="string">&#x27;%d&#123;yyyy-MM-ddHH:mm:ss&#125;&#x27;</span>,<span class="string">&#x27;%p&#x27;</span>,<span class="string">&#x27;%c&#x27;</span>,<span class="string">&#x27;%F&#x27;</span>,<span class="string">&#x27;%t&#x27;</span>,<span class="string">&#x27;%L&#x27;</span>,<span class="string">&#x27;%l&#x27;</span>,<span class="string">&#x27;%m&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fpSpread之fpComboAdo的初始化</title>
      <link href="/2016/12/22/FPSpread%E4%B9%8BfpComboAdo%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2016/12/22/FPSpread%E4%B9%8BfpComboAdo%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>初始化具有2列内容的下拉框，如下实例：</p><span id="more"></span><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> fpCbodis_cd</span><br><span class="line">    .Clear</span><br><span class="line">    .Columns = <span class="number">2</span></span><br><span class="line">    .ColumnEdit = <span class="number">0</span></span><br><span class="line">    .Col = <span class="number">0</span></span><br><span class="line">    .ColWidth = <span class="number">5</span></span><br><span class="line">    .Col = <span class="number">1</span></span><br><span class="line">    .ColWidth = <span class="number">25</span></span><br><span class="line">    .ListWidth = <span class="number">3000</span></span><br><span class="line">    .AutoSearchFill = <span class="literal">True</span></span><br><span class="line">    .LineStyle = LineStyleFlat</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> CloseMrec</span><br><span class="line">    Mrec.Open <span class="string">&quot;select dis_cd,name from ord_d_sites &quot;</span>, Mconn, <span class="number">1</span>, <span class="number">3</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> <span class="built_in">Not</span> Mrec.EOF</span><br><span class="line">        .AddItem Trim(Mrec!dis_cd) &amp; Chr(<span class="number">9</span>) &amp; Trim(Mrec!name)</span><br><span class="line"></span><br><span class="line">        Mrec.MoveNext</span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fpSpread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fpSpread属性说明</title>
      <link href="/2016/12/22/FPSpread%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2016/12/22/FPSpread%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>以下记录一些常用的fpSpread控件属性，按字母排序：</p><span id="more"></span><p>|<strong>属性</strong>|<strong>说明</strong>|<br>| ———————————————|:——-|<br>|<code>ActiveRow</code> |获取当前活动行号<br>|<code>AddCellSpan</code> 3, 4, 2, 1|从第3列第4行起合并单元格，跨度为2列1行<br>|<code>Backcolor</code>|设置指定范围（行和列）的背景颜色<br>|<code>CellType</code> &#x3D; CellTypeNumber|设置为数字类型<br>|<code>Col</code> &#x3D; 2|定位到第2列<br>|<code>ColHeaderRows</code> &#x3D; 2|表头（列标题）行数为2<br>|<code>ColHeadersShow</code> &#x3D; False|隐藏列标题<br>|<code>ColWidth(</code>1<code>)</code> &#x3D; 16|设置第1列的列宽为16<br>|<code>ColsFrozen</code> &#x3D; 3 |冻结前三列<br>|<code>DataSource</code> &#x3D; Rs|设置Spread的数据源为Rs记录集<br>|<code>DeleteCols</code> 2, 1|在第2列前删除1列<br>|<code>DeleteRows</code> 2, 1|在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource &#x3D; Nothing才能删除<br>|<code>FontSize</code> &#x3D; 10|设置当前栏位的字体大小为10（如果.Row &#x3D; -1，则设置整列，下同<br>|<code>Formula = &quot;SUM(A1:A&quot; &amp; MaxRows &amp; &quot;)&quot;</code>|合计：对第1列从第1行到最大行求和<br>|<code>GetText</code> 2, 3, MyText|将第2列第3行的值赋给变量MyText<br>|<code>InsertCols</code> 2, 1|在第2列前插入1列<br>|<code>InsertRows</code> 2, 1|在第2行前插入1行<br>|<code>MaxCols</code> &#x3D; 5|设置总列数为5列<br>|<code>MaxRows</code> &#x3D; 10|设置总行数为10行<br>|<code>OperationMode</code> &#x3D; OperationModeRow|设置Spread的操作模式为行定位（共有6种模式）<br>|<code>PrintMarginLeft</code> &#x3D; 1000|打印时左边距&#x3D;1000（包括预览）<br>|<code>PrintMarginTop</code> &#x3D; 1000|打印时上边距&#x3D;1000（包括预览）<br>|<code>Row</code> &#x3D; SpreadHeader|定位到表头（列标题）<br>|<code>Row</code> &#x3D; -1|定位到行头（在设置列格式时使用）<br>|<code>Row</code> &#x3D; 3|定位到第3行<br>|<code>RowHeadersShow</code> &#x3D; False|隐藏行标题<br>|<code>RowHeight(</code>1<code>)</code> &#x3D; 12|设置第1行的行高为12<br>|<code>RowsFrozen</code> &#x3D; 2|冻结前两行<br>|<code>SetActiveCell</code> 1,2|设置第1列第2行单元格为焦点<br>|<code>SetEnhancedColumnHeaderColors</code> vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &amp;H80FF&amp;, vbBlue, vbRed|设置列头颜色<br>|<code>SetOddEvenRowColor</code> vbWhite, &amp;H80000008, &amp;HF7ECE4, &amp;H80000008|设置奇偶行背景色<br>|<code>SetText</code> 2, 3, “test”|设置第2列第3行的文本为”test”<br>|<code>Text</code> &#x3D; “test”|设置当前栏位的文本为”test”<br>|<code>TypeHAlign</code> &#x3D; TypeHAlignRight|设置文字水平对齐方式为右对齐<br>|<code>TypeVAlign</code> &#x3D; TypeVAlignCenter|设置文字垂直对齐方式为居中<br>|<code>TypeNumberDecPlaces</code> &#x3D; 2|设置小数位数<br>|<code>TypeNumberShowSep</code> &#x3D; True|设置千位分隔<br>|<code>/n</code>|打印属性：换行<br>|<code>/fn</code>|打印属性：font name字体<br>|<code>/fz</code>|打印属性：font size大小<br>|<code>/fb1</code>|打印属性：font bold粗体<br>|<code>/fb0</code>|打印属性：非粗体<br>|<code>/fi1</code>|打印属性：font italic斜体<br>|<code>/fi0</code>|打印属性：非斜体<br>|<code>/fu1</code>|打印属性：font underline有下划线<br>|<code>/fu0</code>|打印属性：无下划线<br>|<code>/fk1</code>|打印属性：font strikethru有删除线<br>|<code>/fk0</code>|打印属性：无删除线<br>|<code>/l</code>|打印属性：居左<br>|<code>/c</code>|打印属性：居中<br>|<code>/r</code>|打印属性：居右<br>|<code>/p</code>|打印属性：页码<br>|<code>/date</code>|打印属性：日期<br>|<code>/time</code>|打印属性：时间</p><p>打印实例（VB6.0）：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27;给表格fpSpread加载数据</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> LoadfpSpread()</span><br><span class="line">    <span class="keyword">Call</span> CloseMRec</span><br><span class="line">    MRec.Open <span class="string">&quot;SELECT * FROM Table&quot;</span>, MConn, <span class="number">1</span>, <span class="number">3</span></span><br><span class="line"><span class="keyword">With</span> fpS1</span><br><span class="line">.MaxRows = Mrec.RecordCount</span><br><span class="line"><span class="keyword">If</span> MRec.RecordCount &gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line"><span class="keyword">Set</span> .DataSource = Mrec</span><br><span class="line">.ColWidth(<span class="number">1</span>) = <span class="number">9</span></span><br><span class="line">.ColWidth(<span class="number">2</span>) = <span class="number">8</span></span><br><span class="line">.ColWidth(<span class="number">3</span>) = <span class="number">8</span></span><br><span class="line">.ColWidth(<span class="number">4</span>) = <span class="number">33</span></span><br><span class="line">.ColWidth(<span class="number">5</span>) = <span class="number">33</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;打印fpSpread</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> PrintfpSpread()</span><br><span class="line">    <span class="keyword">Dim</span> tableHead     <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> tableBodyRow1 <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> tableBodyRow2 <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> tableFoot     <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">With</span> fpS1</span><br><span class="line">        <span class="keyword">Dim</span> customerName, forderNo, code, <span class="keyword">operator</span>, operatDate, repealReason</span><br><span class="line">        fpS2.GetText <span class="number">1</span>, fpS2.activeRow, code</span><br><span class="line">        fpS2.GetText <span class="number">2</span>, fpS2.activeRow, forderNo</span><br><span class="line">        fpS2.GetText <span class="number">3</span>, fpS2.activeRow, customerName</span><br><span class="line">        fpS2.GetText <span class="number">4</span>, fpS2.activeRow, <span class="keyword">operator</span></span><br><span class="line">        fpS2.GetText <span class="number">5</span>, fpS2.activeRow, operatDate</span><br><span class="line">        fpS2.GetText <span class="number">6</span>, fpS2.activeRow, repealReason</span><br><span class="line">        </span><br><span class="line">        .MaxRows = .MaxRows + <span class="number">1</span></span><br><span class="line">        .SetText <span class="number">2</span>, .MaxRows, <span class="string">&quot;撤销依据&quot;</span></span><br><span class="line">        .TypeHAlign = TypeHAlignCenter</span><br><span class="line">        .AddCellSpan <span class="number">3</span>, .MaxRows, <span class="number">4</span>, <span class="number">1</span></span><br><span class="line">        .RowHeight(.MaxRows) = <span class="number">30</span></span><br><span class="line">        .SetText <span class="number">3</span>, .MaxRows, repealReason</span><br><span class="line">        </span><br><span class="line">        .Col = <span class="number">2</span></span><br><span class="line">        .Col2 = <span class="number">5</span></span><br><span class="line">        .Row = <span class="number">1</span></span><br><span class="line">        .PrintType = PrintTypeCellRange</span><br><span class="line">        </span><br><span class="line">        .PrintMarginTop = <span class="number">540</span></span><br><span class="line">        .PrintMarginBottom = <span class="number">300</span></span><br><span class="line">        .PrintMarginLeft = <span class="number">480</span></span><br><span class="line">        .PrintMarginRight = <span class="number">480</span></span><br><span class="line">        </span><br><span class="line">        tableHead = <span class="string">&quot;合同撤销通知单/n/n&quot;</span></span><br><span class="line">        tableBodyRow1 = <span class="string">&quot;单据编号：&quot;</span> &amp; code &amp; <span class="string">&quot;      &quot;</span> &amp; <span class="string">&quot;份合同号：&quot;</span> &amp; forderNo &amp; <span class="string">&quot;      &quot;</span> &amp; <span class="string">&quot;订货单位名称：&quot;</span> &amp; customerName &amp; <span class="string">&quot;&quot;</span> &amp; <span class="string">&quot;/n/n&quot;</span></span><br><span class="line">        tableBodyRow2 = <span class="string">&quot;部门领导：&quot;</span> &amp; <span class="string">&quot;                &quot;</span> &amp; <span class="string">&quot;经办人：&quot;</span> &amp; <span class="keyword">operator</span> &amp; <span class="string">&quot;            &quot;</span> &amp; <span class="string">&quot;撤销日期：&quot;</span> &amp; operatDate &amp; <span class="string">&quot;/n&quot;</span></span><br><span class="line">        </span><br><span class="line">        .PrintHeader = <span class="string">&quot;/c/fb1/fz&quot;&quot;20&quot;&quot;&quot;</span> &amp; tableHead &amp; <span class="string">&quot;/l/fb0/fz&quot;&quot;10&quot;&quot;&quot;</span> &amp; tableBodyRow1 &amp; tableBodyRow2</span><br><span class="line">        .PrintFooter = <span class="string">&quot;/n/c/p//&quot;</span> &amp; .PrintPageCount</span><br><span class="line"></span><br><span class="line">        <span class="comment">&#x27;调用打印预览界面</span></span><br><span class="line">        FormPrint.PrintState = <span class="literal">False</span></span><br><span class="line">        FormPrint.PrintCount = <span class="number">0</span></span><br><span class="line">        FormPrint.SSP.hWndSpread = .hwnd</span><br><span class="line">        FormPrint.PrintCount = .PrintPageCount</span><br><span class="line">        FormPrint.Show <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">If</span> FormPrint.PrintState = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">            .PrintSheet</span><br><span class="line">            FormPrint.PrintState = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fpSpread </tag>
            
            <tag> 属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL经典语句</title>
      <link href="/2016/11/29/SQL%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%8F%A5/"/>
      <url>/2016/11/29/SQL%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="一-基础篇"><a href="#一-基础篇" class="headerlink" title="一. 基础篇"></a>一. 基础篇</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE database<span class="operator">-</span>name</span><br></pre></td></tr></table></figure><h2 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2. 删除数据库"></a>2. 删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> database dbname</span><br></pre></td></tr></table></figure><h2 id="3-备份sql-server"><a href="#3-备份sql-server" class="headerlink" title="3. 备份sql server"></a>3. 备份sql server</h2><p>创建 备份数据的 device</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE master</span><br><span class="line"><span class="keyword">EXEC</span> sp_addumpdevice <span class="string">&#x27;disk&#x27;</span>, <span class="string">&#x27;testBack&#x27;</span>, <span class="string">&#x27;c:\mssql7backup\MyNwind_1.dat&#x27;</span></span><br></pre></td></tr></table></figure><p>开始 备份</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BACKUP DATABASE pubs <span class="keyword">TO</span> testBack </span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="4-创建新表"><a href="#4-创建新表" class="headerlink" title="4. 创建新表"></a>4. 创建新表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tabname(col1 type1 [<span class="keyword">not</span> <span class="keyword">null</span>] [<span class="keyword">primary</span> key],col2 type2 [<span class="keyword">not</span> <span class="keyword">null</span>],..)</span><br></pre></td></tr></table></figure><p>根据已有的表创建新表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tab_new <span class="keyword">like</span> tab_old (使用旧表创建新表)</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tab_new <span class="keyword">as</span> <span class="keyword">select</span> col1,col2… <span class="keyword">from</span> tab_old definition <span class="keyword">only</span></span><br></pre></td></tr></table></figure><h2 id="5-删除新表"><a href="#5-删除新表" class="headerlink" title="5. 删除新表"></a>5. 删除新表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> tabname</span><br></pre></td></tr></table></figure><h2 id="6-增加一个列"><a href="#6-增加一个列" class="headerlink" title="6. 增加一个列"></a>6. 增加一个列</h2><pre><code>Alter table tabname add column col type</code></pre><blockquote><p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p></blockquote><h2 id="7-添加主键"><a href="#7-添加主键" class="headerlink" title="7. 添加主键"></a>7. 添加主键</h2><pre><code>ALTER TABLE tabname ADD PRIMARY KEY (col)</code></pre><p>删除主键</p><pre><code>ALTER TABLE tabname DROP PRIMARY KEY (col)</code></pre><h2 id="8-创建索引"><a href="#8-创建索引" class="headerlink" title="8. 创建索引"></a>8. 创建索引</h2><pre><code>create [unique] index idxname on tabname(col….) </code></pre><p>删除索引</p><pre><code>drop index idxname</code></pre><blockquote><p>注：索引是不可更改的，想更改必须删除重新建。</p></blockquote><h2 id="9-创建视图"><a href="#9-创建视图" class="headerlink" title="9. 创建视图"></a>9. 创建视图</h2><pre><code>create view viewname as select statement </code></pre><p>删除视图</p><pre><code>drop view viewname</code></pre><h2 id="10-几个简单的基本sql语句"><a href="#10-几个简单的基本sql语句" class="headerlink" title="10. 几个简单的基本sql语句"></a>10. 几个简单的基本sql语句</h2><p>选择</p><pre><code>select * from table1 where 范围</code></pre><p>插入</p><pre><code>insert into table1(field1,field2) values(value1,value2)</code></pre><p>删除</p><pre><code>delete from table1 where 范围</code></pre><p>更新</p><pre><code>update table1 set field1=value1 where 范围</code></pre><p>查找</p><pre><code>select * from table1 where field1 like ’%value1%’</code></pre><p>排序</p><pre><code>select * from table1 order by field1,field2 [desc]</code></pre><p>总数</p><pre><code>select count as totalcount from table1</code></pre><p>求和</p><pre><code>select sum(field1) as sumvalue from table1</code></pre><p>平均</p><pre><code>select avg(field1) as avgvalue from table1</code></pre><p>最大</p><pre><code>select max(field1) as maxvalue from table1</code></pre><p>最小</p><pre><code>select min(field1) as minvalue from table1</code></pre><h2 id="11-几个高级查询运算词"><a href="#11-几个高级查询运算词" class="headerlink" title="11. 几个高级查询运算词"></a>11. 几个高级查询运算词</h2><ul><li>A： UNION 运算符<br>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 </li><li>B： EXCEPT 运算符<br>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 </li><li>C： INTERSECT 运算符<br>INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 <blockquote><p>注：使用运算词的几个查询结果行必须是一致的。</p></blockquote></li></ul><h2 id="12-使用外连接"><a href="#12-使用外连接" class="headerlink" title="12. 使用外连接"></a>12. 使用外连接</h2><ul><li><p>A. left （outer） join：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 </p><p>  select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a &#x3D; b.c</p></li><li><p>B：right （outer） join:<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 </p></li><li><p>C：full&#x2F;cross （outer） join：<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p></li></ul><h2 id="13-分组-Group-by"><a href="#13-分组-Group-by" class="headerlink" title="13. 分组:Group by"></a>13. 分组:Group by</h2><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。<br>组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)<br>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据<br>在selecte统计函数中的字段，不能和普通的字段放在一起；</p><h2 id="14-对数据库进行操作"><a href="#14-对数据库进行操作" class="headerlink" title="14. 对数据库进行操作"></a>14. 对数据库进行操作</h2><p>分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名</p><h2 id="15-如何修改数据库的名称"><a href="#15-如何修改数据库的名称" class="headerlink" title="15. 如何修改数据库的名称"></a>15. 如何修改数据库的名称</h2><p>sp_renamedb ‘old_name’, ‘new_name’</p><h2 id="16-查询字段ID最大值的记录"><a href="#16-查询字段ID最大值的记录" class="headerlink" title="16. 查询字段ID最大值的记录"></a>16. 查询字段ID最大值的记录</h2><p>无索引</p><pre><code>select time from table t1 where not exists (select 1 from table where id &gt; t1.id) </code></pre><p>有索引</p><pre><code>select time from table where id in (select max(id) from table)</code></pre><h2 id="17-查询某一列的重复项内容"><a href="#17-查询某一列的重复项内容" class="headerlink" title="17. 查询某一列的重复项内容"></a>17. 查询某一列的重复项内容</h2><pre><code>SELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)&gt;1 </code></pre><h2 id="18-判断表中是否存在记录"><a href="#18-判断表中是否存在记录" class="headerlink" title="18. 判断表中是否存在记录"></a>18. 判断表中是否存在记录</h2><pre><code>SELECT COUNT (*) FROM tableName WHERE conditions</code></pre><hr><h1 id="二-提升篇"><a href="#二-提升篇" class="headerlink" title="二. 提升篇"></a>二. 提升篇</h1><h2 id="1-复制表-只复制结构-源表名：a-新表名：b-Access可用"><a href="#1-复制表-只复制结构-源表名：a-新表名：b-Access可用" class="headerlink" title="1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)"></a>1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)</h2><p>法一</p><pre><code>select * into b from a where 1&lt;&gt;1（仅用于SQlServer）</code></pre><p>法二</p><pre><code>select top 0 * into b from a</code></pre><h2 id="2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用"><a href="#2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用" class="headerlink" title="2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)"></a>2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b;</code></pre><h2 id="3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用"><a href="#3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用" class="headerlink" title="3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)"></a>3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件</code></pre><p>例子：..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\data.mdb” &amp;”‘ where..</p><h2 id="4-子查询-表名1：a-表名2：b"><a href="#4-子查询-表名1：a-表名2：b" class="headerlink" title="4. 子查询(表名1：a 表名2：b)"></a>4. 子查询(表名1：a 表名2：b)</h2><pre><code>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)</code></pre><h2 id="5-显示文章、提交人和最后回复时间"><a href="#5-显示文章、提交人和最后回复时间" class="headerlink" title="5. 显示文章、提交人和最后回复时间"></a>5. 显示文章、提交人和最后回复时间</h2><pre><code>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b</code></pre><h2 id="6-外连接查询-表名1：a-表名2：b"><a href="#6-外连接查询-表名1：a-表名2：b" class="headerlink" title="6. 外连接查询(表名1：a 表名2：b)"></a>6. 外连接查询(表名1：a 表名2：b)</h2><pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</code></pre><h2 id="7-在线视图查询-表名1：a"><a href="#7-在线视图查询-表名1：a" class="headerlink" title="7. 在线视图查询(表名1：a )"></a>7. 在线视图查询(表名1：a )</h2><pre><code>select * from (SELECT a,b,c FROM a) T where t.a &gt; 1;</code></pre><h2 id="8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括"><a href="#8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括" class="headerlink" title="8. between的用法,between限制查询数据范围时包括了边界值,not between不包括"></a>8. between的用法,between限制查询数据范围时包括了边界值,not between不包括</h2><pre><code>select * from table1 where time between time1 and time2select a,b,c, from table1 where a not between 数值1 and 数值2</code></pre><h2 id="9-in-的使用方法"><a href="#9-in-的使用方法" class="headerlink" title="9. in 的使用方法"></a>9. in 的使用方法</h2><pre><code>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)</code></pre><h2 id="10-两张关联表，删除主表中已经在副表中没有的信息"><a href="#10-两张关联表，删除主表中已经在副表中没有的信息" class="headerlink" title="10. 两张关联表，删除主表中已经在副表中没有的信息"></a>10. 两张关联表，删除主表中已经在副表中没有的信息</h2><pre><code>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )</code></pre><h2 id="11-四表联查问题"><a href="#11-四表联查问题" class="headerlink" title="11. 四表联查问题"></a>11. 四表联查问题</h2><pre><code>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....</code></pre><h2 id="12-日程安排提前五分钟提醒"><a href="#12-日程安排提前五分钟提醒" class="headerlink" title="12. 日程安排提前五分钟提醒"></a>12. 日程安排提前五分钟提醒</h2><pre><code>select * from 日程安排 where datediff(&#39;minute&#39;,f开始时间,getdate())&gt;5</code></pre><h2 id="13-一条sql语句搞定数据库分页"><a href="#13-一条sql语句搞定数据库分页" class="headerlink" title="13. 一条sql语句搞定数据库分页"></a>13. 一条sql语句搞定数据库分页</h2><pre><code>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段</code></pre><p>关于数据库分页：</p><pre><code>declare @start int,@end int@sql nvarchar(600)set @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid&gt;-1)’exec sp_executesql @sql</code></pre><blockquote><p>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p></blockquote><h2 id="14-前10条记录"><a href="#14-前10条记录" class="headerlink" title="14. 前10条记录"></a>14. 前10条记录</h2><pre><code>select top 10 * form table1 where 范围</code></pre><h2 id="15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等"><a href="#15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等" class="headerlink" title="15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)"></a>15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</h2><pre><code>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)</code></pre><h2 id="16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表"><a href="#16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表" class="headerlink" title="16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表"></a>16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表</h2><pre><code>(select a from tableA ) except (select a from tableB) except (select a from tableC)</code></pre><h2 id="17-随机取出10条数据"><a href="#17-随机取出10条数据" class="headerlink" title="17. 随机取出10条数据"></a>17. 随机取出10条数据</h2><pre><code>select top 10 * from tablename order by newid()</code></pre><h2 id="18-随机选择记录"><a href="#18-随机选择记录" class="headerlink" title="18. 随机选择记录"></a>18. 随机选择记录</h2><pre><code>select newid()</code></pre><h2 id="19-删除重复记录"><a href="#19-删除重复记录" class="headerlink" title="19. 删除重复记录"></a>19. 删除重复记录</h2><ul><li><p>方法一：</p><p>  delete from tablename where id not in (select max(id) from tablename group by col1,col2,…)</p></li><li><p>方法二：</p><p>  select distinct * into temp from tablename<br>  delete from tablename<br>  insert into tablename select * from temp</p></li></ul><blockquote><p>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作</p></blockquote><ul><li><p>方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</p><p>  alter table tablename<br>  add column_b int identity(1,1)–添加一个自增列<br>  delete from tablename where column_b not in(<br>  select max(column_b) from tablename group by column1,column2,…)<br>  alter table tablename drop column column_b</p></li></ul><h2 id="20-列出数据库里所有的表名"><a href="#20-列出数据库里所有的表名" class="headerlink" title="20. 列出数据库里所有的表名"></a>20. 列出数据库里所有的表名</h2><pre><code>select name from sysobjects where type=&#39;U&#39; // U代表用户</code></pre><h2 id="21-列出表里的所有的列名"><a href="#21-列出表里的所有的列名" class="headerlink" title="21. 列出表里的所有的列名"></a>21. 列出表里的所有的列名</h2><pre><code>select name from syscolumns where id=object_id(&#39;TableName&#39;)</code></pre><h2 id="22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。"><a href="#22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。" class="headerlink" title="22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。"></a>22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> type,<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;C&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;B&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">FROM</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> type</span><br></pre></td></tr></table></figure><p>显示结果：</p><table><thead><tr><th>type</th><th>vender</th><th>pcs</th></tr></thead><tbody><tr><td>电脑</td><td>A</td><td>1</td></tr><tr><td>电脑</td><td>A</td><td>1</td></tr><tr><td>光盘</td><td>B</td><td>2</td></tr><tr><td>光盘</td><td>A</td><td>2</td></tr><tr><td>手机</td><td>B</td><td>3</td></tr><tr><td>手机</td><td>C</td><td>3</td></tr></tbody></table><h2 id="23-初始化表"><a href="#23-初始化表" class="headerlink" title="23. 初始化表"></a>23. 初始化表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> table1</span><br></pre></td></tr></table></figure><h2 id="24-选择从10到15的记录"><a href="#24-选择从10到15的记录" class="headerlink" title="24. 选择从10到15的记录"></a>24. 选择从10到15的记录</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">5</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">15</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">asc</span>) table_别名 <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="25-临时表"><a href="#25-临时表" class="headerlink" title="25. 临时表"></a>25. 临时表</h2><h4 id="创建临时表"><a href="#创建临时表" class="headerlink" title="创建临时表"></a>创建临时表</h4><ul><li>方法一：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> #临时表名(字段<span class="number">1</span> 约束条件,</span><br><span class="line">                       字段<span class="number">2</span> 约束条件,</span><br><span class="line">                      .....)</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> ##临时表名(字段<span class="number">1</span> 约束条件,</span><br><span class="line">                        字段<span class="number">2</span> 约束条件,</span><br><span class="line">                        .....)</span><br></pre></td></tr></table></figure>  例：  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> #Tmp <span class="comment">--创建临时表#Tmp</span></span><br><span class="line">(</span><br><span class="line">    ID   <span class="type">int</span> <span class="keyword">IDENTITY</span> (<span class="number">1</span>,<span class="number">1</span>)     <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">--创建列ID,并且每次新增一条记录就会加1</span></span><br><span class="line">    WokNo                <span class="type">varchar</span>(<span class="number">50</span>),   </span><br><span class="line">    <span class="keyword">primary</span> key (ID)      <span class="comment">--定义ID为临时表#Tmp的主键      </span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>方法二：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> #临时表名 <span class="keyword">from</span> 你的表;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> ##临时表名 <span class="keyword">from</span> 你的表;</span><br></pre></td></tr></table></figure><blockquote><p>注：以上的#代表局部临时表，##代表全局临时表</p></blockquote></li></ul><h4 id="查询临时表"><a href="#查询临时表" class="headerlink" title="查询临时表"></a>查询临时表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> #临时表名;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ##临时表名;</span><br></pre></td></tr></table></figure><h4 id="删除临时表"><a href="#删除临时表" class="headerlink" title="删除临时表"></a>删除临时表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> #临时表名;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> ##临时表名;</span><br></pre></td></tr></table></figure><h2 id="26-关联表更新"><a href="#26-关联表更新" class="headerlink" title="26. 关联表更新"></a>26. 关联表更新</h2><p>SQL SERVER</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> A <span class="keyword">SET</span> A.b<span class="operator">=</span>B.d <span class="keyword">FROM</span> tableA A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tableB B <span class="keyword">ON</span> A.a <span class="operator">=</span> B.a;</span><br></pre></td></tr></table></figure><p>MYSQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> tableA A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tableB B <span class="keyword">ON</span> A.a <span class="operator">=</span> B.a <span class="keyword">SET</span> A.b<span class="operator">=</span>B.d;</span><br></pre></td></tr></table></figure><h2 id="27-查看表的所有外键关系"><a href="#27-查看表的所有外键关系" class="headerlink" title="27. 查看表的所有外键关系"></a>27. 查看表的所有外键关系</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.<span class="operator">*</span>,t2.name,t3.name <span class="keyword">from</span> dbo.sysforeignkeys t1 <span class="keyword">left</span> <span class="keyword">join</span> sysobjects t2 <span class="keyword">on</span> t1.fkeyid<span class="operator">=</span>t2.id </span><br><span class="line">           <span class="keyword">left</span> <span class="keyword">join</span> sysobjects t3 <span class="keyword">on</span> t1.rkeyid<span class="operator">=</span>t3.id <span class="keyword">where</span> t3.name<span class="operator">=</span><span class="string">&#x27;表名 &#x27;</span></span><br></pre></td></tr></table></figure><h2 id="28-删除所有约束"><a href="#28-删除所有约束" class="headerlink" title="28. 删除所有约束"></a>28. 删除所有约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> c1 <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">    <span class="keyword">select</span> <span class="string">&#x27;alter table [&#x27;</span><span class="operator">+</span> object_name(parent_obj) <span class="operator">+</span> <span class="string">&#x27;] drop constraint [&#x27;</span><span class="operator">+</span>name<span class="operator">+</span><span class="string">&#x27;]; &#x27;</span></span><br><span class="line">    <span class="keyword">from</span> sysobjects</span><br><span class="line">    <span class="keyword">where</span> xtype <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span></span><br><span class="line"><span class="keyword">open</span> c1</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@c1</span> <span class="type">varchar</span>(<span class="number">8000</span>)</span><br><span class="line"><span class="keyword">fetch</span> next <span class="keyword">from</span> c1 <span class="keyword">into</span> <span class="variable">@c1</span></span><br><span class="line">while(@<span class="variable">@fetch</span>_status<span class="operator">=</span><span class="number">0</span>)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">exec</span>(<span class="variable">@c1</span>)</span><br><span class="line">        <span class="keyword">fetch</span> next <span class="keyword">from</span> c1 <span class="keyword">into</span> <span class="variable">@c1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">close</span> c1</span><br><span class="line"><span class="keyword">deallocate</span> c1</span><br></pre></td></tr></table></figure><h2 id="29-删除数据库所有表"><a href="#29-删除数据库所有表" class="headerlink" title="29. 删除数据库所有表"></a>29. 删除数据库所有表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@tname</span> <span class="type">varchar</span>(<span class="number">8000</span>)</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@tname</span><span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@tname</span><span class="operator">=</span><span class="variable">@tname</span> <span class="operator">+</span> Name <span class="operator">+</span> <span class="string">&#x27;,&#x27;</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;U&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@tname</span><span class="operator">=</span><span class="string">&#x27;drop table &#x27;</span> <span class="operator">+</span> <span class="keyword">left</span>(<span class="variable">@tname</span>,len(<span class="variable">@tname</span>)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">exec</span>(<span class="variable">@tname</span>)</span><br></pre></td></tr></table></figure><h2 id="30-删除外键约束"><a href="#30-删除外键约束" class="headerlink" title="30. 删除外键约束"></a>30. 删除外键约束</h2><p>得到某个表被哪些外键引用，并且显示出外键表的表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    fk.name,</span><br><span class="line">    fk.object_id,</span><br><span class="line">    OBJECT_NAME(fk.parent_object_id) <span class="keyword">AS</span> referenceTableName</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    sys.foreign_keys <span class="keyword">AS</span> fk</span><br><span class="line"><span class="keyword">JOIN</span> sys.objects <span class="keyword">AS</span> o <span class="keyword">ON</span> fk.referenced_object_id <span class="operator">=</span> o.object_id</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    o.name <span class="operator">=</span> <span class="string">&#x27;ATTACHMENTDOC&#x27;</span>;</span><br></pre></td></tr></table></figure><p>通过外键表的表名和外键名称执行以下语句即可删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dbo.CONTRACTINFO <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> FK_CONTRACTINFO_ATTACHMENTDOC</span><br></pre></td></tr></table></figure><h2 id="31-查找指定数据库表的列名、数据类型、数据长度、注释"><a href="#31-查找指定数据库表的列名、数据类型、数据长度、注释" class="headerlink" title="31. 查找指定数据库表的列名、数据类型、数据长度、注释"></a>31. 查找指定数据库表的列名、数据类型、数据长度、注释</h2><p>SQL SERVER 2000</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">SELECT</span> sysobjects.name <span class="keyword">AS</span> 表名, syscolumns.name <span class="keyword">AS</span> 列名, systypes.name <span class="keyword">AS</span> 数据类型, syscolumns.length <span class="keyword">AS</span> 数据长度, sysproperties.[<span class="keyword">value</span>] <span class="keyword">AS</span> 注释</span><br><span class="line">      <span class="keyword">FROM</span> sysproperties</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> sysobjects</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> syscolumns <span class="keyword">ON</span> sysobjects.id    <span class="operator">=</span> syscolumns.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> systypes   <span class="keyword">ON</span> syscolumns.xtype <span class="operator">=</span> systypes.xtype </span><br><span class="line">                      <span class="keyword">ON</span> sysproperties.id <span class="operator">=</span> syscolumns.id <span class="keyword">AND</span> sysproperties.smallid <span class="operator">=</span> syscolumns.colid</span><br><span class="line">     <span class="keyword">WHERE</span> (sysobjects.xtype <span class="operator">=</span> <span class="string">&#x27;u&#x27;</span> <span class="keyword">OR</span> sysobjects.xtype <span class="operator">=</span> <span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">       <span class="keyword">AND</span> (systypes.name <span class="operator">&lt;&gt;</span> <span class="string">&#x27;sysname&#x27;</span>)</span><br><span class="line">       <span class="keyword">AND</span> sysproperties.[<span class="keyword">value</span>] <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="comment">--查询注释不为 NULL 的记录</span></span><br><span class="line">       <span class="keyword">AND</span> (sysobjects.name <span class="operator">=</span> <span class="string">&#x27;指定数据库表&#x27;</span>)</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>, <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>SQL SERVER 2005及以上</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">SELECT</span> ta.name <span class="keyword">AS</span> 表名, c.name <span class="keyword">AS</span> 列名, t.name <span class="keyword">AS</span> 数据类型, c.max_length <span class="keyword">AS</span> 数据长度, ex.[<span class="keyword">value</span>] <span class="keyword">AS</span> 注释</span><br><span class="line">      <span class="keyword">FROM</span> sys.columns               <span class="keyword">AS</span> c</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> sys.tables                <span class="keyword">AS</span> ta <span class="keyword">ON</span> c.object_id <span class="operator">=</span> ta.object_id</span><br><span class="line"> <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.extended_properties   <span class="keyword">AS</span> ex <span class="keyword">ON</span> ex.major_id <span class="operator">=</span> c.object_id <span class="keyword">AND</span> ex.minor_id <span class="operator">=</span> c.column_id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> name, system_type_id</span><br><span class="line">              <span class="keyword">FROM</span> sys.types</span><br><span class="line">             <span class="keyword">WHERE</span> name <span class="operator">&lt;&gt;</span> <span class="string">&#x27;sysname&#x27;</span>) <span class="keyword">AS</span> t <span class="keyword">ON</span> c.system_type_id <span class="operator">=</span> t.system_type_id</span><br><span class="line">     <span class="keyword">WHERE</span> ta.name <span class="operator">=</span> <span class="string">&#x27;指定数据库表&#x27;</span></span><br><span class="line">       <span class="keyword">AND</span> ex.[<span class="keyword">value</span>] <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>, <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="32-同步表数据"><a href="#32-同步表数据" class="headerlink" title="32. 同步表数据"></a>32. 同步表数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> 表<span class="number">2</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">AS</span> a <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> 表<span class="number">2</span> <span class="keyword">WHERE</span> ID <span class="operator">=</span> a.ID);</span><br></pre></td></tr></table></figure><h2 id="33-判断某列中是否包含中文字符或者英文字符"><a href="#33-判断某列中是否包含中文字符或者英文字符" class="headerlink" title="33. 判断某列中是否包含中文字符或者英文字符"></a>33. 判断某列中是否包含中文字符或者英文字符</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 某列 <span class="keyword">LIKE</span> <span class="string">&#x27;%[吖-座]%&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 某列 <span class="keyword">LIKE</span> <span class="string">&#x27;%[a-z]%&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）"><a href="#34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）" class="headerlink" title="34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）"></a>34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）</h2><p>例如，表Table1中有两列数据：</p><p>|code       |name|<br>|——-  |—|<br>|AAA        |姓名1|<br>|AAA        |姓名2|<br>|AAA        |姓名3|<br>|BBB        |姓名4|<br>|BBB        |姓名5|</p><p>行转列，想变成如下格式：</p><p>|code       |name|<br>|——-  |—|<br>|AAA        |姓名1,姓名2,姓名3|<br>|BBB        |姓名4,姓名5|</p><p>可用如下SQL实现：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> code, name <span class="operator">=</span> (STUFF((<span class="keyword">SELECT</span> <span class="string">&#x27;,&#x27;</span> <span class="operator">+</span> name </span><br><span class="line">                                <span class="keyword">FROM</span> Table1 </span><br><span class="line">                               <span class="keyword">WHERE</span> code <span class="operator">=</span> a.code <span class="keyword">FOR</span> xml PATH(<span class="string">&#x27;&#x27;</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">    <span class="keyword">FROM</span> Table1 a </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> code</span><br></pre></td></tr></table></figure><h2 id="35-去除字段中空格、换行符、回车符"><a href="#35-去除字段中空格、换行符、回车符" class="headerlink" title="35. 去除字段中空格、换行符、回车符"></a>35. 去除字段中空格、换行符、回车符</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> xx_sjb <span class="keyword">SET</span> sl <span class="operator">=</span> LTRIM(RTRIM(REPLACE(REPLACE(sl, <span class="type">CHAR</span>(<span class="number">10</span>), <span class="string">&#x27;&#x27;</span>), <span class="type">CHAR</span> (<span class="number">13</span>), <span class="string">&#x27;&#x27;</span>)))</span><br></pre></td></tr></table></figure><hr><h1 id="三-技巧篇"><a href="#三-技巧篇" class="headerlink" title="三. 技巧篇"></a>三. 技巧篇</h1><h2 id="1-1-x3D-1，1-x3D-2的使用，在SQL语句组合时用的较多"><a href="#1-1-x3D-1，1-x3D-2的使用，在SQL语句组合时用的较多" class="headerlink" title="1. 1&#x3D;1，1&#x3D;2的使用，在SQL语句组合时用的较多"></a>1. 1&#x3D;1，1&#x3D;2的使用，在SQL语句组合时用的较多</h2><pre><code>“where 1=1” 表示选择全部“where 1=2” 表示全部不选</code></pre><h2 id="2-收缩数据库"><a href="#2-收缩数据库" class="headerlink" title="2. 收缩数据库"></a>2. 收缩数据库</h2><ul><li>重建索引<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DBCC REINDEX</span><br><span class="line">DBCC INDEXDEFRAG</span><br></pre></td></tr></table></figure></li><li>收缩数据和日志<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKDB</span><br><span class="line">DBCC SHRINKFILE</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-压缩数据库"><a href="#3-压缩数据库" class="headerlink" title="3. 压缩数据库"></a>3. 压缩数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbcc shrinkdatabase(dbname)</span><br></pre></td></tr></table></figure><h2 id="4-转移数据库给新用户以已存在用户权限"><a href="#4-转移数据库给新用户以已存在用户权限" class="headerlink" title="4. 转移数据库给新用户以已存在用户权限"></a>4. 转移数据库给新用户以已存在用户权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_change_users_login <span class="string">&#x27;update_one&#x27;</span>,<span class="string">&#x27;newname&#x27;</span>,<span class="string">&#x27;oldname&#x27;</span></span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="5-检查备份集"><a href="#5-检查备份集" class="headerlink" title="5. 检查备份集"></a>5. 检查备份集</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESTORE VERIFYONLY <span class="keyword">from</span> disk<span class="operator">=</span><span class="string">&#x27;E:\dvbbs.bak&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="6-修复数据库"><a href="#6-修复数据库" class="headerlink" title="6. 修复数据库"></a>6. 修复数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE [dvbbs] <span class="keyword">SET</span> SINGLE_USER</span><br><span class="line">GO</span><br><span class="line">DBCC CHECKDB(<span class="string">&#x27;dvbbs&#x27;</span>,repair_allow_data_loss) <span class="keyword">WITH</span> TABLOCK</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">ALTER</span> DATABASE [dvbbs] <span class="keyword">SET</span> MULTI_USER</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h2 id="7-日志清除"><a href="#7-日志清除" class="headerlink" title="7. 日志清除"></a>7. 日志清除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@LogicalFileName</span> sysname,</span><br><span class="line"><span class="variable">@MaxMinutes</span> <span class="type">INT</span>,</span><br><span class="line"><span class="variable">@NewSize</span> <span class="type">INT</span></span><br><span class="line"></span><br><span class="line">USE tablename <span class="comment">-- 要操作的数据库名</span></span><br><span class="line"><span class="keyword">SELECT</span>  <span class="variable">@LogicalFileName</span> <span class="operator">=</span> <span class="string">&#x27;tablename_log&#x27;</span>, <span class="comment">-- 日志文件名</span></span><br><span class="line"><span class="variable">@MaxMinutes</span> <span class="operator">=</span> <span class="number">10</span>, <span class="comment">-- Limit on time allowed to wrap log.</span></span><br><span class="line"><span class="variable">@NewSize</span> <span class="operator">=</span> <span class="number">1</span>  <span class="comment">-- 你想设定的日志文件的大小(M)</span></span><br><span class="line">Setup <span class="operator">/</span> initialize</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@OriginalSize</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@OriginalSize</span> <span class="operator">=</span> size </span><br><span class="line"><span class="keyword">FROM</span> sysfiles</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Original Size of &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; LOG is &#x27;</span> <span class="operator">+</span> </span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),<span class="variable">@OriginalSize</span>) <span class="operator">+</span> <span class="string">&#x27; 8K pages or &#x27;</span> <span class="operator">+</span> </span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),(<span class="variable">@OriginalSize</span><span class="operator">*</span><span class="number">8</span><span class="operator">/</span><span class="number">1024</span>)) <span class="operator">+</span> <span class="string">&#x27;MB&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> sysfiles</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line">(DummyColumn <span class="type">char</span> (<span class="number">8000</span>) <span class="keyword">not</span> <span class="keyword">null</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Counter</span>    <span class="type">INT</span>,</span><br><span class="line"><span class="variable">@StartTime</span> DATETIME,</span><br><span class="line"><span class="variable">@TruncLog</span>   <span class="type">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@StartTime</span> <span class="operator">=</span> GETDATE(),</span><br><span class="line"><span class="variable">@TruncLog</span> <span class="operator">=</span> <span class="string">&#x27;BACKUP LOG &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; WITH TRUNCATE_ONLY&#x27;</span></span><br><span class="line">DBCC SHRINKFILE (<span class="variable">@LogicalFileName</span>, <span class="variable">@NewSize</span>)</span><br><span class="line"><span class="keyword">EXEC</span> (<span class="variable">@TruncLog</span>)</span><br><span class="line"><span class="comment">-- Wrap the log if necessary.</span></span><br><span class="line">WHILE <span class="variable">@MaxMinutes</span> <span class="operator">&gt;</span> DATEDIFF (mi, <span class="variable">@StartTime</span>, GETDATE()) <span class="comment">-- time has not expired</span></span><br><span class="line"><span class="keyword">AND</span> <span class="variable">@OriginalSize</span> <span class="operator">=</span> (<span class="keyword">SELECT</span> size <span class="keyword">FROM</span> sysfiles <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span>)  </span><br><span class="line"><span class="keyword">AND</span> (<span class="variable">@OriginalSize</span> <span class="operator">*</span> <span class="number">8</span> <span class="operator">/</span><span class="number">1024</span>) <span class="operator">&gt;</span> <span class="variable">@NewSize</span>  </span><br><span class="line"><span class="keyword">BEGIN</span> <span class="comment">-- Outer loop.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@Counter</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">WHILE   ((<span class="variable">@Counter</span> <span class="operator">&lt;</span> <span class="variable">@OriginalSize</span> <span class="operator">/</span> <span class="number">16</span>) <span class="keyword">AND</span> (<span class="variable">@Counter</span> <span class="operator">&lt;</span> <span class="number">50000</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> <span class="comment">-- update</span></span><br><span class="line"><span class="keyword">INSERT</span> DummyTrans <span class="keyword">VALUES</span> (<span class="string">&#x27;Fill Log&#x27;</span>) <span class="keyword">DELETE</span> DummyTrans</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@Counter</span> <span class="operator">=</span> <span class="variable">@Counter</span> <span class="operator">+</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">EXEC</span> (<span class="variable">@TruncLog</span>)  </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Final Size of &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; LOG is &#x27;</span> <span class="operator">+</span></span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),size) <span class="operator">+</span> <span class="string">&#x27; 8K pages or &#x27;</span> <span class="operator">+</span> </span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),(size<span class="operator">*</span><span class="number">8</span><span class="operator">/</span><span class="number">1024</span>)) <span class="operator">+</span> <span class="string">&#x27;MB&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> sysfiles </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line"><span class="keyword">SET</span> NOCOUNT OFF</span><br></pre></td></tr></table></figure><h2 id="8-更改某个表"><a href="#8-更改某个表" class="headerlink" title="8. 更改某个表"></a>8. 更改某个表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_changeobjectowner <span class="string">&#x27;tablename&#x27;</span>,<span class="string">&#x27;dbo&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="9-存储更改全部表"><a href="#9-存储更改全部表" class="headerlink" title="9. 存储更改全部表"></a>9. 存储更改全部表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> dbo.User_ChangeObjectOwnerBatch</span><br><span class="line"><span class="variable">@OldOwner</span> <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>),</span><br><span class="line"><span class="variable">@NewOwner</span> <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Name</span>    <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Owner</span>   <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@OwnerName</span>   <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> curObject <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;Name&#x27;</span>    <span class="operator">=</span> name,</span><br><span class="line">   <span class="string">&#x27;Owner&#x27;</span>    <span class="operator">=</span> user_name(uid)</span><br><span class="line"><span class="keyword">from</span> sysobjects</span><br><span class="line"><span class="keyword">where</span> user_name(uid)<span class="operator">=</span><span class="variable">@OldOwner</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> name</span><br><span class="line"><span class="keyword">OPEN</span>   curObject</span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> <span class="variable">@Name</span>, <span class="variable">@Owner</span></span><br><span class="line">WHILE(@<span class="variable">@FETCH</span>_STATUS<span class="operator">=</span><span class="number">0</span>)</span><br><span class="line"><span class="keyword">BEGIN</span>     </span><br><span class="line">if <span class="variable">@Owner</span><span class="operator">=</span><span class="variable">@OldOwner</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">set</span> <span class="variable">@OwnerName</span> <span class="operator">=</span> <span class="variable">@OldOwner</span> <span class="operator">+</span> <span class="string">&#x27;.&#x27;</span> <span class="operator">+</span> rtrim(<span class="variable">@Name</span>)</span><br><span class="line">   <span class="keyword">exec</span> sp_changeobjectowner <span class="variable">@OwnerName</span>, <span class="variable">@NewOwner</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- select @name,@NewOwner,@OldOwner</span></span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> <span class="variable">@Name</span>, <span class="variable">@Owner</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">close</span> curObject</span><br><span class="line"><span class="keyword">deallocate</span> curObject</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h2 id="10-SQL-SERVER中直接循环写入数据"><a href="#10-SQL-SERVER中直接循环写入数据" class="headerlink" title="10. SQL SERVER中直接循环写入数据"></a>10. SQL SERVER中直接循环写入数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@i</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">while <span class="variable">@i</span><span class="operator">&lt;</span><span class="number">30</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test (userid) <span class="keyword">values</span>(<span class="variable">@i</span>)</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="variable">@i</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>案例：有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:</p><p>| Name | score |<br>| ——-  | —: |<br>|Zhangshan|80|<br>|Lishi  |59|<br>|Wangwu  |50|<br>|Songquan |69|</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">while((<span class="keyword">select</span> <span class="built_in">min</span>(score) <span class="keyword">from</span> tb_table)<span class="operator">&lt;</span><span class="number">60</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> tb_table <span class="keyword">set</span> score <span class="operator">=</span>score<span class="operator">*</span><span class="number">1.01</span></span><br><span class="line"><span class="keyword">where</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line">if (<span class="keyword">select</span> <span class="built_in">min</span>(score) <span class="keyword">from</span> tb_table)<span class="operator">&gt;</span><span class="number">60</span></span><br><span class="line">break</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">continue</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="11-查看数据库属性"><a href="#11-查看数据库属性" class="headerlink" title="11. 查看数据库属性"></a>11. 查看数据库属性</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_helpdb 数据库名</span><br></pre></td></tr></table></figure><h2 id="12-按姓氏笔画排序"><a href="#12-按姓氏笔画排序" class="headerlink" title="12. 按姓氏笔画排序:"></a>12. 按姓氏笔画排序:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="operator">*</span> <span class="keyword">From</span> TableName <span class="keyword">Order</span> <span class="keyword">By</span> CustomerName <span class="keyword">Collate</span> Chinese_PRC_Stroke_ci_as <span class="operator">/</span><span class="operator">/</span>从少到多</span><br></pre></td></tr></table></figure><h2 id="13-数据库加密"><a href="#13-数据库加密" class="headerlink" title="13. 数据库加密:"></a>13. 数据库加密:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> encrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">&#x27;原始密码&#x27;</span>,<span class="string">&#x27;加密后密码&#x27;</span>) <span class="operator">=</span> <span class="number">1</span><span class="comment">--相同；否则不相同 encrypt(&#x27;原始密码&#x27;)</span></span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">&#x27;原始密码&#x27;</span>,<span class="string">&#x27;加密后密码&#x27;</span>) <span class="operator">=</span> <span class="number">1</span><span class="comment">--相同；否则不相同</span></span><br></pre></td></tr></table></figure><h2 id="14-取回表中字段"><a href="#14-取回表中字段" class="headerlink" title="14. 取回表中字段:"></a>14. 取回表中字段:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@list</span> <span class="type">varchar</span>(<span class="number">1000</span>),</span><br><span class="line"><span class="variable">@sql</span> nvarchar(<span class="number">1000</span>) </span><br><span class="line"><span class="keyword">select</span> <span class="variable">@list</span><span class="operator">=</span><span class="variable">@list</span><span class="operator">+</span><span class="string">&#x27;,&#x27;</span><span class="operator">+</span>b.name <span class="keyword">from</span> sysobjects a,syscolumns b <span class="keyword">where</span> a.id<span class="operator">=</span>b.id <span class="keyword">and</span> a.name<span class="operator">=</span><span class="string">&#x27;表A&#x27;</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@sql</span><span class="operator">=</span><span class="string">&#x27;select &#x27;</span><span class="operator">+</span><span class="keyword">right</span>(<span class="variable">@list</span>,len(<span class="variable">@list</span>)<span class="number">-1</span>)<span class="operator">+</span><span class="string">&#x27; from 表A&#x27;</span> </span><br><span class="line"><span class="keyword">exec</span> (<span class="variable">@sql</span>)</span><br></pre></td></tr></table></figure><h2 id="15-查看硬盘分区"><a href="#15-查看硬盘分区" class="headerlink" title="15. 查看硬盘分区:"></a>15. 查看硬盘分区:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> master..xp_fixeddrives</span><br></pre></td></tr></table></figure><h2 id="16-比较A-B表是否相等"><a href="#16-比较A-B表是否相等" class="headerlink" title="16. 比较A,B表是否相等:"></a>16. 比较A,B表是否相等:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (<span class="keyword">select</span> checksum_agg(binary_checksum(<span class="operator">*</span>)) <span class="keyword">from</span> A)</span><br><span class="line">     <span class="operator">=</span></span><br><span class="line">    (<span class="keyword">select</span> checksum_agg(binary_checksum(<span class="operator">*</span>)) <span class="keyword">from</span> B)</span><br><span class="line">print <span class="string">&#x27;相等&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print <span class="string">&#x27;不相等&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="17-杀掉所有的事件探察器进程"><a href="#17-杀掉所有的事件探察器进程" class="headerlink" title="17. 杀掉所有的事件探察器进程:"></a>17. 杀掉所有的事件探察器进程:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> hcforeach <span class="keyword">CURSOR</span> <span class="keyword">GLOBAL</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="string">&#x27;kill &#x27;</span><span class="operator">+</span>RTRIM(spid) <span class="keyword">FROM</span> master.dbo.sysprocesses</span><br><span class="line"><span class="keyword">WHERE</span> program_name <span class="keyword">IN</span>(<span class="string">&#x27;SQL profiler&#x27;</span>,N<span class="string">&#x27;SQL 事件探查器&#x27;</span>)</span><br><span class="line"><span class="keyword">EXEC</span> sp_msforeach_worker <span class="string">&#x27;?&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="18-记录搜索"><a href="#18-记录搜索" class="headerlink" title="18. 记录搜索:"></a>18. 记录搜索:</h2><ul><li>开头到N条记录<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top N <span class="operator">*</span> <span class="keyword">From</span> 表</span><br></pre></td></tr></table></figure></li><li>N到M条记录(要有主索引ID)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top M<span class="operator">-</span>N <span class="operator">*</span> <span class="keyword">From</span> 表 <span class="keyword">Where</span> ID <span class="keyword">in</span> (<span class="keyword">Select</span> Top M ID <span class="keyword">From</span> 表) <span class="keyword">Order</span> <span class="keyword">by</span> ID   <span class="keyword">Desc</span></span><br></pre></td></tr></table></figure></li><li>N到结尾记录<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top N <span class="operator">*</span> <span class="keyword">From</span> 表 <span class="keyword">Order</span> <span class="keyword">by</span> ID <span class="keyword">Desc</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="19-获取当前数据库中的所有用户表"><a href="#19-获取当前数据库中的所有用户表" class="headerlink" title="19. 获取当前数据库中的所有用户表"></a>19. 获取当前数据库中的所有用户表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Name <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> status<span class="operator">&gt;=</span><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="20-获取某一个表的所有字段"><a href="#20-获取某一个表的所有字段" class="headerlink" title="20. 获取某一个表的所有字段"></a>20. 获取某一个表的所有字段</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id<span class="operator">=</span>object_id(<span class="string">&#x27;表名&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> sysobjects <span class="keyword">where</span> type <span class="operator">=</span> <span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> name <span class="operator">=</span> <span class="string">&#x27;表名&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="21-查看与某一个表相关的视图、存储过程、函数"><a href="#21-查看与某一个表相关的视图、存储过程、函数" class="headerlink" title="21. 查看与某一个表相关的视图、存储过程、函数"></a>21. 查看与某一个表相关的视图、存储过程、函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span> <span class="keyword">from</span> sysobjects a, syscomments b <span class="keyword">where</span> a.id <span class="operator">=</span> b.id <span class="keyword">and</span> b.text <span class="keyword">like</span> <span class="string">&#x27;%表名%&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="22-查看当前数据库中所有存储过程"><a href="#22-查看当前数据库中所有存储过程" class="headerlink" title="22. 查看当前数据库中所有存储过程"></a>22. 查看当前数据库中所有存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> 存储过程名称 <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;P&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="23-查询用户创建的所有数据库"><a href="#23-查询用户创建的所有数据库" class="headerlink" title="23. 查询用户创建的所有数据库"></a>23. 查询用户创建的所有数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> master..sysdatabases D <span class="keyword">where</span> sid <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> sid <span class="keyword">from</span> master..syslogins <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;sa&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> dbid, name <span class="keyword">AS</span> DB_NAME <span class="keyword">from</span> master..sysdatabases <span class="keyword">where</span> sid <span class="operator">&lt;&gt;</span> <span class="number">0x01</span></span><br></pre></td></tr></table></figure><h2 id="24-查询某一个表的字段和数据类型"><a href="#24-查询某一个表的字段和数据类型" class="headerlink" title="24. 查询某一个表的字段和数据类型"></a>24. 查询某一个表的字段和数据类型</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name,data_type <span class="keyword">from</span> information_schema.columns</span><br><span class="line"><span class="keyword">where</span> table_name <span class="operator">=</span> <span class="string">&#x27;表名&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="25-不同服务器数据库之间的数据操作"><a href="#25-不同服务器数据库之间的数据操作" class="headerlink" title="25. 不同服务器数据库之间的数据操作"></a>25. 不同服务器数据库之间的数据操作</h2><h4 id="25-1-创建链接服务器"><a href="#25-1-创建链接服务器" class="headerlink" title="25.1 创建链接服务器"></a>25.1 创建链接服务器</h4><ul><li>创建一个链接名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_addlinkedserver <span class="string">&#x27;LinkName &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;远程服务器名或IP地址 &#x27;</span> <span class="comment">--有自定义实例名时要加上&quot;/实例名&quot;</span></span><br></pre></td></tr></table></figure></li><li>创建登录信息（或叫创建链接服务器登录名映射）（只需选择一种方式即可）<ul><li>以windows认证的方式登录  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_addlinkedsrvlogin <span class="string">&#x27;LinkName&#x27;</span>  <span class="comment">--或EXEC sp_addlinkedsrvlogin &#x27;LinkName&#x27;,&#x27;true&#x27;</span></span><br></pre></td></tr></table></figure></li><li>以SQL认证的方式登录  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_addlinkedsrvlogin <span class="string">&#x27;LinkName &#x27;</span>, <span class="string">&#x27;false &#x27;</span>,<span class="keyword">null</span>, <span class="string">&#x27;用户名 &#x27;</span>, <span class="string">&#x27;密码 &#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="25-2-链接服务器相关数据操作"><a href="#25-2-链接服务器相关数据操作" class="headerlink" title="25.2 链接服务器相关数据操作"></a>25.2 链接服务器相关数据操作</h4><ul><li>查询示例<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> LinkName.数据库名.架构名.表名</span><br></pre></td></tr></table></figure></li></ul><h4 id="25-3-删除链接服务器"><a href="#25-3-删除链接服务器" class="headerlink" title="25.3 删除链接服务器"></a>25.3 删除链接服务器</h4><ul><li>删除登录信息(或叫删除链接服务器登录名映射)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_droplinkedsrvlogin <span class="string">&#x27;LinkName&#x27;</span>,<span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li><li>删除链接服务器名称<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_dropserver <span class="string">&#x27;LinkName &#x27;</span>, <span class="string">&#x27;droplogins&#x27;</span> <span class="comment">--如果指定droplogins，则在删除链接服务器之前要删除登录名映射</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="25-4-其它连接远程-x2F-局域网数据方法：OPENROWSET-x2F-OPENQUERY-x2F-opendatasource"><a href="#25-4-其它连接远程-x2F-局域网数据方法：OPENROWSET-x2F-OPENQUERY-x2F-opendatasource" class="headerlink" title="25.4 其它连接远程&#x2F;局域网数据方法：OPENROWSET&#x2F;OPENQUERY&#x2F;opendatasource"></a>25.4 其它连接远程&#x2F;局域网数据方法：OPENROWSET&#x2F;OPENQUERY&#x2F;opendatasource</h4><ul><li><h5 id="OPENROWSET方法（不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”-x2F-实例名”）"><a href="#OPENROWSET方法（不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”-x2F-实例名”）" class="headerlink" title="OPENROWSET方法（不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”&#x2F;实例名”）"></a>OPENROWSET方法（不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”&#x2F;实例名”）</h5><ul><li>查询示例<ul><li>Windows认证方式查询(以下方法之一即可)  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>SQL认证方式查询(以下方法之一即可)  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;sql服务器名&#x27;</span>;<span class="string">&#x27;用户名&#x27;</span>;<span class="string">&#x27;密码&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;sql服务器名&#x27;</span>;<span class="string">&#x27;用户名&#x27;</span>;<span class="string">&#x27;密码&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;sql服务器名&#x27;</span>;<span class="string">&#x27;用户名&#x27;</span>;<span class="string">&#x27;密码&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENROWSET(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;sql服务器名&#x27;</span>;<span class="string">&#x27;用户名&#x27;</span>; <span class="string">&#x27;密码&#x27;</span>,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li>生成本地表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">INTO</span> 表 <span class="keyword">FROM</span> openrowset( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名)</span><br></pre></td></tr></table></figure></li><li>把本地表导入远程表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> OPENROWSET(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>,数据库名.架构名.表名)</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 本地表</span><br></pre></td></tr></table></figure></li><li>关联更新本地表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> b</span><br><span class="line">   <span class="keyword">SET</span> b.列A <span class="operator">=</span> a.列A</span><br><span class="line">  <span class="keyword">FROM</span> OPENROWSET( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名) <span class="keyword">AS</span> a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> 本地表 b <span class="keyword">ON</span> a.column1 <span class="operator">=</span> b.column1</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="OPENQUERY方法（需要先创建一个链接）"><a href="#OPENQUERY方法（需要先创建一个链接）" class="headerlink" title="OPENQUERY方法（需要先创建一个链接）"></a>OPENQUERY方法（需要先创建一个链接）</h5><ul><li>查询示例  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENQUERY(LinkName,<span class="string">&#x27;SELECT * FROM 数据库名.架构名.表名&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>把本地表导入远程表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> OPENQUERY(LinkName, <span class="string">&#x27;SELECT *  FROM 数据库名.架构名.表名&#x27;</span>) <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 本地表</span><br></pre></td></tr></table></figure></li><li>关联更新本地表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> b</span><br><span class="line">   <span class="keyword">SET</span> b.列A <span class="operator">=</span> a.列A</span><br><span class="line">  <span class="keyword">FROM</span> OPENQUERY(ITSV, <span class="string">&#x27;SELECT * FROM 数据库.dbo.表名 &#x27;</span>) <span class="keyword">AS</span> a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> 本地表 b <span class="keyword">ON</span> a.column1 <span class="operator">=</span> b.column1</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="OPENDATASOURCE方法-不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”-x2F-实例名”"><a href="#OPENDATASOURCE方法-不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”-x2F-实例名”" class="headerlink" title="OPENDATASOURCE方法(不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”&#x2F;实例名”)"></a>OPENDATASOURCE方法(不需要用到创建好的链接名。如果连接的实例名不是默认的，需要在”sql服务器名或IP地址”后加上”&#x2F;实例名”)</h5><ul><li>查询示例<ul><li>Windows认证方式查询(以下方法之一即可)  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>).数据库名.架构名.表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;Trusted_Connection=yes&#x27;</span>).数据库名.架构名.表名</span><br></pre></td></tr></table></figure></li><li>SQL认证方式查询(以下方法之一即可)  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>).数据库名.架构名.表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>).数据库名.架构名.表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;Data Source=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>).数据库名.架构名.表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> OPENDATASOURCE(<span class="string">&#x27;SQLNCLI&#x27;</span>, <span class="string">&#x27;Data Source=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>).数据库名.架构名.表名</span><br></pre></td></tr></table></figure></li></ul></li><li>导入示例  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> OPENDATASOURCE(<span class="string">&#x27;SQLOLEDB&#x27;</span>, <span class="string">&#x27;server=sql服务器名或IP地址;uid=用户名;pwd=密码&#x27;</span>).数据库名.架构名.表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 本地表</span><br></pre></td></tr></table></figure><blockquote><p>如果出现如下错误：SQL Server 阻止了对组件“Ad Hoc Distributed Queries”的STATEMENT“OpenRowset&#x2F;OpenDatasource”的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用“Ad Hoc Distributed Queries”。有关启用“Ad Hoc Distributed Queries”<br>则解决办法是参照下面命令：</p></blockquote></li></ul></li></ul><ol><li>开启Ad Hoc Distributed Queries组件，在sql查询编辑器中执行如下语句：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">1</span></span><br><span class="line">reconfigure</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;Ad Hoc Distributed Queries&#x27;</span>,<span class="number">1</span></span><br><span class="line">reconfigure</span><br></pre></td></tr></table></figure></li><li>关闭Ad Hoc Distributed Queries组件，在sql查询编辑器中执行如下语句：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;Ad Hoc Distributed Queries&#x27;</span>,<span class="number">0</span></span><br><span class="line">reconfigure</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">0</span></span><br><span class="line">reconfigure</span><br></pre></td></tr></table></figure></li></ol><h2 id="26-删除数据库下面的所有表"><a href="#26-删除数据库下面的所有表" class="headerlink" title="26. 删除数据库下面的所有表"></a>26. 删除数据库下面的所有表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名(是要删除表的所在的那个数据库的名称)</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sql</span> <span class="type">varchar</span>(<span class="number">8000</span>)</span><br><span class="line">while (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sysobjects <span class="keyword">where</span> type<span class="operator">=</span><span class="string">&#x27;U&#x27;</span>)<span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@sql</span><span class="operator">=</span><span class="string">&#x27;drop table &#x27;</span> <span class="operator">+</span> name</span><br><span class="line"><span class="keyword">FROM</span> sysobjects</span><br><span class="line"><span class="keyword">WHERE</span> (type <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">&#x27;drop table &#x27;</span> <span class="operator">+</span> name</span><br><span class="line"><span class="keyword">exec</span>(<span class="variable">@sql</span>) </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="27-查看数据库文件使用情况"><a href="#27-查看数据库文件使用情况" class="headerlink" title="27. 查看数据库文件使用情况"></a>27. 查看数据库文件使用情况</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  A.name                                                     <span class="keyword">AS</span> &quot;逻辑名称&quot;</span><br><span class="line">       ,<span class="keyword">CONVERT</span>(<span class="type">FLOAT</span> ,A.size)             <span class="operator">*</span> (<span class="number">8192.0</span><span class="operator">/</span><span class="number">1024.0</span>)<span class="operator">/</span><span class="number">1024</span>  <span class="keyword">AS</span> &quot;已用大小MB&quot;</span><br><span class="line">       ,<span class="keyword">CONVERT</span>(<span class="type">FLOAT</span> ,A.maxSize <span class="operator">-</span> A.size) <span class="operator">*</span> (<span class="number">8192.0</span><span class="operator">/</span><span class="number">1024.0</span>)<span class="operator">/</span><span class="number">1024</span>  <span class="keyword">AS</span> &quot;可用大小MB&quot;</span><br><span class="line">       ,<span class="keyword">CONVERT</span>(<span class="type">FLOAT</span> ,A.maxSize)          <span class="operator">*</span> (<span class="number">8192.0</span><span class="operator">/</span><span class="number">1024.0</span>)<span class="operator">/</span><span class="number">1024</span>  <span class="keyword">AS</span> &quot;分配大小MB&quot;</span><br><span class="line">       ,A.fileName                                                 <span class="keyword">AS</span> &quot;文件路径&quot;</span><br><span class="line">       ,(</span><br><span class="line">         <span class="keyword">SELECT</span>  SA.groupName</span><br><span class="line">           <span class="keyword">FROM</span>  SysFileGroups  SA</span><br><span class="line">          <span class="keyword">WHERE</span>  SA.groupID <span class="operator">=</span> A.groupID</span><br><span class="line">        )                                                          <span class="keyword">AS</span> &quot;文件组&quot;</span><br><span class="line">       ,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> A.status <span class="operator">=</span> <span class="number">1081346</span> <span class="keyword">THEN</span> <span class="string">&#x27;磁盘文件&#x27;</span>               </span><br><span class="line">             <span class="keyword">WHEN</span> A.status <span class="operator">=</span> <span class="number">1081410</span> <span class="keyword">THEN</span> <span class="string">&#x27;日志设备&#x27;</span></span><br><span class="line">             <span class="keyword">ELSE</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span> ,A.status) <span class="keyword">END</span>                   <span class="keyword">AS</span> &quot;文件类型&quot;</span><br><span class="line">  <span class="keyword">FROM</span>  SysFiles  A</span><br></pre></td></tr></table></figure><h2 id="28-修改sa的密码"><a href="#28-修改sa的密码" class="headerlink" title="28. 修改sa的密码"></a>28. 修改sa的密码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_password <span class="string">&#x27;OldPassword&#x27;</span>,<span class="string">&#x27;NewPassword&#x27;</span>,<span class="string">&#x27;sa&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>不知道OldPassword时，可用NULL代替。</p></blockquote><h2 id="29-查询表的索引"><a href="#29-查询表的索引" class="headerlink" title="29. 查询表的索引"></a>29. 查询表的索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> 表名 <span class="operator">=</span> c.name,</span><br><span class="line">         索引名称 <span class="operator">=</span> a.name,</span><br><span class="line">         索引字段名 <span class="operator">=</span> d.name,</span><br><span class="line">         索引字段位置 <span class="operator">=</span> d.colid,</span><br><span class="line">         c.status</span><br><span class="line">    <span class="keyword">FROM</span> sysindexes   a</span><br><span class="line">    <span class="keyword">JOIN</span> sysindexkeys b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id <span class="keyword">AND</span> a.indid <span class="operator">=</span> b.indid</span><br><span class="line">    <span class="keyword">JOIN</span> sysobjects   c <span class="keyword">ON</span> b.id <span class="operator">=</span> c.id</span><br><span class="line">    <span class="keyword">JOIN</span> syscolumns   d <span class="keyword">ON</span> b.id <span class="operator">=</span> d.id <span class="keyword">AND</span> b.colid <span class="operator">=</span> d.colid</span><br><span class="line">   <span class="keyword">WHERE</span> a.indid <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">     <span class="keyword">AND</span> c.xtype <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span></span><br><span class="line">  <span class="comment">-- AND c.status &gt; 0 --查所有用户表</span></span><br><span class="line">     <span class="keyword">AND</span> c.name <span class="operator">=</span> <span class="string">&#x27;order&#x27;</span> <span class="comment">--查指定表</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> c.name,a.name,d.name;</span><br></pre></td></tr></table></figure><h2 id="30-查询没有索引的表"><a href="#30-查询没有索引的表" class="headerlink" title="30. 查询没有索引的表"></a>30. 查询没有索引的表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> sysobjects</span><br><span class="line">   <span class="keyword">WHERE</span> xtype <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span></span><br><span class="line">     <span class="keyword">AND</span> name <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">       <span class="keyword">SELECT</span> c.name</span><br><span class="line">         <span class="keyword">FROM</span> sysindexes   a</span><br><span class="line">         <span class="keyword">JOIN</span> sysindexkeys b <span class="keyword">ON</span> a.id <span class="operator">=</span> b.id <span class="keyword">AND</span> a.indid <span class="operator">=</span> b.indid</span><br><span class="line">         <span class="keyword">JOIN</span> sysobjects   c <span class="keyword">ON</span> b.id <span class="operator">=</span> c.id</span><br><span class="line">         <span class="keyword">JOIN</span> syscolumns   d <span class="keyword">ON</span> b.id <span class="operator">=</span> d.id <span class="keyword">AND</span> b.colid <span class="operator">=</span> d.colid</span><br><span class="line">        <span class="keyword">WHERE</span> a.indid <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">          <span class="keyword">AND</span> c.xtype <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span></span><br><span class="line">            <span class="comment">--AND c.status &gt; 0 --查所有用户表</span></span><br><span class="line">        <span class="comment">--AND c.name = &#x27;order&#x27; --查指定表</span></span><br><span class="line">         )</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> name</span><br></pre></td></tr></table></figure><hr><h1 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h1><ul><li>在SQL查询中，<code>FROM</code>后最多可以跟256张表或视图</li><li>在SQL语句中使用<code>ORDER BY</code>查询时，先排序，后取值</li><li>在SQL中，一个字段的最大容量是8000</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 经典语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL获取字符串最后出现的位置</title>
      <link href="/2016/11/29/SQL%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE/"/>
      <url>/2016/11/29/SQL%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置："><a href="#1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：" class="headerlink" title="1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置："></a>1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@str3</span> <span class="type">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@str3</span> <span class="operator">=</span> <span class="string">&#x27;6.7.8.2.3.4.x&#x27;</span> </span><br><span class="line"><span class="keyword">SELECT</span> LEN(<span class="variable">@str3</span>) <span class="operator">-</span> CHARINDEX(<span class="string">&#x27;.&#x27;</span>, REVERSE(<span class="variable">@str3</span>)) <span class="operator">+</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>Integer:12</code></pre><span id="more"></span><h3 id="2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串："><a href="#2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：" class="headerlink" title="2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串："></a>2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@str2</span> <span class="type">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@str2</span> <span class="operator">=</span> <span class="string">&#x27;6.7.8.2.3.4.x&#x27;</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUBSTRING</span> (<span class="variable">@str2</span>, <span class="number">1</span>, (LEN(<span class="variable">@str2</span>) <span class="operator">-</span> CHARINDEX(<span class="string">&#x27;.&#x27;</span>, REVERSE(<span class="variable">@str2</span>)) ) )</span><br></pre></td></tr></table></figure><pre><code>string:&#39;6.7.8.2.3.4&#39;</code></pre><h3 id="3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串："><a href="#3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：" class="headerlink" title="3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串："></a>3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@str1</span> <span class="type">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@str1</span> <span class="operator">=</span> <span class="string">&#x27;6.7.8.2.3.4.x&#x27;</span> </span><br><span class="line"><span class="keyword">SELECT</span> REVERSE(<span class="built_in">SUBSTRING</span> (REVERSE(<span class="variable">@str1</span>), <span class="number">1</span>, CHARINDEX(<span class="string">&#x27;.&#x27;</span>, REVERSE(<span class="variable">@str1</span>)) <span class="operator">-</span> <span class="number">1</span>) )</span><br></pre></td></tr></table></figure><pre><code>string:&#39;x&#39;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL查询死锁和阻塞</title>
      <link href="/2016/11/29/SQL%E6%9F%A5%E8%AF%A2%E6%AD%BB%E9%94%81%E5%92%8C%E9%98%BB%E5%A1%9E/"/>
      <url>/2016/11/29/SQL%E6%9F%A5%E8%AF%A2%E6%AD%BB%E9%94%81%E5%92%8C%E9%98%BB%E5%A1%9E/</url>
      
        <content type="html"><![CDATA[<h3 id="查询死锁进程"><a href="#查询死锁进程" class="headerlink" title="查询死锁进程"></a>查询死锁进程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">request_session_id spid,</span><br><span class="line">OBJECT_NAME(</span><br><span class="line">resource_associated_entity_id</span><br><span class="line">) tableName</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys.dm_tran_locks</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">resource_type <span class="operator">=</span> <span class="string">&#x27;OBJECT&#x27;</span>;</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">标志,</span><br><span class="line">进程ID <span class="operator">=</span> spid,</span><br><span class="line">线程ID <span class="operator">=</span> kpid,</span><br><span class="line">块进程ID <span class="operator">=</span> blocked,</span><br><span class="line">数据库ID <span class="operator">=</span> dbid,</span><br><span class="line">数据库名 <span class="operator">=</span> db_name(dbid),</span><br><span class="line">用户ID <span class="operator">=</span> uid,</span><br><span class="line">用户名 <span class="operator">=</span> loginame,</span><br><span class="line">累计CPU时间 <span class="operator">=</span> cpu,</span><br><span class="line">登陆时间 <span class="operator">=</span> login_time,</span><br><span class="line">打开事务数 <span class="operator">=</span> open_tran,</span><br><span class="line">进程状态 <span class="operator">=</span> status,</span><br><span class="line">工作站名 <span class="operator">=</span> hostname,</span><br><span class="line">应用程序名 <span class="operator">=</span> program_name,</span><br><span class="line">工作站进程ID <span class="operator">=</span> hostprocess,</span><br><span class="line">域名 <span class="operator">=</span> nt_domain,</span><br><span class="line">网卡地址 <span class="operator">=</span> net_address </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">标志 <span class="operator">=</span> <span class="string">&#x27;死锁的进程&#x27;</span>,</span><br><span class="line">spid,</span><br><span class="line">kpid,</span><br><span class="line">a.blocked,</span><br><span class="line">dbid,</span><br><span class="line">uid,</span><br><span class="line">loginame,</span><br><span class="line">cpu,</span><br><span class="line">login_time,</span><br><span class="line">open_tran,</span><br><span class="line">status,</span><br><span class="line">hostname,</span><br><span class="line">program_name,</span><br><span class="line">hostprocess,</span><br><span class="line">nt_domain,</span><br><span class="line">net_address,</span><br><span class="line">s1 <span class="operator">=</span> a.spid,</span><br><span class="line">s2 <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">master..sysprocesses a</span><br><span class="line"><span class="keyword">JOIN</span> (</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">blocked</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">master..sysprocesses</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">blocked</span><br><span class="line">) b <span class="keyword">ON</span> a.spid <span class="operator">=</span> b.blocked</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">a.blocked <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="string">&#x27;|_牺牲品_&gt;&#x27;</span>,</span><br><span class="line">spid,</span><br><span class="line">kpid,</span><br><span class="line">blocked,</span><br><span class="line">dbid,</span><br><span class="line">uid,</span><br><span class="line">loginame,</span><br><span class="line">cpu,</span><br><span class="line">login_time,</span><br><span class="line">open_tran,</span><br><span class="line">status,</span><br><span class="line">hostname,</span><br><span class="line">program_name,</span><br><span class="line">hostprocess,</span><br><span class="line">nt_domain,</span><br><span class="line">net_address,</span><br><span class="line">s1 <span class="operator">=</span> blocked,</span><br><span class="line">s2 <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">master..sysprocesses a</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">blocked <span class="operator">&lt;&gt;</span> <span class="number">0</span></span><br><span class="line">) a</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">s1,</span><br><span class="line">s2</span><br></pre></td></tr></table></figure><h3 id="杀死死锁进程"><a href="#杀死死锁进程" class="headerlink" title="杀死死锁进程"></a>杀死死锁进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KILL spid;</span><br></pre></td></tr></table></figure><h3 id="每秒死锁数量"><a href="#每秒死锁数量" class="headerlink" title="每秒死锁数量"></a>每秒死锁数量</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span>    sys.dm_os_performance_counters</span><br><span class="line"><span class="keyword">WHERE</span>   counter_name <span class="keyword">LIKE</span> <span class="string">&#x27;Number of Deadlocksc%&#x27;</span>;</span><br></pre></td></tr></table></figure><!-- more --><h3 id="查询当前阻塞"><a href="#查询当前阻塞" class="headerlink" title="查询当前阻塞"></a>查询当前阻塞</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> CTE_SID (BSID, SID, sql_handle) <span class="keyword">AS</span> (</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">blocking_session_id,</span><br><span class="line">session_id,</span><br><span class="line">sql_handle</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys.dm_exec_requests</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">blocking_session_id <span class="operator">&lt;&gt;</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">A.blocking_session_id,</span><br><span class="line">A.session_id,</span><br><span class="line">A.sql_handle</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys.dm_exec_requests A</span><br><span class="line"><span class="keyword">JOIN</span> CTE_SID B <span class="keyword">ON</span> A.SESSION_ID <span class="operator">=</span> B.BSID</span><br><span class="line">) <span class="keyword">SELECT</span></span><br><span class="line">C.BSID,</span><br><span class="line">C.SID,</span><br><span class="line">S.login_name,</span><br><span class="line">S.host_name,</span><br><span class="line">S.status,</span><br><span class="line">S.cpu_time,</span><br><span class="line">S.memory_usage,</span><br><span class="line">S.last_request_start_time,</span><br><span class="line">S.last_request_end_time,</span><br><span class="line">S.logical_reads,</span><br><span class="line">S.row_count,</span><br><span class="line">q. TEXT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">CTE_SID C</span><br><span class="line"><span class="keyword">JOIN</span> sys.dm_exec_sessions S <span class="keyword">ON</span> C.sid <span class="operator">=</span> s.session_id <span class="keyword">CROSS</span> APPLY sys.dm_exec_sql_text (C.sql_handle) Q</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">sid;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle之imp和exp语句</title>
      <link href="/2016/11/29/Oracle%E4%B9%8Bimp%E5%92%8Cexp%E8%AF%AD%E5%8F%A5/"/>
      <url>/2016/11/29/Oracle%E4%B9%8Bimp%E5%92%8Cexp%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="exp-x2F-imp命令详解"><a href="#exp-x2F-imp命令详解" class="headerlink" title="exp&#x2F;imp命令详解"></a>exp&#x2F;imp命令详解</h2><p>exp导出命令<br>imp导入命令</p><span id="more"></span><p><strong>exp导出模式</strong><br>full模式：导出整个数据库<br>user模式：导出指定的用户<br>table模式：导出指定的表<br>tablespace模式：导出表空间</p><p><strong>exp导出参数</strong><br>owner：指定要导出的用户列表<br>full&#x3D;y：表示要导出整个数据库<br>tables：指定要导出的表<br>tablepaces：指定要导出的表空间<br>rows&#x3D;y：表示导出表数据,否则只导出表的结构.<br>help&#x3D;y：表示要获取帮助<br>indexs：指定是否导出索引<br>grants：表示是否导出授权<br>query：定查询条件,允许用户导出表的一部分数据<br>triggers：指定是否导出触发器</p><h2 id="exp-x2F-imp使用方法"><a href="#exp-x2F-imp使用方法" class="headerlink" title="exp&#x2F;imp使用方法"></a>exp&#x2F;imp使用方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imp username/password@connect_string param=value …</span><br><span class="line">exp username/password@connect_string param=value …</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exp xcba/xcba@orcl file=C:\xcba.dmp log=C:\xcba.log owner=(xcba)</span><br><span class="line">imp xcba/xcba@orcl file=C:\xcba.dmp log=C:\xcba.log full=y ignore=y</span><br></pre></td></tr></table></figure><blockquote><p>导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。<br>具体作法：将“HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”</p></blockquote><h2 id="exp-x2F-imp导入导出方式"><a href="#exp-x2F-imp导入导出方式" class="headerlink" title="exp&#x2F;imp导入导出方式"></a>exp&#x2F;imp导入导出方式</h2><h3 id="1-表方式，将指定表的数据导出-x2F-导入。"><a href="#1-表方式，将指定表的数据导出-x2F-导入。" class="headerlink" title="1. 表方式，将指定表的数据导出&#x2F;导入。"></a>1. 表方式，将指定表的数据导出&#x2F;导入。</h3><p><strong>导出：</strong><br>导出一张或几张表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2</span><br></pre></td></tr></table></figure><p>如果是分区表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2</span><br></pre></td></tr></table></figure><p>导出某张表的部分数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\”where col1=\’…\’ and col2 \&lt;…\” </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\”where col1=\’…\’ and col2 \&lt;…\”</span><br></pre></td></tr></table></figure><p><strong>导入：</strong><br>导入一张或几张表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure><p>如果是分区表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class="line">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure><h3 id="2-用户方式，将指定用户的所有对象及数据导出-x2F-导入。"><a href="#2-用户方式，将指定用户的所有对象及数据导出-x2F-导入。" class="headerlink" title="2. 用户方式，将指定用户的所有对象及数据导出&#x2F;导入。"></a>2. 用户方式，将指定用户的所有对象及数据导出&#x2F;导入。</h3><p><strong>导出：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)</span><br></pre></td></tr></table></figure><p>只导出数据对象，不导出数据  (rows&#x3D;n )</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n</span><br></pre></td></tr></table></figure><p><strong>导入：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y </span><br><span class="line">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y</span><br></pre></td></tr></table></figure><h3 id="3-全库方式，将数据库中的所有对象导出-x2F-导入"><a href="#3-全库方式，将数据库中的所有对象导出-x2F-导入" class="headerlink" title="3. 全库方式，将数据库中的所有对象导出&#x2F;导入"></a>3. 全库方式，将数据库中的所有对象导出&#x2F;导入</h3><p><strong>导出：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y </span><br><span class="line">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y</span><br></pre></td></tr></table></figure><p><strong>导入：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle删除和创建表空间及用户</title>
      <link href="/2016/11/29/Oracle%E5%88%A0%E9%99%A4%E5%92%8C%E5%88%9B%E5%BB%BA%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8F%8A%E7%94%A8%E6%88%B7/"/>
      <url>/2016/11/29/Oracle%E5%88%A0%E9%99%A4%E5%92%8C%E5%88%9B%E5%BB%BA%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8F%8A%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-删除表空间和用户"><a href="#1-删除表空间和用户" class="headerlink" title="1. 删除表空间和用户"></a>1. 删除表空间和用户</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DROP USER XCBA CASCADE;</span><br><span class="line">DROP tablespace XCBA_temp including contents AND datafiles;</span><br><span class="line">DROP tablespace XCBA including contents AND datafiles;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-创建临时表空间"><a href="#2-创建临时表空间" class="headerlink" title="2. 创建临时表空间"></a>2. 创建临时表空间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TEMPORARY tablespace XCBA_TEMP </span><br><span class="line">tempfile &#x27;E:\oracle\product\10.2.0\oradata\XCBA\XCBA_TEMP.dbf&#x27; </span><br><span class="line">SIZE 32m </span><br><span class="line">autoextend ON </span><br><span class="line">NEXT 32m maxsize 2048m </span><br><span class="line">extent management LOCAL;</span><br></pre></td></tr></table></figure><h3 id="3-创建数据表空间"><a href="#3-创建数据表空间" class="headerlink" title="3. 创建数据表空间"></a>3. 创建数据表空间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE tablespace XCBA </span><br><span class="line">logging datafile &#x27;E:\oracle\product\10.2.0\oradata\XCBA\XCBA.dbf&#x27; </span><br><span class="line">SIZE 32m </span><br><span class="line">autoextend ON </span><br><span class="line">NEXT 32m maxsize 2048m </span><br><span class="line">extent management LOCAL;</span><br></pre></td></tr></table></figure><h3 id="4-创建用户并指定表空间"><a href="#4-创建用户并指定表空间" class="headerlink" title="4. 创建用户并指定表空间"></a>4. 创建用户并指定表空间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER XCBA identified BY XCBA </span><br><span class="line">DEFAULT tablespace XCBA </span><br><span class="line">TEMPORARY tablespace XCBA_TEMP;</span><br></pre></td></tr></table></figure><h3 id="5-给用户授予权限"><a href="#5-给用户授予权限" class="headerlink" title="5. 给用户授予权限"></a>5. 给用户授予权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GRANT CONNECT, resource TO XCBA;</span><br><span class="line">ALTER USER XCBA ACCOUNT UNLOCK;</span><br><span class="line">GRANT dba TO XCBA;</span><br><span class="line">ALTER USER XCBA DEFAULT role DBA</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL常见问题</title>
      <link href="/2016/11/29/SQL%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2016/11/29/SQL%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="关于SQL的常见问题解答"><a href="#关于SQL的常见问题解答" class="headerlink" title="关于SQL的常见问题解答"></a>关于SQL的常见问题解答</h1><h3 id="1-SQL语句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”"><a href="#1-SQL语句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”" class="headerlink" title="1. SQL语句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”"></a>1. SQL语句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”</h3><p>例如，报错SQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">gz,</span><br><span class="line">yz</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> gz, yz <span class="keyword">FROM</span> dg <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dgdw <span class="keyword">ON</span> dg.dg <span class="operator">=</span> dgdw.gz <span class="keyword">WHERE</span> cpxh <span class="operator">=</span> <span class="string">&#x27;abc&#x27;</span>) <span class="keyword">AS</span> a</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">gz;</span><br></pre></td></tr></table></figure><p>在Access里执行没问题，但放到代码里就<code>FROM子句语法错误</code>。此时，只需将from子语句用[]括起来，后面跟一个.即可。<br>正确SQL如下：</p><span id="more"></span><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">gz,</span><br><span class="line">yz</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">[<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> gz, yz <span class="keyword">FROM</span> dg <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dgdw <span class="keyword">ON</span> dg.dg <span class="operator">=</span> dgdw.gz <span class="keyword">WHERE</span> cpxh <span class="operator">=</span> <span class="string">&#x27;abc&#x27;</span>]. <span class="keyword">AS</span> a</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">gz;</span><br></pre></td></tr></table></figure><h3 id="2-SQL-Server安装提示暂挂项目"><a href="#2-SQL-Server安装提示暂挂项目" class="headerlink" title="2. SQL Server安装提示暂挂项目"></a>2. SQL Server安装提示暂挂项目</h3><p>打开注册表编辑器，在<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager</code>中找到<code>PendingFileRenameOperations</code>项目，并删除它。这样就可以清除安装暂挂项目。</p><h3 id="3-SQL语句在查询分析器执行速度很快，但在程序代码中执行很慢"><a href="#3-SQL语句在查询分析器执行速度很快，但在程序代码中执行很慢" class="headerlink" title="3. SQL语句在查询分析器执行速度很快，但在程序代码中执行很慢"></a>3. SQL语句在查询分析器执行速度很快，但在程序代码中执行很慢</h3><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> MRec <span class="keyword">As</span> <span class="built_in">New</span> ADODB.Recordset</span><br></pre></td></tr></table></figure><p>例如，在VB代码中使用上面定义的对象执行<code>MRec.Open</code>时，查询很慢，但SQL在查询分析器中执行很快很快。<br>此时的解决办法是：更换Recordset对象，例如使用<code>Public MRec2 As New ADODB.Recordset</code>定义新的MRec2查询即可。</p><blockquote><p>具体原因不详，很诡异的问题。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FAQ </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS常见中文字体的英文名</title>
      <link href="/2016/11/28/CSS%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E7%9A%84%E8%8B%B1%E6%96%87%E5%90%8D/"/>
      <url>/2016/11/28/CSS%E5%B8%B8%E8%A7%81%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E7%9A%84%E8%8B%B1%E6%96%87%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：</p><h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>华文细黑：STHeiti Light [STXihei]<br>华文黑体：STHeiti<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文仿宋：STFangsong<br>儷黑 Pro：LiHei Pro Medium<br>儷宋 Pro：LiSong Pro Light<br>標楷體：BiauKai<br>蘋果儷中黑：Apple LiGothic Medium<br>蘋果儷細宋：Apple LiSung Light</p><span id="more"></span><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>新細明體：PMingLiU<br>細明體：MingLiU<br>標楷體：DFKai-SB<br>黑体：SimHei<br>宋体：SimSun<br>新宋体：NSimSun<br>仿宋：FangSong<br>楷体：KaiTi<br>仿宋_GB2312：FangSong_GB2312<br>楷体_GB2312：KaiTi_GB2312<br>微軟正黑體：Microsoft JhengHei<br>微软雅黑体：Microsoft YaHei</p><h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><p>隶书：LiSu<br>幼圆：YouYuan<br>华文细黑：STXihei<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文中宋：STZhongsong<br>华文仿宋：STFangsong<br>方正舒体：FZShuTi<br>方正姚体：FZYaoti<br>华文彩云：STCaiyun<br>华文琥珀：STHupo<br>华文隶书：STLiti<br>华文行楷：STXingkai<br>华文新魏：STXinwei</p><h4 id="例：CSS中正确设置微软雅黑字体"><a href="#例：CSS中正确设置微软雅黑字体" class="headerlink" title="例：CSS中正确设置微软雅黑字体"></a>例：CSS中正确设置微软雅黑字体</h4><p>.selector{ font-family:”Microsoft YaHei”,微软雅黑,”MicrosoftJhengHei”,华文细黑,STHeiti,MingLiu }</p><blockquote><p>说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。<br>注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS样式 </tag>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript字符串去除空格</title>
      <link href="/2016/11/28/JavaScript%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC/"/>
      <url>/2016/11/28/JavaScript%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<ul><li>去除所有空格:<br>str   &#x3D;   str.replace(&#x2F;\s+&#x2F;g,””);       </li><li>去除两边空格:<br>str   &#x3D;   str.replace(&#x2F;^\s+|\s+$&#x2F;g,””);</li><li>去除左空格：<br>str&#x3D;str.replace( &#x2F;^\s*&#x2F;, ‘’);</li><li>去除右空格：<br>str&#x3D;str.replace(&#x2F;(\s*$)&#x2F;g, “”);</li></ul><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器虚拟化的好处</title>
      <link href="/2016/11/28/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
      <url>/2016/11/28/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%A5%BD%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器虚拟化的好处"><a href="#服务器虚拟化的好处" class="headerlink" title="服务器虚拟化的好处"></a>服务器虚拟化的好处</h1><hr><ul><li><p>整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。</p></li><li><p>避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。</p></li><li><p>事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。</p></li><li><p>节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。</p></li><li><p>迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。</p></li><li><p>减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。</p></li></ul><blockquote><p>高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。</p></blockquote><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows命令大全</title>
      <link href="/2016/11/24/Windows%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2016/11/24/Windows%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><span id="more"></span><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>shutdown</td><td align="left">重启</td></tr><tr><td>nbtstat -a 192.168.0.5</td><td align="left">通过IP查找主机名</td></tr><tr><td>ipconfig &#x2F;flushdns</td><td align="left">刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\Windows\System32\drivers\etc）</td></tr><tr><td>tskill PID</td><td align="left">找到占用端口的PID</td></tr><tr><td>netstat -ab</td><td align="left">杀死进程</td></tr><tr><td>netstat -ano</td><td align="left">查看所有的端口占用情况</td></tr><tr><td>netstat -aon</td><td align="left">findstr “9050”</td></tr><tr><td>tasklist</td><td align="left">findstr “2016”</td></tr><tr><td>taskkill &#x2F;f &#x2F;t &#x2F;im tor.exe</td><td align="left">结束该进程tor.exe</td></tr><tr><td>notepad</td><td align="left">记事本</td></tr><tr><td>clipbrd</td><td align="left">剪切板</td></tr><tr><td>systeminfo</td><td align="left">查看系统信息</td></tr><tr><td>gpedit.msc</td><td align="left">组策略（关闭自动播放）</td></tr><tr><td>odbcad32.exe</td><td align="left">数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\Windows\SysWOW64\odbcad32.exe</td></tr><tr><td>arp -a</td><td align="left">查看IP对应的MAC地址</td></tr><tr><td>arp -s</td><td align="left">添加IP对应的MAC地址</td></tr><tr><td>dxdiag</td><td align="left">查看系统DirectX</td></tr><tr><td>psr</td><td align="left">问题步骤记录器</td></tr><tr><td>gpedit.msc</td><td align="left">组策略</td></tr><tr><td>sndrec32</td><td align="left">录音机</td></tr><tr><td>Nslookup</td><td align="left">IP地址侦测器</td></tr><tr><td>explorer</td><td align="left">打开资源管理器</td></tr><tr><td>logoff</td><td align="left">注销命令</td></tr><tr><td>tsshutdn</td><td align="left">60秒倒计时关机命令</td></tr><tr><td>lusrmgr.msc</td><td align="left">本机用户和组</td></tr><tr><td>services.msc</td><td align="left">本地服务设置</td></tr><tr><td>oobe&#x2F;msoobe &#x2F;a</td><td align="left">检查XP是否激活</td></tr><tr><td>notepad</td><td align="left">打开记事本</td></tr><tr><td>cleanmgr</td><td align="left">垃圾整理</td></tr><tr><td>net start messenger</td><td align="left">开始信使服务</td></tr><tr><td>compmgmt.msc</td><td align="left">计算机管理</td></tr><tr><td>net stop messenger</td><td align="left">停止信使服务</td></tr><tr><td>conf</td><td align="left">启动 netmeeting</td></tr><tr><td>dvdplay</td><td align="left">DVD播放器</td></tr><tr><td>charmap</td><td align="left">启动字符映射表</td></tr><tr><td>diskmgmt.msc</td><td align="left">磁盘管理实用程序</td></tr><tr><td>calc</td><td align="left">启动计算器</td></tr><tr><td>dfrg.msc</td><td align="left">磁盘碎片整理程序</td></tr><tr><td>chkdsk.exe</td><td align="left">Chkdsk磁盘检查</td></tr><tr><td>devmgmt.msc</td><td align="left">设备管理器</td></tr><tr><td>regsvr32 &#x2F;u *.dll</td><td align="left">停止dll文件运行</td></tr><tr><td>drwtsn32</td><td align="left">系统医生</td></tr><tr><td>rononce -p</td><td align="left">15秒关机</td></tr><tr><td>dxdiag</td><td align="left">检查DirectX信息</td></tr><tr><td>regedt32</td><td align="left">注册表编辑器</td></tr><tr><td>Msconfig.exe</td><td align="left">系统配置实用程序</td></tr><tr><td>rsop.msc</td><td align="left">组策略结果集</td></tr><tr><td>mem.exe</td><td align="left">显示内存使用情况</td></tr><tr><td>regedit.exe</td><td align="left">注册表</td></tr><tr><td>winchat</td><td align="left">XP自带局域网聊天</td></tr><tr><td>progman</td><td align="left">程序管理器</td></tr><tr><td>winmsd</td><td align="left">系统信息</td></tr><tr><td>perfmon.msc</td><td align="left">计算机性能监测程序</td></tr><tr><td>winver</td><td align="left">检查Windows版本</td></tr><tr><td>sfc &#x2F;scannow</td><td align="left">扫描错误并复原</td></tr><tr><td>taskmgr</td><td align="left">任务管理器（2000／xp／2003）</td></tr></tbody></table><h2 id="Dos命令"><a href="#Dos命令" class="headerlink" title="Dos命令"></a>Dos命令</h2><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>dir</td><td align="left">列出当前目录下的文件以及文件夹</td></tr><tr><td>del</td><td align="left">删除文件</td></tr><tr><td>ren</td><td align="left">重命名,例如：ren 旧文件 新文件名</td></tr><tr><td>md</td><td align="left">创建目录</td></tr><tr><td>rd</td><td align="left">删除目录</td></tr><tr><td>cd</td><td align="left">进入指定目录</td></tr><tr><td>cd..</td><td align="left">退回到上一级目录</td></tr><tr><td>cd&#x2F;</td><td align="left">退回到根目录</td></tr><tr><td>exit</td><td align="left">退出dos命令行</td></tr><tr><td>open</td><td align="left">与ftp服务器相连接</td></tr><tr><td>send(put)</td><td align="left">上传文件</td></tr><tr><td>get</td><td align="left">下载文件</td></tr><tr><td>mget</td><td align="left">下载多个文件</td></tr><tr><td>bye</td><td align="left">中断与服务器的连接</td></tr><tr><td>tracert</td><td align="left">跟踪IP地址路由</td></tr></tbody></table><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>for &#x2F;f “skip&#x3D;9 tokens&#x3D;1,2 delims&#x3D;:” %i in (‘netsh wlan show profiles’) do  @echo %j</td><td align="left">findstr -i -v echo</td></tr><tr><td>net use * &#x2F;del &#x2F;y</td><td align="left">清除共享或磁盘映射记录列表</td></tr><tr><td>control userpasswords2</td><td align="left">依次点击‘高级’—‘管理密码’，删除完毕，确定即可</td></tr><tr><td>wmic product where “Name like ‘Microsoft .Net%’” get Name, Version</td><td align="left">使用 WMI 命令获取.NET版本信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志书写规范</title>
      <link href="/2016/11/24/%E6%97%A5%E5%BF%97%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/"/>
      <url>/2016/11/24/%E6%97%A5%E5%BF%97%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<ul><li>日志类型：新增、修复、优化、删除</li><li>版本类型：稳定版、开发版、体验版</li><li>更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。</li></ul><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux发展史</title>
      <link href="/2016/11/22/Linux%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
      <url>/2016/11/22/Linux%E5%8F%91%E5%B1%95%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/screenshots/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png" alt="Linux发展史"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令大全</title>
      <link href="/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2016/11/22/Linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>reboot</td><td align="left">重启系统</td></tr><tr><td>shutdown -r now</td><td align="left">重启系统</td></tr><tr><td>shutdown -c</td><td align="left">取消重启</td></tr><tr><td>halt</td><td align="left">立刻关机</td></tr><tr><td>poweroff</td><td align="left">立刻关机</td></tr><tr><td>shutdown -h now</td><td align="left">立刻关机（root用户使用）</td></tr><tr><td>shutdown -h 10</td><td align="left">10分钟后自动关机</td></tr><tr><td>yum update</td><td align="left">升级Linux，升级所有包同时也升级软件和系统内核</td></tr><tr><td>yum upgrade</td><td align="left">升级Linux，只升级所有包，不升级软件和系统内核</td></tr><tr><td>cat &#x2F;proc&#x2F;version</td><td align="left">查看内核版本</td></tr><tr><td>uname -a</td><td align="left">查看内核版本</td></tr><tr><td>lsb_release -a</td><td align="left">查看系统版本</td></tr><tr><td>cat &#x2F;etc&#x2F;issue</td><td align="left">查看系统版本</td></tr><tr><td>cat &#x2F;etc&#x2F;redhat-release</td><td align="left">查看系统版本（适合Redhat系）</td></tr><tr><td>cat &#x2F;etc&#x2F;*-release</td><td align="left">查看系统版本（适合SUSE系）</td></tr><tr><td>getconf LONG_BIT</td><td align="left">查看系统位数</td></tr><tr><td>cat &#x2F;proc&#x2F;cpuinfo</td><td align="left">查看CPU型号</td></tr><tr><td>top</td><td align="left">查看实时CPU使用率</td></tr><tr><td>ps aux&amp;#124;head -1;ps aux&amp;#124;grep -v PID&amp;#124;sort -rn -k +3&amp;#124;head</td><td align="left">查看占用CPU最多的10个进程。head默认取前10行，自定义K行时，在后面跟-K即可</td></tr><tr><td>free -m</td><td align="left">查看内存</td></tr><tr><td>ps aux&amp;#124;head -1;ps aux&amp;#124;grep -v PID&amp;#124;sort -rn -k +4&amp;#124;head</td><td align="left">查看占用内存最多的10个进程。head默认取前10行，自定义K行时，在后面跟-K即可</td></tr><tr><td>fdisk -l</td><td align="left">查看硬盘，可查看未分区和格式化的数据盘</td></tr><tr><td>df -h</td><td align="left">查看硬盘空间情况</td></tr><tr><td>du -sh .&#x2F;*</td><td align="left">查看当前目录下各文件&#x2F;文件夹的大小</td></tr><tr><td>jps</td><td align="left">查看当前所有Java进程pid的命令</td></tr><tr><td>kill</td><td align="left">删除执行中的程序或工作</td></tr><tr><td>kill -9</td><td align="left">强制终止执行中的程序或工作</td></tr><tr><td>passwd</td><td align="left">修改用户密码，命令后跟用户名即可</td></tr><tr><td>vim &#x2F;etc&#x2F;HOSTNAME</td><td align="left">修改主机名字</td></tr><tr><td>hostname -F &#x2F;etc&#x2F;HOSTNAME</td><td align="left">使修改立刻生效</td></tr><tr><td>cat &#x2F;var&#x2F;log&#x2F;secure</td><td align="left">安全和身份日志，记录用户和工作组变化情况、用户登陆认证情况 ，可以查看ssh登录的情况</td></tr><tr><td>lastlog</td><td align="left">记录用户最后一次成功登陆的时间、登陆IP等信息。使用lastlog命令查看，root为管理员用户，admin为普通用户，其他为系统用户，系统用户没有权限登录，所以显示为never logged in</td></tr><tr><td>lastb</td><td align="left">记录失败的登录尝试信息</td></tr><tr><td>last</td><td align="left">记录登陆过系统的所有用户信息</td></tr></tbody></table><span id="more"></span><hr><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>cd</td><td align="left">改变目录到</td></tr><tr><td>cd ~</td><td align="left">回到家目录</td></tr><tr><td>pwd</td><td align="left">查看当前路径</td></tr><tr><td>mkdir</td><td align="left">创建文件夹</td></tr><tr><td>touch</td><td align="left">创建文件</td></tr><tr><td>echo -n  “ “ &gt;</td><td align="left">清空文件内容，如：echo -n  “ “ &gt;logs&#x2F;error.log</td></tr><tr><td>rm</td><td align="left">删除文件</td></tr><tr><td>rm -r</td><td align="left">删除文件夹</td></tr><tr><td>rm -fr</td><td align="left">直接删除，无需确认</td></tr><tr><td>cp -r source_directory destination_directory</td><td align="left">将source_directory以及其所有子目录和文件复制到destination_directory</td></tr><tr><td>cp -i source_file destination_file</td><td align="left">如果destination_file已经存在，cp会询问是否覆盖它</td></tr><tr><td>cp file1.txt file2.txt destination_directory&#x2F;</td><td align="left">一次性复制多个文件到一个目录中</td></tr><tr><td>mv</td><td align="left">移动、重命名文件或文件夹</td></tr><tr><td>find</td><td align="left">查找</td></tr><tr><td>which</td><td align="left">查找</td></tr><tr><td>cat</td><td align="left">查看文本内容</td></tr><tr><td>head</td><td align="left">查看文本前十行</td></tr><tr><td>tail</td><td align="left">查看文本后十行</td></tr><tr><td>tail -f</td><td align="left">实时查看文本最新内容</td></tr><tr><td>more</td><td align="left">让文件内容一屏一屏的显示</td></tr><tr><td>cat XXX &amp;#124; more</td><td align="left">管道：将cat显示出来的内容重新输出给more命令</td></tr><tr><td>&gt;</td><td align="left">重定向：将文件内容输出到指定的文件或位置。如cat &#x2F;etc&#x2F;services &gt; a.txt</td></tr><tr><td>ls -i</td><td align="left">使用ls -i命令找到文件或文件夹的节点编号</td></tr><tr><td>find -inum 2243223 -delete</td><td align="left">使用find命令查询并且删除乱码文件或文件夹</td></tr><tr><td>rm -rf fileA</td><td align="left">删除文件或文件夹fileA的软链接</td></tr><tr><td>ln -s fileB fileA</td><td align="left">设置软链接用快捷方式fileB代替fileA</td></tr><tr><td>ln fileB fileA</td><td align="left">建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删</td></tr><tr><td><strong>删除指定文件夹下后缀名相同的文件：</strong></td><td align="left"></td></tr><tr><td>find 目录 -name ‘*.abc’ &amp;#124; xargs rm</td><td align="left">命令危险，可先执行前半段进行查看, 确认后再整条执行</td></tr><tr><td>find . -name ‘*.exe’ -type f -print -exec rm -rf {} ;</td><td align="left">1) “.”表示从当前目录开始递归查找</td></tr><tr><td></td><td align="left">2) “-name ‘*.exe’”根据名称来查找所有以.exe结尾的文件夹或者文件</td></tr><tr><td></td><td align="left">3) “-type f”查找的类型为文件</td></tr><tr><td></td><td align="left">4) “-print”输出查找的文件目录名</td></tr><tr><td></td><td align="left">5) “-exec”后边跟要执行的命令，表示将find出来的文件或目录执行该命令</td></tr><tr><td></td><td align="left">最后是一对{}，一个空格和一个\，一个分号</td></tr><tr><td>ll -lh</td><td align="left">查看当前目录下文件的大小</td></tr><tr><td>du -sh *</td><td align="left">查看当前目录下文件或文件夹的大小</td></tr></tbody></table><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>netstat -apn</td><td align="left">查看所有的进程和端口使用情况</td></tr><tr><td>netstat -nptl</td><td align="left">查看端口使用情况</td></tr><tr><td>lsof</td><td align="left">查看端口使用情况（openSUSE Leap 15.0），如 <code>lsof -i:80</code></td></tr><tr><td>nc -vz IP地址或域名 端口</td><td align="left">检测远程服务器端口</td></tr></tbody></table><h3 id="在命令行中配置IP地址"><a href="#在命令行中配置IP地址" class="headerlink" title="在命令行中配置IP地址"></a>在命令行中配置IP地址</h3><p>这里用Suse Linux举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 1.1.10.42 netmask 255.255.255.0 up</span><br><span class="line">route add default gw 1.1.10.11</span><br></pre></td></tr></table></figure><h3 id="systemctl命令的使用"><a href="#systemctl命令的使用" class="headerlink" title="systemctl命令的使用"></a>systemctl命令的使用</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>systemctl list-units</td><td align="left">列出当前系统服务的状态</td></tr><tr><td>systemctl list-units –type&#x3D;service</td><td align="left">查看所有已启动的服务</td></tr><tr><td>systemctl list-unit-files</td><td align="left">列出服务的开机状态</td></tr><tr><td>systemctl status sshd</td><td align="left">查看指定服务的状态</td></tr><tr><td>systemctl stop sshd</td><td align="left">关闭指定服务</td></tr><tr><td>systemctl start sshd</td><td align="left">开启指定服务</td></tr><tr><td>systemctl restart sshd</td><td align="left">从新启动服务</td></tr><tr><td>systemctl is-enabled servicename.service</td><td align="left">查询服务是否开机启动</td></tr><tr><td>systemctl enable sshd</td><td align="left">设定指定服务开机开启</td></tr><tr><td>systemctl disable sshd</td><td align="left">设定指定服务开机关闭</td></tr><tr><td>systemctl reload sshd</td><td align="left">使指定服务从新加载配置</td></tr><tr><td>systemctl list-dependencies sshd</td><td align="left">查看指定服务的倚赖关系</td></tr><tr><td>systemctl mask  sshd</td><td align="left">冻结指定服务</td></tr><tr><td>systemctl unmask sshd</td><td align="left">启用服务</td></tr><tr><td>systemctl set-default multi-user.target</td><td align="left">开机不开启图形</td></tr><tr><td>systemctl set-default graphical.target</td><td align="left">开机启动图形</td></tr><tr><td>systemctl —failed</td><td align="left">显示启动失败的服务</td></tr><tr><td>setterm</td><td align="left">文本界面设定color</td></tr><tr><td>服务状态</td><td align="left">状态说明</td></tr><tr><td>—————</td><td align="left">:—————</td></tr><tr><td>loaded</td><td align="left">系统服务已经初始化完成，加载过配置</td></tr><tr><td>active（running）</td><td align="left">正有一个或多个程序正在系统中执行， vsftpd就是这种模式</td></tr><tr><td>atcive（exited）</td><td align="left">仅执行一次就正常結束的服務， 目前並沒有任何程序在系統中執行</td></tr><tr><td>atcive（waiting）</td><td align="left">正在執行當中，不過還再等待其他的事件才能继续处理</td></tr><tr><td>inactive</td><td align="left">服务关闭</td></tr><tr><td>enbaled</td><td align="left">服务开机启动</td></tr><tr><td>disabled</td><td align="left">服务开机不自启</td></tr><tr><td>static</td><td align="left">服务开机启动项不可被管理</td></tr><tr><td>failed</td><td align="left">系统配置错误</td></tr></tbody></table><h3 id="防火墙（SUSE-Linux-Enterprise-Server-12）"><a href="#防火墙（SUSE-Linux-Enterprise-Server-12）" class="headerlink" title="防火墙（SUSE Linux Enterprise Server 12）"></a>防火墙（SUSE Linux Enterprise Server 12）</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>vim &#x2F;etc&#x2F;sysconfig&#x2F;SuSEfirewall2</td><td align="left">编辑防火墙设置，FW_SERVICES_EXT_TCP&#x3D;”22”</td></tr><tr><td>rcSuSEfirewall2 restart</td><td align="left">重启防火墙使生效</td></tr><tr><td>rcSuSEfirewall2 status</td><td align="left">查看防火墙状态</td></tr><tr><td>systemctl stop SuSEfirewall2.service</td><td align="left">关闭防火墙</td></tr><tr><td>systemctl start SuSEfirewall2.service</td><td align="left">开启防火墙</td></tr><tr><td>systemctl enable SuSEfirewall2.service</td><td align="left">开机启动防火墙</td></tr><tr><td>systemctl disable SuSEfirewall2.service</td><td align="left">取消开机启动防火墙</td></tr></tbody></table><h3 id="防火墙（openSUSE-Leap-15-0）"><a href="#防火墙（openSUSE-Leap-15-0）" class="headerlink" title="防火墙（openSUSE Leap 15.0）"></a>防火墙（openSUSE Leap 15.0）</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td><code>firewall-cmd --permanent --zone=public --add-service=ssh</code></td><td align="left">添加永久的服务</td></tr><tr><td><code>firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp</code></td><td align="left">添加永久的端口</td></tr><tr><td><code>firewall-cmd --permanent --zone=public --remove-port=80/tcp</code></td><td align="left">删除端口</td></tr><tr><td><code>firewall-cmd --zone=public --add-port=8080-8081/tcp</code></td><td align="left">添加临时的端口</td></tr><tr><td><code>firewall-cmd --permanent --zone=public --list-ports</code></td><td align="left">查看开启的端口</td></tr><tr><td><code>firewall-cmd --permanent --zone=public --list-services</code></td><td align="left">查看开启的服务</td></tr><tr><td><code>firewall-cmd --reload</code></td><td align="left">重新加载配置（重启加载后才能生效）</td></tr><tr><td><code>firewall-cmd --state</code></td><td align="left">查看防火墙运行状态</td></tr><tr><td><code>firewall-cmd --query-service ssh</code></td><td align="left"></td></tr><tr><td><code>firewall-cmd --query-service ftp</code></td><td align="left"></td></tr><tr><td><code>firewall-cmd --query-service http</code></td><td align="left"></td></tr><tr><td><code>firewall-cmd --query-service https</code></td><td align="left"></td></tr><tr><td><code>firewall-cmd --list-all</code></td><td align="left">显示当前区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>service firewalld stop</td><td align="left">关闭防火墙</td></tr><tr><td>service firewalld start</td><td align="left">开户防火墙</td></tr></tbody></table><h3 id="防火墙（CentOS8）"><a href="#防火墙（CentOS8）" class="headerlink" title="防火墙（CentOS8）"></a>防火墙（CentOS8）</h3><table><thead><tr><th>命令</th><th align="left">说明</th></tr></thead><tbody><tr><td>systemctl status firewalld.service</td><td align="left">查看服务状态</td></tr><tr><td>systemctl start firewalld.service</td><td align="left">打开防火墙</td></tr><tr><td>systemctl stop  firewalld.service</td><td align="left">关闭防火墙</td></tr><tr><td>systemctl enable  firewalld.service</td><td align="left">开启防火墙</td></tr><tr><td>systemctl disable firewalld.service</td><td align="left">禁用防火墙</td></tr><tr><td>—————</td><td align="left">:—————</td></tr><tr><td>firewall-cmd –list-all</td><td align="left">查看已经开放的端口</td></tr><tr><td>firewall-cmd –add-port&#x3D;8848&#x2F;tcp –permanent</td><td align="left">增加目标端口</td></tr><tr><td>firewall-cmd –reload</td><td align="left">重启防火墙</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客发表Hello World</title>
      <link href="/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E5%8F%91%E8%A1%A8hello-world/"/>
      <url>/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E5%8F%91%E8%A1%A8hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建记录</title>
      <link href="/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/2016/11/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>搭建静态网站的技术有<code>Hexo</code>、<code>GitBook</code>、<a href="https://www.vuepress.cn/">VuePress</a> 等。本次作者使用Hexo完成了个人博客的搭建，下面记录一下搭建步骤。<br>搭建步骤主要参考WX_JIN的博文<a href="http://blog.csdn.net/wx_jin/article/details/51027783">Windows下使用Hexo+GithubPage搭建博客</a>搭建的，感谢WX_JIN的分享。</p><span id="more"></span><p>博客主题来源于 <a href="https://github.com/levblanc/hexo-theme-aero-dual">Aero Dual Hexo Theme</a><br><strong>另附其它主题链接：</strong><br>博客主题大全：<a href="https://github.com/hexojs/hexo/wiki/Themes">https://github.com/hexojs/hexo/wiki/Themes</a><br>Hexo官方主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p><strong>使用工具</strong></p><ul><li>Node.js  v6.9.1</li><li>Git      v2.10.1</li><li>hexo     v3.2.2</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 静态网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换电脑后如何修改hexo博客</title>
      <link href="/2016/11/09/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9hexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2016/11/09/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9hexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="如果拷贝了项目目录："><a href="#如果拷贝了项目目录：" class="headerlink" title="如果拷贝了项目目录："></a>如果拷贝了项目目录：</h1><p>直接安装相对应版本的 hexo 即可正常使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo@3.8.0</span><br></pre></td></tr></table></figure><h1 id="如果重新下载项目目录："><a href="#如果重新下载项目目录：" class="headerlink" title="如果重新下载项目目录："></a>如果重新下载项目目录：</h1><ol><li>使用下面命令拷贝个人仓库（默认分支为source）到本地<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:yangpiena/yangpiena.github.io.git</span><br></pre></td></tr></table></figure></li><li>在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install </span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug --save</span><br></pre></td></tr></table></figure><blockquote><p>切记不要执行 hexo init 这条指令，否则会删除.git文件夹</p></blockquote></li></ol><p>遇到安装失败时，可更换npm的源再尝试：</p><ul><li>国内优秀npm镜像<br><strong>淘宝npm镜像</strong><br>搜索地址：<a href="http://npm.taobao.org/">http://npm.taobao.org/</a><br>registry地址：<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org/</a><br><strong>cnpmjs镜像</strong><br>搜索地址：<a href="http://cnpmjs.org/">http://cnpmjs.org/</a><br>registry地址：<a href="http://r.cnpmjs.org/">http://r.cnpmjs.org/</a></li><li>临时使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install express</span><br></pre></td></tr></table></figure></li><li>持久使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>  配置后可通过下面方式来验证是否成功  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></li><li>通过 <code>cnpm</code> 命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>  安装完后，使用cnpm命令安装：<code>cnpm install expresstall express</code></li></ul><p>如果还有错误：</p><ol><li>cmd进入博客当前文件夹路径</li><li>执行 npm install</li><li>执行 hexo server</li><li>执行成功后，再到博客下的git中执行 hexo d &#x2F;hexo g 发现可以执行成功。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
