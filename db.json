{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/aero-dual/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"source/assets/blogImg/YPN_Logo_Backup.png","path":"assets/blogImg/YPN_Logo_Backup.png","modified":1,"renderable":0},{"_id":"source/assets/blogImg/YPN_alipay-32x32.jpg","path":"assets/blogImg/YPN_alipay-32x32.jpg","modified":1,"renderable":0},{"_id":"source/assets/blogImg/coding-logo.png","path":"assets/blogImg/coding-logo.png","modified":1,"renderable":0},{"_id":"source/assets/blogImg/YPN_Logo.png","path":"assets/blogImg/YPN_Logo.png","modified":1,"renderable":0},{"_id":"source/assets/blogImg/YPN_wechatpay-32x32.png","path":"assets/blogImg/YPN_wechatpay-32x32.png","modified":1,"renderable":0},{"_id":"source/assets/blogImg/github-logo.jpg","path":"assets/blogImg/github-logo.jpg","modified":1,"renderable":0},{"_id":"source/assets/blogImg/email-logo.jpg","path":"assets/blogImg/email-logo.jpg","modified":1,"renderable":0},{"_id":"source/assets/blogImg/xlweibo-logo.jpg","path":"assets/blogImg/xlweibo-logo.jpg","modified":1,"renderable":0},{"_id":"themes/aero-dual/source/css/reset.css","path":"css/reset.css","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/css/style.dark.styl","path":"css/style.dark.styl","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/css/style.light.styl","path":"css/style.light.styl","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/js/activate-power-mode.js","path":"js/activate-power-mode.js","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/addphoto.js","path":"js/addphoto.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/highlight.pack.js","path":"js/highlight.pack.js","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/jquery.easing.1.3.js","path":"js/jquery.easing.1.3.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/jquery.masonry.min.js","path":"js/jquery.masonry.min.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/img/close.gif","path":"img/close.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/img/loader.gif","path":"img/loader.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/photo.js","path":"js/photo.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/img/scrollup.png","path":"img/scrollup.png","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/img/pinstripe.gif","path":"img/pinstripe.gif","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/js/embed.js","path":"js/embed.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/js/jquery-1.11.3.min.js","path":"js/jquery-1.11.3.min.js","modified":1,"renderable":1},{"_id":"themes/aero-dual/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/img/default-banner-dark.jpg","path":"img/default-banner-dark.jpg","modified":0,"renderable":1},{"_id":"themes/aero-dual/source/img/default-banner-light.jpg","path":"img/default-banner-light.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/【Blog】hexo博客搭建记录.md","hash":"94a8c6a7a03d6bdd619cc22826930ab5947a94b8","modified":1496997275581},{"_id":"themes/aero-dual/README.md","hash":"f383682026df7761bc39e41f5aa7480eb409bdb3","modified":1478831485845},{"_id":"source/_posts/【Blog】hello-world.md","hash":"4f42c4dd16d6e2057d26e56c272ba3c3088b7988","modified":1517471999239},{"_id":"source/_posts/【C++】在VS2017中使用C++创建和使用DLL.md","hash":"0d28a4cdaf33eb4f2ea45aa55752cc330c2b2a9e","modified":1543126384534},{"_id":"themes/aero-dual/LICENSE","hash":"8c948602d1c1141753910a783f07830ac143fa48","modified":1478831485831},{"_id":"source/_posts/【Blog】更换电脑后如何修改hexo博客.md","hash":"ef06d6b179ca2dcb785a7e34dde23e6a664b3d1c","modified":1545125011563},{"_id":"themes/aero-dual/_config.yml","hash":"e3ce2d6d6dbc154aa0432c2ccddb3679b2a07ab8","modified":1543124895817},{"_id":"source/_posts/【CSharp】在VS2017中使用CSharp创建和使用DLL.md","hash":"0a3c1a7597707691e58f7ffd932f5cf8375bf718","modified":1543126392691},{"_id":"source/_posts/【CSS】常见中文字体的英文名.md","hash":"0f5954c23cdc6096f9771ef025d5f85cadbf329c","modified":1488167998608},{"_id":"source/_posts/【FAQ】flash builder.md","hash":"8ea9d59e21939b8794c193d51a448f3c2475efbc","modified":1488168503783},{"_id":"source/_posts/【Eclipse】java注释模板设置.md","hash":"cdceb5f4ff748a515b7f1b2192caecc063baf59c","modified":1488168491017},{"_id":"source/_posts/【FAQ】sql.md","hash":"cec03c74985c32d064393a9290537fd3cba920af","modified":1488169353343},{"_id":"source/_posts/【FPSpread】fpComboAdo的初始化.md","hash":"d41d17876bf32eeeed869899525c5947c5e9db35","modified":1488168312715},{"_id":"source/_posts/【FPSpread】属性说明.md","hash":"254af3de81d798971cc8e067c07c08a68053fd97","modified":1488168324664},{"_id":"source/_posts/【FTP】apache-ftpserver安装配置.md","hash":"8ee53117d677e8f2776da854e3b5db24bda4c33f","modified":1523428876015},{"_id":"source/_posts/【Flex】dataGrid设置列对齐方式.md","hash":"7a90ab16240e295a11a1323944a3fb5eae0a49e4","modified":1488168572240},{"_id":"source/_posts/【Flex】flash builder 4.6免费使用方法.md","hash":"44f53715c2bd101e89dd6fe563d16778f35afa2f","modified":1488168606213},{"_id":"source/_posts/【Flex】dataGrid自动生成序号.md","hash":"b41c94eee6970cf6247db5603bd056834e2db1c0","modified":1488168581357},{"_id":"source/_posts/【Flex】flash builder 4.6效率优化方法.md","hash":"966868caead3749dc59d453c315da113fea15919","modified":1488168612674},{"_id":"source/_posts/【Flex】属性说明.md","hash":"1b452785151ce49aac290edcb6d92abc1d1e958b","modified":1488168299884},{"_id":"source/_posts/【Flex】java与actionScript类型对应表.md","hash":"fe5d427e1361f355a301c9e7bc87d40a6a032fbb","modified":1488168634093},{"_id":"source/_posts/【Git】Git下载安装.md","hash":"b1028ad6e0eff3b77c7fc2a7b18122dfcd52c46e","modified":1545206868169},{"_id":"source/_posts/【Flex】设置scroller的速度.md","hash":"16ccf5fe37f86e6b86e2d23ee1f4d46bac2eaff7","modified":1488168642578},{"_id":"source/_posts/【Git】如何用命令将本地项目上传到git.md","hash":"6080d2d752c323b3f6e16d17cd4a93ff26a44100","modified":1502676757380},{"_id":"source/_posts/【HAProxy】ACL规则定义.md","hash":"f8aa26184c19c152bb704d302d444a66f9819bca","modified":1513927105734},{"_id":"source/_posts/【HAProxy】介绍和应用.md","hash":"afc6a746aefc8d8356ea41dc7d3ffdd4b0654ab1","modified":1513927768011},{"_id":"source/_posts/【HAProxy】安装配置.md","hash":"3451c10552eb0ef9f0ac9fa234730ea720280c29","modified":1517475759397},{"_id":"source/_posts/【HAProxy】脚本启动和关闭.md","hash":"3768a3f40a2526709217016808e30c7ea5aeac0f","modified":1523420792402},{"_id":"source/_posts/【HAProxy】负载均衡算法.md","hash":"92c60f082121cf485a0f86dfb477f0797ea1c724","modified":1513930238151},{"_id":"source/_posts/【JavaScript】字符串去除空格.md","hash":"4068bcb2256eabc0ef77376c8ebb3af01b1cec8d","modified":1488168709325},{"_id":"source/_posts/【HAProxy】配置详解.md","hash":"5126736057591469f5831cd1a06e93e928faa27c","modified":1513926146728},{"_id":"source/_posts/【IT】日志书写规范.md","hash":"bc3daf57346a5e3da61ef8f9062813bb35a447e8","modified":1488168899926},{"_id":"source/_posts/【Java】jdk下载安装.md","hash":"0cb0d84331546c54ef46fa35c0e89d05f7bebbb3","modified":1502691998763},{"_id":"source/_posts/【IT】log4j-properties.md","hash":"b600217daed138a34300f2e58b6a314b1a115b3e","modified":1488168869842},{"_id":"source/_posts/【Java】tomcat下载和安装.md","hash":"01fe5d7e5a11db4b11ac01902829ef8e4219c0cf","modified":1503283539731},{"_id":"source/_posts/【Java】tomcat启动jvm内存设置.md","hash":"348a123b387989474a8a7ac34290d97e464a9ad2","modified":1488168689412},{"_id":"source/_posts/【Java】tomcat部署项目访问不加项目名设置.md","hash":"6e8499105e7c77c25665c7ab849f886dfc123e25","modified":1502937037089},{"_id":"source/_posts/【Kettle】使用命令行来运行数据库job.md","hash":"94c4f1dba56d86395b206da07876c397d0fe1ae7","modified":1488168724580},{"_id":"source/_posts/【Linux】CentOS使用iptables.md","hash":"de7df286389fba0e39a42c7d40469ac9d1b0d39a","modified":1502675788989},{"_id":"source/_posts/【Linux】CentOS网络连接system-eth0不可用解决办法.md","hash":"0f280cd328a6bf48104f563404b1f4eb8cee0feb","modified":1518491216358},{"_id":"source/_posts/【Linux】[天翼云]数据盘分区以及格式化.md","hash":"fc45c1add82d1413857a3e11ef1b56f89d79ad8e","modified":1502677025324},{"_id":"source/_posts/【Linux】Suse-Linux-Enterprise-12-防火墙开放服务及端口.md","hash":"8eb9829213a7daa9a505bc9ad0e560344a135640","modified":1517477221310},{"_id":"source/_posts/【Linux】发展史.md","hash":"2e118f8d0f8ed34c26c66c8b092e65c2a36f608a","modified":1543126463366},{"_id":"source/_posts/【Linux】共享目录和远程挂载.md","hash":"687b750ee84018f438079ad3216190fa860fff6d","modified":1523457556424},{"_id":"source/_posts/【Linux】系统盘和数据盘.md","hash":"dbc7f610f8118863b9e9ad6bb256a3dc01a15546","modified":1502347533794},{"_id":"source/_posts/【Linux】命令学习.md","hash":"9db210b0b8c1329570f4f99d4ad47eba1a343080","modified":1523461185152},{"_id":"source/_posts/【Oracle】删除和创建表空间及用户.md","hash":"b1d69ce5b0b08ce6dd1c4466bd461645d0ebeb02","modified":1488168783349},{"_id":"source/_posts/【Oracle】imp和exp语句.md","hash":"c645e64a315d9e74378196893e0028ac2aeb1741","modified":1488168768902},{"_id":"source/_posts/【SQL】收缩数据库.md","hash":"6ede1d29417e3c2e4aa91bdd22c64ff4dae83550","modified":1540800403124},{"_id":"source/_posts/【SQL】Access与SQL-Server在写法上的区别.md","hash":"8bcd1e94f77111925d03b808dd6d5857a74b21ed","modified":1540394908046},{"_id":"source/_posts/【SQL】查询死锁和阻塞.md","hash":"1a871f1329fb9123267403a11d97d17dc0ff53cb","modified":1529551033323},{"_id":"source/_posts/【SQL】经典语句.md","hash":"8ce019b0ec35bb869aff1c88c513518d50cd6a84","modified":1544152262929},{"_id":"source/_posts/【SQL】获取字符串最后出现的位置.md","hash":"ae077bbb5f4bc4dbe609f79c3b6f51eeeffb17f1","modified":1488168808470},{"_id":"source/_posts/【Sublime-Text】快捷键.md","hash":"c670b6338d6d69c3316950a2a8016cc4f3fcba27","modified":1495531250267},{"_id":"source/_posts/【Think】服务器虚拟化的好处.md","hash":"5ad827c98f35801e0c0cfb24217d870275810021","modified":1488169043699},{"_id":"source/_posts/【VB】下载网页文件或图片的方法.md","hash":"f9e890fafeede63de45c695943b7d2f5fc4f6fa6","modified":1524898222859},{"_id":"source/_posts/【Windows】命令学习.md","hash":"9f35aba93303a844435efad1ca6ec078000c50b8","modified":1531450789961},{"_id":"source/_posts/【Windows】设置磁盘背景.md","hash":"5b8cac70b0c1dcddedc03a7e35f5feeace9c98bd","modified":1494832870573},{"_id":"source/links/index.md","hash":"aeb49c514d749b1cf072d6c96462033b1633707a","modified":1545120417596},{"_id":"source/photos/index.md","hash":"9853ffca1f63caa8b35303cb255b3aa66e01be73","modified":1479343167665},{"_id":"source/photos/data.json","hash":"ab36069721a4d528d5d8bda710a74d60589ea6c2","modified":1543126520907},{"_id":"source/about/index.md","hash":"cda524aa8245a1b8170d8488b02831398e06ef0c","modified":1498023129374},{"_id":"source/tags/index.md","hash":"0bc541f4c6a0f21bec67b6717ee86226f0eddf39","modified":1471543628000},{"_id":"themes/aero-dual/source/404.html","hash":"4de270bc164fc0abd99d292c0688a52e2dad1b79","modified":1479111317091},{"_id":"themes/aero-dual/languages/zh-CN.yml","hash":"19003133ba7d652fa22d2c844c568eadc201affa","modified":1478857129194},{"_id":"themes/aero-dual/source/favicon.ico","hash":"83afffb420ac1e95c9558f284745ecaf0b694c22","modified":1478837220825},{"_id":"themes/aero-dual/languages/en.yml","hash":"73e36b4c485961c0f34525ce59bd1e1968c0cf11","modified":1478831485863},{"_id":"themes/aero-dual/layout/blank.ejs","hash":"40c05d659e7ea4206d811edc3d52808745729cc2","modified":1480382641014},{"_id":"themes/aero-dual/layout/page.ejs","hash":"b5a1970a6c5c14fccd7c06576de0766bc4558352","modified":1478831486169},{"_id":"themes/aero-dual/layout/layout.ejs","hash":"a9d7466cabc0649a62a330e08a71e98f28d542cc","modified":1478831486164},{"_id":"themes/aero-dual/layout/post.ejs","hash":"b5a1970a6c5c14fccd7c06576de0766bc4558352","modified":1479109098873},{"_id":"themes/aero-dual/layout/index.ejs","hash":"2598b1f764f8bd9446930855c2c79e724027dbff","modified":1496991620724},{"_id":"themes/aero-dual/layout/archive.ejs","hash":"43e7b5ac73cb7a00e599afe81fea4333ba27b509","modified":1482475748833},{"_id":"themes/aero-dual/layout/links.ejs","hash":"ec6089664471196e83da2e2ba8cc0494c937ad48","modified":1543124779226},{"_id":"source/assets/blogImg/YPN_Logo_Backup.png","hash":"590cc58b67416b7fabd1fa13467ece0df1c54bd7","modified":1479196615767},{"_id":"source/assets/blogImg/YPN_alipay-32x32.jpg","hash":"d1f710a959ff02f9350462236b2f5cac27b000ad","modified":1479861684812},{"_id":"source/assets/blogImg/coding-logo.png","hash":"4690d56a958032bb481179c1e0e646464cbbbace","modified":1505196979837},{"_id":"source/assets/blogImg/YPN_Logo.png","hash":"b0917f68b7b5b5890d63fc13af18ed02b7ac0bb7","modified":1474006059638},{"_id":"source/assets/blogImg/YPN_wechatpay-32x32.png","hash":"ca684ae3f992e2a173aed5dc4ce72a1034c4f008","modified":1479114581342},{"_id":"themes/aero-dual/layout/tags.ejs","hash":"7755e6a2ae05b0bb1120e1a74c3769d8cd0aa944","modified":1488186340239},{"_id":"themes/aero-dual/layout/photo.ejs","hash":"4c7469b239d48362d45b1859ffd51b2ec35e17d1","modified":1544146327345},{"_id":"source/assets/blogImg/github-logo.jpg","hash":"6425869828496858e7816fbc7c3b3a95f48c05e3","modified":1479261517540},{"_id":"source/assets/blogImg/email-logo.jpg","hash":"250e687922d1e0e6a29474e94764ca654f098565","modified":1479261905072},{"_id":"source/assets/blogImg/xlweibo-logo.jpg","hash":"df8c59ff93fd5ee1d33e34e6098fa9ad1cfc33f5","modified":1479261327296},{"_id":"themes/aero-dual/source/css/_base.styl","hash":"7da042daa9bf1b12452e6e7f56147f7dd6bdcc22","modified":1479110143205},{"_id":"themes/aero-dual/source/css/reset.css","hash":"2b13355e548912ced6042952c655b5bb6b55afe6","modified":1495530735091},{"_id":"themes/aero-dual/source/css/style.dark.styl","hash":"dd70032281cf889a805c41160063046676e0ca09","modified":1478831486264},{"_id":"themes/aero-dual/source/css/style.css","hash":"e62e4200b36049aff7ca065025c9685ca796d819","modified":1509587820810},{"_id":"themes/aero-dual/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478766553051},{"_id":"themes/aero-dual/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478766553056},{"_id":"themes/aero-dual/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478766553055},{"_id":"themes/aero-dual/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478766553055},{"_id":"themes/aero-dual/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478766553050},{"_id":"themes/aero-dual/source/css/style.light.styl","hash":"57d84f91c835c1ca397a85b25845190b253d31d1","modified":1480491417392},{"_id":"themes/aero-dual/source/js/activate-power-mode.js","hash":"1e75e9d156bd04b75aa2d3c10dfb289edf6ef56f","modified":1507254822614},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1478766553074},{"_id":"themes/aero-dual/source/js/addphoto.js","hash":"294bca687f1658f49294019a82c04921934ae948","modified":1479287532524},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1478766553077},{"_id":"themes/aero-dual/source/js/highlight.pack.js","hash":"b9a17ae1f0e8acc4386806c4d429ac69dc923cb0","modified":1478831486386},{"_id":"themes/aero-dual/source/js/bootstrap.min.js","hash":"8fb8a9319055253d085edfc3bb72d20f614ec709","modified":1478831486360},{"_id":"themes/aero-dual/source/js/jquery.easing.1.3.js","hash":"c6f74009a95b2d6f9c7b39ec121a4ca53a490a04","modified":1478967272000},{"_id":"themes/aero-dual/source/js/jquery.masonry.min.js","hash":"217300ee24da1a22e280fdbe60619dc35a8f39cd","modified":1478967272000},{"_id":"themes/aero-dual/source/js/totop.js","hash":"fc7b3a85d9fe8eb41cae8962065fc428f7629699","modified":1479182590334},{"_id":"themes/aero-dual/source/img/close.gif","hash":"d86a32cb866a2f57b2b101f652d4e9c2a8346bd0","modified":1478967272000},{"_id":"themes/aero-dual/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478766553051},{"_id":"themes/aero-dual/source/img/loader.gif","hash":"dcabdd743fd3e9d7bd5647abeb86e66a3e6f9597","modified":1478967272000},{"_id":"themes/aero-dual/source/js/photo.js","hash":"ffd79bd24773be42030ea5ae99ea7b294e444896","modified":1479284810338},{"_id":"themes/aero-dual/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1479179959366},{"_id":"themes/aero-dual/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1478766553055},{"_id":"themes/aero-dual/layout/_partial/after-footer.ejs","hash":"fe1179f58dcaa61a486d914c7821a5fee826ac62","modified":1544147949224},{"_id":"themes/aero-dual/layout/_partial/archive-entry.ejs","hash":"ca7ab4950cf975a29e1603848ad2615e745ce2c3","modified":1482475711402},{"_id":"themes/aero-dual/source/img/pinstripe.gif","hash":"bccd0c270a30eab23908e6c2ff1a470cd6fd9e2d","modified":1478967272000},{"_id":"themes/aero-dual/layout/_partial/footer.ejs","hash":"0a55c6dafcdcc59bf5af9aaac21167ef33bbb8a7","modified":1544146480408},{"_id":"themes/aero-dual/layout/_partial/header.ejs","hash":"a2b27cba0f20d4085c721d56072b41bb28eca6cd","modified":1544146405938},{"_id":"themes/aero-dual/layout/_partial/google-analytics.ejs","hash":"fea22a7259f09fee183ee34498dc976568318117","modified":1478831485933},{"_id":"themes/aero-dual/layout/_partial/pagination.ejs","hash":"66b6ba50637d1abec50d2af9fe67ef3300b865c7","modified":1478831486038},{"_id":"themes/aero-dual/source/css/bootstrap.min.css","hash":"224c9f9ad11b495358aa61dbd53e838e9b61015b","modified":1478831486259},{"_id":"themes/aero-dual/layout/_partial/totop.ejs","hash":"f7bb40b3c662101360dadb27c187257679441fbc","modified":1479182418386},{"_id":"themes/aero-dual/source/js/embed.js","hash":"ea31ebe5b46ade5070d3f9eff078aef3967df906","modified":1479110285282},{"_id":"themes/aero-dual/source/js/jquery-1.11.3.min.js","hash":"276c87ff3e1e3155679c318938e74e5c1b76d809","modified":1440830350162},{"_id":"themes/aero-dual/source/js/jquery.min.js","hash":"6fca78dac2797c02d86a4bf6514eda398b7dbe62","modified":1478967272000},{"_id":"themes/aero-dual/layout/_partial/html-head.ejs","hash":"7921db0e35c5aa2989e27bbacf3068d9323376f3","modified":1498015686796},{"_id":"themes/aero-dual/source/css/_partial/archive-entry.styl","hash":"e7017e166535d55d3a0dba67807e244e1df46bc4","modified":1478831486189},{"_id":"themes/aero-dual/source/css/_helpers/mixins.styl","hash":"640dbb0e8b569c676c4e37feffea31ce6412af9b","modified":1478831486184},{"_id":"themes/aero-dual/source/css/_partial/article.styl","hash":"6eb0d152de4938278cfd5d21a120c0ea22484059","modified":1509587595339},{"_id":"themes/aero-dual/layout/_partial/index-entry.ejs","hash":"f6c1db92272298589cd77264cc24dd88dad28275","modified":1478831486030},{"_id":"themes/aero-dual/source/css/_partial/footer.styl","hash":"86a04589a083c7ae1aebdf21b14eb93d56e19fe5","modified":1478831486200},{"_id":"themes/aero-dual/source/css/_partial/header.styl","hash":"d611d7593bed9ae505e14123ae7c5f889ea53b94","modified":1478831486206},{"_id":"themes/aero-dual/source/css/_partial/index-entry.styl","hash":"8f0e2faa01eba2f3db454d9b3a95adb290b31151","modified":1478831486211},{"_id":"themes/aero-dual/source/css/_partial/pagination.styl","hash":"e0060472222a2ca560951c2b28f7124d7bbd6f36","modified":1478831486216},{"_id":"themes/aero-dual/source/css/_typography/code.styl","hash":"97c39d93ab277874aac9aad596f1b14d41790e49","modified":1478831486222},{"_id":"themes/aero-dual/source/css/_typography/highlight.dracula.styl","hash":"725f009b1341b8f3d0766971073d17c4b65d5616","modified":1478831486228},{"_id":"themes/aero-dual/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478766553449},{"_id":"themes/aero-dual/source/css/_typography/highlight.monikai-sublime.styl","hash":"28d468803b21d1608769a1a65bb1eda4e82f897f","modified":1478831486240},{"_id":"themes/aero-dual/source/css/_typography/highlight.gruvbox-light.styl","hash":"2d7a48486f81b1d736d3693d720f052fb0073cd0","modified":1478831486234},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1478766553459},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1478766553458},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478766553456},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1478766553457},{"_id":"themes/aero-dual/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478766553457},{"_id":"themes/aero-dual/source/css/_typography/typo.css","hash":"84a49962a074ce7baa51ee6c0663fce9d431dbf0","modified":1509587955759},{"_id":"themes/aero-dual/layout/_partial/post/tags.ejs","hash":"d72d1491636d20b86bd2edcf272691e943e66410","modified":1478831486107},{"_id":"themes/aero-dual/layout/_partial/post/categories.ejs","hash":"8a6e23f5c76abc7e5bca18f6d2054dd6c1636864","modified":1478831486089},{"_id":"themes/aero-dual/layout/_partial/post/article.ejs","hash":"7cd00d9b327868b24044631e1a7917d85cda94a4","modified":1544147898656},{"_id":"themes/aero-dual/source/img/default-banner-dark.jpg","hash":"e15832861cc6e5d55d08fbbe9d1cd472fe1a876e","modified":1478831486305},{"_id":"themes/aero-dual/source/img/default-banner-light.jpg","hash":"df4daccf84205e76708fc5e703dc2476f59a9d9d","modified":1478831486319},{"_id":"public/photos/data.json","hash":"abdc9e3bdb60bda47d48a4903da338624266b3cf","modified":1545206880722},{"_id":"public/photos/index.html","hash":"b81c9d5b127d1d6a05903dd18a8c72c60107261a","modified":1545206881667},{"_id":"public/about/index.html","hash":"f691d4a21f4c42ac77f195a4cb0b9ab0d0358d4b","modified":1545206881667},{"_id":"public/2018/10/29/【SQL】收缩数据库/index.html","hash":"ef1b90893c816695ac31f5320ce7a8c6c37abfb7","modified":1545206881689},{"_id":"public/2018/07/03/【CSharp】在VS2017中使用CSharp创建和使用DLL/index.html","hash":"97e38f886afc0b6b68fb0a698c37822cee1fb85c","modified":1545206881689},{"_id":"public/2018/04/11/【Linux】共享目录和远程挂载/index.html","hash":"9b3ef13cc2d724b2fafa363ea017711e4da9d4b0","modified":1545206881689},{"_id":"public/2018/02/13/【Linux】CentOS网络连接system-eth0不可用解决办法/index.html","hash":"686a4edd31e62cedd661663526138ccf48178b3b","modified":1545206881689},{"_id":"public/2018/02/01/【Linux】Suse-Linux-Enterprise-12-防火墙开放服务及端口/index.html","hash":"0559a23e43abd17953697b7defc830ce3add63ec","modified":1545206881689},{"_id":"public/2017/12/20/【HAProxy】负载均衡算法/index.html","hash":"2a138ac09008b133053b08ab1facdf55dd20bf44","modified":1545206881689},{"_id":"public/2017/08/17/【Java】tomcat部署项目访问不加项目名设置/index.html","hash":"93ea02106f49c03b65774a707c9546f023e0caad","modified":1545206881690},{"_id":"public/2017/08/11/【Linux】CentOS使用iptables/index.html","hash":"a1f0a26c89962e9ad446f88326c208d50a2d3745","modified":1545206881690},{"_id":"public/2017/08/10/【Linux】系统盘和数据盘/index.html","hash":"c3a30249feacd71cdcd1ab97f604f4fb41edb46d","modified":1545206881690},{"_id":"public/2017/06/20/【Git】如何用命令将本地项目上传到git/index.html","hash":"b6913a7b47d93233995078ab86256c747424e50c","modified":1545206881690},{"_id":"public/2017/05/15/【Sublime-Text】快捷键/index.html","hash":"2a055a53e7a3e489e950d06ebe747edf846cb84b","modified":1545206881690},{"_id":"public/2017/05/15/【Windows】设置磁盘背景/index.html","hash":"4d78622b14ca3daf91a76a663de19916edbd1915","modified":1545206881690},{"_id":"public/2016/12/28/【Kettle】使用命令行来运行数据库job/index.html","hash":"be3c4900e7723c6e8bea97f80121f3ddeea42995","modified":1545206881690},{"_id":"public/2016/12/28/【Java】tomcat启动jvm内存设置/index.html","hash":"e54699a12729d1cc45d11f3df84c83faac39149e","modified":1545206881690},{"_id":"public/2016/12/27/【FAQ】flash builder/index.html","hash":"82654932a9168058688eb5b3938a17b403f70f47","modified":1545206881690},{"_id":"public/2016/12/27/【Flex】flash builder 4.6效率优化方法/index.html","hash":"76dfbffbadabcd8a71343347f3dcee6b13610501","modified":1545206881690},{"_id":"public/2016/12/27/【Flex】flash builder 4.6免费使用方法/index.html","hash":"5bb83a505811b2cefbd3dd3a1d9c2e1c24cbf613","modified":1545206881690},{"_id":"public/2016/12/27/【Eclipse】java注释模板设置/index.html","hash":"6058ec8c4aba5541c12879dec17da2d25cdfb728","modified":1545206881690},{"_id":"public/2016/12/22/【Flex】属性说明/index.html","hash":"b6bf6011d9400927ab3cbbfa3f06466b38c98f4b","modified":1545206881690},{"_id":"public/2016/12/22/【Flex】设置scroller的速度/index.html","hash":"102f7c380ee81f60b09b168ef05b28da7a48482a","modified":1545206881691},{"_id":"public/2016/12/22/【Flex】dataGrid自动生成序号/index.html","hash":"e02b56294cd3dd674e16de5380cd60726b3b2113","modified":1545206881691},{"_id":"public/2016/12/22/【Flex】dataGrid设置列对齐方式/index.html","hash":"719d3bd6cc0bffeb40c58234c7a186ac62772f93","modified":1545206881691},{"_id":"public/2016/12/22/【Flex】java与actionScript类型对应表/index.html","hash":"94360ca5caf3e4f6b8ed7639af5f6ba9c975a101","modified":1545206881691},{"_id":"public/2016/12/22/【FPSpread】fpComboAdo的初始化/index.html","hash":"a5fef4d93963d9967186ea78f0b294a8231abb60","modified":1545206881691},{"_id":"public/2016/11/29/【SQL】获取字符串最后出现的位置/index.html","hash":"d62c78adcd698bf9b43baf7c04124b6430900329","modified":1545206881691},{"_id":"public/2016/11/29/【Oracle】删除和创建表空间及用户/index.html","hash":"1b748bad7117f6eac6afd07a9c93a7781f91f708","modified":1545206881691},{"_id":"public/2016/11/29/【FAQ】sql/index.html","hash":"ed0534c53c9a28b61ccf5c47e86d7c26e13b3a6a","modified":1545206881691},{"_id":"public/2016/11/28/【CSS】常见中文字体的英文名/index.html","hash":"d60f952f2e5b7a0bde57f026281b288e1d996ff2","modified":1545206881691},{"_id":"public/2016/11/28/【JavaScript】字符串去除空格/index.html","hash":"9633fed99a465472cd527078d42f3be31e694d70","modified":1545206881691},{"_id":"public/2016/11/28/【Think】服务器虚拟化的好处/index.html","hash":"8e7c34dc896fc81276375ccc79761a5076d0acef","modified":1545206881691},{"_id":"public/2016/11/24/【IT】日志书写规范/index.html","hash":"b79f4a6e4278560c1458320bdb06f062fb1b06a3","modified":1545206881691},{"_id":"public/2016/11/22/【Linux】发展史/index.html","hash":"a45f274e09287dec15e056781515ab4962128674","modified":1545206881691},{"_id":"public/2016/11/09/【Blog】hello-world/index.html","hash":"7e543ccb4add3d4cba7e46869a2862af8863a318","modified":1545206881691},{"_id":"public/2016/11/09/【Blog】更换电脑后如何修改hexo博客/index.html","hash":"8537002093ab771dbc0fc4633fc08794298d8083","modified":1545206881692},{"_id":"public/2016/11/09/【Blog】hexo博客搭建记录/index.html","hash":"e4388c03234df213914e82f39fb0650869094750","modified":1545206881692},{"_id":"public/index.html","hash":"6e731b9e198385e613f647aff357d449b9375ed8","modified":1545206881692},{"_id":"public/archives/index.html","hash":"8e1aa36f801025a2a66919530d12ec7efc21635a","modified":1545206881692},{"_id":"public/archives/page/2/index.html","hash":"0a202a97d8daeedcee11de7d9e50fc4d32341d5c","modified":1545206881693},{"_id":"public/archives/page/4/index.html","hash":"c1aa8e122354f8fda9e075cc1bcce33f90a2adf5","modified":1545206881693},{"_id":"public/archives/page/3/index.html","hash":"45dcaee1f042546e34aad1b3d2598674ab99dd60","modified":1545206881693},{"_id":"public/archives/page/5/index.html","hash":"45947b75b142106df15470a76bb271773c10a580","modified":1545206881693},{"_id":"public/archives/page/6/index.html","hash":"b63efdae6775aa4727786dac9cce875c08e9441a","modified":1545206881693},{"_id":"public/archives/2016/index.html","hash":"f618978068a6a12bc591d0fe3de8c3bdc7a00754","modified":1545206881693},{"_id":"public/archives/2016/page/2/index.html","hash":"f78968794a65048f10c2561e03ce74127f37f0c4","modified":1545206881693},{"_id":"public/archives/2016/page/3/index.html","hash":"bfac27867decba91467d08788c27bd194a72bd46","modified":1545206881694},{"_id":"public/archives/2016/page/4/index.html","hash":"df37e91cd07638923cda376052d08efc1549257f","modified":1545206881694},{"_id":"public/archives/2016/11/index.html","hash":"8310518a0b4ef61206d483370da68677f134455a","modified":1545206881694},{"_id":"public/archives/2016/11/page/2/index.html","hash":"18941ebe6d4057f3e1b1d276580b8d0a788f47c9","modified":1545206881694},{"_id":"public/archives/2016/12/index.html","hash":"f2a0d8012ae34de8dd188df5bbb42da949a49ed9","modified":1545206881694},{"_id":"public/archives/2016/12/page/2/index.html","hash":"749772d11b3c5b96d489e6db1105263fcf6c65ff","modified":1545206881694},{"_id":"public/archives/2017/index.html","hash":"fd17de4159738ec61202eece1909cf385269d444","modified":1545206881694},{"_id":"public/archives/2017/page/2/index.html","hash":"f758b1d3a33fc40bdb52d2b44b9dbb5f932131b9","modified":1545206881694},{"_id":"public/archives/2017/05/index.html","hash":"808299556e3b4192ab09e141d8cc446fe7216b74","modified":1545206881694},{"_id":"public/archives/2017/06/index.html","hash":"3cd6e6a8726634b9c2bf0e9581c4267efff59115","modified":1545206881694},{"_id":"public/archives/2017/08/index.html","hash":"c8cdfea1fa83d92d9baf7fee34e9dff956d01d6c","modified":1545206881694},{"_id":"public/archives/2017/12/index.html","hash":"4ccc85b48e81731d6254429f6596c381060c098d","modified":1545206881694},{"_id":"public/archives/2018/index.html","hash":"b28d08b4bb03ee287ff0e4289259d4e598dd37cc","modified":1545206881694},{"_id":"public/archives/2018/02/index.html","hash":"704a9b857217d248dec196732f57d2c7532d824b","modified":1545206881695},{"_id":"public/archives/2018/04/index.html","hash":"dcf6a0970d36616a77a77687f5c9f1d9e8160310","modified":1545206881695},{"_id":"public/archives/2018/07/index.html","hash":"ba020bc13fde6c64073c25c69cf64a710bdb4f9b","modified":1545206881695},{"_id":"public/archives/2018/10/index.html","hash":"90c13ad28d051f0a597218e2b1fcd003b4e4a833","modified":1545206881695},{"_id":"public/tags/Blog/index.html","hash":"6484d7c577396ee5ea05f50b6b10b3b0a8cfb7be","modified":1545206881695},{"_id":"public/tags/hexo/index.html","hash":"6484d7c577396ee5ea05f50b6b10b3b0a8cfb7be","modified":1545206881695},{"_id":"public/tags/C/index.html","hash":"5a7094213ea91c1be5de47321d8ec6c74a4171d5","modified":1545206881695},{"_id":"public/tags/CSS/index.html","hash":"1a09380b79b0e196f88dd61d8c5218679241bf7f","modified":1545206881695},{"_id":"public/tags/字体/index.html","hash":"1a09380b79b0e196f88dd61d8c5218679241bf7f","modified":1545206881695},{"_id":"public/tags/FAQ/index.html","hash":"84d062408f379f90d8b61580425417302d3f0645","modified":1545206881695},{"_id":"public/tags/flash-builder/index.html","hash":"77a077e32b8964879575ca3ded49dd1c07926be7","modified":1545206881695},{"_id":"public/tags/Eclipse/index.html","hash":"0dbeec85cc3ce149eef87d3d99ddc3293e1c78db","modified":1545206881695},{"_id":"public/tags/java/index.html","hash":"0dbeec85cc3ce149eef87d3d99ddc3293e1c78db","modified":1545206881695},{"_id":"public/tags/FPSpread/index.html","hash":"ca8db3dbe6bab6863e6724575308a1252b51f2bf","modified":1545206881695},{"_id":"public/tags/sql/index.html","hash":"0502cd4c8edba7d1f1984b8f46dae44aa1a888c1","modified":1545206881695},{"_id":"public/tags/fpComboAdo/index.html","hash":"4338eea1c027e3dd0a79abd3531217eff6940471","modified":1545206881696},{"_id":"public/tags/属性/index.html","hash":"e4f78aeda36a00edcbc15c3629c11d9d14267d6e","modified":1545206881696},{"_id":"public/tags/apache-ftpserver/index.html","hash":"c3a1f1de41a0ea0e5e3faf1ad7f5b665d9739088","modified":1545206881696},{"_id":"public/tags/FTP/index.html","hash":"c3a1f1de41a0ea0e5e3faf1ad7f5b665d9739088","modified":1545206881696},{"_id":"public/tags/Flex/index.html","hash":"a67ded5f5f5a9cceef0fed35f866ccbf3f948b35","modified":1545206881696},{"_id":"public/tags/dataGrid/index.html","hash":"96ad19566955c080db0678004818acb83939f850","modified":1545206881696},{"_id":"public/tags/as数据类型/index.html","hash":"fbb1685e10aa7a01f913d7157480327c17ca862a","modified":1545206881696},{"_id":"public/tags/Git/index.html","hash":"f3364d1b31cfe58a7632af757e9509fbc614232b","modified":1545206881696},{"_id":"public/tags/scroller/index.html","hash":"272340dddbad5134304b5e89d786bb14587ada48","modified":1545206881696},{"_id":"public/tags/HAProxy/index.html","hash":"8a09240293c996b76526aaee072a20b7bacffb24","modified":1545206881696},{"_id":"public/tags/JavaScript/index.html","hash":"4ba8af6dc37e5938b7b2389a38e31665e3c532fd","modified":1545206881696},{"_id":"public/tags/Java/index.html","hash":"5cdb80b43879e10a21f296a1b987fd8b772be343","modified":1545206881696},{"_id":"public/tags/字符串/index.html","hash":"f3e598a3811df2de499f71aa0cd53452b9b33b80","modified":1545206881696},{"_id":"public/tags/IT/index.html","hash":"ea86b9b3b64e49a249bef4be77981d09335b959e","modified":1545206881697},{"_id":"public/tags/日志/index.html","hash":"bf616dba9428a3aff9a370706aad4b3e14136828","modified":1545206881697},{"_id":"public/tags/jdk/index.html","hash":"4fbb8f9d565cc31c8d630c3e7f4d008f86904d47","modified":1545206881697},{"_id":"public/tags/log4j/index.html","hash":"39197090a4d689d22c73223b7c2e73cd4ba33840","modified":1545206881697},{"_id":"public/tags/tomcat/index.html","hash":"eec7a79246dd8cdddf4b2cea2bdcb192e70b671a","modified":1545206881697},{"_id":"public/tags/Kettle/index.html","hash":"f3a89de3fe405d40f1749159e6520690fbdc6c7c","modified":1545206881697},{"_id":"public/tags/job/index.html","hash":"f3a89de3fe405d40f1749159e6520690fbdc6c7c","modified":1545206881697},{"_id":"public/tags/Linux/index.html","hash":"7307fc1b6888496332e321ce21158fe6fb35f751","modified":1545206881697},{"_id":"public/tags/Oracle/index.html","hash":"e65e4e0aa8a2e51dd243a4fb2c2709af89c6ba69","modified":1545206881697},{"_id":"public/tags/创建表空间/index.html","hash":"e983dc4d6083da2e0f01710d3a9735f09ad9b6a5","modified":1545206881697},{"_id":"public/tags/命令/index.html","hash":"657070eb0257dbe957d1b9dc3980c5b38979f513","modified":1545206881697},{"_id":"public/tags/导入导出/index.html","hash":"834907cc6fa11659e79cc63f59598acd0866e6c2","modified":1545206881698},{"_id":"public/tags/SQL/index.html","hash":"0c1a333227ea5100e16a30a67997e7a3a503bfa5","modified":1545206881698},{"_id":"public/tags/数据库/index.html","hash":"806df6ce83ea9a8a70e48b4b5aa535d926484aa5","modified":1545206881698},{"_id":"public/tags/Access/index.html","hash":"5b97a13e88e4a366adad412879a2ff6048e479a7","modified":1545206881698},{"_id":"public/tags/死锁/index.html","hash":"fd097a3f4901f5afca2a3e7c546caf5eb1c02f8e","modified":1545206881698},{"_id":"public/tags/经典语句/index.html","hash":"9888683ef02ded61eb5e3e3102d4714fff4238eb","modified":1545206881698},{"_id":"public/tags/Sublime-Text/index.html","hash":"10aab63d1c4e79efcb40eea2cdaf3da1fc962b73","modified":1545206881698},{"_id":"public/tags/快捷键/index.html","hash":"10aab63d1c4e79efcb40eea2cdaf3da1fc962b73","modified":1545206881698},{"_id":"public/tags/Think/index.html","hash":"56305d1c848c42b8c3d9b8ec27a0c25a025fd59c","modified":1545206881698},{"_id":"public/tags/虚拟化/index.html","hash":"56305d1c848c42b8c3d9b8ec27a0c25a025fd59c","modified":1545206881698},{"_id":"public/tags/VB/index.html","hash":"946948ab2663212b76b17ef67446cdcba367fe4b","modified":1545206881698},{"_id":"public/tags/Windows/index.html","hash":"d3b89f0d51cd8d85ce1dfd00da544b63c9b735f0","modified":1545206881698},{"_id":"public/tags/美化/index.html","hash":"fe2d7ec274227efd256351ffdeea9264f88c4aaa","modified":1545206881698},{"_id":"public/categories/Blog/index.html","hash":"6484d7c577396ee5ea05f50b6b10b3b0a8cfb7be","modified":1545206881698},{"_id":"public/categories/C/index.html","hash":"5a7094213ea91c1be5de47321d8ec6c74a4171d5","modified":1545206881699},{"_id":"public/categories/CSS/index.html","hash":"1a09380b79b0e196f88dd61d8c5218679241bf7f","modified":1545206881699},{"_id":"public/categories/FAQ/index.html","hash":"84d062408f379f90d8b61580425417302d3f0645","modified":1545206881699},{"_id":"public/categories/Eclipse/index.html","hash":"0dbeec85cc3ce149eef87d3d99ddc3293e1c78db","modified":1545206881699},{"_id":"public/categories/FPSpread/index.html","hash":"ca8db3dbe6bab6863e6724575308a1252b51f2bf","modified":1545206881699},{"_id":"public/categories/FTP/index.html","hash":"c3a1f1de41a0ea0e5e3faf1ad7f5b665d9739088","modified":1545206881699},{"_id":"public/categories/Flex/index.html","hash":"a67ded5f5f5a9cceef0fed35f866ccbf3f948b35","modified":1545206881699},{"_id":"public/categories/Git/index.html","hash":"f3364d1b31cfe58a7632af757e9509fbc614232b","modified":1545206881699},{"_id":"public/categories/HAProxy/index.html","hash":"8a09240293c996b76526aaee072a20b7bacffb24","modified":1545206881699},{"_id":"public/categories/JavaScript/index.html","hash":"4ba8af6dc37e5938b7b2389a38e31665e3c532fd","modified":1545206881699},{"_id":"public/categories/IT/index.html","hash":"ea86b9b3b64e49a249bef4be77981d09335b959e","modified":1545206881700},{"_id":"public/categories/Java/index.html","hash":"5cdb80b43879e10a21f296a1b987fd8b772be343","modified":1545206881700},{"_id":"public/categories/Kettle/index.html","hash":"f3a89de3fe405d40f1749159e6520690fbdc6c7c","modified":1545206881700},{"_id":"public/categories/OS/index.html","hash":"d009f431be56d843b8b1f7267bffe960d2001df9","modified":1545206881700},{"_id":"public/categories/Linux/index.html","hash":"8275eab587f2dc2605866325080138912735d3e2","modified":1545206881700},{"_id":"public/categories/Oracle/index.html","hash":"e65e4e0aa8a2e51dd243a4fb2c2709af89c6ba69","modified":1545206881700},{"_id":"public/categories/SQL/index.html","hash":"0c1a333227ea5100e16a30a67997e7a3a503bfa5","modified":1545206881700},{"_id":"public/categories/Sublime-Text/index.html","hash":"10aab63d1c4e79efcb40eea2cdaf3da1fc962b73","modified":1545206881701},{"_id":"public/categories/Think/index.html","hash":"56305d1c848c42b8c3d9b8ec27a0c25a025fd59c","modified":1545206881701},{"_id":"public/categories/VB/index.html","hash":"946948ab2663212b76b17ef67446cdcba367fe4b","modified":1545206881701},{"_id":"public/links/index.html","hash":"6111cd1f3936f1cafa4f7f5a85e8c265df82d0e2","modified":1545206881701},{"_id":"public/tags/index.html","hash":"8bcd24dcdb853e4fa2e9271a8879fa761dcb2509","modified":1545206881702},{"_id":"public/2018/10/24/【SQL】Access与SQL-Server在写法上的区别/index.html","hash":"93c0e17c90aaf5056a86c8e1f735cc388f8322a1","modified":1545206881702},{"_id":"public/2018/04/26/【VB】下载网页文件或图片的方法/index.html","hash":"75561e11ed0caed26640d792332bb8d2f315da15","modified":1545206881702},{"_id":"public/2018/02/01/【HAProxy】脚本启动和关闭/index.html","hash":"e2dfb5f4741d930511076515a0243fbf6a98822f","modified":1545206881702},{"_id":"public/2018/04/10/【FTP】apache-ftpserver安装配置/index.html","hash":"ecf19ab2b41fb894cec0316ded7ef67eac1d8733","modified":1545206881702},{"_id":"public/2017/12/22/【HAProxy】介绍和应用/index.html","hash":"18b22d9e2898fa41525ce7ed9f5d10f5b25e7aed","modified":1545206881702},{"_id":"public/2017/12/22/【HAProxy】配置详解/index.html","hash":"fe0e0c48dee4af2ac232604c636e66b97167bb5f","modified":1545206881702},{"_id":"public/2017/12/20/【HAProxy】ACL规则定义/index.html","hash":"3ae1f8dc6088654a8d00d7f229f453b7fc7f538f","modified":1545206881702},{"_id":"public/2017/12/19/【HAProxy】安装配置/index.html","hash":"d45a22ee7bb0c3e596f12e3b78f24f2269a20810","modified":1545206881702},{"_id":"public/2018/07/03/【C++】在VS2017中使用C++创建和使用DLL/index.html","hash":"9b5e48258d451a14147e0da62e5b109a81148bff","modified":1545206881702},{"_id":"public/2017/08/10/【Linux】[天翼云]数据盘分区以及格式化/index.html","hash":"16ba640cd911f751977df6e6443fd392bff9d31f","modified":1545206881703},{"_id":"public/2016/12/28/【Java】tomcat下载和安装/index.html","hash":"902486606820c16eb7d8798ab3fdc87550e065d0","modified":1545206881703},{"_id":"public/2016/12/28/【Java】jdk下载安装/index.html","hash":"575b531e8392c30b2c9cecad008635a228a2d8fc","modified":1545206881703},{"_id":"public/2016/12/22/【IT】log4j-properties/index.html","hash":"3a732664f2037242d037e41cfbdb136e52ee4e66","modified":1545206881703},{"_id":"public/2016/12/22/【FPSpread】属性说明/index.html","hash":"e8c5369edd77a14d94009c9a1e43994377b0bb5c","modified":1545206881703},{"_id":"public/2016/11/29/【SQL】经典语句/index.html","hash":"c49e1b2042986f679284dc5f8d6f0baeff674472","modified":1545206881703},{"_id":"public/2016/11/29/【SQL】查询死锁和阻塞/index.html","hash":"a3e16c4b0d93e5fb011e98db243d18bdd7a4735f","modified":1545206881703},{"_id":"public/2016/11/29/【Oracle】imp和exp语句/index.html","hash":"37c9e37e70d92c5a189c8843304256a12aec0551","modified":1545206881703},{"_id":"public/2016/11/24/【Windows】命令学习/index.html","hash":"659c3a079950aeaaabf7435365776805a7586fcb","modified":1545206881703},{"_id":"public/2016/11/22/【Linux】命令学习/index.html","hash":"54b7bb406768a4fe4789c9be5b368179af3714f8","modified":1545206881703},{"_id":"public/page/2/index.html","hash":"0dc0561a6e630c5567e38303146040db1593faaa","modified":1545206881703},{"_id":"public/page/3/index.html","hash":"b5d3315036d638603f4f4054227e88ec1e12bc64","modified":1545206881703},{"_id":"public/page/4/index.html","hash":"b20f9c0b93b0fee0f6bd9680ce68e4d10b94c1f2","modified":1545206881703},{"_id":"public/page/5/index.html","hash":"132663ee5c1add3836f8335075b4895d4579b646","modified":1545206881703},{"_id":"public/page/6/index.html","hash":"275c86b3e439c7b8d7423480c8b2ac72dacc066a","modified":1545206881703},{"_id":"public/2018/12/19/【Git】Git下载安装/index.html","hash":"d187d6c11095391c1d039bfd81b65d26625f1789","modified":1545206881723},{"_id":"public/archives/2018/page/2/index.html","hash":"faf047ef9b1f868d42ad249ec0f497659b3aeb08","modified":1545206881724},{"_id":"public/archives/2018/12/index.html","hash":"8efef2116721c66b956c99b58cdc9512ce4f1bb8","modified":1545206881724},{"_id":"public/categories/Windows/index.html","hash":"d3b89f0d51cd8d85ce1dfd00da544b63c9b735f0","modified":1545206881724},{"_id":"public/favicon.ico","hash":"83afffb420ac1e95c9558f284745ecaf0b694c22","modified":1545206881739},{"_id":"public/assets/blogImg/YPN_alipay-32x32.jpg","hash":"d1f710a959ff02f9350462236b2f5cac27b000ad","modified":1545206881739},{"_id":"public/assets/blogImg/YPN_Logo_Backup.png","hash":"590cc58b67416b7fabd1fa13467ece0df1c54bd7","modified":1545206881739},{"_id":"public/assets/blogImg/coding-logo.png","hash":"4690d56a958032bb481179c1e0e646464cbbbace","modified":1545206881739},{"_id":"public/assets/blogImg/YPN_Logo.png","hash":"b0917f68b7b5b5890d63fc13af18ed02b7ac0bb7","modified":1545206881739},{"_id":"public/assets/blogImg/YPN_wechatpay-32x32.png","hash":"ca684ae3f992e2a173aed5dc4ce72a1034c4f008","modified":1545206881739},{"_id":"public/assets/blogImg/github-logo.jpg","hash":"6425869828496858e7816fbc7c3b3a95f48c05e3","modified":1545206881739},{"_id":"public/assets/blogImg/email-logo.jpg","hash":"250e687922d1e0e6a29474e94764ca654f098565","modified":1545206881739},{"_id":"public/assets/blogImg/xlweibo-logo.jpg","hash":"df8c59ff93fd5ee1d33e34e6098fa9ad1cfc33f5","modified":1545206881739},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1545206881739},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1545206881739},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1545206881740},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1545206881740},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1545206881740},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1545206881740},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1545206881740},{"_id":"public/img/pinstripe.gif","hash":"bccd0c270a30eab23908e6c2ff1a470cd6fd9e2d","modified":1545206881740},{"_id":"public/img/close.gif","hash":"d86a32cb866a2f57b2b101f652d4e9c2a8346bd0","modified":1545206881740},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1545206881740},{"_id":"public/img/loader.gif","hash":"dcabdd743fd3e9d7bd5647abeb86e66a3e6f9597","modified":1545206881740},{"_id":"public/css/reset.css","hash":"bf90bec014d8942038cbd93eef9595d684194a67","modified":1545206882684},{"_id":"public/css/style.css","hash":"e62e4200b36049aff7ca065025c9685ca796d819","modified":1545206882684},{"_id":"public/js/activate-power-mode.js","hash":"1e75e9d156bd04b75aa2d3c10dfb289edf6ef56f","modified":1545206882684},{"_id":"public/js/addphoto.js","hash":"896d51a33c352c4fd26e3191694a31299fef9cb4","modified":1545206882685},{"_id":"public/js/totop.js","hash":"7082bceb45da1409340293f76328e2647d95dd0a","modified":1545206882685},{"_id":"public/js/jquery.masonry.min.js","hash":"217300ee24da1a22e280fdbe60619dc35a8f39cd","modified":1545206882685},{"_id":"public/js/photo.js","hash":"0021bd8456a853b750797d09b258ecc7e588cbb7","modified":1545206882685},{"_id":"public/js/jquery.easing.1.3.js","hash":"82e40d060bc269a6dde20c3990ca5a4fea6ca754","modified":1545206882685},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1545206882685},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1545206882685},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1545206882685},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1545206882685},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1545206882685},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1545206882685},{"_id":"public/404.html","hash":"38828b3c5df5a28374587c873551efc89fb7eaa8","modified":1545206882685},{"_id":"public/css/style.dark.css","hash":"0fa3a30a31e8f84ccb0e151a30b0610b0a06fe9f","modified":1545206882685},{"_id":"public/css/style.light.css","hash":"7624a6a9f6252c4aa762c4fb8796cfdb22d4088a","modified":1545206882685},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1545206882685},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1545206882685},{"_id":"public/js/highlight.pack.js","hash":"0708051de45d4cd35d0727f577e02f90ec0a60f4","modified":1545206882685},{"_id":"public/js/bootstrap.min.js","hash":"430a443d74830fe9be26efca431f448c1b3740f9","modified":1545206882686},{"_id":"public/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1545206882686},{"_id":"public/js/embed.js","hash":"69ca05a4c72b8c3a35d6427f4424e2fb8c50ba70","modified":1545206882686},{"_id":"public/js/jquery-1.11.3.min.js","hash":"276c87ff3e1e3155679c318938e74e5c1b76d809","modified":1545206882686},{"_id":"public/js/jquery.min.js","hash":"6fca78dac2797c02d86a4bf6514eda398b7dbe62","modified":1545206882686},{"_id":"public/img/default-banner-dark.jpg","hash":"e15832861cc6e5d55d08fbbe9d1cd472fe1a876e","modified":1545206882712},{"_id":"public/img/default-banner-light.jpg","hash":"df4daccf84205e76708fc5e703dc2476f59a9d9d","modified":1545206882713}],"Category":[{"name":"Blog","_id":"cjpuwa1fa0003s0jtc0ttz5nx"},{"name":"C++","_id":"cjpuwa1g2000ds0jt27luwrb7"},{"name":"C#","_id":"cjpuwa1ge000ls0jttbmsprnb"},{"name":"CSS","_id":"cjpuwa1gk000rs0jt9yoxbuwi"},{"name":"FAQ","_id":"cjpuwa1gp000ys0jt9ctguo2b"},{"name":"Eclipse","_id":"cjpuwa1gy0015s0jtwtiljpr7"},{"name":"FPSpread","_id":"cjpuwa1hc001hs0jtg6bhxw42"},{"name":"FTP","_id":"cjpuwa1hq001ss0jtzvpppmfn"},{"name":"Flex","_id":"cjpuwa1hu001ys0jtnbd9rq6n"},{"name":"Git","_id":"cjpuwa1j1002ys0jtu8bdcm8t"},{"name":"HAProxy","_id":"cjpuwa1jk003gs0jt9ty208j6"},{"name":"JavaScript","_id":"cjpuwa1kd004as0jtpxad02fz"},{"name":"IT","_id":"cjpuwa1kg004es0jth14uogk0"},{"name":"Java","_id":"cjpuwa1kj004ls0jttqst7uag"},{"name":"Kettle","_id":"cjpuwa1kt0056s0jthwpvrj69"},{"name":"OS","_id":"cjpuwa1kv005bs0jtjpyt5q8i"},{"name":"Linux","_id":"cjpuwa1ky005is0jtbrtm023h"},{"name":"Oracle","_id":"cjpuwa1l7005ys0jtrl0znluz"},{"name":"SQL","_id":"cjpuwa1ld006bs0jtapgzqjod"},{"name":"Sublime Text","_id":"cjpuwa1lk006us0jtknjvy8h1"},{"name":"Think","_id":"cjpuwa1lm006zs0jtg38if8fn"},{"name":"VB","_id":"cjpuwa1ln0072s0jtdfrmm9w5"},{"name":"Windows","_id":"cjpuwa1lo0077s0jtgc9l1yxh"}],"Data":[],"Page":[{"title":"链接","layout":"links","date":"2016-11-11T04:31:37.000Z","toc":true,"_content":"\n#### 常用\n[大马路](https://dama.lu/)          |  [谷歌搜索](https://www.google.com/ncr)        |  [谷歌香港](https://www.google.com.hk/ncr)   |  [维基百科](https://www.wikipedia.org/)  |  [博客预览](http://localhost:4000)\n[网易公开课](https://open.163.com/) |  [YouTube](https://www.youtube.com/)\n[CSDN.NET](http://www.csdn.net/)    |  [VeryCD 电驴大全](http://www.verycd.com/)     |  [360doc个人图书馆](http://www.360doc.com/)\n[cnBeta](http://www.cnbeta.com/)    |  [果壳](http://www.guokr.com/)                 |  [少数派](https://sspai.com/)                |  [数字尾巴](http://www.dgtle.com/)\n[老D博客](https://laod.cn/)         |  [黑果小兵](https://blog.daliansky.net/)       |  [免费吧](http://www.mianfeib.com/)          |  [行客工作室](http://www.runker.net/)\n[百度云](https://pan.baidu.com/)    |  [腾讯云](https://cloud.tencent.com/)          |  [贴图库](http://www.tietuku.com/)\n\n&nbsp;\n\n\n#### 音乐\n[SongTaste](http://www.songtaste.com/)  |  [AeKun](https://www.aekun.com/)  |  [网易云音乐](http://music.163.com)  |  [VIP付费音乐解析下载](http://music.zhuolin.wang/)\n\n&nbsp;\n\n\n#### 电影\n[BT下载](http://www.qinou.cn/)     |  [BT之家](http://www.btbtt33.com/)        |  [BT之家](http://www.415.net)        |  [BT之家](http://www.btbtt.com)       |  [BT之家](http://www.btbta.com)\n[破晓电影](http://www.poxiao.com)  |  [放电影网](http://www.fangdianying.tv/)  |  [电影天堂](http://www.dy2018.com/)  |  [迅雷电影下载](http://www.xlpu.cc/)  |  [快播电影](http://www.bubulai.com/) |  [LOL电影天堂](http://www.loldytt.com/) |  [BT电影天堂](http://www.btbttv.net/) | [迅影网](https://www.xunyingwang.com/)\n[预告片世界](http://www.yugaopian.cn/)\n[人人影视](http://www.yyets.com/)\n[第二度](https://deardu.com/)\n\n\n&nbsp;\n\n#### 游戏\n[Chatroulette](http://chatroulette.com/)                      |  [三国杀](http://web.sanguosha.com/)\n[好蜀门私服](http://www.haosm.com/)\n[王者荣耀通用铭文推荐 通用全英雄四级五级铭文推荐](http://news.17173.com/z/pvp/content/02122017/153037729.shtml)\n\n\n&nbsp;\n\n#### 美图\n[it.me](http://www.topit.me/)                                 |  [Picever](http://www.picever.com/)                                                              |  [笔记本桌面壁纸下载](http://bbs.zol.com.cn/nbbbs/d33943.html)\n[手写导航](http://shouxie.org/)                               |  [手写体网](http://shouxieti.com/)\n\n&nbsp;\n\n\n#### 在线工具\n[在线工具](http://tool.lu/)\n[JSON在线解析及格式化验证](http://www.json.cn/)\n[转换json格式为C#类](http://json2csharp.chahuo.com/)\n[ATOOL在线工具](http://www.atool.org/)\n[在线API](http://tool.oschina.net/)\n[PMD5](http://pmd5.com/#)\n[输入让你无语的MD5](https://www.somd5.com/)\n[在线MD5暴力破解 - md5解密破解 - aTool在线工具](http://www.atool.org/md5-crack.php)\n[png在线转ico](http://www.easyicon.net/covert/)\n[MakePic.com 图片制造](http://www.makepic.com/)\n[草料二维码美化器](http://mh.cli.im/)\n[简繁体在线转换工具](http://tool.lu/zhconvert/)\n[核心价值编码器](https://sym233.github.io/core-values-encoder/)\n[核心价值编码器源码](https://github.com/sym233/core-values-encoder)\n[生成随机密码](https://suijimimashengcheng.51240.com/)\n[在线制作您的Logo](https://www.logaster.cn/)\n\n&nbsp;\n\n\n#### 系统/软件下载\n[IT之家](https://www.ithome.com/)                             |  [系统之家](http://www.xitongzhijia.net/)                                                              |  [系统天地](http://www.xitongtiandi.net/)                                                              |  [Win10专业版官网](http://www.win10zyb.com/)                                                              |  [Win10之家](http://www.xh52.com/)                                                              |  [系统圣地](http://www.285868.com/)\n[黑苹果乐园](https://imac.hk/)\t\t\t\t\t\t\t\t  |  [从零开始的黑苹果安装教程](http://tieba.baidu.com/p/5179866130#)\n[绿盟](http://www.xdowns.com/)                                |  [zd423](http://www.zdfans.com/)\n[浏览迷](http://liulanmi.com/)                                |  [Chrome浏览器插件下载中心](https://www.chromefor.com/)\n[最新迅雷(xunlei)会员账号天天更新同享](http://www.win10.name/news/193.html)\n[FlashPlayer下载地址1](http://get.adobe.com/cn/flashplayer/otherversions/)  |  [FlashPlayer下载地址2](http://www.adobe.com/support/flashplayer/downloads.html)  |  [Debugger Version地址](http://kb2.adobe.com/cps/155/tn_15507.html)\n\n&nbsp;\n\n\n#### 社区\n[SDK.cn](https://www.sdk.cn/)\n[博客园](http://www.cnblogs.com/cmt/)\n[菜鸟教程](http://www.runoob.com/)\n[开源中国社区](http://www.oschina.net/)\n[HTM5中国产业联盟](http://www.html5plus.org/)\n[SQLite 教程](http://www.runoob.com/sqlite/sqlite-tutorial.html)\n[channel9](https://channel9.msdn.com/)\n\n&nbsp;\n\n\n#### 资源\n[矢量图标库](http://www.iconfont.cn/)\n[百度静态资源公共库](http://cdn.code.baidu.com/)\n[MSDN](http://msdn.itellyou.cn/?gytyzs=0z1zl)\n[常用的gif正在加载图](http://blog.sina.com.cn/s/blog_7c28bad401016j66.html)\n\n&nbsp;\n\n\n#### 文章/教程\n[LB 负载均衡的层次结构](http://www.cnblogs.com/mindwind/p/5339657.html)\n[GitHub上优秀的开源项目](http://blog.csdn.net/ren1027538427/article/details/52450294)\n[sass入门教程](http://www.w3cplus.com/sassguide/)\n[项目目录结构规范](https://segmentfault.com/a/1190000002471120)\n[Nginx 0.5.31 + PHP 5.2.4（FastCGI）搭建可承受3万以上并发连接数，胜过Apache 10倍的Web服务器[原创]](http://zyan.cc/post/297/)\n[Linux删除乱码文件](http://www.cnblogs.com/quanweiru/p/3764003.html)\n[SUSE Linux启用SSH](http://tophandxing.blog.163.com/blog/static/109714820124123438513/)\n[Win10怎么把批处理文件固定到开始菜单](http://www.jb51.net/os/win10/483729.html)\n[Flex转型Html学习随笔1——关于Html页面的div布局（上）](http://www.cnblogs.com/momoko8443/p/4302879.html)\n[Flex转型Html学习随笔1——关于Html页面的div布局（下）](http://www.cnblogs.com/momoko8443/p/4303829.html)\n[MIUI更新日志](http://www.miui.com/home.php?mod=space&uid=8&do=thread&view=me&from=space)\n[2017 码云最火爆开源项目 TOP 50，你都用过哪些？](https://www.oschina.net/news/92438/2017-mayun-top-50)\n[解决TCP/IP筛选的实用设置问题](https://jingyan.baidu.com/article/851fbc37dc1e513e1f15ab27.html)\n[如何在不重装服务器的情况下尝试解决sqlmaint.exe失败的问题](http://blog.csdn.net/zhaoyonghui100/article/details/8939950)\n[好的用户界面-界面设计的一些技巧](https://www.cnblogs.com/Wayou/p/goodui.html#home)\n[一种电子病历系统软件框架思想——B/S与C/S混合架构](http://www.hit180.com/21534.html)\n[B/S，C/S，B/S和C/S混合模式的概念区别优缺点及前景分析](http://www.ufidawhy.com/mfufida/613.html)\n[黑苹果macOS High Sierra 10.13.6详细安装新手菜鸟教程](http://tzit.net/htmlitjs/2018-10-25/2234.html)\n[Sql Server 2000清除日志方法介绍](https://yq.aliyun.com/ziliao/22450)\n\n&nbsp;\n\n\n#### 前端/案例\n[前端网](http://www.qdfuns.com/)\n[LayUI](https://www.layui.com/)\n[10个顶级的CSS UI开源框架](http://www.codeceo.com/article/top-10-css-ui-framework.html)\n[Android酷炫实用的开源框架（UI框架）](http://www.runoob.com/w3cnote/android-ui-framework.html)\n[不落阁](http://www.lyblogs.cn/)\n[蓝蓝设计](http://www.lanlanwork.com/)\n[网络培训系统界面设计UI](http://www.th7.cn/Design/ui/201312/199261.shtml)\n[公司某项目前端技术积累](http://blog.csdn.net/sunyingyuan/article/details/38237139)\n[后台界面模板](http://www.mycodes.net/154/3.htm)\n\n&nbsp;\n\n\n#### Angular\n[AngularJS官网](https://angularjs.org/)                       |  [AngularJS中文官网](https://angular.cn/)                                                              |  [AngularUI官网](http://angular-ui.github.io/)\n[AngularJS所有版本下载](https://code.angularjs.org/)\n[Angularjs 中文版 API](http://www.ngnice.com)                 |  [Angularjs English API](https://docs.angularjs.org/api)                                                              |  [Angularjs 中文版 API v1.3.9](http://www.angularjsapi.cn/#/index)\n[AngularJS实例](http://showcase.ngnice.com/#/home/home)       |  [Angular Modules](http://ngmodules.org/)                                                              |  [Angular Script](http://angularscript.com/)\n[CSDN知识库：AngularJS](http://lib.csdn.net/base/23)          |  [伯乐在线：AngularJS](http://blog.jobbole.com/tag/angularjs/)                                                              |  [RIA爱好者：学习AngularJS](http://www.riafan.com/angularjs-learning/)\n[NgNice站点是由一批AngularJS爱好者发起的，致力于打造一个AngularJS的学习和经验分享平台。](http://www.ngnice.com/)\n[2013年度最强AngularJS资源合集](http://www.iteye.com/news/28651-AngularJS-Google-resource)                                                              |  [20个免费的 AngularJS 资源和开发教程](http://www.html5cn.org/article-9473-1.html)\n\n&nbsp;\n\n\n#### C++\n[C#调用C++ dll导出函数提示找不到指定模块](http://www.bubuko.com/infodetail-1761193.html)\n[C#多线程编程](https://www.cnblogs.com/luxiaoxun/p/3280146.html)\n\n&nbsp;\n\n\n#### C&#35;\n[C#教程](http://www.runoob.com/csharp/csharp-program-structure.html)\n[辉耀应用程序框架学习网](http://www.huiyaosoft.com/winformlist.htm)\n[Vs解决方案的目录结构设置和管理](https://blog.csdn.net/lp310018931/article/details/47991759)\n[C#（Net）软件开发常用工具汇总，提高你的开发效率](https://www.cnblogs.com/Jeremy2001/p/6066553.html)\n[Winform自动更新组件分享](http://www.cnblogs.com/KnightsWarrior/archive/2010/10/20/1856255.html#3754564)\n[Winform(C#.NET)自动更新组件的使用及部分功能实现](https://www.cnblogs.com/24la/p/autoupdater-component.html)\n[Winform开发框架的重要特性总结](https://www.cnblogs.com/wuhuacong/p/3199829.html)\n[厚积薄发，丰富的公用类库积累，助你高效进行系统开发（8）----非对称加密、BASE64加密、MD5等常用加密处理](http://www.cnblogs.com/wuhuacong/archive/2011/11/28/2266694.html)\n[Winform开发框架主界面设计展示](http://www.cnblogs.com/wuhuacong/p/3360648.html)\n[仿Office的程序载入窗体](https://www.cnblogs.com/HopeGi/p/3510809.html)\n[C#MDI打开子窗体去掉自动生成的菜单栏](https://blog.csdn.net/shiyangkai/article/details/71479947)\n[C# Tabcontrol组件如何切换显示Form窗体的示例代码](http://www.php.cn/csharp-article-355886.html)\n[Fluent.Ribbon](https://github.com/fluentribbon/Fluent.Ribbon)\n[RibbonWinForms](https://github.com/RibbonWinForms/RibbonWinForms)\n[C# winform程序怎么打包成安装项目(图解)](https://blog.csdn.net/u011981242/article/details/51059441)\n[【.Net】vs2017 自带发布工具 ClickOnce发布包遇到的问题](https://www.cnblogs.com/yanglang/p/8041662.html)\n[Winform打包工具SetupFactory 9 的使用](https://www.cnblogs.com/iiwen/p/5310246.html)\n[C#动态创建Access数据库及密码的方法](https://www.jb51.net/article/71952.htm)\n[C#编程总结（七）数据加密——附源码](https://www.cnblogs.com/yank/p/3528548.html)\n[C#常用的命名规则汇总](https://www.jb51.net/article/57163.htm)\n[C#三种定时器的实现](https://www.cnblogs.com/zhoug2020/p/5837035.html)\n[C#对WinForm应用程序的App.config的使用及加密](https://www.cnblogs.com/wanzhongjun/p/6534608.html)\n[Winform窗体控件图片过多后卡顿问题](https://blog.csdn.net/facefriends/article/details/79216114)\n[winform中的DataGridView的列宽设置（自动调整列宽）](https://blog.csdn.net/swarb/article/details/8493328)\n[C#Winform频繁刷新导致界面闪烁解决方法](https://www.cnblogs.com/ghbjimmy/articles/3635825.html)\n[C# WinForm开发系列 - DataGridView](http://www.cnblogs.com/peterzb/archive/2009/05/29/1491891.html)\n[DataGridView实现添加合计行并始终显示在底部](https://blog.csdn.net/tyouvivi/article/details/1676850)\n[tablelayoutpanel 动态调整行列宽度](https://www.cnblogs.com/mandaren/p/3709932.html)\n[C#批量插入数据到Sqlserver中的四种方式](https://www.cnblogs.com/ingstyle/p/6196908.html)\n[C#命名规则和风格(收集)](https://www.cnblogs.com/jiekeng/articles/561562.html)\n[水缘泡泡技术集](https://www.sypopo.com/post/OBQ6E6EWo0/)\n[C# WinForm项目三层架构简述](https://www.jianshu.com/p/7f628015a243)\n[想和代码谈谈](http://www.cnblogs.com/WayneShao/)\n[使用C#创建Access2010或Access2007 accdb 数据库文件](http://blog.sina.com.cn/s/blog_7cc533310101lxn2.html)\n\n&nbsp;\n\n\n#### Flex\n[Flex下载地址](http://www.adobe.com/support/flashplayer/downloads.html)                                                              |  [查看浏览器FLash版本、Debug Player](http://kb2.adobe.com/cps/155/tn_15507.html)\n[flex学习笔记](http://blog.csdn.net/wugouzi/article/details/5598392)  |  [Flex学习视频748-798](http://www.riameeting.com/node/748)\n[Flex成功案例](http://keren.iteye.com/blog/377733)            |  [中文Flex例子](http://blog.minidx.com/)\n[Flex 3 advancedDataGrid的使用](http://www.cnblogs.com/xuehai/archive/2009/09/26/1574531.html)\n[Flex性能优化](https://my.oschina.net/return/blog/208294#navbar-header)                                                              |  [Flex进阶持续学习——性能优化](http://coffeelover.iteye.com/blog/1163906)                                                 |  [flex应用程序性能优化十个方法](http://www.wangqi.com/html/2010-12/12796.htm)\n[Flex 中的undefined类型](http://dudong0726.iteye.com/blog/1296195)\n[Flash Builder 提示与技巧](http://www.adobe.com/cn/devnet/flex/articles/tips-tricks.html)\n[一名优秀的Flex开发者需要知道的10样东西](http://www.cnblogs.com/kakaflex/archive/2010/12/02/1894142.html)\n[Flex 3 AdvancedDataGrid的使用(三)](http://www.cnblogs.com/xuehai/archive/2009/09/26/1574533.html)\n\n&nbsp;\n\n\n#### fpSpread\n[Spread for Windows Forms高级主题(7)---自定义打印的外观](http://www.cnblogs.com/powertoolsteam/archive/2011/08/22/2149009.html)\n\n&nbsp;\n\n\n#### Git\n[常用 Git 命令清单](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n[推荐！手把手教你使用Git](http://blog.jobbole.com/78960/)\n[Git服务器搭建全过程分步详解](http://developer.51cto.com/art/201507/483448.htm)\n\n&nbsp;\n\n#### Haproxy\n[首页](https://www.haproxy.org/)\n[haproxy资源](http://www.csdn.net/tag/haproxy)\n[haproxy 配置 说明](http://blog.chinaunix.net/uid-24250828-id-3778032.html)\n[最新版haproxy linux下的设置（haproxy-1.4.20 ）](http://blog.csdn.net/zilong00007/article/details/7450317)\n[HAProxy负载均衡保持客户端和服务器Session亲缘性的三种方式](http://itindex.net/blog/2012/07/24/1343118758531.html)\n[Linux下HAProxy的均衡配置](http://blog.csdn.net/zilong00007/article/details/7275235)\n[5月16日发布HAProxy,实现八种负载算法](http://blog.51cto.com/1234567aaa/317891)\n[](https://www.cnblogs.com/qige2017/p/7783402.html)\n\n&nbsp;\n\n#### Hexo\n[hexo常用命令笔记](https://segmentfault.com/a/1190000002632530)\n[Windows下使用Hexo+GithubPage搭建博客](http://blog.csdn.net/wx_jin/article/details/51027783)\n[Hexo常见问题](http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88)                                                               |  [Hexo博客优化](http://xwartz.xyz/blog/2016/09/reduce-blog-load-time/)\n[Hexo官方主题](https://hexo.io/themes/)                        |  [Hexo主题](https://github.com/hexojs/hexo/wiki/Themes)\n[Hexo博客主题从Jacman切换到NexT.Mist ](http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/)\n\n&nbsp;\n\n#### Java\n[SSM框架——详细整合教程（Spring+SpringMVC+MyBatis）](http://blog.csdn.net/zhshulin/article/details/37956105)\n[spring-mvc与jquery-easyui整合](http://blog.csdn.net/cfl20121314/article/details/42160035)                                                                |  [SpringMVC+Hibernate +MySql+ EasyUI实现CRUD](http://my.oschina.net/xshuai/blog/345117)                              |  [基于Spring + Spring MVC + Mybatis 高性能web构建](http://blog.csdn.net/zoutongyuan/article/details/41379851)\n[Maven环境搭建和介绍](http://blog.csdn.net/fengshizty/article/details/43019561)                                                                |  [Maven搭建SpringMVC+Mybatis项目详解](http://doc.okbase.net/fengshizty/archive/126397.html)\n[配置简单功能强大的excel工具类搞定excel导入导出工具类](http://blog.csdn.net/lk_blog/article/details/8007777)\n[POI操作Excel常用方法总结 ](http://blog.csdn.net/huazhangena/article/details/7587731)\n[编程中国JSP教程和技术资料](http://old.bccn.net/Article/web/jsp/Index.html)\n[【FAQ】org.apache.maven.archiver.MavenArchiver.getManifest错误](http://www.cnblogs.com/asderx/p/6541945.html)\n\n&nbsp;\n\n#### JQuery\n[jQuery插件库](http://www.jq22.com/)\n[36个引人注目JQuery导航菜单](http://www.cnblogs.com/ywqu/archive/2009/08/15/1546559.html)\n\n&nbsp;\n\n#### Kettle\n[Kettle官网下载](http://kettle.pentaho.org/)                    |  [Kettle各版本下载](http://sourceforge.net/projects/pentaho/files/Data%20Integration/)\n[Kettle开源社区](http://www.ukettle.org/)\n[Kettle基本概念学习](http://www.cnblogs.com/hapjin/p/4578738.html)    |  [kettle使用命令行来运行ktr和kjb](http://www.cnblogs.com/wxjnew/p/3620792.html)\n[Kettle的一些常见问题](http://blog.csdn.net/iquicksandi/article/details/7635031)                                                                |  [Kettle连接数据库超时的参数设置](http://www.ukettle.org/thread-502-1-4.html)\n\n&nbsp;\n\n#### Linux\n[对 Linux 新手非常有用的 20 个命令](http://www.oschina.net/translate/useful-linux-commands-for-newbies)\n[linux数据盘，系统盘](http://blog.csdn.net/Truong/article/details/70171661)\n[数据盘分区以及格式化](http://blog.csdn.net/Truong/article/details/70171699)\n\n&nbsp;\n\n#### Markdown\n[Markdown在线编辑](http://www.ctrlshift.net/project/markdowneditor/)  |  [Windows在线markdown工具](https://www.zybuluo.com/mdeditor)\n[Markdown 语法 示例 字体 字号 颜色](http://blog.csdn.net/u011419965/article/details/50536937)\n[Markdown支持的语言](http://blog.csdn.net/peng_hong_fu/article/details/52805408)\n\n&nbsp;\n\n#### SQL\n[SQL Server 2008(R2)支持将数据导出为脚本](http://xcc313.iteye.com/blog/1331468)\n[【SQL Server备份恢复】维护计划实现备份：每周数据库完整备份、每天差异备份、每小时日志备份 ](http://blog.csdn.net/sqlserverdiscovery/article/details/11020057)\n[SQL 列转行，即多行合并成一条](https://www.cnblogs.com/luokunlun/p/5947615.html)\n[sql 判断 函数 存储过程是否存在的方法](https://www.cnblogs.com/a311300/p/4358916.html)\n\n&nbsp;\n\n#### Sublime Text\n[Sublime Text 2/3安装使用及常用插件](http://www.cnblogs.com/dudumao/p/4054086.html)\n[Sublime Text PackageControl](https://packagecontrol.io/)\n[Sublime Text 3 快捷键](https://segmentfault.com/a/1190000002570753)\n\n&nbsp;\n\n#### SVN\n[apache网站下载](http://subversion.apache.org/packages.html#windows)\n\n&nbsp;\n\n#### VB\n[VB源码](http://www.codesky.net/vb/)\n[VB函数大全](http://www10.zzu.edu.cn/ie_wangjunfeng/daquan/function/index.aspx)\n[MZ-Tools的博客](https://www.mztools.com/blog/moving-from-mz-tools-3-0-to-8-0/)\n[VB下的插件开发](https://blog.csdn.net/guyehanxinlei/article/details/1506461)\n[VB实现Base64 编解码](http://blog.csdn.net/iamlaosong/article/details/38229755)\n[VB动态调用类模块中的函数的方法 - CSDN博客](https://blog.csdn.net/keikisou/article/details/50564156)\n[VB几种函数参数传递方法，Variant，数组，Optional，ParamArray](https://blog.csdn.net/whchensir/article/details/52050796)\n[VB调用c++写的Dll的一点总结](https://blog.csdn.net/emma_he/article/details/3023337)\n\n&nbsp;\n\n#### Vue.js\n[Vue.js官网](http://cn.vuejs.org/)\n[JSFiddle Hello World](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\n\n&nbsp;\n\n#### 民生\n[宁夏人事考试中心](http://www.nxpta.gov.cn/)  |  [宁夏专业技术人员继续教育培训网](http://nxzj.chinahrt.com/)\n[宁夏人力资源和社会保障网上服务大厅](http://www.12333nx.gov.cn/nxwsrs/personlogin)\n","source":"links/index.md","raw":"---\ntitle: 链接\nlayout: links\ndate: 2016-11-11 12:31:37\ntoc: true\n---\n\n#### 常用\n[大马路](https://dama.lu/)          |  [谷歌搜索](https://www.google.com/ncr)        |  [谷歌香港](https://www.google.com.hk/ncr)   |  [维基百科](https://www.wikipedia.org/)  |  [博客预览](http://localhost:4000)\n[网易公开课](https://open.163.com/) |  [YouTube](https://www.youtube.com/)\n[CSDN.NET](http://www.csdn.net/)    |  [VeryCD 电驴大全](http://www.verycd.com/)     |  [360doc个人图书馆](http://www.360doc.com/)\n[cnBeta](http://www.cnbeta.com/)    |  [果壳](http://www.guokr.com/)                 |  [少数派](https://sspai.com/)                |  [数字尾巴](http://www.dgtle.com/)\n[老D博客](https://laod.cn/)         |  [黑果小兵](https://blog.daliansky.net/)       |  [免费吧](http://www.mianfeib.com/)          |  [行客工作室](http://www.runker.net/)\n[百度云](https://pan.baidu.com/)    |  [腾讯云](https://cloud.tencent.com/)          |  [贴图库](http://www.tietuku.com/)\n\n&nbsp;\n\n\n#### 音乐\n[SongTaste](http://www.songtaste.com/)  |  [AeKun](https://www.aekun.com/)  |  [网易云音乐](http://music.163.com)  |  [VIP付费音乐解析下载](http://music.zhuolin.wang/)\n\n&nbsp;\n\n\n#### 电影\n[BT下载](http://www.qinou.cn/)     |  [BT之家](http://www.btbtt33.com/)        |  [BT之家](http://www.415.net)        |  [BT之家](http://www.btbtt.com)       |  [BT之家](http://www.btbta.com)\n[破晓电影](http://www.poxiao.com)  |  [放电影网](http://www.fangdianying.tv/)  |  [电影天堂](http://www.dy2018.com/)  |  [迅雷电影下载](http://www.xlpu.cc/)  |  [快播电影](http://www.bubulai.com/) |  [LOL电影天堂](http://www.loldytt.com/) |  [BT电影天堂](http://www.btbttv.net/) | [迅影网](https://www.xunyingwang.com/)\n[预告片世界](http://www.yugaopian.cn/)\n[人人影视](http://www.yyets.com/)\n[第二度](https://deardu.com/)\n\n\n&nbsp;\n\n#### 游戏\n[Chatroulette](http://chatroulette.com/)                      |  [三国杀](http://web.sanguosha.com/)\n[好蜀门私服](http://www.haosm.com/)\n[王者荣耀通用铭文推荐 通用全英雄四级五级铭文推荐](http://news.17173.com/z/pvp/content/02122017/153037729.shtml)\n\n\n&nbsp;\n\n#### 美图\n[it.me](http://www.topit.me/)                                 |  [Picever](http://www.picever.com/)                                                              |  [笔记本桌面壁纸下载](http://bbs.zol.com.cn/nbbbs/d33943.html)\n[手写导航](http://shouxie.org/)                               |  [手写体网](http://shouxieti.com/)\n\n&nbsp;\n\n\n#### 在线工具\n[在线工具](http://tool.lu/)\n[JSON在线解析及格式化验证](http://www.json.cn/)\n[转换json格式为C#类](http://json2csharp.chahuo.com/)\n[ATOOL在线工具](http://www.atool.org/)\n[在线API](http://tool.oschina.net/)\n[PMD5](http://pmd5.com/#)\n[输入让你无语的MD5](https://www.somd5.com/)\n[在线MD5暴力破解 - md5解密破解 - aTool在线工具](http://www.atool.org/md5-crack.php)\n[png在线转ico](http://www.easyicon.net/covert/)\n[MakePic.com 图片制造](http://www.makepic.com/)\n[草料二维码美化器](http://mh.cli.im/)\n[简繁体在线转换工具](http://tool.lu/zhconvert/)\n[核心价值编码器](https://sym233.github.io/core-values-encoder/)\n[核心价值编码器源码](https://github.com/sym233/core-values-encoder)\n[生成随机密码](https://suijimimashengcheng.51240.com/)\n[在线制作您的Logo](https://www.logaster.cn/)\n\n&nbsp;\n\n\n#### 系统/软件下载\n[IT之家](https://www.ithome.com/)                             |  [系统之家](http://www.xitongzhijia.net/)                                                              |  [系统天地](http://www.xitongtiandi.net/)                                                              |  [Win10专业版官网](http://www.win10zyb.com/)                                                              |  [Win10之家](http://www.xh52.com/)                                                              |  [系统圣地](http://www.285868.com/)\n[黑苹果乐园](https://imac.hk/)\t\t\t\t\t\t\t\t  |  [从零开始的黑苹果安装教程](http://tieba.baidu.com/p/5179866130#)\n[绿盟](http://www.xdowns.com/)                                |  [zd423](http://www.zdfans.com/)\n[浏览迷](http://liulanmi.com/)                                |  [Chrome浏览器插件下载中心](https://www.chromefor.com/)\n[最新迅雷(xunlei)会员账号天天更新同享](http://www.win10.name/news/193.html)\n[FlashPlayer下载地址1](http://get.adobe.com/cn/flashplayer/otherversions/)  |  [FlashPlayer下载地址2](http://www.adobe.com/support/flashplayer/downloads.html)  |  [Debugger Version地址](http://kb2.adobe.com/cps/155/tn_15507.html)\n\n&nbsp;\n\n\n#### 社区\n[SDK.cn](https://www.sdk.cn/)\n[博客园](http://www.cnblogs.com/cmt/)\n[菜鸟教程](http://www.runoob.com/)\n[开源中国社区](http://www.oschina.net/)\n[HTM5中国产业联盟](http://www.html5plus.org/)\n[SQLite 教程](http://www.runoob.com/sqlite/sqlite-tutorial.html)\n[channel9](https://channel9.msdn.com/)\n\n&nbsp;\n\n\n#### 资源\n[矢量图标库](http://www.iconfont.cn/)\n[百度静态资源公共库](http://cdn.code.baidu.com/)\n[MSDN](http://msdn.itellyou.cn/?gytyzs=0z1zl)\n[常用的gif正在加载图](http://blog.sina.com.cn/s/blog_7c28bad401016j66.html)\n\n&nbsp;\n\n\n#### 文章/教程\n[LB 负载均衡的层次结构](http://www.cnblogs.com/mindwind/p/5339657.html)\n[GitHub上优秀的开源项目](http://blog.csdn.net/ren1027538427/article/details/52450294)\n[sass入门教程](http://www.w3cplus.com/sassguide/)\n[项目目录结构规范](https://segmentfault.com/a/1190000002471120)\n[Nginx 0.5.31 + PHP 5.2.4（FastCGI）搭建可承受3万以上并发连接数，胜过Apache 10倍的Web服务器[原创]](http://zyan.cc/post/297/)\n[Linux删除乱码文件](http://www.cnblogs.com/quanweiru/p/3764003.html)\n[SUSE Linux启用SSH](http://tophandxing.blog.163.com/blog/static/109714820124123438513/)\n[Win10怎么把批处理文件固定到开始菜单](http://www.jb51.net/os/win10/483729.html)\n[Flex转型Html学习随笔1——关于Html页面的div布局（上）](http://www.cnblogs.com/momoko8443/p/4302879.html)\n[Flex转型Html学习随笔1——关于Html页面的div布局（下）](http://www.cnblogs.com/momoko8443/p/4303829.html)\n[MIUI更新日志](http://www.miui.com/home.php?mod=space&uid=8&do=thread&view=me&from=space)\n[2017 码云最火爆开源项目 TOP 50，你都用过哪些？](https://www.oschina.net/news/92438/2017-mayun-top-50)\n[解决TCP/IP筛选的实用设置问题](https://jingyan.baidu.com/article/851fbc37dc1e513e1f15ab27.html)\n[如何在不重装服务器的情况下尝试解决sqlmaint.exe失败的问题](http://blog.csdn.net/zhaoyonghui100/article/details/8939950)\n[好的用户界面-界面设计的一些技巧](https://www.cnblogs.com/Wayou/p/goodui.html#home)\n[一种电子病历系统软件框架思想——B/S与C/S混合架构](http://www.hit180.com/21534.html)\n[B/S，C/S，B/S和C/S混合模式的概念区别优缺点及前景分析](http://www.ufidawhy.com/mfufida/613.html)\n[黑苹果macOS High Sierra 10.13.6详细安装新手菜鸟教程](http://tzit.net/htmlitjs/2018-10-25/2234.html)\n[Sql Server 2000清除日志方法介绍](https://yq.aliyun.com/ziliao/22450)\n\n&nbsp;\n\n\n#### 前端/案例\n[前端网](http://www.qdfuns.com/)\n[LayUI](https://www.layui.com/)\n[10个顶级的CSS UI开源框架](http://www.codeceo.com/article/top-10-css-ui-framework.html)\n[Android酷炫实用的开源框架（UI框架）](http://www.runoob.com/w3cnote/android-ui-framework.html)\n[不落阁](http://www.lyblogs.cn/)\n[蓝蓝设计](http://www.lanlanwork.com/)\n[网络培训系统界面设计UI](http://www.th7.cn/Design/ui/201312/199261.shtml)\n[公司某项目前端技术积累](http://blog.csdn.net/sunyingyuan/article/details/38237139)\n[后台界面模板](http://www.mycodes.net/154/3.htm)\n\n&nbsp;\n\n\n#### Angular\n[AngularJS官网](https://angularjs.org/)                       |  [AngularJS中文官网](https://angular.cn/)                                                              |  [AngularUI官网](http://angular-ui.github.io/)\n[AngularJS所有版本下载](https://code.angularjs.org/)\n[Angularjs 中文版 API](http://www.ngnice.com)                 |  [Angularjs English API](https://docs.angularjs.org/api)                                                              |  [Angularjs 中文版 API v1.3.9](http://www.angularjsapi.cn/#/index)\n[AngularJS实例](http://showcase.ngnice.com/#/home/home)       |  [Angular Modules](http://ngmodules.org/)                                                              |  [Angular Script](http://angularscript.com/)\n[CSDN知识库：AngularJS](http://lib.csdn.net/base/23)          |  [伯乐在线：AngularJS](http://blog.jobbole.com/tag/angularjs/)                                                              |  [RIA爱好者：学习AngularJS](http://www.riafan.com/angularjs-learning/)\n[NgNice站点是由一批AngularJS爱好者发起的，致力于打造一个AngularJS的学习和经验分享平台。](http://www.ngnice.com/)\n[2013年度最强AngularJS资源合集](http://www.iteye.com/news/28651-AngularJS-Google-resource)                                                              |  [20个免费的 AngularJS 资源和开发教程](http://www.html5cn.org/article-9473-1.html)\n\n&nbsp;\n\n\n#### C++\n[C#调用C++ dll导出函数提示找不到指定模块](http://www.bubuko.com/infodetail-1761193.html)\n[C#多线程编程](https://www.cnblogs.com/luxiaoxun/p/3280146.html)\n\n&nbsp;\n\n\n#### C&#35;\n[C#教程](http://www.runoob.com/csharp/csharp-program-structure.html)\n[辉耀应用程序框架学习网](http://www.huiyaosoft.com/winformlist.htm)\n[Vs解决方案的目录结构设置和管理](https://blog.csdn.net/lp310018931/article/details/47991759)\n[C#（Net）软件开发常用工具汇总，提高你的开发效率](https://www.cnblogs.com/Jeremy2001/p/6066553.html)\n[Winform自动更新组件分享](http://www.cnblogs.com/KnightsWarrior/archive/2010/10/20/1856255.html#3754564)\n[Winform(C#.NET)自动更新组件的使用及部分功能实现](https://www.cnblogs.com/24la/p/autoupdater-component.html)\n[Winform开发框架的重要特性总结](https://www.cnblogs.com/wuhuacong/p/3199829.html)\n[厚积薄发，丰富的公用类库积累，助你高效进行系统开发（8）----非对称加密、BASE64加密、MD5等常用加密处理](http://www.cnblogs.com/wuhuacong/archive/2011/11/28/2266694.html)\n[Winform开发框架主界面设计展示](http://www.cnblogs.com/wuhuacong/p/3360648.html)\n[仿Office的程序载入窗体](https://www.cnblogs.com/HopeGi/p/3510809.html)\n[C#MDI打开子窗体去掉自动生成的菜单栏](https://blog.csdn.net/shiyangkai/article/details/71479947)\n[C# Tabcontrol组件如何切换显示Form窗体的示例代码](http://www.php.cn/csharp-article-355886.html)\n[Fluent.Ribbon](https://github.com/fluentribbon/Fluent.Ribbon)\n[RibbonWinForms](https://github.com/RibbonWinForms/RibbonWinForms)\n[C# winform程序怎么打包成安装项目(图解)](https://blog.csdn.net/u011981242/article/details/51059441)\n[【.Net】vs2017 自带发布工具 ClickOnce发布包遇到的问题](https://www.cnblogs.com/yanglang/p/8041662.html)\n[Winform打包工具SetupFactory 9 的使用](https://www.cnblogs.com/iiwen/p/5310246.html)\n[C#动态创建Access数据库及密码的方法](https://www.jb51.net/article/71952.htm)\n[C#编程总结（七）数据加密——附源码](https://www.cnblogs.com/yank/p/3528548.html)\n[C#常用的命名规则汇总](https://www.jb51.net/article/57163.htm)\n[C#三种定时器的实现](https://www.cnblogs.com/zhoug2020/p/5837035.html)\n[C#对WinForm应用程序的App.config的使用及加密](https://www.cnblogs.com/wanzhongjun/p/6534608.html)\n[Winform窗体控件图片过多后卡顿问题](https://blog.csdn.net/facefriends/article/details/79216114)\n[winform中的DataGridView的列宽设置（自动调整列宽）](https://blog.csdn.net/swarb/article/details/8493328)\n[C#Winform频繁刷新导致界面闪烁解决方法](https://www.cnblogs.com/ghbjimmy/articles/3635825.html)\n[C# WinForm开发系列 - DataGridView](http://www.cnblogs.com/peterzb/archive/2009/05/29/1491891.html)\n[DataGridView实现添加合计行并始终显示在底部](https://blog.csdn.net/tyouvivi/article/details/1676850)\n[tablelayoutpanel 动态调整行列宽度](https://www.cnblogs.com/mandaren/p/3709932.html)\n[C#批量插入数据到Sqlserver中的四种方式](https://www.cnblogs.com/ingstyle/p/6196908.html)\n[C#命名规则和风格(收集)](https://www.cnblogs.com/jiekeng/articles/561562.html)\n[水缘泡泡技术集](https://www.sypopo.com/post/OBQ6E6EWo0/)\n[C# WinForm项目三层架构简述](https://www.jianshu.com/p/7f628015a243)\n[想和代码谈谈](http://www.cnblogs.com/WayneShao/)\n[使用C#创建Access2010或Access2007 accdb 数据库文件](http://blog.sina.com.cn/s/blog_7cc533310101lxn2.html)\n\n&nbsp;\n\n\n#### Flex\n[Flex下载地址](http://www.adobe.com/support/flashplayer/downloads.html)                                                              |  [查看浏览器FLash版本、Debug Player](http://kb2.adobe.com/cps/155/tn_15507.html)\n[flex学习笔记](http://blog.csdn.net/wugouzi/article/details/5598392)  |  [Flex学习视频748-798](http://www.riameeting.com/node/748)\n[Flex成功案例](http://keren.iteye.com/blog/377733)            |  [中文Flex例子](http://blog.minidx.com/)\n[Flex 3 advancedDataGrid的使用](http://www.cnblogs.com/xuehai/archive/2009/09/26/1574531.html)\n[Flex性能优化](https://my.oschina.net/return/blog/208294#navbar-header)                                                              |  [Flex进阶持续学习——性能优化](http://coffeelover.iteye.com/blog/1163906)                                                 |  [flex应用程序性能优化十个方法](http://www.wangqi.com/html/2010-12/12796.htm)\n[Flex 中的undefined类型](http://dudong0726.iteye.com/blog/1296195)\n[Flash Builder 提示与技巧](http://www.adobe.com/cn/devnet/flex/articles/tips-tricks.html)\n[一名优秀的Flex开发者需要知道的10样东西](http://www.cnblogs.com/kakaflex/archive/2010/12/02/1894142.html)\n[Flex 3 AdvancedDataGrid的使用(三)](http://www.cnblogs.com/xuehai/archive/2009/09/26/1574533.html)\n\n&nbsp;\n\n\n#### fpSpread\n[Spread for Windows Forms高级主题(7)---自定义打印的外观](http://www.cnblogs.com/powertoolsteam/archive/2011/08/22/2149009.html)\n\n&nbsp;\n\n\n#### Git\n[常用 Git 命令清单](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n[推荐！手把手教你使用Git](http://blog.jobbole.com/78960/)\n[Git服务器搭建全过程分步详解](http://developer.51cto.com/art/201507/483448.htm)\n\n&nbsp;\n\n#### Haproxy\n[首页](https://www.haproxy.org/)\n[haproxy资源](http://www.csdn.net/tag/haproxy)\n[haproxy 配置 说明](http://blog.chinaunix.net/uid-24250828-id-3778032.html)\n[最新版haproxy linux下的设置（haproxy-1.4.20 ）](http://blog.csdn.net/zilong00007/article/details/7450317)\n[HAProxy负载均衡保持客户端和服务器Session亲缘性的三种方式](http://itindex.net/blog/2012/07/24/1343118758531.html)\n[Linux下HAProxy的均衡配置](http://blog.csdn.net/zilong00007/article/details/7275235)\n[5月16日发布HAProxy,实现八种负载算法](http://blog.51cto.com/1234567aaa/317891)\n[](https://www.cnblogs.com/qige2017/p/7783402.html)\n\n&nbsp;\n\n#### Hexo\n[hexo常用命令笔记](https://segmentfault.com/a/1190000002632530)\n[Windows下使用Hexo+GithubPage搭建博客](http://blog.csdn.net/wx_jin/article/details/51027783)\n[Hexo常见问题](http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88)                                                               |  [Hexo博客优化](http://xwartz.xyz/blog/2016/09/reduce-blog-load-time/)\n[Hexo官方主题](https://hexo.io/themes/)                        |  [Hexo主题](https://github.com/hexojs/hexo/wiki/Themes)\n[Hexo博客主题从Jacman切换到NexT.Mist ](http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/)\n\n&nbsp;\n\n#### Java\n[SSM框架——详细整合教程（Spring+SpringMVC+MyBatis）](http://blog.csdn.net/zhshulin/article/details/37956105)\n[spring-mvc与jquery-easyui整合](http://blog.csdn.net/cfl20121314/article/details/42160035)                                                                |  [SpringMVC+Hibernate +MySql+ EasyUI实现CRUD](http://my.oschina.net/xshuai/blog/345117)                              |  [基于Spring + Spring MVC + Mybatis 高性能web构建](http://blog.csdn.net/zoutongyuan/article/details/41379851)\n[Maven环境搭建和介绍](http://blog.csdn.net/fengshizty/article/details/43019561)                                                                |  [Maven搭建SpringMVC+Mybatis项目详解](http://doc.okbase.net/fengshizty/archive/126397.html)\n[配置简单功能强大的excel工具类搞定excel导入导出工具类](http://blog.csdn.net/lk_blog/article/details/8007777)\n[POI操作Excel常用方法总结 ](http://blog.csdn.net/huazhangena/article/details/7587731)\n[编程中国JSP教程和技术资料](http://old.bccn.net/Article/web/jsp/Index.html)\n[【FAQ】org.apache.maven.archiver.MavenArchiver.getManifest错误](http://www.cnblogs.com/asderx/p/6541945.html)\n\n&nbsp;\n\n#### JQuery\n[jQuery插件库](http://www.jq22.com/)\n[36个引人注目JQuery导航菜单](http://www.cnblogs.com/ywqu/archive/2009/08/15/1546559.html)\n\n&nbsp;\n\n#### Kettle\n[Kettle官网下载](http://kettle.pentaho.org/)                    |  [Kettle各版本下载](http://sourceforge.net/projects/pentaho/files/Data%20Integration/)\n[Kettle开源社区](http://www.ukettle.org/)\n[Kettle基本概念学习](http://www.cnblogs.com/hapjin/p/4578738.html)    |  [kettle使用命令行来运行ktr和kjb](http://www.cnblogs.com/wxjnew/p/3620792.html)\n[Kettle的一些常见问题](http://blog.csdn.net/iquicksandi/article/details/7635031)                                                                |  [Kettle连接数据库超时的参数设置](http://www.ukettle.org/thread-502-1-4.html)\n\n&nbsp;\n\n#### Linux\n[对 Linux 新手非常有用的 20 个命令](http://www.oschina.net/translate/useful-linux-commands-for-newbies)\n[linux数据盘，系统盘](http://blog.csdn.net/Truong/article/details/70171661)\n[数据盘分区以及格式化](http://blog.csdn.net/Truong/article/details/70171699)\n\n&nbsp;\n\n#### Markdown\n[Markdown在线编辑](http://www.ctrlshift.net/project/markdowneditor/)  |  [Windows在线markdown工具](https://www.zybuluo.com/mdeditor)\n[Markdown 语法 示例 字体 字号 颜色](http://blog.csdn.net/u011419965/article/details/50536937)\n[Markdown支持的语言](http://blog.csdn.net/peng_hong_fu/article/details/52805408)\n\n&nbsp;\n\n#### SQL\n[SQL Server 2008(R2)支持将数据导出为脚本](http://xcc313.iteye.com/blog/1331468)\n[【SQL Server备份恢复】维护计划实现备份：每周数据库完整备份、每天差异备份、每小时日志备份 ](http://blog.csdn.net/sqlserverdiscovery/article/details/11020057)\n[SQL 列转行，即多行合并成一条](https://www.cnblogs.com/luokunlun/p/5947615.html)\n[sql 判断 函数 存储过程是否存在的方法](https://www.cnblogs.com/a311300/p/4358916.html)\n\n&nbsp;\n\n#### Sublime Text\n[Sublime Text 2/3安装使用及常用插件](http://www.cnblogs.com/dudumao/p/4054086.html)\n[Sublime Text PackageControl](https://packagecontrol.io/)\n[Sublime Text 3 快捷键](https://segmentfault.com/a/1190000002570753)\n\n&nbsp;\n\n#### SVN\n[apache网站下载](http://subversion.apache.org/packages.html#windows)\n\n&nbsp;\n\n#### VB\n[VB源码](http://www.codesky.net/vb/)\n[VB函数大全](http://www10.zzu.edu.cn/ie_wangjunfeng/daquan/function/index.aspx)\n[MZ-Tools的博客](https://www.mztools.com/blog/moving-from-mz-tools-3-0-to-8-0/)\n[VB下的插件开发](https://blog.csdn.net/guyehanxinlei/article/details/1506461)\n[VB实现Base64 编解码](http://blog.csdn.net/iamlaosong/article/details/38229755)\n[VB动态调用类模块中的函数的方法 - CSDN博客](https://blog.csdn.net/keikisou/article/details/50564156)\n[VB几种函数参数传递方法，Variant，数组，Optional，ParamArray](https://blog.csdn.net/whchensir/article/details/52050796)\n[VB调用c++写的Dll的一点总结](https://blog.csdn.net/emma_he/article/details/3023337)\n\n&nbsp;\n\n#### Vue.js\n[Vue.js官网](http://cn.vuejs.org/)\n[JSFiddle Hello World](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\n\n&nbsp;\n\n#### 民生\n[宁夏人事考试中心](http://www.nxpta.gov.cn/)  |  [宁夏专业技术人员继续教育培训网](http://nxzj.chinahrt.com/)\n[宁夏人力资源和社会保障网上服务大厅](http://www.12333nx.gov.cn/nxwsrs/personlogin)\n","updated":"2018-12-18T08:06:57.596Z","path":"links/index.html","_id":"cjpuwa1f40001s0jt1ih3dzz1","comments":1,"content":"<h4 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h4><p><a href=\"https://dama.lu/\" target=\"_blank\" rel=\"noopener\">大马路</a>          |  <a href=\"https://www.google.com/ncr\" target=\"_blank\" rel=\"noopener\">谷歌搜索</a>        |  <a href=\"https://www.google.com.hk/ncr\" target=\"_blank\" rel=\"noopener\">谷歌香港</a>   |  <a href=\"https://www.wikipedia.org/\" target=\"_blank\" rel=\"noopener\">维基百科</a>  |  <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">博客预览</a><br><a href=\"https://open.163.com/\" target=\"_blank\" rel=\"noopener\">网易公开课</a> |  <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"noopener\">YouTube</a><br><a href=\"http://www.csdn.net/\" target=\"_blank\" rel=\"noopener\">CSDN.NET</a>    |  <a href=\"http://www.verycd.com/\" target=\"_blank\" rel=\"noopener\">VeryCD 电驴大全</a>     |  <a href=\"http://www.360doc.com/\" target=\"_blank\" rel=\"noopener\">360doc个人图书馆</a><br><a href=\"http://www.cnbeta.com/\" target=\"_blank\" rel=\"noopener\">cnBeta</a>    |  <a href=\"http://www.guokr.com/\" target=\"_blank\" rel=\"noopener\">果壳</a>                 |  <a href=\"https://sspai.com/\" target=\"_blank\" rel=\"noopener\">少数派</a>                |  <a href=\"http://www.dgtle.com/\" target=\"_blank\" rel=\"noopener\">数字尾巴</a><br><a href=\"https://laod.cn/\" target=\"_blank\" rel=\"noopener\">老D博客</a>         |  <a href=\"https://blog.daliansky.net/\" target=\"_blank\" rel=\"noopener\">黑果小兵</a>       |  <a href=\"http://www.mianfeib.com/\" target=\"_blank\" rel=\"noopener\">免费吧</a>          |  <a href=\"http://www.runker.net/\" target=\"_blank\" rel=\"noopener\">行客工作室</a><br><a href=\"https://pan.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度云</a>    |  <a href=\"https://cloud.tencent.com/\" target=\"_blank\" rel=\"noopener\">腾讯云</a>          |  <a href=\"http://www.tietuku.com/\" target=\"_blank\" rel=\"noopener\">贴图库</a></p>\n<p>&nbsp;</p>\n<h4 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h4><p><a href=\"http://www.songtaste.com/\" target=\"_blank\" rel=\"noopener\">SongTaste</a>  |  <a href=\"https://www.aekun.com/\" target=\"_blank\" rel=\"noopener\">AeKun</a>  |  <a href=\"http://music.163.com\" target=\"_blank\" rel=\"noopener\">网易云音乐</a>  |  <a href=\"http://music.zhuolin.wang/\" target=\"_blank\" rel=\"noopener\">VIP付费音乐解析下载</a></p>\n<p>&nbsp;</p>\n<h4 id=\"电影\"><a href=\"#电影\" class=\"headerlink\" title=\"电影\"></a>电影</h4><p><a href=\"http://www.qinou.cn/\" target=\"_blank\" rel=\"noopener\">BT下载</a>     |  <a href=\"http://www.btbtt33.com/\" target=\"_blank\" rel=\"noopener\">BT之家</a>        |  <a href=\"http://www.415.net\" target=\"_blank\" rel=\"noopener\">BT之家</a>        |  <a href=\"http://www.btbtt.com\" target=\"_blank\" rel=\"noopener\">BT之家</a>       |  <a href=\"http://www.btbta.com\" target=\"_blank\" rel=\"noopener\">BT之家</a><br><a href=\"http://www.poxiao.com\" target=\"_blank\" rel=\"noopener\">破晓电影</a>  |  <a href=\"http://www.fangdianying.tv/\" target=\"_blank\" rel=\"noopener\">放电影网</a>  |  <a href=\"http://www.dy2018.com/\" target=\"_blank\" rel=\"noopener\">电影天堂</a>  |  <a href=\"http://www.xlpu.cc/\" target=\"_blank\" rel=\"noopener\">迅雷电影下载</a>  |  <a href=\"http://www.bubulai.com/\" target=\"_blank\" rel=\"noopener\">快播电影</a> |  <a href=\"http://www.loldytt.com/\" target=\"_blank\" rel=\"noopener\">LOL电影天堂</a> |  <a href=\"http://www.btbttv.net/\" target=\"_blank\" rel=\"noopener\">BT电影天堂</a> | <a href=\"https://www.xunyingwang.com/\" target=\"_blank\" rel=\"noopener\">迅影网</a><br><a href=\"http://www.yugaopian.cn/\" target=\"_blank\" rel=\"noopener\">预告片世界</a><br><a href=\"http://www.yyets.com/\" target=\"_blank\" rel=\"noopener\">人人影视</a><br><a href=\"https://deardu.com/\" target=\"_blank\" rel=\"noopener\">第二度</a></p>\n<p>&nbsp;</p>\n<h4 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h4><p><a href=\"http://chatroulette.com/\" target=\"_blank\" rel=\"noopener\">Chatroulette</a>                      |  <a href=\"http://web.sanguosha.com/\" target=\"_blank\" rel=\"noopener\">三国杀</a><br><a href=\"http://www.haosm.com/\" target=\"_blank\" rel=\"noopener\">好蜀门私服</a><br><a href=\"http://news.17173.com/z/pvp/content/02122017/153037729.shtml\" target=\"_blank\" rel=\"noopener\">王者荣耀通用铭文推荐 通用全英雄四级五级铭文推荐</a></p>\n<p>&nbsp;</p>\n<h4 id=\"美图\"><a href=\"#美图\" class=\"headerlink\" title=\"美图\"></a>美图</h4><p><a href=\"http://www.topit.me/\" target=\"_blank\" rel=\"noopener\">it.me</a>                                 |  <a href=\"http://www.picever.com/\" target=\"_blank\" rel=\"noopener\">Picever</a>                                                              |  <a href=\"http://bbs.zol.com.cn/nbbbs/d33943.html\" target=\"_blank\" rel=\"noopener\">笔记本桌面壁纸下载</a><br><a href=\"http://shouxie.org/\" target=\"_blank\" rel=\"noopener\">手写导航</a>                               |  <a href=\"http://shouxieti.com/\" target=\"_blank\" rel=\"noopener\">手写体网</a></p>\n<p>&nbsp;</p>\n<h4 id=\"在线工具\"><a href=\"#在线工具\" class=\"headerlink\" title=\"在线工具\"></a>在线工具</h4><p><a href=\"http://tool.lu/\" target=\"_blank\" rel=\"noopener\">在线工具</a><br><a href=\"http://www.json.cn/\" target=\"_blank\" rel=\"noopener\">JSON在线解析及格式化验证</a><br><a href=\"http://json2csharp.chahuo.com/\" target=\"_blank\" rel=\"noopener\">转换json格式为C#类</a><br><a href=\"http://www.atool.org/\" target=\"_blank\" rel=\"noopener\">ATOOL在线工具</a><br><a href=\"http://tool.oschina.net/\" target=\"_blank\" rel=\"noopener\">在线API</a><br><a href=\"http://pmd5.com/#\" target=\"_blank\" rel=\"noopener\">PMD5</a><br><a href=\"https://www.somd5.com/\" target=\"_blank\" rel=\"noopener\">输入让你无语的MD5</a><br><a href=\"http://www.atool.org/md5-crack.php\" target=\"_blank\" rel=\"noopener\">在线MD5暴力破解 - md5解密破解 - aTool在线工具</a><br><a href=\"http://www.easyicon.net/covert/\" target=\"_blank\" rel=\"noopener\">png在线转ico</a><br><a href=\"http://www.makepic.com/\" target=\"_blank\" rel=\"noopener\">MakePic.com 图片制造</a><br><a href=\"http://mh.cli.im/\" target=\"_blank\" rel=\"noopener\">草料二维码美化器</a><br><a href=\"http://tool.lu/zhconvert/\" target=\"_blank\" rel=\"noopener\">简繁体在线转换工具</a><br><a href=\"https://sym233.github.io/core-values-encoder/\" target=\"_blank\" rel=\"noopener\">核心价值编码器</a><br><a href=\"https://github.com/sym233/core-values-encoder\" target=\"_blank\" rel=\"noopener\">核心价值编码器源码</a><br><a href=\"https://suijimimashengcheng.51240.com/\" target=\"_blank\" rel=\"noopener\">生成随机密码</a><br><a href=\"https://www.logaster.cn/\" target=\"_blank\" rel=\"noopener\">在线制作您的Logo</a></p>\n<p>&nbsp;</p>\n<h4 id=\"系统-软件下载\"><a href=\"#系统-软件下载\" class=\"headerlink\" title=\"系统/软件下载\"></a>系统/软件下载</h4><p><a href=\"https://www.ithome.com/\" target=\"_blank\" rel=\"noopener\">IT之家</a>                             |  <a href=\"http://www.xitongzhijia.net/\" target=\"_blank\" rel=\"noopener\">系统之家</a>                                                              |  <a href=\"http://www.xitongtiandi.net/\" target=\"_blank\" rel=\"noopener\">系统天地</a>                                                              |  <a href=\"http://www.win10zyb.com/\" target=\"_blank\" rel=\"noopener\">Win10专业版官网</a>                                                              |  <a href=\"http://www.xh52.com/\" target=\"_blank\" rel=\"noopener\">Win10之家</a>                                                              |  <a href=\"http://www.285868.com/\" target=\"_blank\" rel=\"noopener\">系统圣地</a><br><a href=\"https://imac.hk/\" target=\"_blank\" rel=\"noopener\">黑苹果乐园</a>                                  |  <a href=\"http://tieba.baidu.com/p/5179866130#\" target=\"_blank\" rel=\"noopener\">从零开始的黑苹果安装教程</a><br><a href=\"http://www.xdowns.com/\" target=\"_blank\" rel=\"noopener\">绿盟</a>                                |  <a href=\"http://www.zdfans.com/\" target=\"_blank\" rel=\"noopener\">zd423</a><br><a href=\"http://liulanmi.com/\" target=\"_blank\" rel=\"noopener\">浏览迷</a>                                |  <a href=\"https://www.chromefor.com/\" target=\"_blank\" rel=\"noopener\">Chrome浏览器插件下载中心</a><br><a href=\"http://www.win10.name/news/193.html\" target=\"_blank\" rel=\"noopener\">最新迅雷(xunlei)会员账号天天更新同享</a><br><a href=\"http://get.adobe.com/cn/flashplayer/otherversions/\" target=\"_blank\" rel=\"noopener\">FlashPlayer下载地址1</a>  |  <a href=\"http://www.adobe.com/support/flashplayer/downloads.html\" target=\"_blank\" rel=\"noopener\">FlashPlayer下载地址2</a>  |  <a href=\"http://kb2.adobe.com/cps/155/tn_15507.html\" target=\"_blank\" rel=\"noopener\">Debugger Version地址</a></p>\n<p>&nbsp;</p>\n<h4 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h4><p><a href=\"https://www.sdk.cn/\" target=\"_blank\" rel=\"noopener\">SDK.cn</a><br><a href=\"http://www.cnblogs.com/cmt/\" target=\"_blank\" rel=\"noopener\">博客园</a><br><a href=\"http://www.runoob.com/\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a><br><a href=\"http://www.oschina.net/\" target=\"_blank\" rel=\"noopener\">开源中国社区</a><br><a href=\"http://www.html5plus.org/\" target=\"_blank\" rel=\"noopener\">HTM5中国产业联盟</a><br><a href=\"http://www.runoob.com/sqlite/sqlite-tutorial.html\" target=\"_blank\" rel=\"noopener\">SQLite 教程</a><br><a href=\"https://channel9.msdn.com/\" target=\"_blank\" rel=\"noopener\">channel9</a></p>\n<p>&nbsp;</p>\n<h4 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h4><p><a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener\">矢量图标库</a><br><a href=\"http://cdn.code.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度静态资源公共库</a><br><a href=\"http://msdn.itellyou.cn/?gytyzs=0z1zl\" target=\"_blank\" rel=\"noopener\">MSDN</a><br><a href=\"http://blog.sina.com.cn/s/blog_7c28bad401016j66.html\" target=\"_blank\" rel=\"noopener\">常用的gif正在加载图</a></p>\n<p>&nbsp;</p>\n<h4 id=\"文章-教程\"><a href=\"#文章-教程\" class=\"headerlink\" title=\"文章/教程\"></a>文章/教程</h4><p><a href=\"http://www.cnblogs.com/mindwind/p/5339657.html\" target=\"_blank\" rel=\"noopener\">LB 负载均衡的层次结构</a><br><a href=\"http://blog.csdn.net/ren1027538427/article/details/52450294\" target=\"_blank\" rel=\"noopener\">GitHub上优秀的开源项目</a><br><a href=\"http://www.w3cplus.com/sassguide/\" target=\"_blank\" rel=\"noopener\">sass入门教程</a><br><a href=\"https://segmentfault.com/a/1190000002471120\" target=\"_blank\" rel=\"noopener\">项目目录结构规范</a><br><a href=\"http://zyan.cc/post/297/\" target=\"_blank\" rel=\"noopener\">Nginx 0.5.31 + PHP 5.2.4（FastCGI）搭建可承受3万以上并发连接数，胜过Apache 10倍的Web服务器[原创]</a><br><a href=\"http://www.cnblogs.com/quanweiru/p/3764003.html\" target=\"_blank\" rel=\"noopener\">Linux删除乱码文件</a><br><a href=\"http://tophandxing.blog.163.com/blog/static/109714820124123438513/\" target=\"_blank\" rel=\"noopener\">SUSE Linux启用SSH</a><br><a href=\"http://www.jb51.net/os/win10/483729.html\" target=\"_blank\" rel=\"noopener\">Win10怎么把批处理文件固定到开始菜单</a><br><a href=\"http://www.cnblogs.com/momoko8443/p/4302879.html\" target=\"_blank\" rel=\"noopener\">Flex转型Html学习随笔1——关于Html页面的div布局（上）</a><br><a href=\"http://www.cnblogs.com/momoko8443/p/4303829.html\" target=\"_blank\" rel=\"noopener\">Flex转型Html学习随笔1——关于Html页面的div布局（下）</a><br><a href=\"http://www.miui.com/home.php?mod=space&amp;uid=8&amp;do=thread&amp;view=me&amp;from=space\" target=\"_blank\" rel=\"noopener\">MIUI更新日志</a><br><a href=\"https://www.oschina.net/news/92438/2017-mayun-top-50\" target=\"_blank\" rel=\"noopener\">2017 码云最火爆开源项目 TOP 50，你都用过哪些？</a><br><a href=\"https://jingyan.baidu.com/article/851fbc37dc1e513e1f15ab27.html\" target=\"_blank\" rel=\"noopener\">解决TCP/IP筛选的实用设置问题</a><br><a href=\"http://blog.csdn.net/zhaoyonghui100/article/details/8939950\" target=\"_blank\" rel=\"noopener\">如何在不重装服务器的情况下尝试解决sqlmaint.exe失败的问题</a><br><a href=\"https://www.cnblogs.com/Wayou/p/goodui.html#home\" target=\"_blank\" rel=\"noopener\">好的用户界面-界面设计的一些技巧</a><br><a href=\"http://www.hit180.com/21534.html\" target=\"_blank\" rel=\"noopener\">一种电子病历系统软件框架思想——B/S与C/S混合架构</a><br><a href=\"http://www.ufidawhy.com/mfufida/613.html\" target=\"_blank\" rel=\"noopener\">B/S，C/S，B/S和C/S混合模式的概念区别优缺点及前景分析</a><br><a href=\"http://tzit.net/htmlitjs/2018-10-25/2234.html\" target=\"_blank\" rel=\"noopener\">黑苹果macOS High Sierra 10.13.6详细安装新手菜鸟教程</a><br><a href=\"https://yq.aliyun.com/ziliao/22450\" target=\"_blank\" rel=\"noopener\">Sql Server 2000清除日志方法介绍</a></p>\n<p>&nbsp;</p>\n<h4 id=\"前端-案例\"><a href=\"#前端-案例\" class=\"headerlink\" title=\"前端/案例\"></a>前端/案例</h4><p><a href=\"http://www.qdfuns.com/\" target=\"_blank\" rel=\"noopener\">前端网</a><br><a href=\"https://www.layui.com/\" target=\"_blank\" rel=\"noopener\">LayUI</a><br><a href=\"http://www.codeceo.com/article/top-10-css-ui-framework.html\" target=\"_blank\" rel=\"noopener\">10个顶级的CSS UI开源框架</a><br><a href=\"http://www.runoob.com/w3cnote/android-ui-framework.html\" target=\"_blank\" rel=\"noopener\">Android酷炫实用的开源框架（UI框架）</a><br><a href=\"http://www.lyblogs.cn/\" target=\"_blank\" rel=\"noopener\">不落阁</a><br><a href=\"http://www.lanlanwork.com/\" target=\"_blank\" rel=\"noopener\">蓝蓝设计</a><br><a href=\"http://www.th7.cn/Design/ui/201312/199261.shtml\" target=\"_blank\" rel=\"noopener\">网络培训系统界面设计UI</a><br><a href=\"http://blog.csdn.net/sunyingyuan/article/details/38237139\" target=\"_blank\" rel=\"noopener\">公司某项目前端技术积累</a><br><a href=\"http://www.mycodes.net/154/3.htm\" target=\"_blank\" rel=\"noopener\">后台界面模板</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Angular\"><a href=\"#Angular\" class=\"headerlink\" title=\"Angular\"></a>Angular</h4><p><a href=\"https://angularjs.org/\" target=\"_blank\" rel=\"noopener\">AngularJS官网</a>                       |  <a href=\"https://angular.cn/\" target=\"_blank\" rel=\"noopener\">AngularJS中文官网</a>                                                              |  <a href=\"http://angular-ui.github.io/\" target=\"_blank\" rel=\"noopener\">AngularUI官网</a><br><a href=\"https://code.angularjs.org/\" target=\"_blank\" rel=\"noopener\">AngularJS所有版本下载</a><br><a href=\"http://www.ngnice.com\" target=\"_blank\" rel=\"noopener\">Angularjs 中文版 API</a>                 |  <a href=\"https://docs.angularjs.org/api\" target=\"_blank\" rel=\"noopener\">Angularjs English API</a>                                                              |  <a href=\"http://www.angularjsapi.cn/#/index\" target=\"_blank\" rel=\"noopener\">Angularjs 中文版 API v1.3.9</a><br><a href=\"http://showcase.ngnice.com/#/home/home\" target=\"_blank\" rel=\"noopener\">AngularJS实例</a>       |  <a href=\"http://ngmodules.org/\" target=\"_blank\" rel=\"noopener\">Angular Modules</a>                                                              |  <a href=\"http://angularscript.com/\" target=\"_blank\" rel=\"noopener\">Angular Script</a><br><a href=\"http://lib.csdn.net/base/23\" target=\"_blank\" rel=\"noopener\">CSDN知识库：AngularJS</a>          |  <a href=\"http://blog.jobbole.com/tag/angularjs/\" target=\"_blank\" rel=\"noopener\">伯乐在线：AngularJS</a>                                                              |  <a href=\"http://www.riafan.com/angularjs-learning/\" target=\"_blank\" rel=\"noopener\">RIA爱好者：学习AngularJS</a><br><a href=\"http://www.ngnice.com/\" target=\"_blank\" rel=\"noopener\">NgNice站点是由一批AngularJS爱好者发起的，致力于打造一个AngularJS的学习和经验分享平台。</a><br><a href=\"http://www.iteye.com/news/28651-AngularJS-Google-resource\" target=\"_blank\" rel=\"noopener\">2013年度最强AngularJS资源合集</a>                                                              |  <a href=\"http://www.html5cn.org/article-9473-1.html\" target=\"_blank\" rel=\"noopener\">20个免费的 AngularJS 资源和开发教程</a></p>\n<p>&nbsp;</p>\n<h4 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h4><p><a href=\"http://www.bubuko.com/infodetail-1761193.html\" target=\"_blank\" rel=\"noopener\">C#调用C++ dll导出函数提示找不到指定模块</a><br><a href=\"https://www.cnblogs.com/luxiaoxun/p/3280146.html\" target=\"_blank\" rel=\"noopener\">C#多线程编程</a></p>\n<p>&nbsp;</p>\n<h4 id=\"C-35\"><a href=\"#C-35\" class=\"headerlink\" title=\"C&#35;\"></a>C&#35;</h4><p><a href=\"http://www.runoob.com/csharp/csharp-program-structure.html\" target=\"_blank\" rel=\"noopener\">C#教程</a><br><a href=\"http://www.huiyaosoft.com/winformlist.htm\" target=\"_blank\" rel=\"noopener\">辉耀应用程序框架学习网</a><br><a href=\"https://blog.csdn.net/lp310018931/article/details/47991759\" target=\"_blank\" rel=\"noopener\">Vs解决方案的目录结构设置和管理</a><br><a href=\"https://www.cnblogs.com/Jeremy2001/p/6066553.html\" target=\"_blank\" rel=\"noopener\">C#（Net）软件开发常用工具汇总，提高你的开发效率</a><br><a href=\"http://www.cnblogs.com/KnightsWarrior/archive/2010/10/20/1856255.html#3754564\" target=\"_blank\" rel=\"noopener\">Winform自动更新组件分享</a><br><a href=\"https://www.cnblogs.com/24la/p/autoupdater-component.html\" target=\"_blank\" rel=\"noopener\">Winform(C#.NET)自动更新组件的使用及部分功能实现</a><br><a href=\"https://www.cnblogs.com/wuhuacong/p/3199829.html\" target=\"_blank\" rel=\"noopener\">Winform开发框架的重要特性总结</a><br><a href=\"http://www.cnblogs.com/wuhuacong/archive/2011/11/28/2266694.html\" target=\"_blank\" rel=\"noopener\">厚积薄发，丰富的公用类库积累，助你高效进行系统开发（8）—-非对称加密、BASE64加密、MD5等常用加密处理</a><br><a href=\"http://www.cnblogs.com/wuhuacong/p/3360648.html\" target=\"_blank\" rel=\"noopener\">Winform开发框架主界面设计展示</a><br><a href=\"https://www.cnblogs.com/HopeGi/p/3510809.html\" target=\"_blank\" rel=\"noopener\">仿Office的程序载入窗体</a><br><a href=\"https://blog.csdn.net/shiyangkai/article/details/71479947\" target=\"_blank\" rel=\"noopener\">C#MDI打开子窗体去掉自动生成的菜单栏</a><br><a href=\"http://www.php.cn/csharp-article-355886.html\" target=\"_blank\" rel=\"noopener\">C# Tabcontrol组件如何切换显示Form窗体的示例代码</a><br><a href=\"https://github.com/fluentribbon/Fluent.Ribbon\" target=\"_blank\" rel=\"noopener\">Fluent.Ribbon</a><br><a href=\"https://github.com/RibbonWinForms/RibbonWinForms\" target=\"_blank\" rel=\"noopener\">RibbonWinForms</a><br><a href=\"https://blog.csdn.net/u011981242/article/details/51059441\" target=\"_blank\" rel=\"noopener\">C# winform程序怎么打包成安装项目(图解)</a><br><a href=\"https://www.cnblogs.com/yanglang/p/8041662.html\" target=\"_blank\" rel=\"noopener\">【.Net】vs2017 自带发布工具 ClickOnce发布包遇到的问题</a><br><a href=\"https://www.cnblogs.com/iiwen/p/5310246.html\" target=\"_blank\" rel=\"noopener\">Winform打包工具SetupFactory 9 的使用</a><br><a href=\"https://www.jb51.net/article/71952.htm\" target=\"_blank\" rel=\"noopener\">C#动态创建Access数据库及密码的方法</a><br><a href=\"https://www.cnblogs.com/yank/p/3528548.html\" target=\"_blank\" rel=\"noopener\">C#编程总结（七）数据加密——附源码</a><br><a href=\"https://www.jb51.net/article/57163.htm\" target=\"_blank\" rel=\"noopener\">C#常用的命名规则汇总</a><br><a href=\"https://www.cnblogs.com/zhoug2020/p/5837035.html\" target=\"_blank\" rel=\"noopener\">C#三种定时器的实现</a><br><a href=\"https://www.cnblogs.com/wanzhongjun/p/6534608.html\" target=\"_blank\" rel=\"noopener\">C#对WinForm应用程序的App.config的使用及加密</a><br><a href=\"https://blog.csdn.net/facefriends/article/details/79216114\" target=\"_blank\" rel=\"noopener\">Winform窗体控件图片过多后卡顿问题</a><br><a href=\"https://blog.csdn.net/swarb/article/details/8493328\" target=\"_blank\" rel=\"noopener\">winform中的DataGridView的列宽设置（自动调整列宽）</a><br><a href=\"https://www.cnblogs.com/ghbjimmy/articles/3635825.html\" target=\"_blank\" rel=\"noopener\">C#Winform频繁刷新导致界面闪烁解决方法</a><br><a href=\"http://www.cnblogs.com/peterzb/archive/2009/05/29/1491891.html\" target=\"_blank\" rel=\"noopener\">C# WinForm开发系列 - DataGridView</a><br><a href=\"https://blog.csdn.net/tyouvivi/article/details/1676850\" target=\"_blank\" rel=\"noopener\">DataGridView实现添加合计行并始终显示在底部</a><br><a href=\"https://www.cnblogs.com/mandaren/p/3709932.html\" target=\"_blank\" rel=\"noopener\">tablelayoutpanel 动态调整行列宽度</a><br><a href=\"https://www.cnblogs.com/ingstyle/p/6196908.html\" target=\"_blank\" rel=\"noopener\">C#批量插入数据到Sqlserver中的四种方式</a><br><a href=\"https://www.cnblogs.com/jiekeng/articles/561562.html\" target=\"_blank\" rel=\"noopener\">C#命名规则和风格(收集)</a><br><a href=\"https://www.sypopo.com/post/OBQ6E6EWo0/\" target=\"_blank\" rel=\"noopener\">水缘泡泡技术集</a><br><a href=\"https://www.jianshu.com/p/7f628015a243\" target=\"_blank\" rel=\"noopener\">C# WinForm项目三层架构简述</a><br><a href=\"http://www.cnblogs.com/WayneShao/\" target=\"_blank\" rel=\"noopener\">想和代码谈谈</a><br><a href=\"http://blog.sina.com.cn/s/blog_7cc533310101lxn2.html\" target=\"_blank\" rel=\"noopener\">使用C#创建Access2010或Access2007 accdb 数据库文件</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h4><p><a href=\"http://www.adobe.com/support/flashplayer/downloads.html\" target=\"_blank\" rel=\"noopener\">Flex下载地址</a>                                                              |  <a href=\"http://kb2.adobe.com/cps/155/tn_15507.html\" target=\"_blank\" rel=\"noopener\">查看浏览器FLash版本、Debug Player</a><br><a href=\"http://blog.csdn.net/wugouzi/article/details/5598392\" target=\"_blank\" rel=\"noopener\">flex学习笔记</a>  |  <a href=\"http://www.riameeting.com/node/748\" target=\"_blank\" rel=\"noopener\">Flex学习视频748-798</a><br><a href=\"http://keren.iteye.com/blog/377733\" target=\"_blank\" rel=\"noopener\">Flex成功案例</a>            |  <a href=\"http://blog.minidx.com/\" target=\"_blank\" rel=\"noopener\">中文Flex例子</a><br><a href=\"http://www.cnblogs.com/xuehai/archive/2009/09/26/1574531.html\" target=\"_blank\" rel=\"noopener\">Flex 3 advancedDataGrid的使用</a><br><a href=\"https://my.oschina.net/return/blog/208294#navbar-header\" target=\"_blank\" rel=\"noopener\">Flex性能优化</a>                                                              |  <a href=\"http://coffeelover.iteye.com/blog/1163906\" target=\"_blank\" rel=\"noopener\">Flex进阶持续学习——性能优化</a>                                                 |  <a href=\"http://www.wangqi.com/html/2010-12/12796.htm\" target=\"_blank\" rel=\"noopener\">flex应用程序性能优化十个方法</a><br><a href=\"http://dudong0726.iteye.com/blog/1296195\" target=\"_blank\" rel=\"noopener\">Flex 中的undefined类型</a><br><a href=\"http://www.adobe.com/cn/devnet/flex/articles/tips-tricks.html\" target=\"_blank\" rel=\"noopener\">Flash Builder 提示与技巧</a><br><a href=\"http://www.cnblogs.com/kakaflex/archive/2010/12/02/1894142.html\" target=\"_blank\" rel=\"noopener\">一名优秀的Flex开发者需要知道的10样东西</a><br><a href=\"http://www.cnblogs.com/xuehai/archive/2009/09/26/1574533.html\" target=\"_blank\" rel=\"noopener\">Flex 3 AdvancedDataGrid的使用(三)</a></p>\n<p>&nbsp;</p>\n<h4 id=\"fpSpread\"><a href=\"#fpSpread\" class=\"headerlink\" title=\"fpSpread\"></a>fpSpread</h4><p><a href=\"http://www.cnblogs.com/powertoolsteam/archive/2011/08/22/2149009.html\" target=\"_blank\" rel=\"noopener\">Spread for Windows Forms高级主题(7)—自定义打印的外观</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h4><p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a><br><a href=\"http://blog.jobbole.com/78960/\" target=\"_blank\" rel=\"noopener\">推荐！手把手教你使用Git</a><br><a href=\"http://developer.51cto.com/art/201507/483448.htm\" target=\"_blank\" rel=\"noopener\">Git服务器搭建全过程分步详解</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Haproxy\"><a href=\"#Haproxy\" class=\"headerlink\" title=\"Haproxy\"></a>Haproxy</h4><p><a href=\"https://www.haproxy.org/\" target=\"_blank\" rel=\"noopener\">首页</a><br><a href=\"http://www.csdn.net/tag/haproxy\" target=\"_blank\" rel=\"noopener\">haproxy资源</a><br><a href=\"http://blog.chinaunix.net/uid-24250828-id-3778032.html\" target=\"_blank\" rel=\"noopener\">haproxy 配置 说明</a><br><a href=\"http://blog.csdn.net/zilong00007/article/details/7450317\" target=\"_blank\" rel=\"noopener\">最新版haproxy linux下的设置（haproxy-1.4.20 ）</a><br><a href=\"http://itindex.net/blog/2012/07/24/1343118758531.html\" target=\"_blank\" rel=\"noopener\">HAProxy负载均衡保持客户端和服务器Session亲缘性的三种方式</a><br><a href=\"http://blog.csdn.net/zilong00007/article/details/7275235\" target=\"_blank\" rel=\"noopener\">Linux下HAProxy的均衡配置</a><br><a href=\"http://blog.51cto.com/1234567aaa/317891\" target=\"_blank\" rel=\"noopener\">5月16日发布HAProxy,实现八种负载算法</a><br><a href=\"https://www.cnblogs.com/qige2017/p/7783402.html\" target=\"_blank\" rel=\"noopener\"></a></p>\n<p>&nbsp;</p>\n<h4 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h4><p><a href=\"https://segmentfault.com/a/1190000002632530\" target=\"_blank\" rel=\"noopener\">hexo常用命令笔记</a><br><a href=\"http://blog.csdn.net/wx_jin/article/details/51027783\" target=\"_blank\" rel=\"noopener\">Windows下使用Hexo+GithubPage搭建博客</a><br><a href=\"http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" target=\"_blank\" rel=\"noopener\">Hexo常见问题</a>                                                               |  <a href=\"http://xwartz.xyz/blog/2016/09/reduce-blog-load-time/\" target=\"_blank\" rel=\"noopener\">Hexo博客优化</a><br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">Hexo官方主题</a>                        |  <a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Hexo主题</a><br><a href=\"http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/\" target=\"_blank\" rel=\"noopener\">Hexo博客主题从Jacman切换到NexT.Mist </a></p>\n<p>&nbsp;</p>\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p><a href=\"http://blog.csdn.net/zhshulin/article/details/37956105\" target=\"_blank\" rel=\"noopener\">SSM框架——详细整合教程（Spring+SpringMVC+MyBatis）</a><br><a href=\"http://blog.csdn.net/cfl20121314/article/details/42160035\" target=\"_blank\" rel=\"noopener\">spring-mvc与jquery-easyui整合</a>                                                                |  <a href=\"http://my.oschina.net/xshuai/blog/345117\" target=\"_blank\" rel=\"noopener\">SpringMVC+Hibernate +MySql+ EasyUI实现CRUD</a>                              |  <a href=\"http://blog.csdn.net/zoutongyuan/article/details/41379851\" target=\"_blank\" rel=\"noopener\">基于Spring + Spring MVC + Mybatis 高性能web构建</a><br><a href=\"http://blog.csdn.net/fengshizty/article/details/43019561\" target=\"_blank\" rel=\"noopener\">Maven环境搭建和介绍</a>                                                                |  <a href=\"http://doc.okbase.net/fengshizty/archive/126397.html\" target=\"_blank\" rel=\"noopener\">Maven搭建SpringMVC+Mybatis项目详解</a><br><a href=\"http://blog.csdn.net/lk_blog/article/details/8007777\" target=\"_blank\" rel=\"noopener\">配置简单功能强大的excel工具类搞定excel导入导出工具类</a><br><a href=\"http://blog.csdn.net/huazhangena/article/details/7587731\" target=\"_blank\" rel=\"noopener\">POI操作Excel常用方法总结 </a><br><a href=\"http://old.bccn.net/Article/web/jsp/Index.html\" target=\"_blank\" rel=\"noopener\">编程中国JSP教程和技术资料</a><br><a href=\"http://www.cnblogs.com/asderx/p/6541945.html\" target=\"_blank\" rel=\"noopener\">【FAQ】org.apache.maven.archiver.MavenArchiver.getManifest错误</a></p>\n<p>&nbsp;</p>\n<h4 id=\"JQuery\"><a href=\"#JQuery\" class=\"headerlink\" title=\"JQuery\"></a>JQuery</h4><p><a href=\"http://www.jq22.com/\" target=\"_blank\" rel=\"noopener\">jQuery插件库</a><br><a href=\"http://www.cnblogs.com/ywqu/archive/2009/08/15/1546559.html\" target=\"_blank\" rel=\"noopener\">36个引人注目JQuery导航菜单</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Kettle\"><a href=\"#Kettle\" class=\"headerlink\" title=\"Kettle\"></a>Kettle</h4><p><a href=\"http://kettle.pentaho.org/\" target=\"_blank\" rel=\"noopener\">Kettle官网下载</a>                    |  <a href=\"http://sourceforge.net/projects/pentaho/files/Data%20Integration/\" target=\"_blank\" rel=\"noopener\">Kettle各版本下载</a><br><a href=\"http://www.ukettle.org/\" target=\"_blank\" rel=\"noopener\">Kettle开源社区</a><br><a href=\"http://www.cnblogs.com/hapjin/p/4578738.html\" target=\"_blank\" rel=\"noopener\">Kettle基本概念学习</a>    |  <a href=\"http://www.cnblogs.com/wxjnew/p/3620792.html\" target=\"_blank\" rel=\"noopener\">kettle使用命令行来运行ktr和kjb</a><br><a href=\"http://blog.csdn.net/iquicksandi/article/details/7635031\" target=\"_blank\" rel=\"noopener\">Kettle的一些常见问题</a>                                                                |  <a href=\"http://www.ukettle.org/thread-502-1-4.html\" target=\"_blank\" rel=\"noopener\">Kettle连接数据库超时的参数设置</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p><a href=\"http://www.oschina.net/translate/useful-linux-commands-for-newbies\" target=\"_blank\" rel=\"noopener\">对 Linux 新手非常有用的 20 个命令</a><br><a href=\"http://blog.csdn.net/Truong/article/details/70171661\" target=\"_blank\" rel=\"noopener\">linux数据盘，系统盘</a><br><a href=\"http://blog.csdn.net/Truong/article/details/70171699\" target=\"_blank\" rel=\"noopener\">数据盘分区以及格式化</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h4><p><a href=\"http://www.ctrlshift.net/project/markdowneditor/\" target=\"_blank\" rel=\"noopener\">Markdown在线编辑</a>  |  <a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"noopener\">Windows在线markdown工具</a><br><a href=\"http://blog.csdn.net/u011419965/article/details/50536937\" target=\"_blank\" rel=\"noopener\">Markdown 语法 示例 字体 字号 颜色</a><br><a href=\"http://blog.csdn.net/peng_hong_fu/article/details/52805408\" target=\"_blank\" rel=\"noopener\">Markdown支持的语言</a></p>\n<p>&nbsp;</p>\n<h4 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h4><p><a href=\"http://xcc313.iteye.com/blog/1331468\" target=\"_blank\" rel=\"noopener\">SQL Server 2008(R2)支持将数据导出为脚本</a><br><a href=\"http://blog.csdn.net/sqlserverdiscovery/article/details/11020057\" target=\"_blank\" rel=\"noopener\">【SQL Server备份恢复】维护计划实现备份：每周数据库完整备份、每天差异备份、每小时日志备份 </a><br><a href=\"https://www.cnblogs.com/luokunlun/p/5947615.html\" target=\"_blank\" rel=\"noopener\">SQL 列转行，即多行合并成一条</a><br><a href=\"https://www.cnblogs.com/a311300/p/4358916.html\" target=\"_blank\" rel=\"noopener\">sql 判断 函数 存储过程是否存在的方法</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Sublime-Text\"><a href=\"#Sublime-Text\" class=\"headerlink\" title=\"Sublime Text\"></a>Sublime Text</h4><p><a href=\"http://www.cnblogs.com/dudumao/p/4054086.html\" target=\"_blank\" rel=\"noopener\">Sublime Text 2/3安装使用及常用插件</a><br><a href=\"https://packagecontrol.io/\" target=\"_blank\" rel=\"noopener\">Sublime Text PackageControl</a><br><a href=\"https://segmentfault.com/a/1190000002570753\" target=\"_blank\" rel=\"noopener\">Sublime Text 3 快捷键</a></p>\n<p>&nbsp;</p>\n<h4 id=\"SVN\"><a href=\"#SVN\" class=\"headerlink\" title=\"SVN\"></a>SVN</h4><p><a href=\"http://subversion.apache.org/packages.html#windows\" target=\"_blank\" rel=\"noopener\">apache网站下载</a></p>\n<p>&nbsp;</p>\n<h4 id=\"VB\"><a href=\"#VB\" class=\"headerlink\" title=\"VB\"></a>VB</h4><p><a href=\"http://www.codesky.net/vb/\" target=\"_blank\" rel=\"noopener\">VB源码</a><br><a href=\"http://www10.zzu.edu.cn/ie_wangjunfeng/daquan/function/index.aspx\" target=\"_blank\" rel=\"noopener\">VB函数大全</a><br><a href=\"https://www.mztools.com/blog/moving-from-mz-tools-3-0-to-8-0/\" target=\"_blank\" rel=\"noopener\">MZ-Tools的博客</a><br><a href=\"https://blog.csdn.net/guyehanxinlei/article/details/1506461\" target=\"_blank\" rel=\"noopener\">VB下的插件开发</a><br><a href=\"http://blog.csdn.net/iamlaosong/article/details/38229755\" target=\"_blank\" rel=\"noopener\">VB实现Base64 编解码</a><br><a href=\"https://blog.csdn.net/keikisou/article/details/50564156\" target=\"_blank\" rel=\"noopener\">VB动态调用类模块中的函数的方法 - CSDN博客</a><br><a href=\"https://blog.csdn.net/whchensir/article/details/52050796\" target=\"_blank\" rel=\"noopener\">VB几种函数参数传递方法，Variant，数组，Optional，ParamArray</a><br><a href=\"https://blog.csdn.net/emma_he/article/details/3023337\" target=\"_blank\" rel=\"noopener\">VB调用c++写的Dll的一点总结</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Vue-js\"><a href=\"#Vue-js\" class=\"headerlink\" title=\"Vue.js\"></a>Vue.js</h4><p><a href=\"http://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue.js官网</a><br><a href=\"https://jsfiddle.net/chrisvfritz/50wL7mdz/\" target=\"_blank\" rel=\"noopener\">JSFiddle Hello World</a></p>\n<p>&nbsp;</p>\n<h4 id=\"民生\"><a href=\"#民生\" class=\"headerlink\" title=\"民生\"></a>民生</h4><p><a href=\"http://www.nxpta.gov.cn/\" target=\"_blank\" rel=\"noopener\">宁夏人事考试中心</a>  |  <a href=\"http://nxzj.chinahrt.com/\" target=\"_blank\" rel=\"noopener\">宁夏专业技术人员继续教育培训网</a><br><a href=\"http://www.12333nx.gov.cn/nxwsrs/personlogin\" target=\"_blank\" rel=\"noopener\">宁夏人力资源和社会保障网上服务大厅</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h4><p><a href=\"https://dama.lu/\" target=\"_blank\" rel=\"noopener\">大马路</a>          |  <a href=\"https://www.google.com/ncr\" target=\"_blank\" rel=\"noopener\">谷歌搜索</a>        |  <a href=\"https://www.google.com.hk/ncr\" target=\"_blank\" rel=\"noopener\">谷歌香港</a>   |  <a href=\"https://www.wikipedia.org/\" target=\"_blank\" rel=\"noopener\">维基百科</a>  |  <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">博客预览</a><br><a href=\"https://open.163.com/\" target=\"_blank\" rel=\"noopener\">网易公开课</a> |  <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"noopener\">YouTube</a><br><a href=\"http://www.csdn.net/\" target=\"_blank\" rel=\"noopener\">CSDN.NET</a>    |  <a href=\"http://www.verycd.com/\" target=\"_blank\" rel=\"noopener\">VeryCD 电驴大全</a>     |  <a href=\"http://www.360doc.com/\" target=\"_blank\" rel=\"noopener\">360doc个人图书馆</a><br><a href=\"http://www.cnbeta.com/\" target=\"_blank\" rel=\"noopener\">cnBeta</a>    |  <a href=\"http://www.guokr.com/\" target=\"_blank\" rel=\"noopener\">果壳</a>                 |  <a href=\"https://sspai.com/\" target=\"_blank\" rel=\"noopener\">少数派</a>                |  <a href=\"http://www.dgtle.com/\" target=\"_blank\" rel=\"noopener\">数字尾巴</a><br><a href=\"https://laod.cn/\" target=\"_blank\" rel=\"noopener\">老D博客</a>         |  <a href=\"https://blog.daliansky.net/\" target=\"_blank\" rel=\"noopener\">黑果小兵</a>       |  <a href=\"http://www.mianfeib.com/\" target=\"_blank\" rel=\"noopener\">免费吧</a>          |  <a href=\"http://www.runker.net/\" target=\"_blank\" rel=\"noopener\">行客工作室</a><br><a href=\"https://pan.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度云</a>    |  <a href=\"https://cloud.tencent.com/\" target=\"_blank\" rel=\"noopener\">腾讯云</a>          |  <a href=\"http://www.tietuku.com/\" target=\"_blank\" rel=\"noopener\">贴图库</a></p>\n<p>&nbsp;</p>\n<h4 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h4><p><a href=\"http://www.songtaste.com/\" target=\"_blank\" rel=\"noopener\">SongTaste</a>  |  <a href=\"https://www.aekun.com/\" target=\"_blank\" rel=\"noopener\">AeKun</a>  |  <a href=\"http://music.163.com\" target=\"_blank\" rel=\"noopener\">网易云音乐</a>  |  <a href=\"http://music.zhuolin.wang/\" target=\"_blank\" rel=\"noopener\">VIP付费音乐解析下载</a></p>\n<p>&nbsp;</p>\n<h4 id=\"电影\"><a href=\"#电影\" class=\"headerlink\" title=\"电影\"></a>电影</h4><p><a href=\"http://www.qinou.cn/\" target=\"_blank\" rel=\"noopener\">BT下载</a>     |  <a href=\"http://www.btbtt33.com/\" target=\"_blank\" rel=\"noopener\">BT之家</a>        |  <a href=\"http://www.415.net\" target=\"_blank\" rel=\"noopener\">BT之家</a>        |  <a href=\"http://www.btbtt.com\" target=\"_blank\" rel=\"noopener\">BT之家</a>       |  <a href=\"http://www.btbta.com\" target=\"_blank\" rel=\"noopener\">BT之家</a><br><a href=\"http://www.poxiao.com\" target=\"_blank\" rel=\"noopener\">破晓电影</a>  |  <a href=\"http://www.fangdianying.tv/\" target=\"_blank\" rel=\"noopener\">放电影网</a>  |  <a href=\"http://www.dy2018.com/\" target=\"_blank\" rel=\"noopener\">电影天堂</a>  |  <a href=\"http://www.xlpu.cc/\" target=\"_blank\" rel=\"noopener\">迅雷电影下载</a>  |  <a href=\"http://www.bubulai.com/\" target=\"_blank\" rel=\"noopener\">快播电影</a> |  <a href=\"http://www.loldytt.com/\" target=\"_blank\" rel=\"noopener\">LOL电影天堂</a> |  <a href=\"http://www.btbttv.net/\" target=\"_blank\" rel=\"noopener\">BT电影天堂</a> | <a href=\"https://www.xunyingwang.com/\" target=\"_blank\" rel=\"noopener\">迅影网</a><br><a href=\"http://www.yugaopian.cn/\" target=\"_blank\" rel=\"noopener\">预告片世界</a><br><a href=\"http://www.yyets.com/\" target=\"_blank\" rel=\"noopener\">人人影视</a><br><a href=\"https://deardu.com/\" target=\"_blank\" rel=\"noopener\">第二度</a></p>\n<p>&nbsp;</p>\n<h4 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h4><p><a href=\"http://chatroulette.com/\" target=\"_blank\" rel=\"noopener\">Chatroulette</a>                      |  <a href=\"http://web.sanguosha.com/\" target=\"_blank\" rel=\"noopener\">三国杀</a><br><a href=\"http://www.haosm.com/\" target=\"_blank\" rel=\"noopener\">好蜀门私服</a><br><a href=\"http://news.17173.com/z/pvp/content/02122017/153037729.shtml\" target=\"_blank\" rel=\"noopener\">王者荣耀通用铭文推荐 通用全英雄四级五级铭文推荐</a></p>\n<p>&nbsp;</p>\n<h4 id=\"美图\"><a href=\"#美图\" class=\"headerlink\" title=\"美图\"></a>美图</h4><p><a href=\"http://www.topit.me/\" target=\"_blank\" rel=\"noopener\">it.me</a>                                 |  <a href=\"http://www.picever.com/\" target=\"_blank\" rel=\"noopener\">Picever</a>                                                              |  <a href=\"http://bbs.zol.com.cn/nbbbs/d33943.html\" target=\"_blank\" rel=\"noopener\">笔记本桌面壁纸下载</a><br><a href=\"http://shouxie.org/\" target=\"_blank\" rel=\"noopener\">手写导航</a>                               |  <a href=\"http://shouxieti.com/\" target=\"_blank\" rel=\"noopener\">手写体网</a></p>\n<p>&nbsp;</p>\n<h4 id=\"在线工具\"><a href=\"#在线工具\" class=\"headerlink\" title=\"在线工具\"></a>在线工具</h4><p><a href=\"http://tool.lu/\" target=\"_blank\" rel=\"noopener\">在线工具</a><br><a href=\"http://www.json.cn/\" target=\"_blank\" rel=\"noopener\">JSON在线解析及格式化验证</a><br><a href=\"http://json2csharp.chahuo.com/\" target=\"_blank\" rel=\"noopener\">转换json格式为C#类</a><br><a href=\"http://www.atool.org/\" target=\"_blank\" rel=\"noopener\">ATOOL在线工具</a><br><a href=\"http://tool.oschina.net/\" target=\"_blank\" rel=\"noopener\">在线API</a><br><a href=\"http://pmd5.com/#\" target=\"_blank\" rel=\"noopener\">PMD5</a><br><a href=\"https://www.somd5.com/\" target=\"_blank\" rel=\"noopener\">输入让你无语的MD5</a><br><a href=\"http://www.atool.org/md5-crack.php\" target=\"_blank\" rel=\"noopener\">在线MD5暴力破解 - md5解密破解 - aTool在线工具</a><br><a href=\"http://www.easyicon.net/covert/\" target=\"_blank\" rel=\"noopener\">png在线转ico</a><br><a href=\"http://www.makepic.com/\" target=\"_blank\" rel=\"noopener\">MakePic.com 图片制造</a><br><a href=\"http://mh.cli.im/\" target=\"_blank\" rel=\"noopener\">草料二维码美化器</a><br><a href=\"http://tool.lu/zhconvert/\" target=\"_blank\" rel=\"noopener\">简繁体在线转换工具</a><br><a href=\"https://sym233.github.io/core-values-encoder/\" target=\"_blank\" rel=\"noopener\">核心价值编码器</a><br><a href=\"https://github.com/sym233/core-values-encoder\" target=\"_blank\" rel=\"noopener\">核心价值编码器源码</a><br><a href=\"https://suijimimashengcheng.51240.com/\" target=\"_blank\" rel=\"noopener\">生成随机密码</a><br><a href=\"https://www.logaster.cn/\" target=\"_blank\" rel=\"noopener\">在线制作您的Logo</a></p>\n<p>&nbsp;</p>\n<h4 id=\"系统-软件下载\"><a href=\"#系统-软件下载\" class=\"headerlink\" title=\"系统/软件下载\"></a>系统/软件下载</h4><p><a href=\"https://www.ithome.com/\" target=\"_blank\" rel=\"noopener\">IT之家</a>                             |  <a href=\"http://www.xitongzhijia.net/\" target=\"_blank\" rel=\"noopener\">系统之家</a>                                                              |  <a href=\"http://www.xitongtiandi.net/\" target=\"_blank\" rel=\"noopener\">系统天地</a>                                                              |  <a href=\"http://www.win10zyb.com/\" target=\"_blank\" rel=\"noopener\">Win10专业版官网</a>                                                              |  <a href=\"http://www.xh52.com/\" target=\"_blank\" rel=\"noopener\">Win10之家</a>                                                              |  <a href=\"http://www.285868.com/\" target=\"_blank\" rel=\"noopener\">系统圣地</a><br><a href=\"https://imac.hk/\" target=\"_blank\" rel=\"noopener\">黑苹果乐园</a>                                  |  <a href=\"http://tieba.baidu.com/p/5179866130#\" target=\"_blank\" rel=\"noopener\">从零开始的黑苹果安装教程</a><br><a href=\"http://www.xdowns.com/\" target=\"_blank\" rel=\"noopener\">绿盟</a>                                |  <a href=\"http://www.zdfans.com/\" target=\"_blank\" rel=\"noopener\">zd423</a><br><a href=\"http://liulanmi.com/\" target=\"_blank\" rel=\"noopener\">浏览迷</a>                                |  <a href=\"https://www.chromefor.com/\" target=\"_blank\" rel=\"noopener\">Chrome浏览器插件下载中心</a><br><a href=\"http://www.win10.name/news/193.html\" target=\"_blank\" rel=\"noopener\">最新迅雷(xunlei)会员账号天天更新同享</a><br><a href=\"http://get.adobe.com/cn/flashplayer/otherversions/\" target=\"_blank\" rel=\"noopener\">FlashPlayer下载地址1</a>  |  <a href=\"http://www.adobe.com/support/flashplayer/downloads.html\" target=\"_blank\" rel=\"noopener\">FlashPlayer下载地址2</a>  |  <a href=\"http://kb2.adobe.com/cps/155/tn_15507.html\" target=\"_blank\" rel=\"noopener\">Debugger Version地址</a></p>\n<p>&nbsp;</p>\n<h4 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h4><p><a href=\"https://www.sdk.cn/\" target=\"_blank\" rel=\"noopener\">SDK.cn</a><br><a href=\"http://www.cnblogs.com/cmt/\" target=\"_blank\" rel=\"noopener\">博客园</a><br><a href=\"http://www.runoob.com/\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a><br><a href=\"http://www.oschina.net/\" target=\"_blank\" rel=\"noopener\">开源中国社区</a><br><a href=\"http://www.html5plus.org/\" target=\"_blank\" rel=\"noopener\">HTM5中国产业联盟</a><br><a href=\"http://www.runoob.com/sqlite/sqlite-tutorial.html\" target=\"_blank\" rel=\"noopener\">SQLite 教程</a><br><a href=\"https://channel9.msdn.com/\" target=\"_blank\" rel=\"noopener\">channel9</a></p>\n<p>&nbsp;</p>\n<h4 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h4><p><a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener\">矢量图标库</a><br><a href=\"http://cdn.code.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度静态资源公共库</a><br><a href=\"http://msdn.itellyou.cn/?gytyzs=0z1zl\" target=\"_blank\" rel=\"noopener\">MSDN</a><br><a href=\"http://blog.sina.com.cn/s/blog_7c28bad401016j66.html\" target=\"_blank\" rel=\"noopener\">常用的gif正在加载图</a></p>\n<p>&nbsp;</p>\n<h4 id=\"文章-教程\"><a href=\"#文章-教程\" class=\"headerlink\" title=\"文章/教程\"></a>文章/教程</h4><p><a href=\"http://www.cnblogs.com/mindwind/p/5339657.html\" target=\"_blank\" rel=\"noopener\">LB 负载均衡的层次结构</a><br><a href=\"http://blog.csdn.net/ren1027538427/article/details/52450294\" target=\"_blank\" rel=\"noopener\">GitHub上优秀的开源项目</a><br><a href=\"http://www.w3cplus.com/sassguide/\" target=\"_blank\" rel=\"noopener\">sass入门教程</a><br><a href=\"https://segmentfault.com/a/1190000002471120\" target=\"_blank\" rel=\"noopener\">项目目录结构规范</a><br><a href=\"http://zyan.cc/post/297/\" target=\"_blank\" rel=\"noopener\">Nginx 0.5.31 + PHP 5.2.4（FastCGI）搭建可承受3万以上并发连接数，胜过Apache 10倍的Web服务器[原创]</a><br><a href=\"http://www.cnblogs.com/quanweiru/p/3764003.html\" target=\"_blank\" rel=\"noopener\">Linux删除乱码文件</a><br><a href=\"http://tophandxing.blog.163.com/blog/static/109714820124123438513/\" target=\"_blank\" rel=\"noopener\">SUSE Linux启用SSH</a><br><a href=\"http://www.jb51.net/os/win10/483729.html\" target=\"_blank\" rel=\"noopener\">Win10怎么把批处理文件固定到开始菜单</a><br><a href=\"http://www.cnblogs.com/momoko8443/p/4302879.html\" target=\"_blank\" rel=\"noopener\">Flex转型Html学习随笔1——关于Html页面的div布局（上）</a><br><a href=\"http://www.cnblogs.com/momoko8443/p/4303829.html\" target=\"_blank\" rel=\"noopener\">Flex转型Html学习随笔1——关于Html页面的div布局（下）</a><br><a href=\"http://www.miui.com/home.php?mod=space&amp;uid=8&amp;do=thread&amp;view=me&amp;from=space\" target=\"_blank\" rel=\"noopener\">MIUI更新日志</a><br><a href=\"https://www.oschina.net/news/92438/2017-mayun-top-50\" target=\"_blank\" rel=\"noopener\">2017 码云最火爆开源项目 TOP 50，你都用过哪些？</a><br><a href=\"https://jingyan.baidu.com/article/851fbc37dc1e513e1f15ab27.html\" target=\"_blank\" rel=\"noopener\">解决TCP/IP筛选的实用设置问题</a><br><a href=\"http://blog.csdn.net/zhaoyonghui100/article/details/8939950\" target=\"_blank\" rel=\"noopener\">如何在不重装服务器的情况下尝试解决sqlmaint.exe失败的问题</a><br><a href=\"https://www.cnblogs.com/Wayou/p/goodui.html#home\" target=\"_blank\" rel=\"noopener\">好的用户界面-界面设计的一些技巧</a><br><a href=\"http://www.hit180.com/21534.html\" target=\"_blank\" rel=\"noopener\">一种电子病历系统软件框架思想——B/S与C/S混合架构</a><br><a href=\"http://www.ufidawhy.com/mfufida/613.html\" target=\"_blank\" rel=\"noopener\">B/S，C/S，B/S和C/S混合模式的概念区别优缺点及前景分析</a><br><a href=\"http://tzit.net/htmlitjs/2018-10-25/2234.html\" target=\"_blank\" rel=\"noopener\">黑苹果macOS High Sierra 10.13.6详细安装新手菜鸟教程</a><br><a href=\"https://yq.aliyun.com/ziliao/22450\" target=\"_blank\" rel=\"noopener\">Sql Server 2000清除日志方法介绍</a></p>\n<p>&nbsp;</p>\n<h4 id=\"前端-案例\"><a href=\"#前端-案例\" class=\"headerlink\" title=\"前端/案例\"></a>前端/案例</h4><p><a href=\"http://www.qdfuns.com/\" target=\"_blank\" rel=\"noopener\">前端网</a><br><a href=\"https://www.layui.com/\" target=\"_blank\" rel=\"noopener\">LayUI</a><br><a href=\"http://www.codeceo.com/article/top-10-css-ui-framework.html\" target=\"_blank\" rel=\"noopener\">10个顶级的CSS UI开源框架</a><br><a href=\"http://www.runoob.com/w3cnote/android-ui-framework.html\" target=\"_blank\" rel=\"noopener\">Android酷炫实用的开源框架（UI框架）</a><br><a href=\"http://www.lyblogs.cn/\" target=\"_blank\" rel=\"noopener\">不落阁</a><br><a href=\"http://www.lanlanwork.com/\" target=\"_blank\" rel=\"noopener\">蓝蓝设计</a><br><a href=\"http://www.th7.cn/Design/ui/201312/199261.shtml\" target=\"_blank\" rel=\"noopener\">网络培训系统界面设计UI</a><br><a href=\"http://blog.csdn.net/sunyingyuan/article/details/38237139\" target=\"_blank\" rel=\"noopener\">公司某项目前端技术积累</a><br><a href=\"http://www.mycodes.net/154/3.htm\" target=\"_blank\" rel=\"noopener\">后台界面模板</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Angular\"><a href=\"#Angular\" class=\"headerlink\" title=\"Angular\"></a>Angular</h4><p><a href=\"https://angularjs.org/\" target=\"_blank\" rel=\"noopener\">AngularJS官网</a>                       |  <a href=\"https://angular.cn/\" target=\"_blank\" rel=\"noopener\">AngularJS中文官网</a>                                                              |  <a href=\"http://angular-ui.github.io/\" target=\"_blank\" rel=\"noopener\">AngularUI官网</a><br><a href=\"https://code.angularjs.org/\" target=\"_blank\" rel=\"noopener\">AngularJS所有版本下载</a><br><a href=\"http://www.ngnice.com\" target=\"_blank\" rel=\"noopener\">Angularjs 中文版 API</a>                 |  <a href=\"https://docs.angularjs.org/api\" target=\"_blank\" rel=\"noopener\">Angularjs English API</a>                                                              |  <a href=\"http://www.angularjsapi.cn/#/index\" target=\"_blank\" rel=\"noopener\">Angularjs 中文版 API v1.3.9</a><br><a href=\"http://showcase.ngnice.com/#/home/home\" target=\"_blank\" rel=\"noopener\">AngularJS实例</a>       |  <a href=\"http://ngmodules.org/\" target=\"_blank\" rel=\"noopener\">Angular Modules</a>                                                              |  <a href=\"http://angularscript.com/\" target=\"_blank\" rel=\"noopener\">Angular Script</a><br><a href=\"http://lib.csdn.net/base/23\" target=\"_blank\" rel=\"noopener\">CSDN知识库：AngularJS</a>          |  <a href=\"http://blog.jobbole.com/tag/angularjs/\" target=\"_blank\" rel=\"noopener\">伯乐在线：AngularJS</a>                                                              |  <a href=\"http://www.riafan.com/angularjs-learning/\" target=\"_blank\" rel=\"noopener\">RIA爱好者：学习AngularJS</a><br><a href=\"http://www.ngnice.com/\" target=\"_blank\" rel=\"noopener\">NgNice站点是由一批AngularJS爱好者发起的，致力于打造一个AngularJS的学习和经验分享平台。</a><br><a href=\"http://www.iteye.com/news/28651-AngularJS-Google-resource\" target=\"_blank\" rel=\"noopener\">2013年度最强AngularJS资源合集</a>                                                              |  <a href=\"http://www.html5cn.org/article-9473-1.html\" target=\"_blank\" rel=\"noopener\">20个免费的 AngularJS 资源和开发教程</a></p>\n<p>&nbsp;</p>\n<h4 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h4><p><a href=\"http://www.bubuko.com/infodetail-1761193.html\" target=\"_blank\" rel=\"noopener\">C#调用C++ dll导出函数提示找不到指定模块</a><br><a href=\"https://www.cnblogs.com/luxiaoxun/p/3280146.html\" target=\"_blank\" rel=\"noopener\">C#多线程编程</a></p>\n<p>&nbsp;</p>\n<h4 id=\"C-35\"><a href=\"#C-35\" class=\"headerlink\" title=\"C&#35;\"></a>C&#35;</h4><p><a href=\"http://www.runoob.com/csharp/csharp-program-structure.html\" target=\"_blank\" rel=\"noopener\">C#教程</a><br><a href=\"http://www.huiyaosoft.com/winformlist.htm\" target=\"_blank\" rel=\"noopener\">辉耀应用程序框架学习网</a><br><a href=\"https://blog.csdn.net/lp310018931/article/details/47991759\" target=\"_blank\" rel=\"noopener\">Vs解决方案的目录结构设置和管理</a><br><a href=\"https://www.cnblogs.com/Jeremy2001/p/6066553.html\" target=\"_blank\" rel=\"noopener\">C#（Net）软件开发常用工具汇总，提高你的开发效率</a><br><a href=\"http://www.cnblogs.com/KnightsWarrior/archive/2010/10/20/1856255.html#3754564\" target=\"_blank\" rel=\"noopener\">Winform自动更新组件分享</a><br><a href=\"https://www.cnblogs.com/24la/p/autoupdater-component.html\" target=\"_blank\" rel=\"noopener\">Winform(C#.NET)自动更新组件的使用及部分功能实现</a><br><a href=\"https://www.cnblogs.com/wuhuacong/p/3199829.html\" target=\"_blank\" rel=\"noopener\">Winform开发框架的重要特性总结</a><br><a href=\"http://www.cnblogs.com/wuhuacong/archive/2011/11/28/2266694.html\" target=\"_blank\" rel=\"noopener\">厚积薄发，丰富的公用类库积累，助你高效进行系统开发（8）—-非对称加密、BASE64加密、MD5等常用加密处理</a><br><a href=\"http://www.cnblogs.com/wuhuacong/p/3360648.html\" target=\"_blank\" rel=\"noopener\">Winform开发框架主界面设计展示</a><br><a href=\"https://www.cnblogs.com/HopeGi/p/3510809.html\" target=\"_blank\" rel=\"noopener\">仿Office的程序载入窗体</a><br><a href=\"https://blog.csdn.net/shiyangkai/article/details/71479947\" target=\"_blank\" rel=\"noopener\">C#MDI打开子窗体去掉自动生成的菜单栏</a><br><a href=\"http://www.php.cn/csharp-article-355886.html\" target=\"_blank\" rel=\"noopener\">C# Tabcontrol组件如何切换显示Form窗体的示例代码</a><br><a href=\"https://github.com/fluentribbon/Fluent.Ribbon\" target=\"_blank\" rel=\"noopener\">Fluent.Ribbon</a><br><a href=\"https://github.com/RibbonWinForms/RibbonWinForms\" target=\"_blank\" rel=\"noopener\">RibbonWinForms</a><br><a href=\"https://blog.csdn.net/u011981242/article/details/51059441\" target=\"_blank\" rel=\"noopener\">C# winform程序怎么打包成安装项目(图解)</a><br><a href=\"https://www.cnblogs.com/yanglang/p/8041662.html\" target=\"_blank\" rel=\"noopener\">【.Net】vs2017 自带发布工具 ClickOnce发布包遇到的问题</a><br><a href=\"https://www.cnblogs.com/iiwen/p/5310246.html\" target=\"_blank\" rel=\"noopener\">Winform打包工具SetupFactory 9 的使用</a><br><a href=\"https://www.jb51.net/article/71952.htm\" target=\"_blank\" rel=\"noopener\">C#动态创建Access数据库及密码的方法</a><br><a href=\"https://www.cnblogs.com/yank/p/3528548.html\" target=\"_blank\" rel=\"noopener\">C#编程总结（七）数据加密——附源码</a><br><a href=\"https://www.jb51.net/article/57163.htm\" target=\"_blank\" rel=\"noopener\">C#常用的命名规则汇总</a><br><a href=\"https://www.cnblogs.com/zhoug2020/p/5837035.html\" target=\"_blank\" rel=\"noopener\">C#三种定时器的实现</a><br><a href=\"https://www.cnblogs.com/wanzhongjun/p/6534608.html\" target=\"_blank\" rel=\"noopener\">C#对WinForm应用程序的App.config的使用及加密</a><br><a href=\"https://blog.csdn.net/facefriends/article/details/79216114\" target=\"_blank\" rel=\"noopener\">Winform窗体控件图片过多后卡顿问题</a><br><a href=\"https://blog.csdn.net/swarb/article/details/8493328\" target=\"_blank\" rel=\"noopener\">winform中的DataGridView的列宽设置（自动调整列宽）</a><br><a href=\"https://www.cnblogs.com/ghbjimmy/articles/3635825.html\" target=\"_blank\" rel=\"noopener\">C#Winform频繁刷新导致界面闪烁解决方法</a><br><a href=\"http://www.cnblogs.com/peterzb/archive/2009/05/29/1491891.html\" target=\"_blank\" rel=\"noopener\">C# WinForm开发系列 - DataGridView</a><br><a href=\"https://blog.csdn.net/tyouvivi/article/details/1676850\" target=\"_blank\" rel=\"noopener\">DataGridView实现添加合计行并始终显示在底部</a><br><a href=\"https://www.cnblogs.com/mandaren/p/3709932.html\" target=\"_blank\" rel=\"noopener\">tablelayoutpanel 动态调整行列宽度</a><br><a href=\"https://www.cnblogs.com/ingstyle/p/6196908.html\" target=\"_blank\" rel=\"noopener\">C#批量插入数据到Sqlserver中的四种方式</a><br><a href=\"https://www.cnblogs.com/jiekeng/articles/561562.html\" target=\"_blank\" rel=\"noopener\">C#命名规则和风格(收集)</a><br><a href=\"https://www.sypopo.com/post/OBQ6E6EWo0/\" target=\"_blank\" rel=\"noopener\">水缘泡泡技术集</a><br><a href=\"https://www.jianshu.com/p/7f628015a243\" target=\"_blank\" rel=\"noopener\">C# WinForm项目三层架构简述</a><br><a href=\"http://www.cnblogs.com/WayneShao/\" target=\"_blank\" rel=\"noopener\">想和代码谈谈</a><br><a href=\"http://blog.sina.com.cn/s/blog_7cc533310101lxn2.html\" target=\"_blank\" rel=\"noopener\">使用C#创建Access2010或Access2007 accdb 数据库文件</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h4><p><a href=\"http://www.adobe.com/support/flashplayer/downloads.html\" target=\"_blank\" rel=\"noopener\">Flex下载地址</a>                                                              |  <a href=\"http://kb2.adobe.com/cps/155/tn_15507.html\" target=\"_blank\" rel=\"noopener\">查看浏览器FLash版本、Debug Player</a><br><a href=\"http://blog.csdn.net/wugouzi/article/details/5598392\" target=\"_blank\" rel=\"noopener\">flex学习笔记</a>  |  <a href=\"http://www.riameeting.com/node/748\" target=\"_blank\" rel=\"noopener\">Flex学习视频748-798</a><br><a href=\"http://keren.iteye.com/blog/377733\" target=\"_blank\" rel=\"noopener\">Flex成功案例</a>            |  <a href=\"http://blog.minidx.com/\" target=\"_blank\" rel=\"noopener\">中文Flex例子</a><br><a href=\"http://www.cnblogs.com/xuehai/archive/2009/09/26/1574531.html\" target=\"_blank\" rel=\"noopener\">Flex 3 advancedDataGrid的使用</a><br><a href=\"https://my.oschina.net/return/blog/208294#navbar-header\" target=\"_blank\" rel=\"noopener\">Flex性能优化</a>                                                              |  <a href=\"http://coffeelover.iteye.com/blog/1163906\" target=\"_blank\" rel=\"noopener\">Flex进阶持续学习——性能优化</a>                                                 |  <a href=\"http://www.wangqi.com/html/2010-12/12796.htm\" target=\"_blank\" rel=\"noopener\">flex应用程序性能优化十个方法</a><br><a href=\"http://dudong0726.iteye.com/blog/1296195\" target=\"_blank\" rel=\"noopener\">Flex 中的undefined类型</a><br><a href=\"http://www.adobe.com/cn/devnet/flex/articles/tips-tricks.html\" target=\"_blank\" rel=\"noopener\">Flash Builder 提示与技巧</a><br><a href=\"http://www.cnblogs.com/kakaflex/archive/2010/12/02/1894142.html\" target=\"_blank\" rel=\"noopener\">一名优秀的Flex开发者需要知道的10样东西</a><br><a href=\"http://www.cnblogs.com/xuehai/archive/2009/09/26/1574533.html\" target=\"_blank\" rel=\"noopener\">Flex 3 AdvancedDataGrid的使用(三)</a></p>\n<p>&nbsp;</p>\n<h4 id=\"fpSpread\"><a href=\"#fpSpread\" class=\"headerlink\" title=\"fpSpread\"></a>fpSpread</h4><p><a href=\"http://www.cnblogs.com/powertoolsteam/archive/2011/08/22/2149009.html\" target=\"_blank\" rel=\"noopener\">Spread for Windows Forms高级主题(7)—自定义打印的外观</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h4><p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a><br><a href=\"http://blog.jobbole.com/78960/\" target=\"_blank\" rel=\"noopener\">推荐！手把手教你使用Git</a><br><a href=\"http://developer.51cto.com/art/201507/483448.htm\" target=\"_blank\" rel=\"noopener\">Git服务器搭建全过程分步详解</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Haproxy\"><a href=\"#Haproxy\" class=\"headerlink\" title=\"Haproxy\"></a>Haproxy</h4><p><a href=\"https://www.haproxy.org/\" target=\"_blank\" rel=\"noopener\">首页</a><br><a href=\"http://www.csdn.net/tag/haproxy\" target=\"_blank\" rel=\"noopener\">haproxy资源</a><br><a href=\"http://blog.chinaunix.net/uid-24250828-id-3778032.html\" target=\"_blank\" rel=\"noopener\">haproxy 配置 说明</a><br><a href=\"http://blog.csdn.net/zilong00007/article/details/7450317\" target=\"_blank\" rel=\"noopener\">最新版haproxy linux下的设置（haproxy-1.4.20 ）</a><br><a href=\"http://itindex.net/blog/2012/07/24/1343118758531.html\" target=\"_blank\" rel=\"noopener\">HAProxy负载均衡保持客户端和服务器Session亲缘性的三种方式</a><br><a href=\"http://blog.csdn.net/zilong00007/article/details/7275235\" target=\"_blank\" rel=\"noopener\">Linux下HAProxy的均衡配置</a><br><a href=\"http://blog.51cto.com/1234567aaa/317891\" target=\"_blank\" rel=\"noopener\">5月16日发布HAProxy,实现八种负载算法</a><br><a href=\"https://www.cnblogs.com/qige2017/p/7783402.html\" target=\"_blank\" rel=\"noopener\"></a></p>\n<p>&nbsp;</p>\n<h4 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h4><p><a href=\"https://segmentfault.com/a/1190000002632530\" target=\"_blank\" rel=\"noopener\">hexo常用命令笔记</a><br><a href=\"http://blog.csdn.net/wx_jin/article/details/51027783\" target=\"_blank\" rel=\"noopener\">Windows下使用Hexo+GithubPage搭建博客</a><br><a href=\"http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" target=\"_blank\" rel=\"noopener\">Hexo常见问题</a>                                                               |  <a href=\"http://xwartz.xyz/blog/2016/09/reduce-blog-load-time/\" target=\"_blank\" rel=\"noopener\">Hexo博客优化</a><br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">Hexo官方主题</a>                        |  <a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Hexo主题</a><br><a href=\"http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/\" target=\"_blank\" rel=\"noopener\">Hexo博客主题从Jacman切换到NexT.Mist </a></p>\n<p>&nbsp;</p>\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p><a href=\"http://blog.csdn.net/zhshulin/article/details/37956105\" target=\"_blank\" rel=\"noopener\">SSM框架——详细整合教程（Spring+SpringMVC+MyBatis）</a><br><a href=\"http://blog.csdn.net/cfl20121314/article/details/42160035\" target=\"_blank\" rel=\"noopener\">spring-mvc与jquery-easyui整合</a>                                                                |  <a href=\"http://my.oschina.net/xshuai/blog/345117\" target=\"_blank\" rel=\"noopener\">SpringMVC+Hibernate +MySql+ EasyUI实现CRUD</a>                              |  <a href=\"http://blog.csdn.net/zoutongyuan/article/details/41379851\" target=\"_blank\" rel=\"noopener\">基于Spring + Spring MVC + Mybatis 高性能web构建</a><br><a href=\"http://blog.csdn.net/fengshizty/article/details/43019561\" target=\"_blank\" rel=\"noopener\">Maven环境搭建和介绍</a>                                                                |  <a href=\"http://doc.okbase.net/fengshizty/archive/126397.html\" target=\"_blank\" rel=\"noopener\">Maven搭建SpringMVC+Mybatis项目详解</a><br><a href=\"http://blog.csdn.net/lk_blog/article/details/8007777\" target=\"_blank\" rel=\"noopener\">配置简单功能强大的excel工具类搞定excel导入导出工具类</a><br><a href=\"http://blog.csdn.net/huazhangena/article/details/7587731\" target=\"_blank\" rel=\"noopener\">POI操作Excel常用方法总结 </a><br><a href=\"http://old.bccn.net/Article/web/jsp/Index.html\" target=\"_blank\" rel=\"noopener\">编程中国JSP教程和技术资料</a><br><a href=\"http://www.cnblogs.com/asderx/p/6541945.html\" target=\"_blank\" rel=\"noopener\">【FAQ】org.apache.maven.archiver.MavenArchiver.getManifest错误</a></p>\n<p>&nbsp;</p>\n<h4 id=\"JQuery\"><a href=\"#JQuery\" class=\"headerlink\" title=\"JQuery\"></a>JQuery</h4><p><a href=\"http://www.jq22.com/\" target=\"_blank\" rel=\"noopener\">jQuery插件库</a><br><a href=\"http://www.cnblogs.com/ywqu/archive/2009/08/15/1546559.html\" target=\"_blank\" rel=\"noopener\">36个引人注目JQuery导航菜单</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Kettle\"><a href=\"#Kettle\" class=\"headerlink\" title=\"Kettle\"></a>Kettle</h4><p><a href=\"http://kettle.pentaho.org/\" target=\"_blank\" rel=\"noopener\">Kettle官网下载</a>                    |  <a href=\"http://sourceforge.net/projects/pentaho/files/Data%20Integration/\" target=\"_blank\" rel=\"noopener\">Kettle各版本下载</a><br><a href=\"http://www.ukettle.org/\" target=\"_blank\" rel=\"noopener\">Kettle开源社区</a><br><a href=\"http://www.cnblogs.com/hapjin/p/4578738.html\" target=\"_blank\" rel=\"noopener\">Kettle基本概念学习</a>    |  <a href=\"http://www.cnblogs.com/wxjnew/p/3620792.html\" target=\"_blank\" rel=\"noopener\">kettle使用命令行来运行ktr和kjb</a><br><a href=\"http://blog.csdn.net/iquicksandi/article/details/7635031\" target=\"_blank\" rel=\"noopener\">Kettle的一些常见问题</a>                                                                |  <a href=\"http://www.ukettle.org/thread-502-1-4.html\" target=\"_blank\" rel=\"noopener\">Kettle连接数据库超时的参数设置</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p><a href=\"http://www.oschina.net/translate/useful-linux-commands-for-newbies\" target=\"_blank\" rel=\"noopener\">对 Linux 新手非常有用的 20 个命令</a><br><a href=\"http://blog.csdn.net/Truong/article/details/70171661\" target=\"_blank\" rel=\"noopener\">linux数据盘，系统盘</a><br><a href=\"http://blog.csdn.net/Truong/article/details/70171699\" target=\"_blank\" rel=\"noopener\">数据盘分区以及格式化</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h4><p><a href=\"http://www.ctrlshift.net/project/markdowneditor/\" target=\"_blank\" rel=\"noopener\">Markdown在线编辑</a>  |  <a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"noopener\">Windows在线markdown工具</a><br><a href=\"http://blog.csdn.net/u011419965/article/details/50536937\" target=\"_blank\" rel=\"noopener\">Markdown 语法 示例 字体 字号 颜色</a><br><a href=\"http://blog.csdn.net/peng_hong_fu/article/details/52805408\" target=\"_blank\" rel=\"noopener\">Markdown支持的语言</a></p>\n<p>&nbsp;</p>\n<h4 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h4><p><a href=\"http://xcc313.iteye.com/blog/1331468\" target=\"_blank\" rel=\"noopener\">SQL Server 2008(R2)支持将数据导出为脚本</a><br><a href=\"http://blog.csdn.net/sqlserverdiscovery/article/details/11020057\" target=\"_blank\" rel=\"noopener\">【SQL Server备份恢复】维护计划实现备份：每周数据库完整备份、每天差异备份、每小时日志备份 </a><br><a href=\"https://www.cnblogs.com/luokunlun/p/5947615.html\" target=\"_blank\" rel=\"noopener\">SQL 列转行，即多行合并成一条</a><br><a href=\"https://www.cnblogs.com/a311300/p/4358916.html\" target=\"_blank\" rel=\"noopener\">sql 判断 函数 存储过程是否存在的方法</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Sublime-Text\"><a href=\"#Sublime-Text\" class=\"headerlink\" title=\"Sublime Text\"></a>Sublime Text</h4><p><a href=\"http://www.cnblogs.com/dudumao/p/4054086.html\" target=\"_blank\" rel=\"noopener\">Sublime Text 2/3安装使用及常用插件</a><br><a href=\"https://packagecontrol.io/\" target=\"_blank\" rel=\"noopener\">Sublime Text PackageControl</a><br><a href=\"https://segmentfault.com/a/1190000002570753\" target=\"_blank\" rel=\"noopener\">Sublime Text 3 快捷键</a></p>\n<p>&nbsp;</p>\n<h4 id=\"SVN\"><a href=\"#SVN\" class=\"headerlink\" title=\"SVN\"></a>SVN</h4><p><a href=\"http://subversion.apache.org/packages.html#windows\" target=\"_blank\" rel=\"noopener\">apache网站下载</a></p>\n<p>&nbsp;</p>\n<h4 id=\"VB\"><a href=\"#VB\" class=\"headerlink\" title=\"VB\"></a>VB</h4><p><a href=\"http://www.codesky.net/vb/\" target=\"_blank\" rel=\"noopener\">VB源码</a><br><a href=\"http://www10.zzu.edu.cn/ie_wangjunfeng/daquan/function/index.aspx\" target=\"_blank\" rel=\"noopener\">VB函数大全</a><br><a href=\"https://www.mztools.com/blog/moving-from-mz-tools-3-0-to-8-0/\" target=\"_blank\" rel=\"noopener\">MZ-Tools的博客</a><br><a href=\"https://blog.csdn.net/guyehanxinlei/article/details/1506461\" target=\"_blank\" rel=\"noopener\">VB下的插件开发</a><br><a href=\"http://blog.csdn.net/iamlaosong/article/details/38229755\" target=\"_blank\" rel=\"noopener\">VB实现Base64 编解码</a><br><a href=\"https://blog.csdn.net/keikisou/article/details/50564156\" target=\"_blank\" rel=\"noopener\">VB动态调用类模块中的函数的方法 - CSDN博客</a><br><a href=\"https://blog.csdn.net/whchensir/article/details/52050796\" target=\"_blank\" rel=\"noopener\">VB几种函数参数传递方法，Variant，数组，Optional，ParamArray</a><br><a href=\"https://blog.csdn.net/emma_he/article/details/3023337\" target=\"_blank\" rel=\"noopener\">VB调用c++写的Dll的一点总结</a></p>\n<p>&nbsp;</p>\n<h4 id=\"Vue-js\"><a href=\"#Vue-js\" class=\"headerlink\" title=\"Vue.js\"></a>Vue.js</h4><p><a href=\"http://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue.js官网</a><br><a href=\"https://jsfiddle.net/chrisvfritz/50wL7mdz/\" target=\"_blank\" rel=\"noopener\">JSFiddle Hello World</a></p>\n<p>&nbsp;</p>\n<h4 id=\"民生\"><a href=\"#民生\" class=\"headerlink\" title=\"民生\"></a>民生</h4><p><a href=\"http://www.nxpta.gov.cn/\" target=\"_blank\" rel=\"noopener\">宁夏人事考试中心</a>  |  <a href=\"http://nxzj.chinahrt.com/\" target=\"_blank\" rel=\"noopener\">宁夏专业技术人员继续教育培训网</a><br><a href=\"http://www.12333nx.gov.cn/nxwsrs/personlogin\" target=\"_blank\" rel=\"noopener\">宁夏人力资源和社会保障网上服务大厅</a></p>\n"},{"_content":"[\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg\",\"title\":\"手写体\",\"desc\":\"这是第一张。\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg\",\"title\":\"\",\"desc\":\"\"}\n]","source":"photos/data.json","raw":"[\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg\",\"title\":\"手写体\",\"desc\":\"这是第一张。\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg\",\"title\":\"\",\"desc\":\"\"},\n\t{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg\",\"title\":\"\",\"desc\":\"\"}\n]","date":"2018-11-25T06:15:20.907Z","updated":"2018-11-25T06:15:20.907Z","path":"photos/data.json","layout":"false","_id":"cjpuwa1nf009ks0jtx9igxyso","title":"","comments":1,"content":"[{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg\",\"title\":\"手写体\",\"desc\":\"这是第一张。\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg\",\"title\":\"\",\"desc\":\"\"}]","site":{"data":{}},"excerpt":"","more":"[{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%83%B3%E5%BF%B5.jpg\",\"title\":\"手写体\",\"desc\":\"这是第一张。\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%81%E7%BB%8A.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%95%85%E4%BA%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%AE%98%E5%9C%BA.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8F%8D%E6%8A%97%E5%86%9B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9%E7%AC%91%E4%BA%86.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%88%B1%E4%BA%BA.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%89%A1%E4%B8%B9.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%BE%8E.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%88%90%E9%95%BF.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9E%97%E4%B8%AD%E5%B0%8F%E5%B1%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%98%A5%E5%B7%B2%E6%9A%AE.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%BA%BA%E9%9D%A2%E4%B8%8D%E7%9F%A5%E4%BD%95%E5%8E%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%83%AD%E6%83%85.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%8B%A5%E9%9D%9E%E9%9D%92%E6%98%A5%E8%8B%A6%E7%9F%AD.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BE%97%E6%88%90%E6%AD%A4%E7%9B%AE%E4%BD%95%E8%BE%9E%E6%AD%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%94%9F%E5%91%BD%E5%8F%B3%E5%A4%AA%E5%A4%9A%E9%81%97%E6%86%BE.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%B0%91%E5%B9%B4.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%96%E4%BA%8B%E9%83%BD%E6%95%8C%E4%B8%8D%E8%BF%87%E6%97%B6%E9%97%B4.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%97%85%E7%A8%8B.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%90%91%E6%9D%A5%E7%BC%98%E6%B5%85.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%A9%E6%B6%AF%E6%B5%B7%E8%A7%92.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%8E%E5%90%9B%E5%88%9D%E7%9B%B8%E8%AF%86.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%AF%AD%E8%A8%80.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AC%B2%E6%A7%95%E8%BD%BB%E8%88%9F.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%AD%BB%E5%85%9A.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%87%B4%E9%9D%92%E6%98%A5.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%80%BB%E6%9C%89%E8%BF%99%E6%A0%B7%E9%82%A3%E6%A0%B7.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E8%BF%BD%E5%AF%BB.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%9C%89%E4%BD%A0%E5%9C%A8.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E6%8B%A5%E6%9C%89.jpg\",\"title\":\"\",\"desc\":\"\"},{\"url\":\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%8D%B4%E7%88%B1%E8%93%9D%E7%BD%97%E8%A3%99%E5%AD%90.jpg\",\"title\":\"\",\"desc\":\"\"}]"},{"title":"相册","date":"2016-11-11T04:32:00.000Z","layout":"photo","_content":"<!-- <link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n\n<div class=\"instagram\" style=\"text-align:center;\"></div>\n\n<script src=\"/fancybox/jquery.fancybox.js\"></script>\n<script src=\"/js/addphoto.js\"></script> -->\n","source":"photos/index.md","raw":"---\ntitle: 相册\ndate: 2016-11-11 12:32:00\nlayout: photo\n---\n<!-- <link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n\n<div class=\"instagram\" style=\"text-align:center;\"></div>\n\n<script src=\"/fancybox/jquery.fancybox.js\"></script>\n<script src=\"/js/addphoto.js\"></script> -->\n","updated":"2016-11-17T00:39:27.665Z","path":"photos/index.html","_id":"cjpuwa1nh009ls0jtk08yx0up","comments":1,"content":"<!-- <link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n\n<div class=\"instagram\" style=\"text-align:center;\"></div>\n\n<script src=\"/fancybox/jquery.fancybox.js\"></script>\n<script src=\"/js/addphoto.js\"></script> -->\n","site":{"data":{}},"excerpt":"","more":"<!-- <link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n\n<div class=\"instagram\" style=\"text-align:center;\"></div>\n\n<script src=\"/fancybox/jquery.fancybox.js\"></script>\n<script src=\"/js/addphoto.js\"></script> -->\n"},{"title":"关于我","date":"2016-11-11T04:30:48.000Z","layout":"blank","_content":"<p style=\"text-align: center\">\n    <a href=\"https://coding.net/u/yangpiena\"><img src=\"/assets/blogImg/coding-logo.png\" style=\"width: 200px; height: 100px\"/></a>   <a href=\"https://github.com/yangpiena\"><img src=\"/assets/blogImg/github-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>     <a href=\"http://weibo.com/yangpiena\"><img src=\"/assets/blogImg/xlweibo-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>      <a href=\"mailto:yangpiena@gmail.com\"><img src=\"/assets/blogImg/email-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>\n</p>","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-11-11 12:30:48\nlayout: blank\n---\n<p style=\"text-align: center\">\n    <a href=\"https://coding.net/u/yangpiena\"><img src=\"/assets/blogImg/coding-logo.png\" style=\"width: 200px; height: 100px\"/></a>   <a href=\"https://github.com/yangpiena\"><img src=\"/assets/blogImg/github-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>     <a href=\"http://weibo.com/yangpiena\"><img src=\"/assets/blogImg/xlweibo-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>      <a href=\"mailto:yangpiena@gmail.com\"><img src=\"/assets/blogImg/email-logo.jpg\" style=\"width: 200px; height: 100px\"/></a>\n</p>","updated":"2017-06-21T05:32:09.374Z","path":"about/index.html","_id":"cjpuwa1ni009ms0jtr6pufdeq","comments":1,"content":"<p style=\"text-align: center\"><br>    <a href=\"https://coding.net/u/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/coding-logo.png\" style=\"width: 200px; height: 100px\"></a>   <a href=\"https://github.com/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/github-logo.jpg\" style=\"width: 200px; height: 100px\"></a>     <a href=\"http://weibo.com/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/xlweibo-logo.jpg\" style=\"width: 200px; height: 100px\"></a>      <a href=\"mailto:yangpiena@gmail.com\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/email-logo.jpg\" style=\"width: 200px; height: 100px\"></a><br></p>","site":{"data":{}},"excerpt":"","more":"<p style=\"text-align: center\"><br>    <a href=\"https://coding.net/u/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/coding-logo.png\" style=\"width: 200px; height: 100px\"></a>   <a href=\"https://github.com/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/github-logo.jpg\" style=\"width: 200px; height: 100px\"></a>     <a href=\"http://weibo.com/yangpiena\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/xlweibo-logo.jpg\" style=\"width: 200px; height: 100px\"></a>      <a href=\"mailto:yangpiena@gmail.com\" target=\"_blank\" rel=\"noopener\"><img src=\"/assets/blogImg/email-logo.jpg\" style=\"width: 200px; height: 100px\"></a><br></p>"},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/tag-bg.jpg","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/tag-bg.jpg\"\n---\n","date":"2018-09-11T02:54:29.223Z","updated":"2016-08-18T18:07:08.000Z","path":"tags/index.html","_id":"cjpuwa1nj009ns0jtf6px6r7o","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"【Blog】hexo博客搭建记录","layout":"post","date":"2016-11-08T16:00:00.000Z","comments":1,"keywords":"hexo,Blog","description":"生命在于折腾","_content":"今天终于有了自己的博客，下面记录一下搭建步骤。\n搭建步骤主要参考WX_JIN的博文[Windows下使用Hexo+GithubPage搭建博客](http://blog.csdn.net/wx_jin/article/details/51027783)搭建的，感谢WX_JIN的分享。\n<!--more-->\n博客主题来源于[Aero Dual Hexo Theme](https://github.com/levblanc/hexo-theme-aero-dual)\n##### 另附其它主题链接：\n博客主题大全：https://github.com/hexojs/hexo/wiki/Themes\nHexo官方主题：https://hexo.io/themes/\n##### 使用工具\n- Node.js  v6.9.1\n- Git      v2.10.1\n- hexo     v3.2.2","source":"_posts/【Blog】hexo博客搭建记录.md","raw":"---\ntitle: 【Blog】hexo博客搭建记录\nlayout: post\ndate: 2016-11-09\ncomments: true\ncategories: Blog\ntags: [Blog, hexo]\nkeywords: hexo,Blog\ndescription: 生命在于折腾\n---\n今天终于有了自己的博客，下面记录一下搭建步骤。\n搭建步骤主要参考WX_JIN的博文[Windows下使用Hexo+GithubPage搭建博客](http://blog.csdn.net/wx_jin/article/details/51027783)搭建的，感谢WX_JIN的分享。\n<!--more-->\n博客主题来源于[Aero Dual Hexo Theme](https://github.com/levblanc/hexo-theme-aero-dual)\n##### 另附其它主题链接：\n博客主题大全：https://github.com/hexojs/hexo/wiki/Themes\nHexo官方主题：https://hexo.io/themes/\n##### 使用工具\n- Node.js  v6.9.1\n- Git      v2.10.1\n- hexo     v3.2.2","slug":"【Blog】hexo博客搭建记录","published":1,"updated":"2017-06-09T08:34:35.581Z","_id":"cjpuwa1ex0000s0jtvjl2zbs7","photos":[],"link":"","content":"<p>今天终于有了自己的博客，下面记录一下搭建步骤。<br>搭建步骤主要参考WX_JIN的博文<a href=\"http://blog.csdn.net/wx_jin/article/details/51027783\" target=\"_blank\" rel=\"noopener\">Windows下使用Hexo+GithubPage搭建博客</a>搭建的，感谢WX_JIN的分享。<br><a id=\"more\"></a><br>博客主题来源于<a href=\"https://github.com/levblanc/hexo-theme-aero-dual\" target=\"_blank\" rel=\"noopener\">Aero Dual Hexo Theme</a></p>\n<h5 id=\"另附其它主题链接：\"><a href=\"#另附其它主题链接：\" class=\"headerlink\" title=\"另附其它主题链接：\"></a>另附其它主题链接：</h5><p>博客主题大全：<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/wiki/Themes</a><br>Hexo官方主题：<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></p>\n<h5 id=\"使用工具\"><a href=\"#使用工具\" class=\"headerlink\" title=\"使用工具\"></a>使用工具</h5><ul>\n<li>Node.js  v6.9.1</li>\n<li>Git      v2.10.1</li>\n<li>hexo     v3.2.2</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>今天终于有了自己的博客，下面记录一下搭建步骤。<br>搭建步骤主要参考WX_JIN的博文<a href=\"http://blog.csdn.net/wx_jin/article/details/51027783\" target=\"_blank\" rel=\"noopener\">Windows下使用Hexo+GithubPage搭建博客</a>搭建的，感谢WX_JIN的分享。<br>","more":"<br>博客主题来源于<a href=\"https://github.com/levblanc/hexo-theme-aero-dual\" target=\"_blank\" rel=\"noopener\">Aero Dual Hexo Theme</a></p>\n<h5 id=\"另附其它主题链接：\"><a href=\"#另附其它主题链接：\" class=\"headerlink\" title=\"另附其它主题链接：\"></a>另附其它主题链接：</h5><p>博客主题大全：<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/wiki/Themes</a><br>Hexo官方主题：<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></p>\n<h5 id=\"使用工具\"><a href=\"#使用工具\" class=\"headerlink\" title=\"使用工具\"></a>使用工具</h5><ul>\n<li>Node.js  v6.9.1</li>\n<li>Git      v2.10.1</li>\n<li>hexo     v3.2.2</li>\n</ul>"},{"title":"【Blog】Hello World","layout":"post","date":"2016-11-08T16:00:00.000Z","comments":1,"keywords":"hexo,Blog","description":"生命在于折腾","toc":true,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n<!--more-->","source":"_posts/【Blog】hello-world.md","raw":"---\ntitle: 【Blog】Hello World\nlayout: post\ndate: 2016-11-09\ncomments: true\ncategories: Blog\ntags: [Blog, hexo]\nkeywords: hexo,Blog\ndescription: 生命在于折腾\ntoc: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n<!--more-->","slug":"【Blog】hello-world","published":1,"updated":"2018-02-01T07:59:59.239Z","_id":"cjpuwa1f60002s0jts94v6wig","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a><br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a><br>","more":"</p>"},{"title":"【C++】在VS2017中使用C++创建和使用DLL","layout":"post","comments":1,"date":"2018-07-03T05:28:27.000Z","keywords":"DLL","description":null,"_content":"\n#### 创建DLL\n1、打开Visual Studio 2017，创建如下图的工程：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png)\n\n2、右键项目》添加》新建项》头文件(.h)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png)\n在头文件中输入以下代码：\n``` C++\nextern \"C\"\n{\n\t__declspec(dllexport) int __stdcall add(int a, int b);\n}\n```\n\n3、右键项目》添加》新建项》C++文件(.cpp)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png)\n在C++文件中输入以下代码：\n``` C++\n#include \"DWGNoEnDe.h\"\nextern \"C\"\n{\n\tint __stdcall add(int a, int b)\n\t{\n\t\tint c;\n\t\tc = a + b;\n\t\treturn c;\n\t}\n}\n```\n\n4、右键项目》添加》新建项》模块定义文件(.def)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png)\n在模块定义文件中输入以下代码：\n``` C++\nLIBRARY\nEXPORTS\nadd\n```\n> add为方法名\n\n5、右键项目》属性》配置属性》C/C++》代码生成，设置运行库为：多线程 DLL（/MD）\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png)\n\n6、编译项目，生成Release版的DLL\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png)\n可编译为x86或x64。\n\n\n#### 使用DLL\n##### 一、C++调用\n1、新建项目\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png)\n\n2、拷贝编译生成的dll和头文件，到测试项目下面\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png)\n\n3、右键项目》添加》新建项》C++文件(.cpp)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png)\n在C++文件中输入以下代码：\n``` C++\n#include <stdio.h>\n#include \"DWGNoEnDe.h\"\nvoid main()\n{\n\tint a = 10;\n\tint b = 23;\n\tint c = add(a, b);\n\tprintf(\"输出：%d\\n\",c);\n\tgetchar();\n}\n```\n\n4、点击“本地Windows调试器”运行项目，调用成功\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png)\n\n\n##### 二、VB调用\n1、拷贝C++DLL到exe程序同一目录下\n\n2、在exe程序中引用C++DLL\n```\nPublic Declare Function add Lib \"DWGNoEnDe.dll\" (ByVal a As Long, ByVal b As Long) As Long\n```\n\n3、调用C++DLL的方法\n```\nPrivate Sub Command1_Click()\n    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))\nEnd Sub\n```\n\n##### 三、C#调用\n1、新建控制台应用项目\n\n2、拷贝C++DLL到`项目名称\\bin\\Debug`下，与exe处于同一目录\n\n3、在`Program.cs`中输入如下代码：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs)\n\n4、点击启动运行项目，调用成功","source":"_posts/【C++】在VS2017中使用C++创建和使用DLL.md","raw":"---\ntitle: 【C++】在VS2017中使用C++创建和使用DLL\nlayout: post\ncomments: true\ndate: 2018-07-03 13:28:27\ncategories: C++\ntags: [C++]\nkeywords: DLL\ndescription:\n---\n\n#### 创建DLL\n1、打开Visual Studio 2017，创建如下图的工程：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png)\n\n2、右键项目》添加》新建项》头文件(.h)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png)\n在头文件中输入以下代码：\n``` C++\nextern \"C\"\n{\n\t__declspec(dllexport) int __stdcall add(int a, int b);\n}\n```\n\n3、右键项目》添加》新建项》C++文件(.cpp)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png)\n在C++文件中输入以下代码：\n``` C++\n#include \"DWGNoEnDe.h\"\nextern \"C\"\n{\n\tint __stdcall add(int a, int b)\n\t{\n\t\tint c;\n\t\tc = a + b;\n\t\treturn c;\n\t}\n}\n```\n\n4、右键项目》添加》新建项》模块定义文件(.def)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png)\n在模块定义文件中输入以下代码：\n``` C++\nLIBRARY\nEXPORTS\nadd\n```\n> add为方法名\n\n5、右键项目》属性》配置属性》C/C++》代码生成，设置运行库为：多线程 DLL（/MD）\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png)\n\n6、编译项目，生成Release版的DLL\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png)\n可编译为x86或x64。\n\n\n#### 使用DLL\n##### 一、C++调用\n1、新建项目\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png)\n\n2、拷贝编译生成的dll和头文件，到测试项目下面\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png)\n\n3、右键项目》添加》新建项》C++文件(.cpp)\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png)\n在C++文件中输入以下代码：\n``` C++\n#include <stdio.h>\n#include \"DWGNoEnDe.h\"\nvoid main()\n{\n\tint a = 10;\n\tint b = 23;\n\tint c = add(a, b);\n\tprintf(\"输出：%d\\n\",c);\n\tgetchar();\n}\n```\n\n4、点击“本地Windows调试器”运行项目，调用成功\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png)\n\n\n##### 二、VB调用\n1、拷贝C++DLL到exe程序同一目录下\n\n2、在exe程序中引用C++DLL\n```\nPublic Declare Function add Lib \"DWGNoEnDe.dll\" (ByVal a As Long, ByVal b As Long) As Long\n```\n\n3、调用C++DLL的方法\n```\nPrivate Sub Command1_Click()\n    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))\nEnd Sub\n```\n\n##### 三、C#调用\n1、新建控制台应用项目\n\n2、拷贝C++DLL到`项目名称\\bin\\Debug`下，与exe处于同一目录\n\n3、在`Program.cs`中输入如下代码：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs)\n\n4、点击启动运行项目，调用成功","slug":"【C++】在VS2017中使用C++创建和使用DLL","published":1,"updated":"2018-11-25T06:13:04.534Z","_id":"cjpuwa1fe0005s0jtsv4l4t28","photos":[],"link":"","content":"<h4 id=\"创建DLL\"><a href=\"#创建DLL\" class=\"headerlink\" title=\"创建DLL\"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png\" alt=\"\"><br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png\" alt=\"\"></p>\n<p>2、右键项目》添加》新建项》头文件(.h)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png\" alt=\"\"><br>在头文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t__declspec(dllexport) <span class=\"keyword\">int</span> __<span class=\"function\">stdcall <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png\" alt=\"\"><br>在C++文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"DWGNoEnDe.h\"</span></span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> __<span class=\"function\">stdcall <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\t\tc = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4、右键项目》添加》新建项》模块定义文件(.def)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png\" alt=\"\"><br>在模块定义文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LIBRARY</span><br><span class=\"line\">EXPORTS</span><br><span class=\"line\">add</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>add为方法名</p>\n</blockquote>\n<p>5、右键项目》属性》配置属性》C/C++》代码生成，设置运行库为：多线程 DLL（/MD）<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png\" alt=\"\"></p>\n<p>6、编译项目，生成Release版的DLL<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png\" alt=\"\"><br>可编译为x86或x64。</p>\n<h4 id=\"使用DLL\"><a href=\"#使用DLL\" class=\"headerlink\" title=\"使用DLL\"></a>使用DLL</h4><h5 id=\"一、C-调用\"><a href=\"#一、C-调用\" class=\"headerlink\" title=\"一、C++调用\"></a>一、C++调用</h5><p>1、新建项目<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png\" alt=\"\"></p>\n<p>2、拷贝编译生成的dll和头文件，到测试项目下面<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png\" alt=\"\"></p>\n<p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png\" alt=\"\"><br>在C++文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"DWGNoEnDe.h\"</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">23</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> c = add(a, b);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输出：%d\\n\"</span>,c);</span><br><span class=\"line\">\tgetchar();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4、点击“本地Windows调试器”运行项目，调用成功<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png\" alt=\"\"></p>\n<h5 id=\"二、VB调用\"><a href=\"#二、VB调用\" class=\"headerlink\" title=\"二、VB调用\"></a>二、VB调用</h5><p>1、拷贝C++DLL到exe程序同一目录下</p>\n<p>2、在exe程序中引用C++DLL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Declare Function add Lib &quot;DWGNoEnDe.dll&quot; (ByVal a As Long, ByVal b As Long) As Long</span><br></pre></td></tr></table></figure></p>\n<p>3、调用C++DLL的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Private Sub Command1_Click()</span><br><span class=\"line\">    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"三、C-调用\"><a href=\"#三、C-调用\" class=\"headerlink\" title=\"三、C#调用\"></a>三、C#调用</h5><p>1、新建控制台应用项目</p>\n<p>2、拷贝C++DLL到<code>项目名称\\bin\\Debug</code>下，与exe处于同一目录</p>\n<p>3、在<code>Program.cs</code>中输入如下代码：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs\" alt=\"\"></p>\n<p>4、点击启动运行项目，调用成功</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建DLL\"><a href=\"#创建DLL\" class=\"headerlink\" title=\"创建DLL\"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject.png\" alt=\"\"><br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject2.png\" alt=\"\"></p>\n<p>2、右键项目》添加》新建项》头文件(.h)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newh.png\" alt=\"\"><br>在头文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t__declspec(dllexport) <span class=\"keyword\">int</span> __<span class=\"function\">stdcall <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp.png\" alt=\"\"><br>在C++文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"DWGNoEnDe.h\"</span></span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> __<span class=\"function\">stdcall <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\t\tc = a + b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4、右键项目》添加》新建项》模块定义文件(.def)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newdef.png\" alt=\"\"><br>在模块定义文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LIBRARY</span><br><span class=\"line\">EXPORTS</span><br><span class=\"line\">add</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>add为方法名</p>\n</blockquote>\n<p>5、右键项目》属性》配置属性》C/C++》代码生成，设置运行库为：多线程 DLL（/MD）<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%A4%9A%E7%BA%BF%E7%A8%8BDLL.png\" alt=\"\"></p>\n<p>6、编译项目，生成Release版的DLL<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/buildDLL.png\" alt=\"\"><br>可编译为x86或x64。</p>\n<h4 id=\"使用DLL\"><a href=\"#使用DLL\" class=\"headerlink\" title=\"使用DLL\"></a>使用DLL</h4><h5 id=\"一、C-调用\"><a href=\"#一、C-调用\" class=\"headerlink\" title=\"一、C++调用\"></a>一、C++调用</h5><p>1、新建项目<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newWin32.png\" alt=\"\"></p>\n<p>2、拷贝编译生成的dll和头文件，到测试项目下面<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/copyDLLAndH.png\" alt=\"\"></p>\n<p>3、右键项目》添加》新建项》C++文件(.cpp)<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newcpp2.png\" alt=\"\"><br>在C++文件中输入以下代码：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"DWGNoEnDe.h\"</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">23</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> c = add(a, b);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输出：%d\\n\"</span>,c);</span><br><span class=\"line\">\tgetchar();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4、点击“本地Windows调试器”运行项目，调用成功<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/excuteEXE.png\" alt=\"\"></p>\n<h5 id=\"二、VB调用\"><a href=\"#二、VB调用\" class=\"headerlink\" title=\"二、VB调用\"></a>二、VB调用</h5><p>1、拷贝C++DLL到exe程序同一目录下</p>\n<p>2、在exe程序中引用C++DLL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Declare Function add Lib &quot;DWGNoEnDe.dll&quot; (ByVal a As Long, ByVal b As Long) As Long</span><br></pre></td></tr></table></figure></p>\n<p>3、调用C++DLL的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Private Sub Command1_Click()</span><br><span class=\"line\">    Text3.Text = add(CInt(Text1.Text), CInt(Text2.Text))</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"三、C-调用\"><a href=\"#三、C-调用\" class=\"headerlink\" title=\"三、C#调用\"></a>三、C#调用</h5><p>1、新建控制台应用项目</p>\n<p>2、拷贝C++DLL到<code>项目名称\\bin\\Debug</code>下，与exe处于同一目录</p>\n<p>3、在<code>Program.cs</code>中输入如下代码：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Programe.cs\" alt=\"\"></p>\n<p>4、点击启动运行项目，调用成功</p>\n"},{"title":"【Blog】更换电脑后如何修改hexo博客","layout":"post","date":"2016-11-08T16:00:00.000Z","comments":1,"keywords":"hexo,Blog","description":"生命在于折腾","_content":"# 当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\n1. 使用git clone git@github.com:yangpiena/yangpiena.github.io.git拷贝仓库（默认分支为source）；\n2. 在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列指令：\n\n\t\tnpm install hexo\n\t\tnpm install \n\t\tnpm install hexo-deployer-git --save\n（切记不要执行hexo init这条指令，否则会删除.git文件夹）\n\t\n> 遇到错误时：\n1. 更新npm的源：npm config set registry https://registry.npm.taobao.org\n2. cmd进入博客当前文件夹路径\n3. 执行 npm install\n4. 执行 hexo server\n5. 执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。\n\n<!--more-->","source":"_posts/【Blog】更换电脑后如何修改hexo博客.md","raw":"---\ntitle: 【Blog】更换电脑后如何修改hexo博客\nlayout: post\ndate: 2016-11-09\ncomments: true\ncategories: Blog\ntags: [Blog, hexo]\nkeywords: hexo,Blog\ndescription: 生命在于折腾\n---\n# 当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\n1. 使用git clone git@github.com:yangpiena/yangpiena.github.io.git拷贝仓库（默认分支为source）；\n2. 在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列指令：\n\n\t\tnpm install hexo\n\t\tnpm install \n\t\tnpm install hexo-deployer-git --save\n（切记不要执行hexo init这条指令，否则会删除.git文件夹）\n\t\n> 遇到错误时：\n1. 更新npm的源：npm config set registry https://registry.npm.taobao.org\n2. cmd进入博客当前文件夹路径\n3. 执行 npm install\n4. 执行 hexo server\n5. 执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。\n\n<!--more-->","slug":"【Blog】更换电脑后如何修改hexo博客","published":1,"updated":"2018-12-18T09:23:31.563Z","_id":"cjpuwa1fk0006s0jtcs0jqgut","photos":[],"link":"","content":"<h1 id=\"当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\"><a href=\"#当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\" class=\"headerlink\" title=\"当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\"></a>当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：</h1><ol>\n<li>使用git clone git@github.com:yangpiena/yangpiena.github.io.git拷贝仓库（默认分支为source）；</li>\n<li><p>在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列指令：</p>\n<pre><code>npm install hexo\nnpm install \nnpm install hexo-deployer-git --save\n</code></pre><p>（切记不要执行hexo init这条指令，否则会删除.git文件夹）</p>\n</li>\n</ol>\n<blockquote>\n<p>遇到错误时：</p>\n<ol>\n<li>更新npm的源：npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></li>\n<li>cmd进入博客当前文件夹路径</li>\n<li>执行 npm install</li>\n<li>执行 hexo server</li>\n<li>执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。</li>\n</ol>\n</blockquote>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<h1 id=\"当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\"><a href=\"#当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\" class=\"headerlink\" title=\"当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：\"></a>当重装电脑，或者想在其它电脑上修改博客，可以使用下列步骤：</h1><ol>\n<li>使用git clone git@github.com:yangpiena/yangpiena.github.io.git拷贝仓库（默认分支为source）；</li>\n<li><p>在本地新拷贝的yangpiena.github.io文件夹下通过Git bash依次执行下列指令：</p>\n<pre><code>npm install hexo\nnpm install \nnpm install hexo-deployer-git --save\n</code></pre><p>（切记不要执行hexo init这条指令，否则会删除.git文件夹）</p>\n</li>\n</ol>\n<blockquote>\n<p>遇到错误时：</p>\n<ol>\n<li>更新npm的源：npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></li>\n<li>cmd进入博客当前文件夹路径</li>\n<li>执行 npm install</li>\n<li>执行 hexo server</li>\n<li>执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。</li>\n</ol>\n</blockquote>","more":""},{"title":"【C#】在VS2017中使用C#创建和使用DLL","layout":"post","comments":1,"date":"2018-07-03T07:05:32.000Z","keywords":"DLL","description":null,"_content":"\n\n#### 创建DLL\n1、打开Visual Studio 2017，创建如下图的工程：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png)\n\n2、在类中定义接口类和接口实现类\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png)\n输入以下代码：\n```C#\n[Guid(\"710CA75B-1193-4BBF-ADA6-C92763616B85\")]\npublic interface IDWGNoEnde\n{\n    string Encode(string i_DWGNo);\n    string Decode(string i_DWGNo);\n}\n[Guid(\"F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5\")]\npublic class DWGNoEnDe : IDWGNoEnde\n{\n    public string Encode(string i_DWGNo)\n    {\n        string o_EncodeDWGNo;\n        o_EncodeDWGNo = i_DWGNo + \"_YPN\";\n        return o_EncodeDWGNo;\n    }\n    public string Decode(string i_DWGNo)\n    {\n        string o_DecodeDWGNo;\n        o_DecodeDWGNo = i_DWGNo.Substring(0, i_DWGNo.Length - 4);\n        return o_DecodeDWGNo;\n    }\n}\n```\n其中，GUID通过点击VS工具》创建GUID，复制得到\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png)\n\n3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png)\n\n4、右键项目》属性》生成，勾选为COM互操作注册\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png)\n\n5、打开VS2017的开发人员命令提示符，输入`sn -k c:\\myKey.snk`，生成密钥文件\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png)\n\n6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png)\n\n7、点击生成》重新生成解决方案，生成DLL\n\n\n#### 使用DLL\n##### VB调用\n1、生成tlb文件\n> 一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。\n\n在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录`C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319>`，执行以下命令生成tlb文件：\n\n\tregasm F:\\TestC#DLL\\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png)\n\n2、打开VB工程，引用tlb文件\n点击浏览，选择刚刚生成的tlb文件，确定即可。\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png)\n\n3、在代码中定义和使用DLL\n```VB\nDim v_dwgnoEnde As New DWGNoEnDe.DWGNoEnDe\nPrivate Sub Command1_Click()\n    Text2.Text = v_dwgnoEnde.Encode(Text1.Text)\nEnd Sub\n```","source":"_posts/【CSharp】在VS2017中使用CSharp创建和使用DLL.md","raw":"---\ntitle: '【C#】在VS2017中使用C#创建和使用DLL'\nlayout: post\ncomments: true\ndate: 2018-07-03 15:05:32\ncategories: C#\ntags: [C#]\nkeywords: DLL\ndescription:\n---\n\n\n#### 创建DLL\n1、打开Visual Studio 2017，创建如下图的工程：\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png)\n\n2、在类中定义接口类和接口实现类\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png)\n输入以下代码：\n```C#\n[Guid(\"710CA75B-1193-4BBF-ADA6-C92763616B85\")]\npublic interface IDWGNoEnde\n{\n    string Encode(string i_DWGNo);\n    string Decode(string i_DWGNo);\n}\n[Guid(\"F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5\")]\npublic class DWGNoEnDe : IDWGNoEnde\n{\n    public string Encode(string i_DWGNo)\n    {\n        string o_EncodeDWGNo;\n        o_EncodeDWGNo = i_DWGNo + \"_YPN\";\n        return o_EncodeDWGNo;\n    }\n    public string Decode(string i_DWGNo)\n    {\n        string o_DecodeDWGNo;\n        o_DecodeDWGNo = i_DWGNo.Substring(0, i_DWGNo.Length - 4);\n        return o_DecodeDWGNo;\n    }\n}\n```\n其中，GUID通过点击VS工具》创建GUID，复制得到\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png)\n\n3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png)\n\n4、右键项目》属性》生成，勾选为COM互操作注册\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png)\n\n5、打开VS2017的开发人员命令提示符，输入`sn -k c:\\myKey.snk`，生成密钥文件\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png)\n\n6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png)\n\n7、点击生成》重新生成解决方案，生成DLL\n\n\n#### 使用DLL\n##### VB调用\n1、生成tlb文件\n> 一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。\n\n在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录`C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319>`，执行以下命令生成tlb文件：\n\n\tregasm F:\\TestC#DLL\\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png)\n\n2、打开VB工程，引用tlb文件\n点击浏览，选择刚刚生成的tlb文件，确定即可。\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png)\n\n3、在代码中定义和使用DLL\n```VB\nDim v_dwgnoEnde As New DWGNoEnDe.DWGNoEnDe\nPrivate Sub Command1_Click()\n    Text2.Text = v_dwgnoEnde.Encode(Text1.Text)\nEnd Sub\n```","slug":"【CSharp】在VS2017中使用CSharp创建和使用DLL","published":1,"updated":"2018-11-25T06:13:12.691Z","_id":"cjpuwa1fo0007s0jtugslxcql","photos":[],"link":"","content":"<h4 id=\"创建DLL\"><a href=\"#创建DLL\" class=\"headerlink\" title=\"创建DLL\"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png\" alt=\"\"></p>\n<p>2、在类中定义接口类和接口实现类<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png\" alt=\"\"><br>输入以下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Guid(&quot;710CA75B-1193-4BBF-ADA6-C92763616B85&quot;)]</span><br><span class=\"line\">public interface IDWGNoEnde</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    string Encode(string i_DWGNo);</span><br><span class=\"line\">    string Decode(string i_DWGNo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[Guid(&quot;F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5&quot;)]</span><br><span class=\"line\">public class DWGNoEnDe : IDWGNoEnde</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public string Encode(string i_DWGNo)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string o_EncodeDWGNo;</span><br><span class=\"line\">        o_EncodeDWGNo = i_DWGNo + &quot;_YPN&quot;;</span><br><span class=\"line\">        return o_EncodeDWGNo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public string Decode(string i_DWGNo)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string o_DecodeDWGNo;</span><br><span class=\"line\">        o_DecodeDWGNo = i_DWGNo.Substring(0, i_DWGNo.Length - 4);</span><br><span class=\"line\">        return o_DecodeDWGNo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中，GUID通过点击VS工具》创建GUID，复制得到<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png\" alt=\"\"></p>\n<p>3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png\" alt=\"\"></p>\n<p>4、右键项目》属性》生成，勾选为COM互操作注册<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png\" alt=\"\"></p>\n<p>5、打开VS2017的开发人员命令提示符，输入<code>sn -k c:\\myKey.snk</code>，生成密钥文件<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png\" alt=\"\"></p>\n<p>6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png\" alt=\"\"></p>\n<p>7、点击生成》重新生成解决方案，生成DLL</p>\n<h4 id=\"使用DLL\"><a href=\"#使用DLL\" class=\"headerlink\" title=\"使用DLL\"></a>使用DLL</h4><h5 id=\"VB调用\"><a href=\"#VB调用\" class=\"headerlink\" title=\"VB调用\"></a>VB调用</h5><p>1、生成tlb文件</p>\n<blockquote>\n<p>一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。</p>\n</blockquote>\n<p>在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录<code>C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319&gt;</code>，执行以下命令生成tlb文件：</p>\n<pre><code>regasm F:\\TestC#DLL\\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase\n</code></pre><p><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png\" alt=\"\"></p>\n<p>2、打开VB工程，引用tlb文件<br>点击浏览，选择刚刚生成的tlb文件，确定即可。<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png\" alt=\"\"></p>\n<p>3、在代码中定义和使用DLL<br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> v_dwgnoEnde <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> DWGNoEnDe.DWGNoEnDe</span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Command1_Click()</span><br><span class=\"line\">    Text2.<span class=\"keyword\">Text</span> = v_dwgnoEnde.Encode(Text1.<span class=\"keyword\">Text</span>)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建DLL\"><a href=\"#创建DLL\" class=\"headerlink\" title=\"创建DLL\"></a>创建DLL</h4><p>1、打开Visual Studio 2017，创建如下图的工程：<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newProject3.png\" alt=\"\"></p>\n<p>2、在类中定义接口类和接口实现类<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/newCSharp.png\" alt=\"\"><br>输入以下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Guid(&quot;710CA75B-1193-4BBF-ADA6-C92763616B85&quot;)]</span><br><span class=\"line\">public interface IDWGNoEnde</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    string Encode(string i_DWGNo);</span><br><span class=\"line\">    string Decode(string i_DWGNo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[Guid(&quot;F212F390-FB5C-4AF6-94CD-ED72B5ADEEC5&quot;)]</span><br><span class=\"line\">public class DWGNoEnDe : IDWGNoEnde</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public string Encode(string i_DWGNo)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string o_EncodeDWGNo;</span><br><span class=\"line\">        o_EncodeDWGNo = i_DWGNo + &quot;_YPN&quot;;</span><br><span class=\"line\">        return o_EncodeDWGNo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public string Decode(string i_DWGNo)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string o_DecodeDWGNo;</span><br><span class=\"line\">        o_DecodeDWGNo = i_DWGNo.Substring(0, i_DWGNo.Length - 4);</span><br><span class=\"line\">        return o_DecodeDWGNo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中，GUID通过点击VS工具》创建GUID，复制得到<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/createGUID.png\" alt=\"\"></p>\n<p>3、右键项目》属性》应用程序》程序集信息，勾选使程序集COM可见<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%A8%8B%E5%BA%8F%E9%9B%86%E4%BF%A1%E6%81%AF.png\" alt=\"\"></p>\n<p>4、右键项目》属性》生成，勾选为COM互操作注册<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/CSharpDLL%E7%94%9F%E6%88%90.png\" alt=\"\"></p>\n<p>5、打开VS2017的开发人员命令提示符，输入<code>sn -k c:\\myKey.snk</code>，生成密钥文件<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/vs2017CMD.png\" alt=\"\"></p>\n<p>6、右键项目》属性》签名》选择强名称密钥文件，点击浏览，选择刚刚生成的snk文件<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E7%AD%BE%E5%90%8D.png\" alt=\"\"></p>\n<p>7、点击生成》重新生成解决方案，生成DLL</p>\n<h4 id=\"使用DLL\"><a href=\"#使用DLL\" class=\"headerlink\" title=\"使用DLL\"></a>使用DLL</h4><h5 id=\"VB调用\"><a href=\"#VB调用\" class=\"headerlink\" title=\"VB调用\"></a>VB调用</h5><p>1、生成tlb文件</p>\n<blockquote>\n<p>一般VS生成dll的同时，会自动生成tlb文件。如果VB和VS在同一台机器，则直接用该tlb即可，如果不是同一台机器，则需要将dll拷贝到VS所在机器上重新生成tlb文件。</p>\n</blockquote>\n<p>在vb所在机器上，以管理员身份打开cmd，进入.netFramework所在目录<code>C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319&gt;</code>，执行以下命令生成tlb文件：</p>\n<pre><code>regasm F:\\TestC#DLL\\DWGNoEnDe.dll /tlb:DWGNoEnde.tlb /codebase\n</code></pre><p><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/cmdtlb.png\" alt=\"\"></p>\n<p>2、打开VB工程，引用tlb文件<br>点击浏览，选择刚刚生成的tlb文件，确定即可。<br><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/%E5%BC%95%E7%94%A8tlb.png\" alt=\"\"></p>\n<p>3、在代码中定义和使用DLL<br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> v_dwgnoEnde <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> DWGNoEnDe.DWGNoEnDe</span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Command1_Click()</span><br><span class=\"line\">    Text2.<span class=\"keyword\">Text</span> = v_dwgnoEnde.Encode(Text1.<span class=\"keyword\">Text</span>)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"【CSS】常见中文字体的英文名","layout":"post","comments":1,"date":"2016-11-28T09:15:38.000Z","keywords":null,"description":null,"_content":"\n考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：\n### Mac OS\n华文细黑：STHeiti Light [STXihei]\n华文黑体：STHeiti\n华文楷体：STKaiti\n华文宋体：STSong\n华文仿宋：STFangsong\n儷黑 Pro：LiHei Pro Medium\n儷宋 Pro：LiSong Pro Light\n標楷體：BiauKai\n蘋果儷中黑：Apple LiGothic Medium\n蘋果儷細宋：Apple LiSung Light\n<!-- more -->\n### Windows\n新細明體：PMingLiU\n細明體：MingLiU\n標楷體：DFKai-SB\n黑体：SimHei\n宋体：SimSun\n新宋体：NSimSun\n仿宋：FangSong\n楷体：KaiTi\n仿宋_GB2312：FangSong_GB2312\n楷体_GB2312：KaiTi_GB2312\n微軟正黑體：Microsoft JhengHei\n微软雅黑体：Microsoft YaHei\n### Office\n隶书：LiSu\n幼圆：YouYuan\n华文细黑：STXihei\n华文楷体：STKaiti\n华文宋体：STSong\n华文中宋：STZhongsong\n华文仿宋：STFangsong\n方正舒体：FZShuTi\n方正姚体：FZYaoti\n华文彩云：STCaiyun\n华文琥珀：STHupo\n华文隶书：STLiti\n华文行楷：STXingkai\n华文新魏：STXinwei\n\n#### 例：CSS中正确设置微软雅黑字体\n.selector{ font-family:\"Microsoft YaHei\",微软雅黑,\"MicrosoftJhengHei\",华文细黑,STHeiti,MingLiu }\n> 说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。\n注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！","source":"_posts/【CSS】常见中文字体的英文名.md","raw":"---\ntitle: 【CSS】常见中文字体的英文名\nlayout: post\ncomments: true\ndate: 2016-11-28 17:15:38\ncategories: CSS\ntags: [CSS, 字体]\nkeywords:\ndescription:\n---\n\n考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：\n### Mac OS\n华文细黑：STHeiti Light [STXihei]\n华文黑体：STHeiti\n华文楷体：STKaiti\n华文宋体：STSong\n华文仿宋：STFangsong\n儷黑 Pro：LiHei Pro Medium\n儷宋 Pro：LiSong Pro Light\n標楷體：BiauKai\n蘋果儷中黑：Apple LiGothic Medium\n蘋果儷細宋：Apple LiSung Light\n<!-- more -->\n### Windows\n新細明體：PMingLiU\n細明體：MingLiU\n標楷體：DFKai-SB\n黑体：SimHei\n宋体：SimSun\n新宋体：NSimSun\n仿宋：FangSong\n楷体：KaiTi\n仿宋_GB2312：FangSong_GB2312\n楷体_GB2312：KaiTi_GB2312\n微軟正黑體：Microsoft JhengHei\n微软雅黑体：Microsoft YaHei\n### Office\n隶书：LiSu\n幼圆：YouYuan\n华文细黑：STXihei\n华文楷体：STKaiti\n华文宋体：STSong\n华文中宋：STZhongsong\n华文仿宋：STFangsong\n方正舒体：FZShuTi\n方正姚体：FZYaoti\n华文彩云：STCaiyun\n华文琥珀：STHupo\n华文隶书：STLiti\n华文行楷：STXingkai\n华文新魏：STXinwei\n\n#### 例：CSS中正确设置微软雅黑字体\n.selector{ font-family:\"Microsoft YaHei\",微软雅黑,\"MicrosoftJhengHei\",华文细黑,STHeiti,MingLiu }\n> 说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。\n注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！","slug":"【CSS】常见中文字体的英文名","published":1,"updated":"2017-02-27T03:59:58.608Z","_id":"cjpuwa1ft000as0jt3wxl5j64","photos":[],"link":"","content":"<p>考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：</p>\n<h3 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\"Mac OS\"></a>Mac OS</h3><p>华文细黑：STHeiti Light [STXihei]<br>华文黑体：STHeiti<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文仿宋：STFangsong<br>儷黑 Pro：LiHei Pro Medium<br>儷宋 Pro：LiSong Pro Light<br>標楷體：BiauKai<br>蘋果儷中黑：Apple LiGothic Medium<br>蘋果儷細宋：Apple LiSung Light<br><a id=\"more\"></a></p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>新細明體：PMingLiU<br>細明體：MingLiU<br>標楷體：DFKai-SB<br>黑体：SimHei<br>宋体：SimSun<br>新宋体：NSimSun<br>仿宋：FangSong<br>楷体：KaiTi<br>仿宋_GB2312：FangSong_GB2312<br>楷体_GB2312：KaiTi_GB2312<br>微軟正黑體：Microsoft JhengHei<br>微软雅黑体：Microsoft YaHei</p>\n<h3 id=\"Office\"><a href=\"#Office\" class=\"headerlink\" title=\"Office\"></a>Office</h3><p>隶书：LiSu<br>幼圆：YouYuan<br>华文细黑：STXihei<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文中宋：STZhongsong<br>华文仿宋：STFangsong<br>方正舒体：FZShuTi<br>方正姚体：FZYaoti<br>华文彩云：STCaiyun<br>华文琥珀：STHupo<br>华文隶书：STLiti<br>华文行楷：STXingkai<br>华文新魏：STXinwei</p>\n<h4 id=\"例：CSS中正确设置微软雅黑字体\"><a href=\"#例：CSS中正确设置微软雅黑字体\" class=\"headerlink\" title=\"例：CSS中正确设置微软雅黑字体\"></a>例：CSS中正确设置微软雅黑字体</h4><p>.selector{ font-family:”Microsoft YaHei”,微软雅黑,”MicrosoftJhengHei”,华文细黑,STHeiti,MingLiu }</p>\n<blockquote>\n<p>说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。<br>注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>考虑到文件编码问题，在CSS中推荐使用中文字体的英文表示法，以下附常见中文字体的英文名：</p>\n<h3 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\"Mac OS\"></a>Mac OS</h3><p>华文细黑：STHeiti Light [STXihei]<br>华文黑体：STHeiti<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文仿宋：STFangsong<br>儷黑 Pro：LiHei Pro Medium<br>儷宋 Pro：LiSong Pro Light<br>標楷體：BiauKai<br>蘋果儷中黑：Apple LiGothic Medium<br>蘋果儷細宋：Apple LiSung Light<br>","more":"</p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>新細明體：PMingLiU<br>細明體：MingLiU<br>標楷體：DFKai-SB<br>黑体：SimHei<br>宋体：SimSun<br>新宋体：NSimSun<br>仿宋：FangSong<br>楷体：KaiTi<br>仿宋_GB2312：FangSong_GB2312<br>楷体_GB2312：KaiTi_GB2312<br>微軟正黑體：Microsoft JhengHei<br>微软雅黑体：Microsoft YaHei</p>\n<h3 id=\"Office\"><a href=\"#Office\" class=\"headerlink\" title=\"Office\"></a>Office</h3><p>隶书：LiSu<br>幼圆：YouYuan<br>华文细黑：STXihei<br>华文楷体：STKaiti<br>华文宋体：STSong<br>华文中宋：STZhongsong<br>华文仿宋：STFangsong<br>方正舒体：FZShuTi<br>方正姚体：FZYaoti<br>华文彩云：STCaiyun<br>华文琥珀：STHupo<br>华文隶书：STLiti<br>华文行楷：STXingkai<br>华文新魏：STXinwei</p>\n<h4 id=\"例：CSS中正确设置微软雅黑字体\"><a href=\"#例：CSS中正确设置微软雅黑字体\" class=\"headerlink\" title=\"例：CSS中正确设置微软雅黑字体\"></a>例：CSS中正确设置微软雅黑字体</h4><p>.selector{ font-family:”Microsoft YaHei”,微软雅黑,”MicrosoftJhengHei”,华文细黑,STHeiti,MingLiu }</p>\n<blockquote>\n<p>说明：加上中文名“微软雅黑”是为了兼容opera。MicrosoftJhengHei为微软正黑体，STHeiti为华文黑体，MingLiu在11px下的中文效果不凡。<br>注意：如果字体的名称是一个单词的，不需要加引号，否则在ie6，7里面会失效，并且后面的样式也会不生效！</p>\n</blockquote>"},{"title":"【FAQ】flash builder","layout":"post","comments":1,"date":"2016-12-27T07:54:04.000Z","keywords":null,"description":"整理自YPN","_content":"\n以下记录Flash Builder在使用过程中出现的问题和解决方法：\n<!-- more -->\n#### 1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题\n此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：\n- 删除文件夹services和valueObjects；\n- 删除xx.fml文件中的数据/服务内容。保留model标签和annotation标签内容，其它全删除。\n\t\t<model xmlns=\"http://ns.adobe.com/Fiber/1.0\">\n\t\t\t\t<annotation name=\"ActionScriptGeneration\">\n\t\t\t\t<item name=\"FullyQualifyReferences\">true</item>\n\t\t\t\t</annotation>\n\t\t\t...\n\t\t</model>","source":"_posts/【FAQ】flash builder.md","raw":"---\ntitle: 【FAQ】flash builder\nlayout: post\ncomments: true\ndate: 2016-12-27 15:54:04\ncategories: FAQ\ntags: [FAQ, flash builder]\nkeywords:\ndescription: 整理自YPN\n---\n\n以下记录Flash Builder在使用过程中出现的问题和解决方法：\n<!-- more -->\n#### 1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题\n此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：\n- 删除文件夹services和valueObjects；\n- 删除xx.fml文件中的数据/服务内容。保留model标签和annotation标签内容，其它全删除。\n\t\t<model xmlns=\"http://ns.adobe.com/Fiber/1.0\">\n\t\t\t\t<annotation name=\"ActionScriptGeneration\">\n\t\t\t\t<item name=\"FullyQualifyReferences\">true</item>\n\t\t\t\t</annotation>\n\t\t\t...\n\t\t</model>","slug":"【FAQ】flash builder","published":1,"updated":"2017-02-27T04:08:23.783Z","_id":"cjpuwa1fz000bs0jtgirn02gt","photos":[],"link":"","content":"<p>以下记录Flash Builder在使用过程中出现的问题和解决方法：<br><a id=\"more\"></a></p>\n<h4 id=\"1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题\"><a href=\"#1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题\" class=\"headerlink\" title=\"1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题\"></a>1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题</h4><p>此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：</p>\n<ul>\n<li>删除文件夹services和valueObjects；</li>\n<li>删除xx.fml文件中的数据/服务内容。保留model标签和annotation标签内容，其它全删除。<pre><code>&lt;model xmlns=&quot;http://ns.adobe.com/Fiber/1.0&quot;&gt;\n        &lt;annotation name=&quot;ActionScriptGeneration&quot;&gt;\n        &lt;item name=&quot;FullyQualifyReferences&quot;&gt;true&lt;/item&gt;\n        &lt;/annotation&gt;\n    ...\n&lt;/model&gt;\n</code></pre></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>以下记录Flash Builder在使用过程中出现的问题和解决方法：<br>","more":"</p>\n<h4 id=\"1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题\"><a href=\"#1-重新连接“数据-服务”时，出现错误，如“数据类型重复”等问题\" class=\"headerlink\" title=\"1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题\"></a>1. 重新连接“数据/服务”时，出现错误，如“数据类型重复”等问题</h4><p>此时，只需将数据服务彻底删除干净后再重新连接即可。删除方法：</p>\n<ul>\n<li>删除文件夹services和valueObjects；</li>\n<li>删除xx.fml文件中的数据/服务内容。保留model标签和annotation标签内容，其它全删除。<pre><code>&lt;model xmlns=&quot;http://ns.adobe.com/Fiber/1.0&quot;&gt;\n        &lt;annotation name=&quot;ActionScriptGeneration&quot;&gt;\n        &lt;item name=&quot;FullyQualifyReferences&quot;&gt;true&lt;/item&gt;\n        &lt;/annotation&gt;\n    ...\n&lt;/model&gt;\n</code></pre></li>\n</ul>"},{"title":"【Eclipse】java注释模板设置","layout":"post","comments":1,"date":"2016-12-27T02:27:15.000Z","keywords":"注释","description":null,"_content":"\n设置注释模板的入口： Window->Preference->Java->Code Style->Code Template  ，然后展开Comments节点就是所有需设置注释的元素。现就每一元素逐一介绍：\n\n#### 文件(Files)注释标签：\n\t/**\n\t * @Title       : ${file_name}\n\t * @Package     : ${package_name}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * @version     : V1.0\n\t */\n\n<!-- more -->\n\n#### 类型(Types)注释标签（类的注释）：\n\t/**\n\t * @ClassName   : ${type_name}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * \n\t * ${tags}\n\t */\n\n#### 字段(Fields)注释标签：\n\t/**\n\t * @Fields ${field} : ${todo}\n\t */\n\n#### 构造函数标签：\n\t/**\n\t * <p>Title       : </p>\n\t * <p>Description : </p>\n\t * ${tags}\n\t */\n\n#### 方法(Constructor & Methods)标签：\n\t/**\n\t * @Title       : ${enclosing_method}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * @param       : ${tags}\n\t * @return      : ${return_type}\n\t * @throws\n\t */\n\n#### 覆盖方法(Overriding Methods)标签：\n\t/*\n\t * <p>Title       : ${enclosing_method}</p>\n\t * <p>Description : </p>\n\t * ${tags}\n\t * ${see_to_overridden}\n\t */\n\n#### 代表方法(Delegate Methods)标签：\n\t/**\n\t * ${tags}\n\t * ${see_to_target}\n\t */\n\n#### getter方法标签：\n\t/**\n\t * @return ${bare_field_name}\n\t */\n\n#### setter方法标签：\n\t/**\n\t * @param ${param} 要设置的 ${bare_field_name}\n\t */","source":"_posts/【Eclipse】java注释模板设置.md","raw":"---\ntitle: 【Eclipse】java注释模板设置\nlayout: post\ncomments: true\ndate: 2016-12-27 10:27:15\ncategories: Eclipse\ntags: [Eclipse, java]\nkeywords: 注释\ndescription:\n---\n\n设置注释模板的入口： Window->Preference->Java->Code Style->Code Template  ，然后展开Comments节点就是所有需设置注释的元素。现就每一元素逐一介绍：\n\n#### 文件(Files)注释标签：\n\t/**\n\t * @Title       : ${file_name}\n\t * @Package     : ${package_name}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * @version     : V1.0\n\t */\n\n<!-- more -->\n\n#### 类型(Types)注释标签（类的注释）：\n\t/**\n\t * @ClassName   : ${type_name}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * \n\t * ${tags}\n\t */\n\n#### 字段(Fields)注释标签：\n\t/**\n\t * @Fields ${field} : ${todo}\n\t */\n\n#### 构造函数标签：\n\t/**\n\t * <p>Title       : </p>\n\t * <p>Description : </p>\n\t * ${tags}\n\t */\n\n#### 方法(Constructor & Methods)标签：\n\t/**\n\t * @Title       : ${enclosing_method}\n\t * @Description : ${todo}\n\t * @author      : YPN\n\t * @date        : ${date} ${time}\n\t * @param       : ${tags}\n\t * @return      : ${return_type}\n\t * @throws\n\t */\n\n#### 覆盖方法(Overriding Methods)标签：\n\t/*\n\t * <p>Title       : ${enclosing_method}</p>\n\t * <p>Description : </p>\n\t * ${tags}\n\t * ${see_to_overridden}\n\t */\n\n#### 代表方法(Delegate Methods)标签：\n\t/**\n\t * ${tags}\n\t * ${see_to_target}\n\t */\n\n#### getter方法标签：\n\t/**\n\t * @return ${bare_field_name}\n\t */\n\n#### setter方法标签：\n\t/**\n\t * @param ${param} 要设置的 ${bare_field_name}\n\t */","slug":"【Eclipse】java注释模板设置","published":1,"updated":"2017-02-27T04:08:11.017Z","_id":"cjpuwa1g6000fs0jt9eh8rbtv","photos":[],"link":"","content":"<p>设置注释模板的入口： Window-&gt;Preference-&gt;Java-&gt;Code Style-&gt;Code Template  ，然后展开Comments节点就是所有需设置注释的元素。现就每一元素逐一介绍：</p>\n<h4 id=\"文件-Files-注释标签：\"><a href=\"#文件-Files-注释标签：\" class=\"headerlink\" title=\"文件(Files)注释标签：\"></a>文件(Files)注释标签：</h4><pre><code>/**\n * @Title       : ${file_name}\n * @Package     : ${package_name}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * @version     : V1.0\n */\n</code></pre><a id=\"more\"></a>\n<h4 id=\"类型-Types-注释标签（类的注释）：\"><a href=\"#类型-Types-注释标签（类的注释）：\" class=\"headerlink\" title=\"类型(Types)注释标签（类的注释）：\"></a>类型(Types)注释标签（类的注释）：</h4><pre><code>/**\n * @ClassName   : ${type_name}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * \n * ${tags}\n */\n</code></pre><h4 id=\"字段-Fields-注释标签：\"><a href=\"#字段-Fields-注释标签：\" class=\"headerlink\" title=\"字段(Fields)注释标签：\"></a>字段(Fields)注释标签：</h4><pre><code>/**\n * @Fields ${field} : ${todo}\n */\n</code></pre><h4 id=\"构造函数标签：\"><a href=\"#构造函数标签：\" class=\"headerlink\" title=\"构造函数标签：\"></a>构造函数标签：</h4><pre><code>/**\n * &lt;p&gt;Title       : &lt;/p&gt;\n * &lt;p&gt;Description : &lt;/p&gt;\n * ${tags}\n */\n</code></pre><h4 id=\"方法-Constructor-amp-Methods-标签：\"><a href=\"#方法-Constructor-amp-Methods-标签：\" class=\"headerlink\" title=\"方法(Constructor &amp; Methods)标签：\"></a>方法(Constructor &amp; Methods)标签：</h4><pre><code>/**\n * @Title       : ${enclosing_method}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * @param       : ${tags}\n * @return      : ${return_type}\n * @throws\n */\n</code></pre><h4 id=\"覆盖方法-Overriding-Methods-标签：\"><a href=\"#覆盖方法-Overriding-Methods-标签：\" class=\"headerlink\" title=\"覆盖方法(Overriding Methods)标签：\"></a>覆盖方法(Overriding Methods)标签：</h4><pre><code>/*\n * &lt;p&gt;Title       : ${enclosing_method}&lt;/p&gt;\n * &lt;p&gt;Description : &lt;/p&gt;\n * ${tags}\n * ${see_to_overridden}\n */\n</code></pre><h4 id=\"代表方法-Delegate-Methods-标签：\"><a href=\"#代表方法-Delegate-Methods-标签：\" class=\"headerlink\" title=\"代表方法(Delegate Methods)标签：\"></a>代表方法(Delegate Methods)标签：</h4><pre><code>/**\n * ${tags}\n * ${see_to_target}\n */\n</code></pre><h4 id=\"getter方法标签：\"><a href=\"#getter方法标签：\" class=\"headerlink\" title=\"getter方法标签：\"></a>getter方法标签：</h4><pre><code>/**\n * @return ${bare_field_name}\n */\n</code></pre><h4 id=\"setter方法标签：\"><a href=\"#setter方法标签：\" class=\"headerlink\" title=\"setter方法标签：\"></a>setter方法标签：</h4><pre><code>/**\n * @param ${param} 要设置的 ${bare_field_name}\n */\n</code></pre>","site":{"data":{}},"excerpt":"<p>设置注释模板的入口： Window-&gt;Preference-&gt;Java-&gt;Code Style-&gt;Code Template  ，然后展开Comments节点就是所有需设置注释的元素。现就每一元素逐一介绍：</p>\n<h4 id=\"文件-Files-注释标签：\"><a href=\"#文件-Files-注释标签：\" class=\"headerlink\" title=\"文件(Files)注释标签：\"></a>文件(Files)注释标签：</h4><pre><code>/**\n * @Title       : ${file_name}\n * @Package     : ${package_name}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * @version     : V1.0\n */\n</code></pre>","more":"<h4 id=\"类型-Types-注释标签（类的注释）：\"><a href=\"#类型-Types-注释标签（类的注释）：\" class=\"headerlink\" title=\"类型(Types)注释标签（类的注释）：\"></a>类型(Types)注释标签（类的注释）：</h4><pre><code>/**\n * @ClassName   : ${type_name}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * \n * ${tags}\n */\n</code></pre><h4 id=\"字段-Fields-注释标签：\"><a href=\"#字段-Fields-注释标签：\" class=\"headerlink\" title=\"字段(Fields)注释标签：\"></a>字段(Fields)注释标签：</h4><pre><code>/**\n * @Fields ${field} : ${todo}\n */\n</code></pre><h4 id=\"构造函数标签：\"><a href=\"#构造函数标签：\" class=\"headerlink\" title=\"构造函数标签：\"></a>构造函数标签：</h4><pre><code>/**\n * &lt;p&gt;Title       : &lt;/p&gt;\n * &lt;p&gt;Description : &lt;/p&gt;\n * ${tags}\n */\n</code></pre><h4 id=\"方法-Constructor-amp-Methods-标签：\"><a href=\"#方法-Constructor-amp-Methods-标签：\" class=\"headerlink\" title=\"方法(Constructor &amp; Methods)标签：\"></a>方法(Constructor &amp; Methods)标签：</h4><pre><code>/**\n * @Title       : ${enclosing_method}\n * @Description : ${todo}\n * @author      : YPN\n * @date        : ${date} ${time}\n * @param       : ${tags}\n * @return      : ${return_type}\n * @throws\n */\n</code></pre><h4 id=\"覆盖方法-Overriding-Methods-标签：\"><a href=\"#覆盖方法-Overriding-Methods-标签：\" class=\"headerlink\" title=\"覆盖方法(Overriding Methods)标签：\"></a>覆盖方法(Overriding Methods)标签：</h4><pre><code>/*\n * &lt;p&gt;Title       : ${enclosing_method}&lt;/p&gt;\n * &lt;p&gt;Description : &lt;/p&gt;\n * ${tags}\n * ${see_to_overridden}\n */\n</code></pre><h4 id=\"代表方法-Delegate-Methods-标签：\"><a href=\"#代表方法-Delegate-Methods-标签：\" class=\"headerlink\" title=\"代表方法(Delegate Methods)标签：\"></a>代表方法(Delegate Methods)标签：</h4><pre><code>/**\n * ${tags}\n * ${see_to_target}\n */\n</code></pre><h4 id=\"getter方法标签：\"><a href=\"#getter方法标签：\" class=\"headerlink\" title=\"getter方法标签：\"></a>getter方法标签：</h4><pre><code>/**\n * @return ${bare_field_name}\n */\n</code></pre><h4 id=\"setter方法标签：\"><a href=\"#setter方法标签：\" class=\"headerlink\" title=\"setter方法标签：\"></a>setter方法标签：</h4><pre><code>/**\n * @param ${param} 要设置的 ${bare_field_name}\n */\n</code></pre>"},{"title":"【FAQ】sql","layout":"post","comments":1,"date":"2016-11-29T01:53:02.000Z","keywords":null,"description":null,"_content":"# 关于SQL的常见问题解答\n\n------\n\n## 1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\n\n例如，报错SQL:\n```\nSELECT\n\tgz,\n\tyz\nFROM\n\t(SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = 'abc') AS a\nORDER BY\n\tgz;\n```\n在Access里执行没问题，但放到代码里就`FROM子句语法错误`。此时，只需将from子语句用[]括起来，后面跟一个.即可，正确SQL如下：\n<!-- more -->\n```\nSELECT\n\tgz,\n\tyz\nFROM\n\t[SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = 'abc']. AS a\nORDER BY\n\tgz;\n```\n\n## 2. SQL Server安装提示暂挂项目\n打开注册表编辑器，在`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager`中找到`PendingFileRenameOperations`项目，并删除它。这样就可以清除安装暂挂项目。","source":"_posts/【FAQ】sql.md","raw":"---\ntitle: 【FAQ】sql\nlayout: post\ncomments: true\ndate: 2016-11-29 09:53:02\ncategories: FAQ\ntags: [FAQ, sql]\nkeywords:\ndescription:\n---\n# 关于SQL的常见问题解答\n\n------\n\n## 1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\n\n例如，报错SQL:\n```\nSELECT\n\tgz,\n\tyz\nFROM\n\t(SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = 'abc') AS a\nORDER BY\n\tgz;\n```\n在Access里执行没问题，但放到代码里就`FROM子句语法错误`。此时，只需将from子语句用[]括起来，后面跟一个.即可，正确SQL如下：\n<!-- more -->\n```\nSELECT\n\tgz,\n\tyz\nFROM\n\t[SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = 'abc']. AS a\nORDER BY\n\tgz;\n```\n\n## 2. SQL Server安装提示暂挂项目\n打开注册表编辑器，在`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager`中找到`PendingFileRenameOperations`项目，并删除它。这样就可以清除安装暂挂项目。","slug":"【FAQ】sql","published":1,"updated":"2017-02-27T04:22:33.343Z","_id":"cjpuwa1gb000is0jtq94chnfw","photos":[],"link":"","content":"<h1 id=\"关于SQL的常见问题解答\"><a href=\"#关于SQL的常见问题解答\" class=\"headerlink\" title=\"关于SQL的常见问题解答\"></a>关于SQL的常见问题解答</h1><hr>\n<h2 id=\"1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\"><a href=\"#1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\" class=\"headerlink\" title=\"1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\"></a>1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”</h2><p>例如，报错SQL:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tgz,</span><br><span class=\"line\">\tyz</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t(SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;) AS a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tgz;</span><br></pre></td></tr></table></figure></p>\n<p>在Access里执行没问题，但放到代码里就<code>FROM子句语法错误</code>。此时，只需将from子语句用[]括起来，后面跟一个.即可，正确SQL如下：<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tgz,</span><br><span class=\"line\">\tyz</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t[SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;]. AS a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tgz;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-SQL-Server安装提示暂挂项目\"><a href=\"#2-SQL-Server安装提示暂挂项目\" class=\"headerlink\" title=\"2. SQL Server安装提示暂挂项目\"></a>2. SQL Server安装提示暂挂项目</h2><p>打开注册表编辑器，在<code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager</code>中找到<code>PendingFileRenameOperations</code>项目，并删除它。这样就可以清除安装暂挂项目。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"关于SQL的常见问题解答\"><a href=\"#关于SQL的常见问题解答\" class=\"headerlink\" title=\"关于SQL的常见问题解答\"></a>关于SQL的常见问题解答</h1><hr>\n<h2 id=\"1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\"><a href=\"#1-SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\" class=\"headerlink\" title=\"1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”\"></a>1. SQL句在Access里可正常执行，但在VB程序里报“FROM子句语法错误”</h2><p>例如，报错SQL:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tgz,</span><br><span class=\"line\">\tyz</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t(SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;) AS a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tgz;</span><br></pre></td></tr></table></figure></p>\n<p>在Access里执行没问题，但放到代码里就<code>FROM子句语法错误</code>。此时，只需将from子语句用[]括起来，后面跟一个.即可，正确SQL如下：<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tgz,</span><br><span class=\"line\">\tyz</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t[SELECT DISTINCT gz, yz FROM dg LEFT JOIN dgdw ON dg.dg = dgdw.gz WHERE cpxh = &apos;abc&apos;]. AS a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tgz;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-SQL-Server安装提示暂挂项目\"><a href=\"#2-SQL-Server安装提示暂挂项目\" class=\"headerlink\" title=\"2. SQL Server安装提示暂挂项目\"></a>2. SQL Server安装提示暂挂项目</h2><p>打开注册表编辑器，在<code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager</code>中找到<code>PendingFileRenameOperations</code>项目，并删除它。这样就可以清除安装暂挂项目。</p>"},{"title":"【FPSpread】fpComboAdo的初始化","layout":"post","comments":1,"date":"2016-12-22T03:53:28.000Z","keywords":"初始化","description":null,"_content":"初始化具有2列内容的下拉框，如下实例：\n<!-- more -->\n``` vb\nWith fpCbodis_cd\n    .Clear\n    .Columns = 2\n    .ColumnEdit = 0\n    .Col = 0\n    .ColWidth = 5\n    .Col = 1\n    .ColWidth = 25\n    .ListWidth = 3000\n    .AutoSearchFill = True\n    .LineStyle = LineStyleFlat\n    \n    Call CloseMrec\n    Mrec.Open \"select dis_cd,name from ord_d_sites \", Mconn, 1, 3\n    Do While Not Mrec.EOF\n        .AddItem Trim(Mrec!dis_cd) & Chr(9) & Trim(Mrec!name)\n\n        Mrec.MoveNext\n    Loop\nEnd With\n```","source":"_posts/【FPSpread】fpComboAdo的初始化.md","raw":"---\ntitle: 【FPSpread】fpComboAdo的初始化\nlayout: post\ncomments: true\ndate: 2016-12-22 11:53:28\ncategories: FPSpread\ntags: [FPSpread, fpComboAdo]\nkeywords: 初始化\ndescription:\n---\n初始化具有2列内容的下拉框，如下实例：\n<!-- more -->\n``` vb\nWith fpCbodis_cd\n    .Clear\n    .Columns = 2\n    .ColumnEdit = 0\n    .Col = 0\n    .ColWidth = 5\n    .Col = 1\n    .ColWidth = 25\n    .ListWidth = 3000\n    .AutoSearchFill = True\n    .LineStyle = LineStyleFlat\n    \n    Call CloseMrec\n    Mrec.Open \"select dis_cd,name from ord_d_sites \", Mconn, 1, 3\n    Do While Not Mrec.EOF\n        .AddItem Trim(Mrec!dis_cd) & Chr(9) & Trim(Mrec!name)\n\n        Mrec.MoveNext\n    Loop\nEnd With\n```","slug":"【FPSpread】fpComboAdo的初始化","published":1,"updated":"2017-02-27T04:05:12.715Z","_id":"cjpuwa1gg000ns0jtcp2k52gc","photos":[],"link":"","content":"<p>初始化具有2列内容的下拉框，如下实例：<br><a id=\"more\"></a><br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">With</span> fpCbodis_cd</span><br><span class=\"line\">    .Clear</span><br><span class=\"line\">    .Columns = <span class=\"number\">2</span></span><br><span class=\"line\">    .ColumnEdit = <span class=\"number\">0</span></span><br><span class=\"line\">    .Col = <span class=\"number\">0</span></span><br><span class=\"line\">    .ColWidth = <span class=\"number\">5</span></span><br><span class=\"line\">    .Col = <span class=\"number\">1</span></span><br><span class=\"line\">    .ColWidth = <span class=\"number\">25</span></span><br><span class=\"line\">    .ListWidth = <span class=\"number\">3000</span></span><br><span class=\"line\">    .AutoSearchFill = <span class=\"literal\">True</span></span><br><span class=\"line\">    .LineStyle = LineStyleFlat</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">Call</span> CloseMrec</span><br><span class=\"line\">    Mrec.Open <span class=\"string\">\"select dis_cd,name from ord_d_sites \"</span>, Mconn, <span class=\"number\">1</span>, <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">Do</span> <span class=\"keyword\">While</span> <span class=\"keyword\">Not</span> Mrec.EOF</span><br><span class=\"line\">        .AddItem Trim(Mrec!dis_cd) &amp; Chr(<span class=\"number\">9</span>) &amp; Trim(Mrec!name)</span><br><span class=\"line\"></span><br><span class=\"line\">        Mrec.MoveNext</span><br><span class=\"line\">    <span class=\"keyword\">Loop</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>初始化具有2列内容的下拉框，如下实例：<br>","more":"<br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">With</span> fpCbodis_cd</span><br><span class=\"line\">    .Clear</span><br><span class=\"line\">    .Columns = <span class=\"number\">2</span></span><br><span class=\"line\">    .ColumnEdit = <span class=\"number\">0</span></span><br><span class=\"line\">    .Col = <span class=\"number\">0</span></span><br><span class=\"line\">    .ColWidth = <span class=\"number\">5</span></span><br><span class=\"line\">    .Col = <span class=\"number\">1</span></span><br><span class=\"line\">    .ColWidth = <span class=\"number\">25</span></span><br><span class=\"line\">    .ListWidth = <span class=\"number\">3000</span></span><br><span class=\"line\">    .AutoSearchFill = <span class=\"literal\">True</span></span><br><span class=\"line\">    .LineStyle = LineStyleFlat</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">Call</span> CloseMrec</span><br><span class=\"line\">    Mrec.Open <span class=\"string\">\"select dis_cd,name from ord_d_sites \"</span>, Mconn, <span class=\"number\">1</span>, <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">Do</span> <span class=\"keyword\">While</span> <span class=\"keyword\">Not</span> Mrec.EOF</span><br><span class=\"line\">        .AddItem Trim(Mrec!dis_cd) &amp; Chr(<span class=\"number\">9</span>) &amp; Trim(Mrec!name)</span><br><span class=\"line\"></span><br><span class=\"line\">        Mrec.MoveNext</span><br><span class=\"line\">    <span class=\"keyword\">Loop</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br></pre></td></tr></table></figure></p>"},{"title":"【FPSpread】属性说明","layout":"post","comments":1,"date":"2016-12-22T03:06:35.000Z","keywords":null,"description":null,"_content":"以下记录一些常用的fpSpread控件属性，按字母排序：\n<!-- more -->\n\n|**属性**\t\t\t\t\t\t\t\t\t\t|**说明**|\n| ---------------------------------------------\t|:-------|\n|`ActiveRow` \t\t\t\t\t\t\t\t\t|获取当前活动行号\n|`AddCellSpan` 3, 4, 2, 1\t\t\t\t\t\t|从第3列第4行起合并单元格，跨度为2列1行\n|`Backcolor`\t\t\t\t\t\t\t\t\t|设置指定范围（行和列）的背景颜色\n|`CellType` = CellTypeNumber\t\t\t\t\t|设置为数字类型\n|`Col` = 2\t\t\t\t\t\t\t\t\t\t|定位到第2列\n|`ColHeaderRows` = 2\t\t\t\t\t\t\t|表头（列标题）行数为2\n|`ColHeadersShow` = False\t\t\t\t\t\t|隐藏列标题\n|`ColWidth(`1`)` = 16\t\t\t\t\t\t\t|设置第1列的列宽为16\n|`ColsFrozen` = 3 \t\t\t\t\t\t\t\t|冻结前三列\n|`DataSource` = Rs\t\t\t\t\t\t\t\t|设置Spread的数据源为Rs记录集\n|`DeleteCols` 2, 1\t\t\t\t\t\t\t\t|在第2列前删除1列\n|`DeleteRows` 2, 1\t|在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource = Nothing才能删除\n|`FontSize` = 10\t\t\t\t\t\t\t\t|设置当前栏位的字体大小为10（如果.Row = -1，则设置整列，下同\n|`Formula = \"SUM(A1:A\" & MaxRows & \")\"`\t\t\t|合计：对第1列从第1行到最大行求和\n|`GetText` 2, 3, MyText\t\t\t\t\t\t\t|将第2列第3行的值赋给变量MyText\n|`InsertCols` 2, 1\t\t\t\t\t\t\t\t|在第2列前插入1列\n|`InsertRows` 2, 1\t\t\t\t\t\t\t\t|在第2行前插入1行\n|`MaxCols` = 5\t\t\t\t\t\t\t\t\t|设置总列数为5列\n|`MaxRows` = 10\t\t\t\t\t\t\t\t\t|设置总行数为10行\n|`OperationMode` = OperationModeRow\t\t\t\t|设置Spread的操作模式为行定位（共有6种模式）\n|`PrintMarginLeft` = 1000\t\t\t\t\t\t|打印时左边距=1000（包括预览）\n|`PrintMarginTop` = 1000\t\t\t\t\t\t|打印时上边距=1000（包括预览）\n|`Row` = SpreadHeader\t\t\t\t\t\t\t|定位到表头（列标题）\n|`Row` = -1\t\t\t\t\t\t\t\t\t\t|定位到行头（在设置列格式时使用）\n|`Row` = 3\t\t\t\t\t\t\t\t\t\t|定位到第3行\n|`RowHeadersShow` = False\t\t\t\t\t\t|隐藏行标题\n|`RowHeight(`1`)` = 12\t\t\t\t\t\t\t|设置第1行的行高为12\n|`RowsFrozen` = 2\t\t\t\t\t\t\t\t|冻结前两行\n|`SetActiveCell` 1,2\t\t\t\t\t\t\t|设置第1列第2行单元格为焦点\n|`SetEnhancedColumnHeaderColors` vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &H80FF&, vbBlue, vbRed\t\t\t\t\t\t\t\t\t\t\t\t\t|设置列头颜色\n|`SetOddEvenRowColor` vbWhite, &H80000008, &HF7ECE4, &H80000008\t\t\t\t\t\t\t|设置奇偶行背景色\n|`SetText` 2, 3, \"test\"\t\t\t\t\t\t\t|设置第2列第3行的文本为\"test\"\n|`Text` = \"test\"\t\t\t\t\t\t\t\t|设置当前栏位的文本为\"test\"\n|`TypeHAlign` = TypeHAlignRight\t\t\t\t\t|设置文字水平对齐方式为右对齐\n|`TypeVAlign` = TypeVAlignCenter\t\t\t\t|设置文字垂直对齐方式为居中\n|`TypeNumberDecPlaces` = 2\t\t\t\t\t\t|设置小数位数\n|`TypeNumberShowSep` = True\t\t\t\t\t\t|设置千位分隔\n|`/n`\t\t\t\t\t\t\t\t\t\t\t|打印属性：换行\n|`/fn`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font name字体\n|`/fz`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font size大小\n|`/fb1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font bold粗体\n|`/fb0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：非粗体\n|`/fi1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font italic斜体\n|`/fi0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：非斜体\n|`/fu1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font underline有下划线\n|`/fu0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：无下划线\n|`/fk1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font strikethru有删除线\n|`/fk0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：无删除线\n|`/l`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居左\n|`/c`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居中\n|`/r`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居右\n|`/p`\t\t\t\t\t\t\t\t\t\t\t|打印属性：页码\n|`/date`\t\t\t\t\t\t\t\t\t\t|打印属性：日期\n|`/time`\t\t\t\t\t\t\t\t\t\t|打印属性：时间\n打印实例\n```vb\nWith Sg2\n    Sg2.MaxRows = Mrec.RecordCount\n    Set Sg2.DataSource = Mrec\n    .ColWidth(1) = 9\n    .ColWidth(2) = 8\n    .ColWidth(3) = 8\n    .ColWidth(4) = 33\n    .ColWidth(5) = 33\nEnd With\n\nPrivate Sub fpSpreadPrint()\n    Dim Tsbj, Txbj, Tzbj, Tybj, Ti As Long\n    Dim tableHead, tableBodyRow1, tableBodyRow2, tableFoot As String\n    \n    With Sg2\n        Dim customerName, f_orderNo, code, operator, operatDate, repealReason\n        Sg1.GetText 1, Sg1.activeRow, code\n        Sg1.GetText 2, Sg1.activeRow, f_orderNo\n        Sg1.GetText 3, Sg1.activeRow, customerName\n        Sg1.GetText 4, Sg1.activeRow, operator\n        Sg1.GetText 5, Sg1.activeRow, operatDate\n        Sg1.GetText 6, Sg1.activeRow, repealReason\n        \n        .MaxRows = .MaxRows + 1\n        .SetText 2, .MaxRows, \"撤销依据\"\n        .TypeHAlign = TypeHAlignCenter\n        .AddCellSpan 3, .MaxRows, 4, 1\n        .RowHeight(.MaxRows) = 30\n        .SetText 3, .MaxRows, repealReason\n        \n        .Col = 2\n        .Col2 = 5\n        .Row = 1\n        .PrintType = PrintTypeCellRange\n        \n        Tsbj = 9\n        Txbj = 5\n        Tzbj = 8\n        Tybj = 6\n        Ti = 56.7\n        .PrintMarginTop = Tsbj * Ti\n        .PrintMarginBottom = Txbj * Ti\n        .PrintMarginLeft = Tzbj * Ti\n        .PrintMarginRight = Tybj * Ti\n        \n        tableHead = \"合同撤销通知单/n/n\"\n        tableBodyRow1 = \"单据编号：\" & code & \"      \" & \"份合同号：\" & f_orderNo & \"      \" & \"订货单位名称：\" & customerName & \"\" & \"/n/n\"\n        tableBodyRow2 = \"部门领导：\" & \"                \" & \"经办人：\" & operator & \"            \" & \"撤销日期：\" & operatDate & \"/n\"\n        \n        .PrintHeader = \"/c/fb1/fz\"\"20\"\"\" & tableHead & \"/l/fb0/fz\"\"10\"\"\" & tableBodyRow1 & tableBodyRow2\n        .PrintFooter = \"/n/c/p//\" & .PrintPageCount\n                \n        FormPrint.PrintState = False\n        FormPrint.PrintCount = 0\n        FormPrint.SSP.hWndSpread = .hwnd\n        FormPrint.PrintCount = .PrintPageCount\n        FormPrint.Show 1\n        \n        If FormPrint.PrintState = True Then\n            .PrintSheet\n            FormPrint.PrintState = False\n        End If\n    End With\n    Call SG1_Click(Sg1.Col, Sg1.activeRow)\nEnd Sub\n```\n","source":"_posts/【FPSpread】属性说明.md","raw":"---\ntitle: 【FPSpread】属性说明\nlayout: post\ncomments: true\ndate: 2016-12-22 11:06:35\ncategories: FPSpread\ntags: [FPSpread, 属性]\nkeywords:\ndescription:\n---\n以下记录一些常用的fpSpread控件属性，按字母排序：\n<!-- more -->\n\n|**属性**\t\t\t\t\t\t\t\t\t\t|**说明**|\n| ---------------------------------------------\t|:-------|\n|`ActiveRow` \t\t\t\t\t\t\t\t\t|获取当前活动行号\n|`AddCellSpan` 3, 4, 2, 1\t\t\t\t\t\t|从第3列第4行起合并单元格，跨度为2列1行\n|`Backcolor`\t\t\t\t\t\t\t\t\t|设置指定范围（行和列）的背景颜色\n|`CellType` = CellTypeNumber\t\t\t\t\t|设置为数字类型\n|`Col` = 2\t\t\t\t\t\t\t\t\t\t|定位到第2列\n|`ColHeaderRows` = 2\t\t\t\t\t\t\t|表头（列标题）行数为2\n|`ColHeadersShow` = False\t\t\t\t\t\t|隐藏列标题\n|`ColWidth(`1`)` = 16\t\t\t\t\t\t\t|设置第1列的列宽为16\n|`ColsFrozen` = 3 \t\t\t\t\t\t\t\t|冻结前三列\n|`DataSource` = Rs\t\t\t\t\t\t\t\t|设置Spread的数据源为Rs记录集\n|`DeleteCols` 2, 1\t\t\t\t\t\t\t\t|在第2列前删除1列\n|`DeleteRows` 2, 1\t|在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource = Nothing才能删除\n|`FontSize` = 10\t\t\t\t\t\t\t\t|设置当前栏位的字体大小为10（如果.Row = -1，则设置整列，下同\n|`Formula = \"SUM(A1:A\" & MaxRows & \")\"`\t\t\t|合计：对第1列从第1行到最大行求和\n|`GetText` 2, 3, MyText\t\t\t\t\t\t\t|将第2列第3行的值赋给变量MyText\n|`InsertCols` 2, 1\t\t\t\t\t\t\t\t|在第2列前插入1列\n|`InsertRows` 2, 1\t\t\t\t\t\t\t\t|在第2行前插入1行\n|`MaxCols` = 5\t\t\t\t\t\t\t\t\t|设置总列数为5列\n|`MaxRows` = 10\t\t\t\t\t\t\t\t\t|设置总行数为10行\n|`OperationMode` = OperationModeRow\t\t\t\t|设置Spread的操作模式为行定位（共有6种模式）\n|`PrintMarginLeft` = 1000\t\t\t\t\t\t|打印时左边距=1000（包括预览）\n|`PrintMarginTop` = 1000\t\t\t\t\t\t|打印时上边距=1000（包括预览）\n|`Row` = SpreadHeader\t\t\t\t\t\t\t|定位到表头（列标题）\n|`Row` = -1\t\t\t\t\t\t\t\t\t\t|定位到行头（在设置列格式时使用）\n|`Row` = 3\t\t\t\t\t\t\t\t\t\t|定位到第3行\n|`RowHeadersShow` = False\t\t\t\t\t\t|隐藏行标题\n|`RowHeight(`1`)` = 12\t\t\t\t\t\t\t|设置第1行的行高为12\n|`RowsFrozen` = 2\t\t\t\t\t\t\t\t|冻结前两行\n|`SetActiveCell` 1,2\t\t\t\t\t\t\t|设置第1列第2行单元格为焦点\n|`SetEnhancedColumnHeaderColors` vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &H80FF&, vbBlue, vbRed\t\t\t\t\t\t\t\t\t\t\t\t\t|设置列头颜色\n|`SetOddEvenRowColor` vbWhite, &H80000008, &HF7ECE4, &H80000008\t\t\t\t\t\t\t|设置奇偶行背景色\n|`SetText` 2, 3, \"test\"\t\t\t\t\t\t\t|设置第2列第3行的文本为\"test\"\n|`Text` = \"test\"\t\t\t\t\t\t\t\t|设置当前栏位的文本为\"test\"\n|`TypeHAlign` = TypeHAlignRight\t\t\t\t\t|设置文字水平对齐方式为右对齐\n|`TypeVAlign` = TypeVAlignCenter\t\t\t\t|设置文字垂直对齐方式为居中\n|`TypeNumberDecPlaces` = 2\t\t\t\t\t\t|设置小数位数\n|`TypeNumberShowSep` = True\t\t\t\t\t\t|设置千位分隔\n|`/n`\t\t\t\t\t\t\t\t\t\t\t|打印属性：换行\n|`/fn`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font name字体\n|`/fz`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font size大小\n|`/fb1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font bold粗体\n|`/fb0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：非粗体\n|`/fi1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font italic斜体\n|`/fi0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：非斜体\n|`/fu1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font underline有下划线\n|`/fu0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：无下划线\n|`/fk1`\t\t\t\t\t\t\t\t\t\t\t|打印属性：font strikethru有删除线\n|`/fk0`\t\t\t\t\t\t\t\t\t\t\t|打印属性：无删除线\n|`/l`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居左\n|`/c`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居中\n|`/r`\t\t\t\t\t\t\t\t\t\t\t|打印属性：居右\n|`/p`\t\t\t\t\t\t\t\t\t\t\t|打印属性：页码\n|`/date`\t\t\t\t\t\t\t\t\t\t|打印属性：日期\n|`/time`\t\t\t\t\t\t\t\t\t\t|打印属性：时间\n打印实例\n```vb\nWith Sg2\n    Sg2.MaxRows = Mrec.RecordCount\n    Set Sg2.DataSource = Mrec\n    .ColWidth(1) = 9\n    .ColWidth(2) = 8\n    .ColWidth(3) = 8\n    .ColWidth(4) = 33\n    .ColWidth(5) = 33\nEnd With\n\nPrivate Sub fpSpreadPrint()\n    Dim Tsbj, Txbj, Tzbj, Tybj, Ti As Long\n    Dim tableHead, tableBodyRow1, tableBodyRow2, tableFoot As String\n    \n    With Sg2\n        Dim customerName, f_orderNo, code, operator, operatDate, repealReason\n        Sg1.GetText 1, Sg1.activeRow, code\n        Sg1.GetText 2, Sg1.activeRow, f_orderNo\n        Sg1.GetText 3, Sg1.activeRow, customerName\n        Sg1.GetText 4, Sg1.activeRow, operator\n        Sg1.GetText 5, Sg1.activeRow, operatDate\n        Sg1.GetText 6, Sg1.activeRow, repealReason\n        \n        .MaxRows = .MaxRows + 1\n        .SetText 2, .MaxRows, \"撤销依据\"\n        .TypeHAlign = TypeHAlignCenter\n        .AddCellSpan 3, .MaxRows, 4, 1\n        .RowHeight(.MaxRows) = 30\n        .SetText 3, .MaxRows, repealReason\n        \n        .Col = 2\n        .Col2 = 5\n        .Row = 1\n        .PrintType = PrintTypeCellRange\n        \n        Tsbj = 9\n        Txbj = 5\n        Tzbj = 8\n        Tybj = 6\n        Ti = 56.7\n        .PrintMarginTop = Tsbj * Ti\n        .PrintMarginBottom = Txbj * Ti\n        .PrintMarginLeft = Tzbj * Ti\n        .PrintMarginRight = Tybj * Ti\n        \n        tableHead = \"合同撤销通知单/n/n\"\n        tableBodyRow1 = \"单据编号：\" & code & \"      \" & \"份合同号：\" & f_orderNo & \"      \" & \"订货单位名称：\" & customerName & \"\" & \"/n/n\"\n        tableBodyRow2 = \"部门领导：\" & \"                \" & \"经办人：\" & operator & \"            \" & \"撤销日期：\" & operatDate & \"/n\"\n        \n        .PrintHeader = \"/c/fb1/fz\"\"20\"\"\" & tableHead & \"/l/fb0/fz\"\"10\"\"\" & tableBodyRow1 & tableBodyRow2\n        .PrintFooter = \"/n/c/p//\" & .PrintPageCount\n                \n        FormPrint.PrintState = False\n        FormPrint.PrintCount = 0\n        FormPrint.SSP.hWndSpread = .hwnd\n        FormPrint.PrintCount = .PrintPageCount\n        FormPrint.Show 1\n        \n        If FormPrint.PrintState = True Then\n            .PrintSheet\n            FormPrint.PrintState = False\n        End If\n    End With\n    Call SG1_Click(Sg1.Col, Sg1.activeRow)\nEnd Sub\n```\n","slug":"【FPSpread】属性说明","published":1,"updated":"2017-02-27T04:05:24.664Z","_id":"cjpuwa1gi000os0jt8pqxu9s6","photos":[],"link":"","content":"<p>以下记录一些常用的fpSpread控件属性，按字母排序：<br><a id=\"more\"></a></p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th style=\"text-align:left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ActiveRow</code></td>\n<td style=\"text-align:left\">获取当前活动行号</td>\n</tr>\n<tr>\n<td><code>AddCellSpan</code> 3, 4, 2, 1</td>\n<td style=\"text-align:left\">从第3列第4行起合并单元格，跨度为2列1行</td>\n</tr>\n<tr>\n<td><code>Backcolor</code></td>\n<td style=\"text-align:left\">设置指定范围（行和列）的背景颜色</td>\n</tr>\n<tr>\n<td><code>CellType</code> = CellTypeNumber</td>\n<td style=\"text-align:left\">设置为数字类型</td>\n</tr>\n<tr>\n<td><code>Col</code> = 2</td>\n<td style=\"text-align:left\">定位到第2列</td>\n</tr>\n<tr>\n<td><code>ColHeaderRows</code> = 2</td>\n<td style=\"text-align:left\">表头（列标题）行数为2</td>\n</tr>\n<tr>\n<td><code>ColHeadersShow</code> = False</td>\n<td style=\"text-align:left\">隐藏列标题</td>\n</tr>\n<tr>\n<td><code>ColWidth(</code>1<code>)</code> = 16</td>\n<td style=\"text-align:left\">设置第1列的列宽为16</td>\n</tr>\n<tr>\n<td><code>ColsFrozen</code> = 3</td>\n<td style=\"text-align:left\">冻结前三列</td>\n</tr>\n<tr>\n<td><code>DataSource</code> = Rs</td>\n<td style=\"text-align:left\">设置Spread的数据源为Rs记录集</td>\n</tr>\n<tr>\n<td><code>DeleteCols</code> 2, 1</td>\n<td style=\"text-align:left\">在第2列前删除1列</td>\n</tr>\n<tr>\n<td><code>DeleteRows</code> 2, 1</td>\n<td style=\"text-align:left\">在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource = Nothing才能删除</td>\n</tr>\n<tr>\n<td><code>FontSize</code> = 10</td>\n<td style=\"text-align:left\">设置当前栏位的字体大小为10（如果.Row = -1，则设置整列，下同</td>\n</tr>\n<tr>\n<td><code>Formula = &quot;SUM(A1:A&quot; &amp; MaxRows &amp; &quot;)&quot;</code></td>\n<td style=\"text-align:left\">合计：对第1列从第1行到最大行求和</td>\n</tr>\n<tr>\n<td><code>GetText</code> 2, 3, MyText</td>\n<td style=\"text-align:left\">将第2列第3行的值赋给变量MyText</td>\n</tr>\n<tr>\n<td><code>InsertCols</code> 2, 1</td>\n<td style=\"text-align:left\">在第2列前插入1列</td>\n</tr>\n<tr>\n<td><code>InsertRows</code> 2, 1</td>\n<td style=\"text-align:left\">在第2行前插入1行</td>\n</tr>\n<tr>\n<td><code>MaxCols</code> = 5</td>\n<td style=\"text-align:left\">设置总列数为5列</td>\n</tr>\n<tr>\n<td><code>MaxRows</code> = 10</td>\n<td style=\"text-align:left\">设置总行数为10行</td>\n</tr>\n<tr>\n<td><code>OperationMode</code> = OperationModeRow</td>\n<td style=\"text-align:left\">设置Spread的操作模式为行定位（共有6种模式）</td>\n</tr>\n<tr>\n<td><code>PrintMarginLeft</code> = 1000</td>\n<td style=\"text-align:left\">打印时左边距=1000（包括预览）</td>\n</tr>\n<tr>\n<td><code>PrintMarginTop</code> = 1000</td>\n<td style=\"text-align:left\">打印时上边距=1000（包括预览）</td>\n</tr>\n<tr>\n<td><code>Row</code> = SpreadHeader</td>\n<td style=\"text-align:left\">定位到表头（列标题）</td>\n</tr>\n<tr>\n<td><code>Row</code> = -1</td>\n<td style=\"text-align:left\">定位到行头（在设置列格式时使用）</td>\n</tr>\n<tr>\n<td><code>Row</code> = 3</td>\n<td style=\"text-align:left\">定位到第3行</td>\n</tr>\n<tr>\n<td><code>RowHeadersShow</code> = False</td>\n<td style=\"text-align:left\">隐藏行标题</td>\n</tr>\n<tr>\n<td><code>RowHeight(</code>1<code>)</code> = 12</td>\n<td style=\"text-align:left\">设置第1行的行高为12</td>\n</tr>\n<tr>\n<td><code>RowsFrozen</code> = 2</td>\n<td style=\"text-align:left\">冻结前两行</td>\n</tr>\n<tr>\n<td><code>SetActiveCell</code> 1,2</td>\n<td style=\"text-align:left\">设置第1列第2行单元格为焦点</td>\n</tr>\n<tr>\n<td><code>SetEnhancedColumnHeaderColors</code> vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &amp;H80FF&amp;, vbBlue, vbRed</td>\n<td style=\"text-align:left\">设置列头颜色</td>\n</tr>\n<tr>\n<td><code>SetOddEvenRowColor</code> vbWhite, &amp;H80000008, &amp;HF7ECE4, &amp;H80000008</td>\n<td style=\"text-align:left\">设置奇偶行背景色</td>\n</tr>\n<tr>\n<td><code>SetText</code> 2, 3, “test”</td>\n<td style=\"text-align:left\">设置第2列第3行的文本为”test”</td>\n</tr>\n<tr>\n<td><code>Text</code> = “test”</td>\n<td style=\"text-align:left\">设置当前栏位的文本为”test”</td>\n</tr>\n<tr>\n<td><code>TypeHAlign</code> = TypeHAlignRight</td>\n<td style=\"text-align:left\">设置文字水平对齐方式为右对齐</td>\n</tr>\n<tr>\n<td><code>TypeVAlign</code> = TypeVAlignCenter</td>\n<td style=\"text-align:left\">设置文字垂直对齐方式为居中</td>\n</tr>\n<tr>\n<td><code>TypeNumberDecPlaces</code> = 2</td>\n<td style=\"text-align:left\">设置小数位数</td>\n</tr>\n<tr>\n<td><code>TypeNumberShowSep</code> = True</td>\n<td style=\"text-align:left\">设置千位分隔</td>\n</tr>\n<tr>\n<td><code>/n</code></td>\n<td style=\"text-align:left\">打印属性：换行</td>\n</tr>\n<tr>\n<td><code>/fn</code></td>\n<td style=\"text-align:left\">打印属性：font name字体</td>\n</tr>\n<tr>\n<td><code>/fz</code></td>\n<td style=\"text-align:left\">打印属性：font size大小</td>\n</tr>\n<tr>\n<td><code>/fb1</code></td>\n<td style=\"text-align:left\">打印属性：font bold粗体</td>\n</tr>\n<tr>\n<td><code>/fb0</code></td>\n<td style=\"text-align:left\">打印属性：非粗体</td>\n</tr>\n<tr>\n<td><code>/fi1</code></td>\n<td style=\"text-align:left\">打印属性：font italic斜体</td>\n</tr>\n<tr>\n<td><code>/fi0</code></td>\n<td style=\"text-align:left\">打印属性：非斜体</td>\n</tr>\n<tr>\n<td><code>/fu1</code></td>\n<td style=\"text-align:left\">打印属性：font underline有下划线</td>\n</tr>\n<tr>\n<td><code>/fu0</code></td>\n<td style=\"text-align:left\">打印属性：无下划线</td>\n</tr>\n<tr>\n<td><code>/fk1</code></td>\n<td style=\"text-align:left\">打印属性：font strikethru有删除线</td>\n</tr>\n<tr>\n<td><code>/fk0</code></td>\n<td style=\"text-align:left\">打印属性：无删除线</td>\n</tr>\n<tr>\n<td><code>/l</code></td>\n<td style=\"text-align:left\">打印属性：居左</td>\n</tr>\n<tr>\n<td><code>/c</code></td>\n<td style=\"text-align:left\">打印属性：居中</td>\n</tr>\n<tr>\n<td><code>/r</code></td>\n<td style=\"text-align:left\">打印属性：居右</td>\n</tr>\n<tr>\n<td><code>/p</code></td>\n<td style=\"text-align:left\">打印属性：页码</td>\n</tr>\n<tr>\n<td><code>/date</code></td>\n<td style=\"text-align:left\">打印属性：日期</td>\n</tr>\n<tr>\n<td><code>/time</code></td>\n<td style=\"text-align:left\">打印属性：时间</td>\n</tr>\n</tbody>\n</table>\n<p>打印实例<br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">With</span> Sg2</span><br><span class=\"line\">    Sg2.MaxRows = Mrec.RecordCount</span><br><span class=\"line\">    <span class=\"keyword\">Set</span> Sg2.DataSource = Mrec</span><br><span class=\"line\">    .ColWidth(<span class=\"number\">1</span>) = <span class=\"number\">9</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">2</span>) = <span class=\"number\">8</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">3</span>) = <span class=\"number\">8</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">4</span>) = <span class=\"number\">33</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">5</span>) = <span class=\"number\">33</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> fpSpreadPrint()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> Tsbj, Txbj, Tzbj, Tybj, Ti <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> tableHead, tableBodyRow1, tableBodyRow2, tableFoot <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">With</span> Sg2</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> customerName, f_orderNo, code, <span class=\"keyword\">operator</span>, operatDate, repealReason</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">1</span>, Sg1.activeRow, code</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">2</span>, Sg1.activeRow, f_orderNo</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">3</span>, Sg1.activeRow, customerName</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">4</span>, Sg1.activeRow, <span class=\"keyword\">operator</span></span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">5</span>, Sg1.activeRow, operatDate</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">6</span>, Sg1.activeRow, repealReason</span><br><span class=\"line\">        </span><br><span class=\"line\">        .MaxRows = .MaxRows + <span class=\"number\">1</span></span><br><span class=\"line\">        .SetText <span class=\"number\">2</span>, .MaxRows, <span class=\"string\">\"撤销依据\"</span></span><br><span class=\"line\">        .TypeHAlign = TypeHAlignCenter</span><br><span class=\"line\">        .AddCellSpan <span class=\"number\">3</span>, .MaxRows, <span class=\"number\">4</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        .RowHeight(.MaxRows) = <span class=\"number\">30</span></span><br><span class=\"line\">        .SetText <span class=\"number\">3</span>, .MaxRows, repealReason</span><br><span class=\"line\">        </span><br><span class=\"line\">        .Col = <span class=\"number\">2</span></span><br><span class=\"line\">        .Col2 = <span class=\"number\">5</span></span><br><span class=\"line\">        .Row = <span class=\"number\">1</span></span><br><span class=\"line\">        .PrintType = PrintTypeCellRange</span><br><span class=\"line\">        </span><br><span class=\"line\">        Tsbj = <span class=\"number\">9</span></span><br><span class=\"line\">        Txbj = <span class=\"number\">5</span></span><br><span class=\"line\">        Tzbj = <span class=\"number\">8</span></span><br><span class=\"line\">        Tybj = <span class=\"number\">6</span></span><br><span class=\"line\">        Ti = <span class=\"number\">56.7</span></span><br><span class=\"line\">        .PrintMarginTop = Tsbj * Ti</span><br><span class=\"line\">        .PrintMarginBottom = Txbj * Ti</span><br><span class=\"line\">        .PrintMarginLeft = Tzbj * Ti</span><br><span class=\"line\">        .PrintMarginRight = Tybj * Ti</span><br><span class=\"line\">        </span><br><span class=\"line\">        tableHead = <span class=\"string\">\"合同撤销通知单/n/n\"</span></span><br><span class=\"line\">        tableBodyRow1 = <span class=\"string\">\"单据编号：\"</span> &amp; code &amp; <span class=\"string\">\"      \"</span> &amp; <span class=\"string\">\"份合同号：\"</span> &amp; f_orderNo &amp; <span class=\"string\">\"      \"</span> &amp; <span class=\"string\">\"订货单位名称：\"</span> &amp; customerName &amp; <span class=\"string\">\"\"</span> &amp; <span class=\"string\">\"/n/n\"</span></span><br><span class=\"line\">        tableBodyRow2 = <span class=\"string\">\"部门领导：\"</span> &amp; <span class=\"string\">\"                \"</span> &amp; <span class=\"string\">\"经办人：\"</span> &amp; <span class=\"keyword\">operator</span> &amp; <span class=\"string\">\"            \"</span> &amp; <span class=\"string\">\"撤销日期：\"</span> &amp; operatDate &amp; <span class=\"string\">\"/n\"</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        .PrintHeader = <span class=\"string\">\"/c/fb1/fz\"\"20\"\"\"</span> &amp; tableHead &amp; <span class=\"string\">\"/l/fb0/fz\"\"10\"\"\"</span> &amp; tableBodyRow1 &amp; tableBodyRow2</span><br><span class=\"line\">        .PrintFooter = <span class=\"string\">\"/n/c/p//\"</span> &amp; .PrintPageCount</span><br><span class=\"line\">                </span><br><span class=\"line\">        FormPrint.PrintState = <span class=\"literal\">False</span></span><br><span class=\"line\">        FormPrint.PrintCount = <span class=\"number\">0</span></span><br><span class=\"line\">        FormPrint.SSP.hWndSpread = .hwnd</span><br><span class=\"line\">        FormPrint.PrintCount = .PrintPageCount</span><br><span class=\"line\">        FormPrint.Show <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">If</span> FormPrint.PrintState = <span class=\"literal\">True</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            .PrintSheet</span><br><span class=\"line\">            FormPrint.PrintState = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\">    <span class=\"keyword\">Call</span> SG1_Click(Sg1.Col, Sg1.activeRow)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>以下记录一些常用的fpSpread控件属性，按字母排序：<br>","more":"</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th style=\"text-align:left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ActiveRow</code></td>\n<td style=\"text-align:left\">获取当前活动行号</td>\n</tr>\n<tr>\n<td><code>AddCellSpan</code> 3, 4, 2, 1</td>\n<td style=\"text-align:left\">从第3列第4行起合并单元格，跨度为2列1行</td>\n</tr>\n<tr>\n<td><code>Backcolor</code></td>\n<td style=\"text-align:left\">设置指定范围（行和列）的背景颜色</td>\n</tr>\n<tr>\n<td><code>CellType</code> = CellTypeNumber</td>\n<td style=\"text-align:left\">设置为数字类型</td>\n</tr>\n<tr>\n<td><code>Col</code> = 2</td>\n<td style=\"text-align:left\">定位到第2列</td>\n</tr>\n<tr>\n<td><code>ColHeaderRows</code> = 2</td>\n<td style=\"text-align:left\">表头（列标题）行数为2</td>\n</tr>\n<tr>\n<td><code>ColHeadersShow</code> = False</td>\n<td style=\"text-align:left\">隐藏列标题</td>\n</tr>\n<tr>\n<td><code>ColWidth(</code>1<code>)</code> = 16</td>\n<td style=\"text-align:left\">设置第1列的列宽为16</td>\n</tr>\n<tr>\n<td><code>ColsFrozen</code> = 3</td>\n<td style=\"text-align:left\">冻结前三列</td>\n</tr>\n<tr>\n<td><code>DataSource</code> = Rs</td>\n<td style=\"text-align:left\">设置Spread的数据源为Rs记录集</td>\n</tr>\n<tr>\n<td><code>DeleteCols</code> 2, 1</td>\n<td style=\"text-align:left\">在第2列前删除1列</td>\n</tr>\n<tr>\n<td><code>DeleteRows</code> 2, 1</td>\n<td style=\"text-align:left\">在第2行前删除1行（如果Spread是通过设置数据源取得数据的话，则必须设置.DataSource = Nothing才能删除</td>\n</tr>\n<tr>\n<td><code>FontSize</code> = 10</td>\n<td style=\"text-align:left\">设置当前栏位的字体大小为10（如果.Row = -1，则设置整列，下同</td>\n</tr>\n<tr>\n<td><code>Formula = &quot;SUM(A1:A&quot; &amp; MaxRows &amp; &quot;)&quot;</code></td>\n<td style=\"text-align:left\">合计：对第1列从第1行到最大行求和</td>\n</tr>\n<tr>\n<td><code>GetText</code> 2, 3, MyText</td>\n<td style=\"text-align:left\">将第2列第3行的值赋给变量MyText</td>\n</tr>\n<tr>\n<td><code>InsertCols</code> 2, 1</td>\n<td style=\"text-align:left\">在第2列前插入1列</td>\n</tr>\n<tr>\n<td><code>InsertRows</code> 2, 1</td>\n<td style=\"text-align:left\">在第2行前插入1行</td>\n</tr>\n<tr>\n<td><code>MaxCols</code> = 5</td>\n<td style=\"text-align:left\">设置总列数为5列</td>\n</tr>\n<tr>\n<td><code>MaxRows</code> = 10</td>\n<td style=\"text-align:left\">设置总行数为10行</td>\n</tr>\n<tr>\n<td><code>OperationMode</code> = OperationModeRow</td>\n<td style=\"text-align:left\">设置Spread的操作模式为行定位（共有6种模式）</td>\n</tr>\n<tr>\n<td><code>PrintMarginLeft</code> = 1000</td>\n<td style=\"text-align:left\">打印时左边距=1000（包括预览）</td>\n</tr>\n<tr>\n<td><code>PrintMarginTop</code> = 1000</td>\n<td style=\"text-align:left\">打印时上边距=1000（包括预览）</td>\n</tr>\n<tr>\n<td><code>Row</code> = SpreadHeader</td>\n<td style=\"text-align:left\">定位到表头（列标题）</td>\n</tr>\n<tr>\n<td><code>Row</code> = -1</td>\n<td style=\"text-align:left\">定位到行头（在设置列格式时使用）</td>\n</tr>\n<tr>\n<td><code>Row</code> = 3</td>\n<td style=\"text-align:left\">定位到第3行</td>\n</tr>\n<tr>\n<td><code>RowHeadersShow</code> = False</td>\n<td style=\"text-align:left\">隐藏行标题</td>\n</tr>\n<tr>\n<td><code>RowHeight(</code>1<code>)</code> = 12</td>\n<td style=\"text-align:left\">设置第1行的行高为12</td>\n</tr>\n<tr>\n<td><code>RowsFrozen</code> = 2</td>\n<td style=\"text-align:left\">冻结前两行</td>\n</tr>\n<tr>\n<td><code>SetActiveCell</code> 1,2</td>\n<td style=\"text-align:left\">设置第1列第2行单元格为焦点</td>\n</tr>\n<tr>\n<td><code>SetEnhancedColumnHeaderColors</code> vbRed, vbYellow, vbBlue, vbGreen, vbBlack, vbWhite, vbMagenta, &amp;H80FF&amp;, vbBlue, vbRed</td>\n<td style=\"text-align:left\">设置列头颜色</td>\n</tr>\n<tr>\n<td><code>SetOddEvenRowColor</code> vbWhite, &amp;H80000008, &amp;HF7ECE4, &amp;H80000008</td>\n<td style=\"text-align:left\">设置奇偶行背景色</td>\n</tr>\n<tr>\n<td><code>SetText</code> 2, 3, “test”</td>\n<td style=\"text-align:left\">设置第2列第3行的文本为”test”</td>\n</tr>\n<tr>\n<td><code>Text</code> = “test”</td>\n<td style=\"text-align:left\">设置当前栏位的文本为”test”</td>\n</tr>\n<tr>\n<td><code>TypeHAlign</code> = TypeHAlignRight</td>\n<td style=\"text-align:left\">设置文字水平对齐方式为右对齐</td>\n</tr>\n<tr>\n<td><code>TypeVAlign</code> = TypeVAlignCenter</td>\n<td style=\"text-align:left\">设置文字垂直对齐方式为居中</td>\n</tr>\n<tr>\n<td><code>TypeNumberDecPlaces</code> = 2</td>\n<td style=\"text-align:left\">设置小数位数</td>\n</tr>\n<tr>\n<td><code>TypeNumberShowSep</code> = True</td>\n<td style=\"text-align:left\">设置千位分隔</td>\n</tr>\n<tr>\n<td><code>/n</code></td>\n<td style=\"text-align:left\">打印属性：换行</td>\n</tr>\n<tr>\n<td><code>/fn</code></td>\n<td style=\"text-align:left\">打印属性：font name字体</td>\n</tr>\n<tr>\n<td><code>/fz</code></td>\n<td style=\"text-align:left\">打印属性：font size大小</td>\n</tr>\n<tr>\n<td><code>/fb1</code></td>\n<td style=\"text-align:left\">打印属性：font bold粗体</td>\n</tr>\n<tr>\n<td><code>/fb0</code></td>\n<td style=\"text-align:left\">打印属性：非粗体</td>\n</tr>\n<tr>\n<td><code>/fi1</code></td>\n<td style=\"text-align:left\">打印属性：font italic斜体</td>\n</tr>\n<tr>\n<td><code>/fi0</code></td>\n<td style=\"text-align:left\">打印属性：非斜体</td>\n</tr>\n<tr>\n<td><code>/fu1</code></td>\n<td style=\"text-align:left\">打印属性：font underline有下划线</td>\n</tr>\n<tr>\n<td><code>/fu0</code></td>\n<td style=\"text-align:left\">打印属性：无下划线</td>\n</tr>\n<tr>\n<td><code>/fk1</code></td>\n<td style=\"text-align:left\">打印属性：font strikethru有删除线</td>\n</tr>\n<tr>\n<td><code>/fk0</code></td>\n<td style=\"text-align:left\">打印属性：无删除线</td>\n</tr>\n<tr>\n<td><code>/l</code></td>\n<td style=\"text-align:left\">打印属性：居左</td>\n</tr>\n<tr>\n<td><code>/c</code></td>\n<td style=\"text-align:left\">打印属性：居中</td>\n</tr>\n<tr>\n<td><code>/r</code></td>\n<td style=\"text-align:left\">打印属性：居右</td>\n</tr>\n<tr>\n<td><code>/p</code></td>\n<td style=\"text-align:left\">打印属性：页码</td>\n</tr>\n<tr>\n<td><code>/date</code></td>\n<td style=\"text-align:left\">打印属性：日期</td>\n</tr>\n<tr>\n<td><code>/time</code></td>\n<td style=\"text-align:left\">打印属性：时间</td>\n</tr>\n</tbody>\n</table>\n<p>打印实例<br><figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">With</span> Sg2</span><br><span class=\"line\">    Sg2.MaxRows = Mrec.RecordCount</span><br><span class=\"line\">    <span class=\"keyword\">Set</span> Sg2.DataSource = Mrec</span><br><span class=\"line\">    .ColWidth(<span class=\"number\">1</span>) = <span class=\"number\">9</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">2</span>) = <span class=\"number\">8</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">3</span>) = <span class=\"number\">8</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">4</span>) = <span class=\"number\">33</span></span><br><span class=\"line\">    .ColWidth(<span class=\"number\">5</span>) = <span class=\"number\">33</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> fpSpreadPrint()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> Tsbj, Txbj, Tzbj, Tybj, Ti <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> tableHead, tableBodyRow1, tableBodyRow2, tableFoot <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">With</span> Sg2</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> customerName, f_orderNo, code, <span class=\"keyword\">operator</span>, operatDate, repealReason</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">1</span>, Sg1.activeRow, code</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">2</span>, Sg1.activeRow, f_orderNo</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">3</span>, Sg1.activeRow, customerName</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">4</span>, Sg1.activeRow, <span class=\"keyword\">operator</span></span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">5</span>, Sg1.activeRow, operatDate</span><br><span class=\"line\">        Sg1.GetText <span class=\"number\">6</span>, Sg1.activeRow, repealReason</span><br><span class=\"line\">        </span><br><span class=\"line\">        .MaxRows = .MaxRows + <span class=\"number\">1</span></span><br><span class=\"line\">        .SetText <span class=\"number\">2</span>, .MaxRows, <span class=\"string\">\"撤销依据\"</span></span><br><span class=\"line\">        .TypeHAlign = TypeHAlignCenter</span><br><span class=\"line\">        .AddCellSpan <span class=\"number\">3</span>, .MaxRows, <span class=\"number\">4</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        .RowHeight(.MaxRows) = <span class=\"number\">30</span></span><br><span class=\"line\">        .SetText <span class=\"number\">3</span>, .MaxRows, repealReason</span><br><span class=\"line\">        </span><br><span class=\"line\">        .Col = <span class=\"number\">2</span></span><br><span class=\"line\">        .Col2 = <span class=\"number\">5</span></span><br><span class=\"line\">        .Row = <span class=\"number\">1</span></span><br><span class=\"line\">        .PrintType = PrintTypeCellRange</span><br><span class=\"line\">        </span><br><span class=\"line\">        Tsbj = <span class=\"number\">9</span></span><br><span class=\"line\">        Txbj = <span class=\"number\">5</span></span><br><span class=\"line\">        Tzbj = <span class=\"number\">8</span></span><br><span class=\"line\">        Tybj = <span class=\"number\">6</span></span><br><span class=\"line\">        Ti = <span class=\"number\">56.7</span></span><br><span class=\"line\">        .PrintMarginTop = Tsbj * Ti</span><br><span class=\"line\">        .PrintMarginBottom = Txbj * Ti</span><br><span class=\"line\">        .PrintMarginLeft = Tzbj * Ti</span><br><span class=\"line\">        .PrintMarginRight = Tybj * Ti</span><br><span class=\"line\">        </span><br><span class=\"line\">        tableHead = <span class=\"string\">\"合同撤销通知单/n/n\"</span></span><br><span class=\"line\">        tableBodyRow1 = <span class=\"string\">\"单据编号：\"</span> &amp; code &amp; <span class=\"string\">\"      \"</span> &amp; <span class=\"string\">\"份合同号：\"</span> &amp; f_orderNo &amp; <span class=\"string\">\"      \"</span> &amp; <span class=\"string\">\"订货单位名称：\"</span> &amp; customerName &amp; <span class=\"string\">\"\"</span> &amp; <span class=\"string\">\"/n/n\"</span></span><br><span class=\"line\">        tableBodyRow2 = <span class=\"string\">\"部门领导：\"</span> &amp; <span class=\"string\">\"                \"</span> &amp; <span class=\"string\">\"经办人：\"</span> &amp; <span class=\"keyword\">operator</span> &amp; <span class=\"string\">\"            \"</span> &amp; <span class=\"string\">\"撤销日期：\"</span> &amp; operatDate &amp; <span class=\"string\">\"/n\"</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        .PrintHeader = <span class=\"string\">\"/c/fb1/fz\"\"20\"\"\"</span> &amp; tableHead &amp; <span class=\"string\">\"/l/fb0/fz\"\"10\"\"\"</span> &amp; tableBodyRow1 &amp; tableBodyRow2</span><br><span class=\"line\">        .PrintFooter = <span class=\"string\">\"/n/c/p//\"</span> &amp; .PrintPageCount</span><br><span class=\"line\">                </span><br><span class=\"line\">        FormPrint.PrintState = <span class=\"literal\">False</span></span><br><span class=\"line\">        FormPrint.PrintCount = <span class=\"number\">0</span></span><br><span class=\"line\">        FormPrint.SSP.hWndSpread = .hwnd</span><br><span class=\"line\">        FormPrint.PrintCount = .PrintPageCount</span><br><span class=\"line\">        FormPrint.Show <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">If</span> FormPrint.PrintState = <span class=\"literal\">True</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            .PrintSheet</span><br><span class=\"line\">            FormPrint.PrintState = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\">    <span class=\"keyword\">Call</span> SG1_Click(Sg1.Col, Sg1.activeRow)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>"},{"title":"【FTP】apache ftpserver安装配置","layout":"post","comments":1,"date":"2018-04-10T04:11:26.000Z","keywords":null,"description":null,"_content":"### apache ftpserver下载\n[官网下载](http://mina.apache.org/ftpserver-project/downloads.html)\n\n<!-- more -->\n\n---\n\n### apache ftpserver安装\n#### 1. Linux下\n##### 1.1 下载\n进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可\n```\ncd /usr/download/\nwget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz\n```\n\n##### 1.2 解压\n```\ntar -zxvf apache-ftpserver-1.1.1.tar.gz\n```\n\n##### 1.3 安装\n```\nmv apache-ftpserver-1.1.1 /usr/local/ftpserver\n```\n\n##### 1.4 修改配置文件\n```\ncd /usr/local/ftpserver/res/conf/\nvim users.properties\n```\nusers.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：\n\n\t#用户名为anonymous，密码为空\n\ttpserver.user.anonymous.userpassword=\n\t#主目录\n\tftpserver.user.anonymous.homedirectory=./res/home\n\t#当前用户可用\n\tftpserver.user.anonymous.enableflag=true\n\t#具有上传权限\n\tftpserver.user.anonymous.writepermission=true\n\t#最大登陆用户数为20，0为不限\n\tftpserver.user.anonymous.maxloginnumber=20\n\t#同IP登陆用户数为2，0为不限\n\tftpserver.user.anonymous.maxloginperip=2 \n\t#空闲时间为300秒，0为不限\n\tftpserver.user.anonymous.idletime=300\n\t#上传速率限制为48字节每秒，0为不限\n\tftpserver.user.anonymous.uploadrate=4800\n\t#下载速率限制为48字节每秒，0为不限\n\tftpserver.user.anonymous.downloadrate=4800\n\n```\nvim ftpd-typical.xml\n```\n修改配置文件ftpd-file.xml，增加encrypt-passwords=\"clear\"，将密码加密方式修改为clear，默认为MD5加密方式。\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<server xmlns=\"http://mina.apache.org/ftpserver/spring/v1\"\n\t        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t        xsi:schemaLocation=\"\n\t           http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd        \n\t           \"\n\t        id=\"myServer\">\n\t        <listeners>\n\t                <nio-listener name=\"default\" port=\"21\">\n\t                    <ssl>\n\t                         <keystore file=\"./res/ftpserver.jks\" password=\"password\" />\n\t                    </ssl>\n\t                </nio-listener>\n\t        </listeners>\n\t        <file-user-manager file=\"./res/conf/users.properties\" encrypt-passwords=\"clear\" />\n\t</server>\n\n##### 1.5 启动\n在ftpserver目录下，执行命令：\n* 方式一：\n```\nsh  bin/ftpd.sh  /res/conf/ftpd-typical.xml\n```\n此方式有局限，当命令窗口退出时，FTP服务停止。\n* 方式二：\n```\nnohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &\n```\n此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。\n* 方式三：\n```\nnohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml > ftplog/`date '+%Y%m%d'`ftp.log  > /dev/null   2>&1  &\n```\n方式一、二无法启动时，可用此种方式。\n\n##### 1.5 测试\n在浏览器输入ftp://IP:21后，输入用户名，密码，可以登录ftp目录。\n\n---\n\n### Suse Linux Enterprise 12下实现脚本启动和关闭\n#### 1. 在~目录下，执行下面命令\n```\nvim .profile\n```\n\n#### 2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：\n\texport RC_LANG=zh_CN.UTF-8\n\texport FTPSERVER_HOME=/usr/local/ftpserver\n\texport PATH=$PATH:$FTPSERVER_HOME\n保存并退出。\n\n#### 3. 执行下面命令，使立即生效\n```\nsource ~/.profile\n```\n\n#### 4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，\n```\nvim /usr/local/ftpserver/ftpserver\n```\n在文件中写入如下代码，保存并退出。\n\n\t#!/bin/bash\n\t# /usr/local/ftpserver\n\t# YPN 2018-04-11 Create\n\n\tif [ \"$1\"x = \"start\"x ]; then\n\t  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1>/usr/local/ftpserver/res/log/ftpd.log 2>&1 &\n\tfi\n\tif [ \"$1\"x = \"stop\"x ]; then\n\t  kill $(ps aux|grep \"ftpserver\" | grep -v grep |awk '{print $2}')\n\tfi\n\tif [ \"$1\"x = \"check\"x ]; then\n\t  ps -aux|grep \"ftpserver\" | grep -v grep\n\tfi\n\tif [ \"$1\"x = \"log\"x ]; then\n\t  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000\n\tfi\n\n#### 5. 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/local/ftpserver/ftpserver\n```\n\n#### 6. 最后，执行下面命令可启动、关闭ftpserver或查看日志\n启动：\n```\nftpserver start\n```\n关闭：\n```\nftpserver stop\n```\n查看日志：\n```\nftpserver log\n```\n检查ftpserver进程：\n```\nftpserver check\n```\n\n#### 7. 随系统自启动\n> 暂未找到解决办法","source":"_posts/【FTP】apache-ftpserver安装配置.md","raw":"---\ntitle: 【FTP】apache ftpserver安装配置\nlayout: post\ncomments: true\ndate: 2018-04-10 12:11:26\ncategories: FTP\ntags: [FTP, apache ftpserver]\nkeywords:\ndescription:\n---\n### apache ftpserver下载\n[官网下载](http://mina.apache.org/ftpserver-project/downloads.html)\n\n<!-- more -->\n\n---\n\n### apache ftpserver安装\n#### 1. Linux下\n##### 1.1 下载\n进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可\n```\ncd /usr/download/\nwget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz\n```\n\n##### 1.2 解压\n```\ntar -zxvf apache-ftpserver-1.1.1.tar.gz\n```\n\n##### 1.3 安装\n```\nmv apache-ftpserver-1.1.1 /usr/local/ftpserver\n```\n\n##### 1.4 修改配置文件\n```\ncd /usr/local/ftpserver/res/conf/\nvim users.properties\n```\nusers.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：\n\n\t#用户名为anonymous，密码为空\n\ttpserver.user.anonymous.userpassword=\n\t#主目录\n\tftpserver.user.anonymous.homedirectory=./res/home\n\t#当前用户可用\n\tftpserver.user.anonymous.enableflag=true\n\t#具有上传权限\n\tftpserver.user.anonymous.writepermission=true\n\t#最大登陆用户数为20，0为不限\n\tftpserver.user.anonymous.maxloginnumber=20\n\t#同IP登陆用户数为2，0为不限\n\tftpserver.user.anonymous.maxloginperip=2 \n\t#空闲时间为300秒，0为不限\n\tftpserver.user.anonymous.idletime=300\n\t#上传速率限制为48字节每秒，0为不限\n\tftpserver.user.anonymous.uploadrate=4800\n\t#下载速率限制为48字节每秒，0为不限\n\tftpserver.user.anonymous.downloadrate=4800\n\n```\nvim ftpd-typical.xml\n```\n修改配置文件ftpd-file.xml，增加encrypt-passwords=\"clear\"，将密码加密方式修改为clear，默认为MD5加密方式。\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<server xmlns=\"http://mina.apache.org/ftpserver/spring/v1\"\n\t        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t        xsi:schemaLocation=\"\n\t           http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd        \n\t           \"\n\t        id=\"myServer\">\n\t        <listeners>\n\t                <nio-listener name=\"default\" port=\"21\">\n\t                    <ssl>\n\t                         <keystore file=\"./res/ftpserver.jks\" password=\"password\" />\n\t                    </ssl>\n\t                </nio-listener>\n\t        </listeners>\n\t        <file-user-manager file=\"./res/conf/users.properties\" encrypt-passwords=\"clear\" />\n\t</server>\n\n##### 1.5 启动\n在ftpserver目录下，执行命令：\n* 方式一：\n```\nsh  bin/ftpd.sh  /res/conf/ftpd-typical.xml\n```\n此方式有局限，当命令窗口退出时，FTP服务停止。\n* 方式二：\n```\nnohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &\n```\n此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。\n* 方式三：\n```\nnohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml > ftplog/`date '+%Y%m%d'`ftp.log  > /dev/null   2>&1  &\n```\n方式一、二无法启动时，可用此种方式。\n\n##### 1.5 测试\n在浏览器输入ftp://IP:21后，输入用户名，密码，可以登录ftp目录。\n\n---\n\n### Suse Linux Enterprise 12下实现脚本启动和关闭\n#### 1. 在~目录下，执行下面命令\n```\nvim .profile\n```\n\n#### 2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：\n\texport RC_LANG=zh_CN.UTF-8\n\texport FTPSERVER_HOME=/usr/local/ftpserver\n\texport PATH=$PATH:$FTPSERVER_HOME\n保存并退出。\n\n#### 3. 执行下面命令，使立即生效\n```\nsource ~/.profile\n```\n\n#### 4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，\n```\nvim /usr/local/ftpserver/ftpserver\n```\n在文件中写入如下代码，保存并退出。\n\n\t#!/bin/bash\n\t# /usr/local/ftpserver\n\t# YPN 2018-04-11 Create\n\n\tif [ \"$1\"x = \"start\"x ]; then\n\t  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1>/usr/local/ftpserver/res/log/ftpd.log 2>&1 &\n\tfi\n\tif [ \"$1\"x = \"stop\"x ]; then\n\t  kill $(ps aux|grep \"ftpserver\" | grep -v grep |awk '{print $2}')\n\tfi\n\tif [ \"$1\"x = \"check\"x ]; then\n\t  ps -aux|grep \"ftpserver\" | grep -v grep\n\tfi\n\tif [ \"$1\"x = \"log\"x ]; then\n\t  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000\n\tfi\n\n#### 5. 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/local/ftpserver/ftpserver\n```\n\n#### 6. 最后，执行下面命令可启动、关闭ftpserver或查看日志\n启动：\n```\nftpserver start\n```\n关闭：\n```\nftpserver stop\n```\n查看日志：\n```\nftpserver log\n```\n检查ftpserver进程：\n```\nftpserver check\n```\n\n#### 7. 随系统自启动\n> 暂未找到解决办法","slug":"【FTP】apache-ftpserver安装配置","published":1,"updated":"2018-04-11T06:41:16.015Z","_id":"cjpuwa1gl000ss0jt5400x5q3","photos":[],"link":"","content":"<h3 id=\"apache-ftpserver下载\"><a href=\"#apache-ftpserver下载\" class=\"headerlink\" title=\"apache ftpserver下载\"></a>apache ftpserver下载</h3><p><a href=\"http://mina.apache.org/ftpserver-project/downloads.html\" target=\"_blank\" rel=\"noopener\">官网下载</a></p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"apache-ftpserver安装\"><a href=\"#apache-ftpserver安装\" class=\"headerlink\" title=\"apache ftpserver安装\"></a>apache ftpserver安装</h3><h4 id=\"1-Linux下\"><a href=\"#1-Linux下\" class=\"headerlink\" title=\"1. Linux下\"></a>1. Linux下</h4><h5 id=\"1-1-下载\"><a href=\"#1-1-下载\" class=\"headerlink\" title=\"1.1 下载\"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/download/</span><br><span class=\"line\">wget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"1-2-解压\"><a href=\"#1-2-解压\" class=\"headerlink\" title=\"1.2 解压\"></a>1.2 解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-安装\"><a href=\"#1-3-安装\" class=\"headerlink\" title=\"1.3 安装\"></a>1.3 安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv apache-ftpserver-1.1.1 /usr/local/ftpserver</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-4-修改配置文件\"><a href=\"#1-4-修改配置文件\" class=\"headerlink\" title=\"1.4 修改配置文件\"></a>1.4 修改配置文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/ftpserver/res/conf/</span><br><span class=\"line\">vim users.properties</span><br></pre></td></tr></table></figure>\n<p>users.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：</p>\n<pre><code>#用户名为anonymous，密码为空\ntpserver.user.anonymous.userpassword=\n#主目录\nftpserver.user.anonymous.homedirectory=./res/home\n#当前用户可用\nftpserver.user.anonymous.enableflag=true\n#具有上传权限\nftpserver.user.anonymous.writepermission=true\n#最大登陆用户数为20，0为不限\nftpserver.user.anonymous.maxloginnumber=20\n#同IP登陆用户数为2，0为不限\nftpserver.user.anonymous.maxloginperip=2 \n#空闲时间为300秒，0为不限\nftpserver.user.anonymous.idletime=300\n#上传速率限制为48字节每秒，0为不限\nftpserver.user.anonymous.uploadrate=4800\n#下载速率限制为48字节每秒，0为不限\nftpserver.user.anonymous.downloadrate=4800\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ftpd-typical.xml</span><br></pre></td></tr></table></figure>\n<p>修改配置文件ftpd-file.xml，增加encrypt-passwords=”clear”，将密码加密方式修改为clear，默认为MD5加密方式。</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;server xmlns=&quot;http://mina.apache.org/ftpserver/spring/v1&quot;\n        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n        xsi:schemaLocation=&quot;\n           http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd        \n           &quot;\n        id=&quot;myServer&quot;&gt;\n        &lt;listeners&gt;\n                &lt;nio-listener name=&quot;default&quot; port=&quot;21&quot;&gt;\n                    &lt;ssl&gt;\n                         &lt;keystore file=&quot;./res/ftpserver.jks&quot; password=&quot;password&quot; /&gt;\n                    &lt;/ssl&gt;\n                &lt;/nio-listener&gt;\n        &lt;/listeners&gt;\n        &lt;file-user-manager file=&quot;./res/conf/users.properties&quot; encrypt-passwords=&quot;clear&quot; /&gt;\n&lt;/server&gt;\n</code></pre><h5 id=\"1-5-启动\"><a href=\"#1-5-启动\" class=\"headerlink\" title=\"1.5 启动\"></a>1.5 启动</h5><p>在ftpserver目录下，执行命令：</p>\n<ul>\n<li>方式一：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh  bin/ftpd.sh  /res/conf/ftpd-typical.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此方式有局限，当命令窗口退出时，FTP服务停止。</p>\n<ul>\n<li>方式二：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &amp;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。</p>\n<ul>\n<li>方式三：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml &gt; ftplog/`date &apos;+%Y%m%d&apos;`ftp.log  &gt; /dev/null   2&gt;&amp;1  &amp;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>方式一、二无法启动时，可用此种方式。</p>\n<h5 id=\"1-5-测试\"><a href=\"#1-5-测试\" class=\"headerlink\" title=\"1.5 测试\"></a>1.5 测试</h5><p>在浏览器输入ftp://IP:21后，输入用户名，密码，可以登录ftp目录。</p>\n<hr>\n<h3 id=\"Suse-Linux-Enterprise-12下实现脚本启动和关闭\"><a href=\"#Suse-Linux-Enterprise-12下实现脚本启动和关闭\" class=\"headerlink\" title=\"Suse Linux Enterprise 12下实现脚本启动和关闭\"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id=\"1-在-目录下，执行下面命令\"><a href=\"#1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"1. 在~目录下，执行下面命令\"></a>1. 在~目录下，执行下面命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code>export RC_LANG=zh_CN.UTF-8\nexport FTPSERVER_HOME=/usr/local/ftpserver\nexport PATH=$PATH:$FTPSERVER_HOME\n</code></pre><p>保存并退出。</p>\n<h4 id=\"3-执行下面命令，使立即生效\"><a href=\"#3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"3. 执行下面命令，使立即生效\"></a>3. 执行下面命令，使立即生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，\"><a href=\"#4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，\" class=\"headerlink\" title=\"4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，\"></a>4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/local/ftpserver\n# YPN 2018-04-11 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1&gt;/usr/local/ftpserver/res/log/ftpd.log 2&gt;&amp;1 &amp;\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  kill $(ps aux|grep &quot;ftpserver&quot; | grep -v grep |awk &apos;{print $2}&apos;)\nfi\nif [ &quot;$1&quot;x = &quot;check&quot;x ]; then\n  ps -aux|grep &quot;ftpserver&quot; | grep -v grep\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000\nfi\n</code></pre><h4 id=\"5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"5. 给文件添加权限，使脚本文件可以执行，命令为\"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-最后，执行下面命令可启动、关闭ftpserver或查看日志\"><a href=\"#6-最后，执行下面命令可启动、关闭ftpserver或查看日志\" class=\"headerlink\" title=\"6. 最后，执行下面命令可启动、关闭ftpserver或查看日志\"></a>6. 最后，执行下面命令可启动、关闭ftpserver或查看日志</h4><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver log</span><br></pre></td></tr></table></figure></p>\n<p>检查ftpserver进程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver check</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-随系统自启动\"><a href=\"#7-随系统自启动\" class=\"headerlink\" title=\"7. 随系统自启动\"></a>7. 随系统自启动</h4><blockquote>\n<p>暂未找到解决办法</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"apache-ftpserver下载\"><a href=\"#apache-ftpserver下载\" class=\"headerlink\" title=\"apache ftpserver下载\"></a>apache ftpserver下载</h3><p><a href=\"http://mina.apache.org/ftpserver-project/downloads.html\" target=\"_blank\" rel=\"noopener\">官网下载</a></p>","more":"<hr>\n<h3 id=\"apache-ftpserver安装\"><a href=\"#apache-ftpserver安装\" class=\"headerlink\" title=\"apache ftpserver安装\"></a>apache ftpserver安装</h3><h4 id=\"1-Linux下\"><a href=\"#1-Linux下\" class=\"headerlink\" title=\"1. Linux下\"></a>1. Linux下</h4><h5 id=\"1-1-下载\"><a href=\"#1-1-下载\" class=\"headerlink\" title=\"1.1 下载\"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/download/</span><br><span class=\"line\">wget http://mirrors.shu.edu.cn/apache/mina/ftpserver/1.1.1/dist/apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"1-2-解压\"><a href=\"#1-2-解压\" class=\"headerlink\" title=\"1.2 解压\"></a>1.2 解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf apache-ftpserver-1.1.1.tar.gz</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-安装\"><a href=\"#1-3-安装\" class=\"headerlink\" title=\"1.3 安装\"></a>1.3 安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv apache-ftpserver-1.1.1 /usr/local/ftpserver</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-4-修改配置文件\"><a href=\"#1-4-修改配置文件\" class=\"headerlink\" title=\"1.4 修改配置文件\"></a>1.4 修改配置文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/ftpserver/res/conf/</span><br><span class=\"line\">vim users.properties</span><br></pre></td></tr></table></figure>\n<p>users.properties文件存放的是用户名及密码权限等配置信息，通过修改该文件来添加和管理用户及权限等信息。参考下面内容配置：</p>\n<pre><code>#用户名为anonymous，密码为空\ntpserver.user.anonymous.userpassword=\n#主目录\nftpserver.user.anonymous.homedirectory=./res/home\n#当前用户可用\nftpserver.user.anonymous.enableflag=true\n#具有上传权限\nftpserver.user.anonymous.writepermission=true\n#最大登陆用户数为20，0为不限\nftpserver.user.anonymous.maxloginnumber=20\n#同IP登陆用户数为2，0为不限\nftpserver.user.anonymous.maxloginperip=2 \n#空闲时间为300秒，0为不限\nftpserver.user.anonymous.idletime=300\n#上传速率限制为48字节每秒，0为不限\nftpserver.user.anonymous.uploadrate=4800\n#下载速率限制为48字节每秒，0为不限\nftpserver.user.anonymous.downloadrate=4800\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ftpd-typical.xml</span><br></pre></td></tr></table></figure>\n<p>修改配置文件ftpd-file.xml，增加encrypt-passwords=”clear”，将密码加密方式修改为clear，默认为MD5加密方式。</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;server xmlns=&quot;http://mina.apache.org/ftpserver/spring/v1&quot;\n        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n        xsi:schemaLocation=&quot;\n           http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd        \n           &quot;\n        id=&quot;myServer&quot;&gt;\n        &lt;listeners&gt;\n                &lt;nio-listener name=&quot;default&quot; port=&quot;21&quot;&gt;\n                    &lt;ssl&gt;\n                         &lt;keystore file=&quot;./res/ftpserver.jks&quot; password=&quot;password&quot; /&gt;\n                    &lt;/ssl&gt;\n                &lt;/nio-listener&gt;\n        &lt;/listeners&gt;\n        &lt;file-user-manager file=&quot;./res/conf/users.properties&quot; encrypt-passwords=&quot;clear&quot; /&gt;\n&lt;/server&gt;\n</code></pre><h5 id=\"1-5-启动\"><a href=\"#1-5-启动\" class=\"headerlink\" title=\"1.5 启动\"></a>1.5 启动</h5><p>在ftpserver目录下，执行命令：</p>\n<ul>\n<li>方式一：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh  bin/ftpd.sh  /res/conf/ftpd-typical.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此方式有局限，当命令窗口退出时，FTP服务停止。</p>\n<ul>\n<li>方式二：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup ./bin/ftpd.sh res/conf/ftpd-typical.xml &amp;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此方式为后台启动FTP服务，服务一直启动，不管窗口是否退出。</p>\n<ul>\n<li>方式三：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup sh   apache-ftpserver-1.0.6/bin/ftpd.sh   /res/conf/ftpd-typical.xml &gt; ftplog/`date &apos;+%Y%m%d&apos;`ftp.log  &gt; /dev/null   2&gt;&amp;1  &amp;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>方式一、二无法启动时，可用此种方式。</p>\n<h5 id=\"1-5-测试\"><a href=\"#1-5-测试\" class=\"headerlink\" title=\"1.5 测试\"></a>1.5 测试</h5><p>在浏览器输入ftp://IP:21后，输入用户名，密码，可以登录ftp目录。</p>\n<hr>\n<h3 id=\"Suse-Linux-Enterprise-12下实现脚本启动和关闭\"><a href=\"#Suse-Linux-Enterprise-12下实现脚本启动和关闭\" class=\"headerlink\" title=\"Suse Linux Enterprise 12下实现脚本启动和关闭\"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id=\"1-在-目录下，执行下面命令\"><a href=\"#1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"1. 在~目录下，执行下面命令\"></a>1. 在~目录下，执行下面命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-在-profile文件中定义FTPSERVER-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2. 在.profile文件中定义FTPSERVER_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code>export RC_LANG=zh_CN.UTF-8\nexport FTPSERVER_HOME=/usr/local/ftpserver\nexport PATH=$PATH:$FTPSERVER_HOME\n</code></pre><p>保存并退出。</p>\n<h4 id=\"3-执行下面命令，使立即生效\"><a href=\"#3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"3. 执行下面命令，使立即生效\"></a>3. 执行下面命令，使立即生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，\"><a href=\"#4-执行下面命令，在FTPSERVER-HOME目录下创建脚本文件，\" class=\"headerlink\" title=\"4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，\"></a>4. 执行下面命令，在FTPSERVER_HOME目录下创建脚本文件，</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/local/ftpserver\n# YPN 2018-04-11 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  nohup /usr/local/ftpserver/bin/ftpd.sh res/conf/ftpd-typical.xml 1&gt;/usr/local/ftpserver/res/log/ftpd.log 2&gt;&amp;1 &amp;\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  kill $(ps aux|grep &quot;ftpserver&quot; | grep -v grep |awk &apos;{print $2}&apos;)\nfi\nif [ &quot;$1&quot;x = &quot;check&quot;x ]; then\n  ps -aux|grep &quot;ftpserver&quot; | grep -v grep\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f /usr/local/ftpserver/res/log/ftpd.log -n 1000\nfi\n</code></pre><h4 id=\"5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"5. 给文件添加权限，使脚本文件可以执行，命令为\"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/local/ftpserver/ftpserver</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-最后，执行下面命令可启动、关闭ftpserver或查看日志\"><a href=\"#6-最后，执行下面命令可启动、关闭ftpserver或查看日志\" class=\"headerlink\" title=\"6. 最后，执行下面命令可启动、关闭ftpserver或查看日志\"></a>6. 最后，执行下面命令可启动、关闭ftpserver或查看日志</h4><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver log</span><br></pre></td></tr></table></figure></p>\n<p>检查ftpserver进程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftpserver check</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-随系统自启动\"><a href=\"#7-随系统自启动\" class=\"headerlink\" title=\"7. 随系统自启动\"></a>7. 随系统自启动</h4><blockquote>\n<p>暂未找到解决办法</p>\n</blockquote>"},{"title":"【Flex】dataGrid设置列对齐方式","layout":"post","comments":1,"date":"2016-12-22T08:23:25.000Z","keywords":"列对齐","description":null,"_content":"可参照以下实例设置：\n<!-- more -->\n```as3\n<s:GridColumn dataField=\"sex\" headerText=\"Sex\">\n\t<s:headerRenderer>\n\t\t<fx:Component>\n\t\t\t<s:DefaultGridHeaderRenderer>\n\t\t\t\t<s:labelDisplay>\n\t\t\t\t\t<s:Label left=\"0\" right=\"0\" top=\"0\" bottom=\"0\"\n\t\t\t\t\t\t\t fontWeight=\"bold\" maxDisplayedLines=\"1\"\n\t\t\t\t\t\t\t textAlign=\"center\" verticalAlign=\"middle\"/>\n\t\t\t\t</s:labelDisplay>\n\t\t\t</s:DefaultGridHeaderRenderer>\n\t\t</fx:Component>\n\t</s:headerRenderer>\n\t<s:itemRenderer>\n\t\t<fx:Component>\n\t\t\t<s:DefaultGridItemRenderer textAlign=\"center\"/>\n\t\t</fx:Component>\n\t</s:itemRenderer>\n</s:GridColumn>\n```","source":"_posts/【Flex】dataGrid设置列对齐方式.md","raw":"---\ntitle: 【Flex】dataGrid设置列对齐方式\nlayout: post\ncomments: true\ndate: 2016-12-22 16:23:25\ncategories: Flex\ntags: [Flex, dataGrid]\nkeywords: 列对齐\ndescription:\n---\n可参照以下实例设置：\n<!-- more -->\n```as3\n<s:GridColumn dataField=\"sex\" headerText=\"Sex\">\n\t<s:headerRenderer>\n\t\t<fx:Component>\n\t\t\t<s:DefaultGridHeaderRenderer>\n\t\t\t\t<s:labelDisplay>\n\t\t\t\t\t<s:Label left=\"0\" right=\"0\" top=\"0\" bottom=\"0\"\n\t\t\t\t\t\t\t fontWeight=\"bold\" maxDisplayedLines=\"1\"\n\t\t\t\t\t\t\t textAlign=\"center\" verticalAlign=\"middle\"/>\n\t\t\t\t</s:labelDisplay>\n\t\t\t</s:DefaultGridHeaderRenderer>\n\t\t</fx:Component>\n\t</s:headerRenderer>\n\t<s:itemRenderer>\n\t\t<fx:Component>\n\t\t\t<s:DefaultGridItemRenderer textAlign=\"center\"/>\n\t\t</fx:Component>\n\t</s:itemRenderer>\n</s:GridColumn>\n```","slug":"【Flex】dataGrid设置列对齐方式","published":1,"updated":"2017-02-27T04:09:32.240Z","_id":"cjpuwa1gm000us0jt23pqzucg","photos":[],"link":"","content":"<p>可参照以下实例设置：<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;s:GridColumn dataField=&quot;sex&quot; headerText=&quot;Sex&quot;&gt;</span><br><span class=\"line\">\t&lt;s:headerRenderer&gt;</span><br><span class=\"line\">\t\t&lt;fx:Component&gt;</span><br><span class=\"line\">\t\t\t&lt;s:DefaultGridHeaderRenderer&gt;</span><br><span class=\"line\">\t\t\t\t&lt;s:labelDisplay&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;s:Label left=&quot;0&quot; right=&quot;0&quot; top=&quot;0&quot; bottom=&quot;0&quot;</span><br><span class=\"line\">\t\t\t\t\t\t\t fontWeight=&quot;bold&quot; maxDisplayedLines=&quot;1&quot;</span><br><span class=\"line\">\t\t\t\t\t\t\t textAlign=&quot;center&quot; verticalAlign=&quot;middle&quot;/&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/s:labelDisplay&gt;</span><br><span class=\"line\">\t\t\t&lt;/s:DefaultGridHeaderRenderer&gt;</span><br><span class=\"line\">\t\t&lt;/fx:Component&gt;</span><br><span class=\"line\">\t&lt;/s:headerRenderer&gt;</span><br><span class=\"line\">\t&lt;s:itemRenderer&gt;</span><br><span class=\"line\">\t\t&lt;fx:Component&gt;</span><br><span class=\"line\">\t\t\t&lt;s:DefaultGridItemRenderer textAlign=&quot;center&quot;/&gt;</span><br><span class=\"line\">\t\t&lt;/fx:Component&gt;</span><br><span class=\"line\">\t&lt;/s:itemRenderer&gt;</span><br><span class=\"line\">&lt;/s:GridColumn&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>可参照以下实例设置：<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;s:GridColumn dataField=&quot;sex&quot; headerText=&quot;Sex&quot;&gt;</span><br><span class=\"line\">\t&lt;s:headerRenderer&gt;</span><br><span class=\"line\">\t\t&lt;fx:Component&gt;</span><br><span class=\"line\">\t\t\t&lt;s:DefaultGridHeaderRenderer&gt;</span><br><span class=\"line\">\t\t\t\t&lt;s:labelDisplay&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;s:Label left=&quot;0&quot; right=&quot;0&quot; top=&quot;0&quot; bottom=&quot;0&quot;</span><br><span class=\"line\">\t\t\t\t\t\t\t fontWeight=&quot;bold&quot; maxDisplayedLines=&quot;1&quot;</span><br><span class=\"line\">\t\t\t\t\t\t\t textAlign=&quot;center&quot; verticalAlign=&quot;middle&quot;/&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/s:labelDisplay&gt;</span><br><span class=\"line\">\t\t\t&lt;/s:DefaultGridHeaderRenderer&gt;</span><br><span class=\"line\">\t\t&lt;/fx:Component&gt;</span><br><span class=\"line\">\t&lt;/s:headerRenderer&gt;</span><br><span class=\"line\">\t&lt;s:itemRenderer&gt;</span><br><span class=\"line\">\t\t&lt;fx:Component&gt;</span><br><span class=\"line\">\t\t\t&lt;s:DefaultGridItemRenderer textAlign=&quot;center&quot;/&gt;</span><br><span class=\"line\">\t\t&lt;/fx:Component&gt;</span><br><span class=\"line\">\t&lt;/s:itemRenderer&gt;</span><br><span class=\"line\">&lt;/s:GridColumn&gt;</span><br></pre></td></tr></table></figure></p>"},{"title":"【Flex】flash builder 4.6免费使用方法","layout":"post","comments":1,"date":"2016-12-27T07:18:23.000Z","keywords":"免费","description":"整理自网络","_content":"\nFlash Builder 4.6免费使用具体步骤如下：\n1. 到Adobe官网下载FlashBuilder 4.6，有简体中文版；\n<!-- more -->\n2. 安装时，不用序列号，直接选择安装试用版；\n3. 安装完成后在安装目录下依次修改下列3个文件：\n (1)`.eclipse\\plugins\\com.adobe.flexbuilder.project_4.6.0.328916\\META-INF`下面的`MANIFEST.MF`修改：\n \t\tBundle-Version: 0.0.0\n (2)`.eclipse\\features\\com.adobe.flexide.feature_4.6.0.328916`下面的`feature.xml`修改：\n\t\t<plugin\n\t\t id=\"com.adobe.flexbuilder.project\"\n\t\t download-size=\"0\"\n\t\t install-size=\"0\"\n\t\t version=\"0.0.0\"/>\n (3)`.eclipse\\plugins\\com.adobe.flexbuilder.flex_4.6.0.328916`下面，复制`config.xml`并重命名为`config_builder.xml`即可。\n\n>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。","source":"_posts/【Flex】flash builder 4.6免费使用方法.md","raw":"---\ntitle: 【Flex】flash builder 4.6免费使用方法\nlayout: post\ncomments: true\ndate: 2016-12-27 15:18:23\ncategories: Flex\ntags: [Flex, flash builder]\nkeywords: 免费\ndescription: 整理自网络\n---\n\nFlash Builder 4.6免费使用具体步骤如下：\n1. 到Adobe官网下载FlashBuilder 4.6，有简体中文版；\n<!-- more -->\n2. 安装时，不用序列号，直接选择安装试用版；\n3. 安装完成后在安装目录下依次修改下列3个文件：\n (1)`.eclipse\\plugins\\com.adobe.flexbuilder.project_4.6.0.328916\\META-INF`下面的`MANIFEST.MF`修改：\n \t\tBundle-Version: 0.0.0\n (2)`.eclipse\\features\\com.adobe.flexide.feature_4.6.0.328916`下面的`feature.xml`修改：\n\t\t<plugin\n\t\t id=\"com.adobe.flexbuilder.project\"\n\t\t download-size=\"0\"\n\t\t install-size=\"0\"\n\t\t version=\"0.0.0\"/>\n (3)`.eclipse\\plugins\\com.adobe.flexbuilder.flex_4.6.0.328916`下面，复制`config.xml`并重命名为`config_builder.xml`即可。\n\n>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。","slug":"【Flex】flash builder 4.6免费使用方法","published":1,"updated":"2017-02-27T04:10:06.213Z","_id":"cjpuwa1gq000zs0jtymrj9zh4","photos":[],"link":"","content":"<p>Flash Builder 4.6免费使用具体步骤如下：</p>\n<ol>\n<li>到Adobe官网下载FlashBuilder 4.6，有简体中文版；<a id=\"more\"></a></li>\n<li>安装时，不用序列号，直接选择安装试用版；</li>\n<li>安装完成后在安装目录下依次修改下列3个文件：<br>(1)<code>.eclipse\\plugins\\com.adobe.flexbuilder.project_4.6.0.328916\\META-INF</code>下面的<code>MANIFEST.MF</code>修改：<pre><code>Bundle-Version: 0.0.0\n</code></pre>(2)<code>.eclipse\\features\\com.adobe.flexide.feature_4.6.0.328916</code>下面的<code>feature.xml</code>修改：<pre><code>&lt;plugin\n id=&quot;com.adobe.flexbuilder.project&quot;\n download-size=&quot;0&quot;\n install-size=&quot;0&quot;\n version=&quot;0.0.0&quot;/&gt;\n</code></pre>(3)<code>.eclipse\\plugins\\com.adobe.flexbuilder.flex_4.6.0.328916</code>下面，复制<code>config.xml</code>并重命名为<code>config_builder.xml</code>即可。</li>\n</ol>\n<blockquote>\n<p>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>Flash Builder 4.6免费使用具体步骤如下：</p>\n<ol>\n<li>到Adobe官网下载FlashBuilder 4.6，有简体中文版；","more":"</li>\n<li>安装时，不用序列号，直接选择安装试用版；</li>\n<li>安装完成后在安装目录下依次修改下列3个文件：<br>(1)<code>.eclipse\\plugins\\com.adobe.flexbuilder.project_4.6.0.328916\\META-INF</code>下面的<code>MANIFEST.MF</code>修改：<pre><code>Bundle-Version: 0.0.0\n</code></pre>(2)<code>.eclipse\\features\\com.adobe.flexide.feature_4.6.0.328916</code>下面的<code>feature.xml</code>修改：<pre><code>&lt;plugin\n id=&quot;com.adobe.flexbuilder.project&quot;\n download-size=&quot;0&quot;\n install-size=&quot;0&quot;\n version=&quot;0.0.0&quot;/&gt;\n</code></pre>(3)<code>.eclipse\\plugins\\com.adobe.flexbuilder.flex_4.6.0.328916</code>下面，复制<code>config.xml</code>并重命名为<code>config_builder.xml</code>即可。</li>\n</ol>\n<blockquote>\n<p>以上版本号请跟据实际版本号进行替换，修改完成之后，再启动Adobe Flash Builder 4.6，就可免费使用这款RIA工具了。</p>\n</blockquote>"},{"title":"【Flex】dataGrid自动生成序号","layout":"post","comments":1,"date":"2016-12-22T08:23:55.000Z","keywords":"序号","description":null,"_content":"通过LabelFunction属性实现自动生成序号。\n定义方法：\n```as3\n/**\n* 生成datagrid第一列用的序号\n*/\nprivate function formatIndexNumber(item:Object, colum:Object):String\n{\n    return indexNumLabelFun(item, colum.mx_internal::owner);\n}\n \npublic static function indexNumLabelFun(value:Object, dataGrid:Object):String\n{\n   var arr: Array = dataGrid.dataProvider.source;\n   var indexNum: int = (arr.indexOf(value) + 1);            \n   return indexNum.toString();\n}\n```\n<!-- more -->\n设置界面：\n```as3\n------------------- Item中设置 LabelFunction 属性----------------------\n<mx:DataGridColumn headerText=\"序号\" width=\"50\" labelFunction=\"formatIndexNumber\" />\n```","source":"_posts/【Flex】dataGrid自动生成序号.md","raw":"---\ntitle: 【Flex】dataGrid自动生成序号\nlayout: post\ncomments: true\ndate: 2016-12-22 16:23:55\ncategories: Flex\ntags: [Flex, dataGrid]\nkeywords: 序号\ndescription:\n---\n通过LabelFunction属性实现自动生成序号。\n定义方法：\n```as3\n/**\n* 生成datagrid第一列用的序号\n*/\nprivate function formatIndexNumber(item:Object, colum:Object):String\n{\n    return indexNumLabelFun(item, colum.mx_internal::owner);\n}\n \npublic static function indexNumLabelFun(value:Object, dataGrid:Object):String\n{\n   var arr: Array = dataGrid.dataProvider.source;\n   var indexNum: int = (arr.indexOf(value) + 1);            \n   return indexNum.toString();\n}\n```\n<!-- more -->\n设置界面：\n```as3\n------------------- Item中设置 LabelFunction 属性----------------------\n<mx:DataGridColumn headerText=\"序号\" width=\"50\" labelFunction=\"formatIndexNumber\" />\n```","slug":"【Flex】dataGrid自动生成序号","published":1,"updated":"2017-02-27T04:09:41.357Z","_id":"cjpuwa1gt0011s0jtok2xlio4","photos":[],"link":"","content":"<p>通过LabelFunction属性实现自动生成序号。<br>定义方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">* 生成datagrid第一列用的序号</span><br><span class=\"line\">*/</span><br><span class=\"line\">private function formatIndexNumber(item:Object, colum:Object):String</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return indexNumLabelFun(item, colum.mx_internal::owner);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">public static function indexNumLabelFun(value:Object, dataGrid:Object):String</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   var arr: Array = dataGrid.dataProvider.source;</span><br><span class=\"line\">   var indexNum: int = (arr.indexOf(value) + 1);            </span><br><span class=\"line\">   return indexNum.toString();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>设置界面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------------------- Item中设置 LabelFunction 属性----------------------</span><br><span class=\"line\">&lt;mx:DataGridColumn headerText=&quot;序号&quot; width=&quot;50&quot; labelFunction=&quot;formatIndexNumber&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>通过LabelFunction属性实现自动生成序号。<br>定义方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">* 生成datagrid第一列用的序号</span><br><span class=\"line\">*/</span><br><span class=\"line\">private function formatIndexNumber(item:Object, colum:Object):String</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return indexNumLabelFun(item, colum.mx_internal::owner);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">public static function indexNumLabelFun(value:Object, dataGrid:Object):String</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   var arr: Array = dataGrid.dataProvider.source;</span><br><span class=\"line\">   var indexNum: int = (arr.indexOf(value) + 1);            </span><br><span class=\"line\">   return indexNum.toString();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<p>设置界面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------------------- Item中设置 LabelFunction 属性----------------------</span><br><span class=\"line\">&lt;mx:DataGridColumn headerText=&quot;序号&quot; width=&quot;50&quot; labelFunction=&quot;formatIndexNumber&quot; /&gt;</span><br></pre></td></tr></table></figure></p>"},{"title":"【Flex】flash builder 4.6效率优化方法","layout":"post","comments":1,"date":"2016-12-27T07:42:09.000Z","keywords":"优化","description":"整理自网络","_content":"\nFlash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：\n\n1. 在安装路径下找到`FlexBuilder.ini`文件，进行编辑，加入以下参数：\n\t\t-vmargs\n\t\t-Xms128m\n\t\t-Xmx512m\n\t\t-XX:MaxPermSize=256m\n\t\t-XX:PermSize=64m    \t\t\t\t#不要设置太高，否则会更加慢\n\t\t-Djava.net.preferIPv4Stack=true\n加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。\n<!-- more -->\n2. 由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑`{Flex SDK}`安装路径`/bin/jvm.config`文件如下：\n\t\tjava.args=-Xmx512m -Dsun.io.useCanonCaches=false\n如果还是有Error，可以增加到1024或者更多试试。\n>我的flex4.6安装路径中的sdk位置：D:\\Adobe\\Adobe Flash Builder 4\\sdks\\4.0.0\\bin\\jvm.config，只需在这里调整即可！","source":"_posts/【Flex】flash builder 4.6效率优化方法.md","raw":"---\ntitle: 【Flex】flash builder 4.6效率优化方法\nlayout: post\ncomments: true\ndate: 2016-12-27 15:42:09\ncategories: Flex\ntags: [Flex, flash builder]\nkeywords: 优化\ndescription: 整理自网络\n---\n\nFlash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：\n\n1. 在安装路径下找到`FlexBuilder.ini`文件，进行编辑，加入以下参数：\n\t\t-vmargs\n\t\t-Xms128m\n\t\t-Xmx512m\n\t\t-XX:MaxPermSize=256m\n\t\t-XX:PermSize=64m    \t\t\t\t#不要设置太高，否则会更加慢\n\t\t-Djava.net.preferIPv4Stack=true\n加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。\n<!-- more -->\n2. 由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑`{Flex SDK}`安装路径`/bin/jvm.config`文件如下：\n\t\tjava.args=-Xmx512m -Dsun.io.useCanonCaches=false\n如果还是有Error，可以增加到1024或者更多试试。\n>我的flex4.6安装路径中的sdk位置：D:\\Adobe\\Adobe Flash Builder 4\\sdks\\4.0.0\\bin\\jvm.config，只需在这里调整即可！","slug":"【Flex】flash builder 4.6效率优化方法","published":1,"updated":"2017-02-27T04:10:12.674Z","_id":"cjpuwa1gx0014s0jtwxr9xojy","photos":[],"link":"","content":"<p>Flash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：</p>\n<ol>\n<li>在安装路径下找到<code>FlexBuilder.ini</code>文件，进行编辑，加入以下参数：<pre><code>-vmargs\n-Xms128m\n-Xmx512m\n-XX:MaxPermSize=256m\n-XX:PermSize=64m                    #不要设置太高，否则会更加慢\n-Djava.net.preferIPv4Stack=true\n</code></pre>加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。<a id=\"more\"></a></li>\n<li>由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑<code>{Flex SDK}</code>安装路径<code>/bin/jvm.config</code>文件如下：<pre><code>java.args=-Xmx512m -Dsun.io.useCanonCaches=false\n</code></pre>如果还是有Error，可以增加到1024或者更多试试。<blockquote>\n<p>我的flex4.6安装路径中的sdk位置：D:\\Adobe\\Adobe Flash Builder 4\\sdks\\4.0.0\\bin\\jvm.config，只需在这里调整即可！</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>Flash Builder 4.6编译慢、报java heap space堆空间异常错误的优化方法：</p>\n<ol>\n<li>在安装路径下找到<code>FlexBuilder.ini</code>文件，进行编辑，加入以下参数：<pre><code>-vmargs\n-Xms128m\n-Xmx512m\n-XX:MaxPermSize=256m\n-XX:PermSize=64m                    #不要设置太高，否则会更加慢\n-Djava.net.preferIPv4Stack=true\n</code></pre>加入后可以明显加快编译速度数倍，第3条可以明显减低FB挂掉的几率。","more":"</li>\n<li>由于Flex Builder compiler shell有memory leak的问题，而SDK默认的的 JVM heap size 只有312M，当compile比较大的project时内存容易不够，所以只要修改SDK的JVM参数就可以。即编辑<code>{Flex SDK}</code>安装路径<code>/bin/jvm.config</code>文件如下：<pre><code>java.args=-Xmx512m -Dsun.io.useCanonCaches=false\n</code></pre>如果还是有Error，可以增加到1024或者更多试试。<blockquote>\n<p>我的flex4.6安装路径中的sdk位置：D:\\Adobe\\Adobe Flash Builder 4\\sdks\\4.0.0\\bin\\jvm.config，只需在这里调整即可！</p>\n</blockquote>\n</li>\n</ol>"},{"title":"【Flex】属性说明","layout":"post","comments":1,"date":"2016-12-22T08:42:48.000Z","keywords":null,"description":null,"_content":"以下记录一些常用的Flex控件属性，按字母排序：\n<!-- more -->\n\n| **属性**\t\t\t\t\t\t\t\t\t\t | **说明** |\n| ---------------------------------------------\t | :------- |\n| `maxDisplayedLines` = \"0\"                      | 设置textInput控件为多行显示","source":"_posts/【Flex】属性说明.md","raw":"---\ntitle: 【Flex】属性说明\nlayout: post\ncomments: true\ndate: 2016-12-22 16:42:48\ncategories: Flex\ntags: [Flex, 属性]\nkeywords:\ndescription:\n---\n以下记录一些常用的Flex控件属性，按字母排序：\n<!-- more -->\n\n| **属性**\t\t\t\t\t\t\t\t\t\t | **说明** |\n| ---------------------------------------------\t | :------- |\n| `maxDisplayedLines` = \"0\"                      | 设置textInput控件为多行显示","slug":"【Flex】属性说明","published":1,"updated":"2017-02-27T04:04:59.884Z","_id":"cjpuwa1h00017s0jtatu1s4gg","photos":[],"link":"","content":"<p>以下记录一些常用的Flex控件属性，按字母排序：<br><a id=\"more\"></a></p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th style=\"text-align:left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>maxDisplayedLines</code> = “0”</td>\n<td style=\"text-align:left\">设置textInput控件为多行显示</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<p>以下记录一些常用的Flex控件属性，按字母排序：<br>","more":"</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th style=\"text-align:left\"><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>maxDisplayedLines</code> = “0”</td>\n<td style=\"text-align:left\">设置textInput控件为多行显示</td>\n</tr>\n</tbody>\n</table>"},{"title":"【Flex】java与actionScript类型对应表","layout":"post","comments":1,"date":"2016-12-22T07:55:28.000Z","keywords":null,"description":null,"_content":"采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：\n<!-- more -->\n## Java -> ActionScript\n| Java                       | ActionScript                  |\n| -------------------        | :----------------------       |\n| java.lang.String           | string\n| java.lang.Boolean, boolean | Boolean\n| java.lang.Integar          | int\n| java.lang.Short            | int\n| java.lang.Byte             | int\n| java.lang.Byte[]           | Flash.utils.ByteArray\n| java.lang.Double           | Number\n| java.lang.Float            | Number\n| java.lang.Long             | Number\n| java.lang.Character        | String\n| java.lang.Character[]      | String\n| java.util.Calendar         | Date\n| java.util.Date             | Date\n| java.util.Collection       | mx.collection.ArrayCollection\n| java.lang.Object[]         | Array\n| java.util.Map              | Array (sparse)\n| java.util.Dictionary       | Object (untyped)\n| org.w3c.dom.Document       | XML object\n\n## ActionScript -> Java\n| ActionScript                | Java                    |\n| -------------------         | :---------------------- |\n| Array (dense)               | java.util.List\n| Array (sparse)              | java.util.Map\n| flash.utils.ByteArray       | byte[]\n| flash.utils.IExternalizable | java.io.Externalizable\n| Date                        | java.util.Date\n| int/uint                    | java.lang.Integer\n| null                        | null\n| Number                      | java.lang.Double\n| String                      | java.lang.String\n| XML                         | org.w3c.dom.Document\n| XMLDocument                 | org.w3c.dom.Document\n>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。\n例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。","source":"_posts/【Flex】java与actionScript类型对应表.md","raw":"---\ntitle: 【Flex】java与actionScript类型对应表\nlayout: post\ncomments: true\ndate: 2016-12-22 15:55:28\ncategories: Flex\ntags: [Flex, as数据类型]\nkeywords: \ndescription:\n---\n采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：\n<!-- more -->\n## Java -> ActionScript\n| Java                       | ActionScript                  |\n| -------------------        | :----------------------       |\n| java.lang.String           | string\n| java.lang.Boolean, boolean | Boolean\n| java.lang.Integar          | int\n| java.lang.Short            | int\n| java.lang.Byte             | int\n| java.lang.Byte[]           | Flash.utils.ByteArray\n| java.lang.Double           | Number\n| java.lang.Float            | Number\n| java.lang.Long             | Number\n| java.lang.Character        | String\n| java.lang.Character[]      | String\n| java.util.Calendar         | Date\n| java.util.Date             | Date\n| java.util.Collection       | mx.collection.ArrayCollection\n| java.lang.Object[]         | Array\n| java.util.Map              | Array (sparse)\n| java.util.Dictionary       | Object (untyped)\n| org.w3c.dom.Document       | XML object\n\n## ActionScript -> Java\n| ActionScript                | Java                    |\n| -------------------         | :---------------------- |\n| Array (dense)               | java.util.List\n| Array (sparse)              | java.util.Map\n| flash.utils.ByteArray       | byte[]\n| flash.utils.IExternalizable | java.io.Externalizable\n| Date                        | java.util.Date\n| int/uint                    | java.lang.Integer\n| null                        | null\n| Number                      | java.lang.Double\n| String                      | java.lang.String\n| XML                         | org.w3c.dom.Document\n| XMLDocument                 | org.w3c.dom.Document\n>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。\n例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。","slug":"【Flex】java与actionScript类型对应表","published":1,"updated":"2017-02-27T04:10:34.093Z","_id":"cjpuwa1h3001as0jtwnxhvfj2","photos":[],"link":"","content":"<p>采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：<br><a id=\"more\"></a></p>\n<h2 id=\"Java-gt-ActionScript\"><a href=\"#Java-gt-ActionScript\" class=\"headerlink\" title=\"Java -&gt; ActionScript\"></a>Java -&gt; ActionScript</h2><table>\n<thead>\n<tr>\n<th>Java</th>\n<th style=\"text-align:left\">ActionScript</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>java.lang.String</td>\n<td style=\"text-align:left\">string</td>\n</tr>\n<tr>\n<td>java.lang.Boolean, boolean</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td>java.lang.Integar</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Short</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Byte</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Byte[]</td>\n<td style=\"text-align:left\">Flash.utils.ByteArray</td>\n</tr>\n<tr>\n<td>java.lang.Double</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Float</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Long</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Character</td>\n<td style=\"text-align:left\">String</td>\n</tr>\n<tr>\n<td>java.lang.Character[]</td>\n<td style=\"text-align:left\">String</td>\n</tr>\n<tr>\n<td>java.util.Calendar</td>\n<td style=\"text-align:left\">Date</td>\n</tr>\n<tr>\n<td>java.util.Date</td>\n<td style=\"text-align:left\">Date</td>\n</tr>\n<tr>\n<td>java.util.Collection</td>\n<td style=\"text-align:left\">mx.collection.ArrayCollection</td>\n</tr>\n<tr>\n<td>java.lang.Object[]</td>\n<td style=\"text-align:left\">Array</td>\n</tr>\n<tr>\n<td>java.util.Map</td>\n<td style=\"text-align:left\">Array (sparse)</td>\n</tr>\n<tr>\n<td>java.util.Dictionary</td>\n<td style=\"text-align:left\">Object (untyped)</td>\n</tr>\n<tr>\n<td>org.w3c.dom.Document</td>\n<td style=\"text-align:left\">XML object</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ActionScript-gt-Java\"><a href=\"#ActionScript-gt-Java\" class=\"headerlink\" title=\"ActionScript -&gt; Java\"></a>ActionScript -&gt; Java</h2><table>\n<thead>\n<tr>\n<th>ActionScript</th>\n<th style=\"text-align:left\">Java</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Array (dense)</td>\n<td style=\"text-align:left\">java.util.List</td>\n</tr>\n<tr>\n<td>Array (sparse)</td>\n<td style=\"text-align:left\">java.util.Map</td>\n</tr>\n<tr>\n<td>flash.utils.ByteArray</td>\n<td style=\"text-align:left\">byte[]</td>\n</tr>\n<tr>\n<td>flash.utils.IExternalizable</td>\n<td style=\"text-align:left\">java.io.Externalizable</td>\n</tr>\n<tr>\n<td>Date</td>\n<td style=\"text-align:left\">java.util.Date</td>\n</tr>\n<tr>\n<td>int/uint</td>\n<td style=\"text-align:left\">java.lang.Integer</td>\n</tr>\n<tr>\n<td>null</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td>Number</td>\n<td style=\"text-align:left\">java.lang.Double</td>\n</tr>\n<tr>\n<td>String</td>\n<td style=\"text-align:left\">java.lang.String</td>\n</tr>\n<tr>\n<td>XML</td>\n<td style=\"text-align:left\">org.w3c.dom.Document</td>\n</tr>\n<tr>\n<td>XMLDocument</td>\n<td style=\"text-align:left\">org.w3c.dom.Document</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。<br>例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>采用Java+Flex架构，通过BlazeDS中间件技术，使服务端Java数据和客户端Flex数据进行互通时，底层数据类型是不一致的，BlazeDS对其进行了映射，具体映射关系如下：<br>","more":"</p>\n<h2 id=\"Java-gt-ActionScript\"><a href=\"#Java-gt-ActionScript\" class=\"headerlink\" title=\"Java -&gt; ActionScript\"></a>Java -&gt; ActionScript</h2><table>\n<thead>\n<tr>\n<th>Java</th>\n<th style=\"text-align:left\">ActionScript</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>java.lang.String</td>\n<td style=\"text-align:left\">string</td>\n</tr>\n<tr>\n<td>java.lang.Boolean, boolean</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td>java.lang.Integar</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Short</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Byte</td>\n<td style=\"text-align:left\">int</td>\n</tr>\n<tr>\n<td>java.lang.Byte[]</td>\n<td style=\"text-align:left\">Flash.utils.ByteArray</td>\n</tr>\n<tr>\n<td>java.lang.Double</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Float</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Long</td>\n<td style=\"text-align:left\">Number</td>\n</tr>\n<tr>\n<td>java.lang.Character</td>\n<td style=\"text-align:left\">String</td>\n</tr>\n<tr>\n<td>java.lang.Character[]</td>\n<td style=\"text-align:left\">String</td>\n</tr>\n<tr>\n<td>java.util.Calendar</td>\n<td style=\"text-align:left\">Date</td>\n</tr>\n<tr>\n<td>java.util.Date</td>\n<td style=\"text-align:left\">Date</td>\n</tr>\n<tr>\n<td>java.util.Collection</td>\n<td style=\"text-align:left\">mx.collection.ArrayCollection</td>\n</tr>\n<tr>\n<td>java.lang.Object[]</td>\n<td style=\"text-align:left\">Array</td>\n</tr>\n<tr>\n<td>java.util.Map</td>\n<td style=\"text-align:left\">Array (sparse)</td>\n</tr>\n<tr>\n<td>java.util.Dictionary</td>\n<td style=\"text-align:left\">Object (untyped)</td>\n</tr>\n<tr>\n<td>org.w3c.dom.Document</td>\n<td style=\"text-align:left\">XML object</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ActionScript-gt-Java\"><a href=\"#ActionScript-gt-Java\" class=\"headerlink\" title=\"ActionScript -&gt; Java\"></a>ActionScript -&gt; Java</h2><table>\n<thead>\n<tr>\n<th>ActionScript</th>\n<th style=\"text-align:left\">Java</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Array (dense)</td>\n<td style=\"text-align:left\">java.util.List</td>\n</tr>\n<tr>\n<td>Array (sparse)</td>\n<td style=\"text-align:left\">java.util.Map</td>\n</tr>\n<tr>\n<td>flash.utils.ByteArray</td>\n<td style=\"text-align:left\">byte[]</td>\n</tr>\n<tr>\n<td>flash.utils.IExternalizable</td>\n<td style=\"text-align:left\">java.io.Externalizable</td>\n</tr>\n<tr>\n<td>Date</td>\n<td style=\"text-align:left\">java.util.Date</td>\n</tr>\n<tr>\n<td>int/uint</td>\n<td style=\"text-align:left\">java.lang.Integer</td>\n</tr>\n<tr>\n<td>null</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td>Number</td>\n<td style=\"text-align:left\">java.lang.Double</td>\n</tr>\n<tr>\n<td>String</td>\n<td style=\"text-align:left\">java.lang.String</td>\n</tr>\n<tr>\n<td>XML</td>\n<td style=\"text-align:left\">org.w3c.dom.Document</td>\n</tr>\n<tr>\n<td>XMLDocument</td>\n<td style=\"text-align:left\">org.w3c.dom.Document</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Java里的List、Arraylist对应到Flex里可以用常用ArrayCollection来接收。<br>例如：通过调用java端某方法返回一个arraylist，该arraylist里放的一般是用户自定义类型。Flex端接收到的肯定是个Object，这个时候可以强制转换成ArrayCollection:event.result as ArrayCollection。然后通过遍历该ArrayCollection，来取得存每条数据的Object。 当as这边定义了与自定义类型定义的类型对应的类时，也可以强制转换成该类型。</p>\n</blockquote>"},{"title":"【Git】Git下载安装","layout":"post","comments":1,"date":"2018-12-19T07:49:38.000Z","keywords":null,"description":null,"_content":"## Windows平台\n### Git[官网下载](https://www.git-scm.com/download/)\n\n\n<!-- more -->\n\n\n---\n\n\n## Linux平台\n### 一. 源码安装（以SUSE Linux 12为例）\n#### 1. [源码下载](https://github.com/git/git/releases)\n\n#### 2. 编译安装\n```\ntar -zxf git-2.20.1.tar.gz \ncd git-2.20.1/\nmake configure\n./configure --prefix=/usr/local\nmake all doc info\nsudo make install install-doc install-html install-info\n```\n执行命令：`make all doc info` 报如下错误：\n\n\t\t* new build flags\n\t\tCC fuzz-pack-headers.o\n\tIn file included from packfile.h:4:0,\n\t\t\t\t\t from fuzz-pack-headers.c:1:\n\tcache.h:20:18: fatal error: zlib.h: No such file or directory\n\t #include <zlib.h>\n\t\t\t\t\t  ^\n\tcompilation terminated.\n\tMakefile:2302: recipe for target 'fuzz-pack-headers.o' failed\n\tmake: *** [fuzz-pack-headers.o] Error 1\n原因是需要安装依赖包：[zlib-devel](http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html)\n```\nrpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm\n```\n之后便可继续安装了。\n\n#### 3. 执行命令：`git --version`，得到如下结果表示安装成功。\n\n\tgit version 2.20.1","source":"_posts/【Git】Git下载安装.md","raw":"---\ntitle: 【Git】Git下载安装\nlayout: post\ncomments: true\ndate: 2018-12-19 15:49:38\ncategories: Git\ntags: [Git]\nkeywords:\ndescription:\n---\n## Windows平台\n### Git[官网下载](https://www.git-scm.com/download/)\n\n\n<!-- more -->\n\n\n---\n\n\n## Linux平台\n### 一. 源码安装（以SUSE Linux 12为例）\n#### 1. [源码下载](https://github.com/git/git/releases)\n\n#### 2. 编译安装\n```\ntar -zxf git-2.20.1.tar.gz \ncd git-2.20.1/\nmake configure\n./configure --prefix=/usr/local\nmake all doc info\nsudo make install install-doc install-html install-info\n```\n执行命令：`make all doc info` 报如下错误：\n\n\t\t* new build flags\n\t\tCC fuzz-pack-headers.o\n\tIn file included from packfile.h:4:0,\n\t\t\t\t\t from fuzz-pack-headers.c:1:\n\tcache.h:20:18: fatal error: zlib.h: No such file or directory\n\t #include <zlib.h>\n\t\t\t\t\t  ^\n\tcompilation terminated.\n\tMakefile:2302: recipe for target 'fuzz-pack-headers.o' failed\n\tmake: *** [fuzz-pack-headers.o] Error 1\n原因是需要安装依赖包：[zlib-devel](http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html)\n```\nrpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm\n```\n之后便可继续安装了。\n\n#### 3. 执行命令：`git --version`，得到如下结果表示安装成功。\n\n\tgit version 2.20.1","slug":"【Git】Git下载安装","published":1,"updated":"2018-12-19T08:13:42.298Z","_id":"cjpuwa1h6001es0jthiprjmtt","photos":[],"link":"","content":"<h2 id=\"Windows平台\"><a href=\"#Windows平台\" class=\"headerlink\" title=\"Windows平台\"></a>Windows平台</h2><h3 id=\"Git官网下载\"><a href=\"#Git官网下载\" class=\"headerlink\" title=\"Git官网下载\"></a>Git<a href=\"https://www.git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3><a id=\"more\"></a>\n<hr>\n<h2 id=\"Linux平台\"><a href=\"#Linux平台\" class=\"headerlink\" title=\"Linux平台\"></a>Linux平台</h2><h3 id=\"一-源码安装（以SUSE-Linux-12为例）\"><a href=\"#一-源码安装（以SUSE-Linux-12为例）\" class=\"headerlink\" title=\"一. 源码安装（以SUSE Linux 12为例）\"></a>一. 源码安装（以SUSE Linux 12为例）</h3><h4 id=\"1-源码下载\"><a href=\"#1-源码下载\" class=\"headerlink\" title=\"1. 源码下载\"></a>1. <a href=\"https://github.com/git/git/releases\" target=\"_blank\" rel=\"noopener\">源码下载</a></h4><h4 id=\"2-编译安装\"><a href=\"#2-编译安装\" class=\"headerlink\" title=\"2. 编译安装\"></a>2. 编译安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxf git-2.20.1.tar.gz </span><br><span class=\"line\">cd git-2.20.1/</span><br><span class=\"line\">make configure</span><br><span class=\"line\">./configure --prefix=/usr/local</span><br><span class=\"line\">make all doc info</span><br><span class=\"line\">sudo make install install-doc install-html install-info</span><br></pre></td></tr></table></figure>\n<p>执行命令：<code>make all doc info</code> 报如下错误：</p>\n<pre><code>    * new build flags\n    CC fuzz-pack-headers.o\nIn file included from packfile.h:4:0,\n                 from fuzz-pack-headers.c:1:\ncache.h:20:18: fatal error: zlib.h: No such file or directory\n #include &lt;zlib.h&gt;\n                  ^\ncompilation terminated.\nMakefile:2302: recipe for target &apos;fuzz-pack-headers.o&apos; failed\nmake: *** [fuzz-pack-headers.o] Error 1\n</code></pre><p>原因是需要安装依赖包：<a href=\"http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html\" target=\"_blank\" rel=\"noopener\">zlib-devel</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm</span><br></pre></td></tr></table></figure></p>\n<p>之后便可继续安装了。</p>\n<h4 id=\"3-执行命令：git-version，得到如下结果表示安装成功。\"><a href=\"#3-执行命令：git-version，得到如下结果表示安装成功。\" class=\"headerlink\" title=\"3. 执行命令：git --version，得到如下结果表示安装成功。\"></a>3. 执行命令：<code>git --version</code>，得到如下结果表示安装成功。</h4><pre><code>git version 2.20.1\n</code></pre>","site":{"data":{}},"excerpt":"<h2 id=\"Windows平台\"><a href=\"#Windows平台\" class=\"headerlink\" title=\"Windows平台\"></a>Windows平台</h2><h3 id=\"Git官网下载\"><a href=\"#Git官网下载\" class=\"headerlink\" title=\"Git官网下载\"></a>Git<a href=\"https://www.git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3>","more":"<hr>\n<h2 id=\"Linux平台\"><a href=\"#Linux平台\" class=\"headerlink\" title=\"Linux平台\"></a>Linux平台</h2><h3 id=\"一-源码安装（以SUSE-Linux-12为例）\"><a href=\"#一-源码安装（以SUSE-Linux-12为例）\" class=\"headerlink\" title=\"一. 源码安装（以SUSE Linux 12为例）\"></a>一. 源码安装（以SUSE Linux 12为例）</h3><h4 id=\"1-源码下载\"><a href=\"#1-源码下载\" class=\"headerlink\" title=\"1. 源码下载\"></a>1. <a href=\"https://github.com/git/git/releases\" target=\"_blank\" rel=\"noopener\">源码下载</a></h4><h4 id=\"2-编译安装\"><a href=\"#2-编译安装\" class=\"headerlink\" title=\"2. 编译安装\"></a>2. 编译安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxf git-2.20.1.tar.gz </span><br><span class=\"line\">cd git-2.20.1/</span><br><span class=\"line\">make configure</span><br><span class=\"line\">./configure --prefix=/usr/local</span><br><span class=\"line\">make all doc info</span><br><span class=\"line\">sudo make install install-doc install-html install-info</span><br></pre></td></tr></table></figure>\n<p>执行命令：<code>make all doc info</code> 报如下错误：</p>\n<pre><code>    * new build flags\n    CC fuzz-pack-headers.o\nIn file included from packfile.h:4:0,\n                 from fuzz-pack-headers.c:1:\ncache.h:20:18: fatal error: zlib.h: No such file or directory\n #include &lt;zlib.h&gt;\n                  ^\ncompilation terminated.\nMakefile:2302: recipe for target &apos;fuzz-pack-headers.o&apos; failed\nmake: *** [fuzz-pack-headers.o] Error 1\n</code></pre><p>原因是需要安装依赖包：<a href=\"http://rpm.pbone.net/index.php3/stat/4/idpl/30389149/dir/opensuse/com/zlib-devel-1.2.8-5.22.x86_64.rpm.html\" target=\"_blank\" rel=\"noopener\">zlib-devel</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh zlib-devel-1.2.8-5.22.x86_64.rpm</span><br></pre></td></tr></table></figure></p>\n<p>之后便可继续安装了。</p>\n<h4 id=\"3-执行命令：git-version，得到如下结果表示安装成功。\"><a href=\"#3-执行命令：git-version，得到如下结果表示安装成功。\" class=\"headerlink\" title=\"3. 执行命令：git --version，得到如下结果表示安装成功。\"></a>3. 执行命令：<code>git --version</code>，得到如下结果表示安装成功。</h4><pre><code>git version 2.20.1\n</code></pre>"},{"title":"【Flex】设置scroller的速度","layout":"post","comments":1,"date":"2016-12-22T08:38:11.000Z","keywords":"速度","description":null,"_content":"Flex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:\n<!-- more -->\n假设我的滚动条id = mainScroller\n```as3\nprotected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void\n{\n\tevent.preventDefault();\n\tvar modifier:int       = 5;\n\tvar delta:Number       = Number(event.delta) * modifier;\n\tvar viewport:IViewport = mainScroller.verticalScrollBar.viewport;\n\tvar vPos:Number        = viewport.verticalScrollPosition;\n\tvar maximum:Number     = mainScroller.verticalScrollBar.maximum;\n\t\n\tif (delta < 0) \n\t{\n\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        \n\t}\n\telse\n\t{\n\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);\n\t}\n}\n```","source":"_posts/【Flex】设置scroller的速度.md","raw":"---\ntitle: 【Flex】设置scroller的速度\nlayout: post\ncomments: true\ndate: 2016-12-22 16:38:11\ncategories: Flex\ntags: [Flex, scroller]\nkeywords: 速度\ndescription:\n---\nFlex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:\n<!-- more -->\n假设我的滚动条id = mainScroller\n```as3\nprotected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void\n{\n\tevent.preventDefault();\n\tvar modifier:int       = 5;\n\tvar delta:Number       = Number(event.delta) * modifier;\n\tvar viewport:IViewport = mainScroller.verticalScrollBar.viewport;\n\tvar vPos:Number        = viewport.verticalScrollPosition;\n\tvar maximum:Number     = mainScroller.verticalScrollBar.maximum;\n\t\n\tif (delta < 0) \n\t{\n\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        \n\t}\n\telse\n\t{\n\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);\n\t}\n}\n```","slug":"【Flex】设置scroller的速度","published":1,"updated":"2017-02-27T04:10:42.578Z","_id":"cjpuwa1h9001fs0jt45wo2a7i","photos":[],"link":"","content":"<p>Flex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:<br><a id=\"more\"></a><br>假设我的滚动条id = mainScroller<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tevent.preventDefault();</span><br><span class=\"line\">\tvar modifier:int       = 5;</span><br><span class=\"line\">\tvar delta:Number       = Number(event.delta) * modifier;</span><br><span class=\"line\">\tvar viewport:IViewport = mainScroller.verticalScrollBar.viewport;</span><br><span class=\"line\">\tvar vPos:Number        = viewport.verticalScrollPosition;</span><br><span class=\"line\">\tvar maximum:Number     = mainScroller.verticalScrollBar.maximum;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (delta &lt; 0) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\telse</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Flex每个Scroller都有一个mouseWheelChanging方法,当滚动鼠标中轮的时候会调用，而后就可以在这个函数中进行判断，如下:<br>","more":"<br>假设我的滚动条id = mainScroller<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protected function mainScroller _mouseWheelChangingHandler(event:FlexMouseEvent):void</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tevent.preventDefault();</span><br><span class=\"line\">\tvar modifier:int       = 5;</span><br><span class=\"line\">\tvar delta:Number       = Number(event.delta) * modifier;</span><br><span class=\"line\">\tvar viewport:IViewport = mainScroller.verticalScrollBar.viewport;</span><br><span class=\"line\">\tvar vPos:Number        = viewport.verticalScrollPosition;</span><br><span class=\"line\">\tvar maximum:Number     = mainScroller.verticalScrollBar.maximum;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tif (delta &lt; 0) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.min(vPos - delta, maximum) ;        </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\telse</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmainScroller.verticalScrollBar.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"【Git】如何用命令将本地项目上传到git","layout":"post","comments":1,"date":"2017-06-20T02:31:07.000Z","keywords":null,"description":null,"_content":"##### 1. 先在GitHub网站上 New 一个资源库，如 demo\n<!-- more -->\n\n##### 2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库\n```\ngit init\n```\n##### 3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件\n```\ngit add .\n```\n##### 4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明\n```\ngit commit -m 'first commit'\n```\n##### 5. 关联到远程库\n```\ngit remote add origin 你的远程库地址\n```\n如：\n\n\tgit remote add origin https://github.com/yangpiena/demo.git\n或\n\n\tgit remote add origin git@github.com:yangpiena/demo.git\n\n##### 6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\n```\ngit pull --rebase origin master\n```\n##### 7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\n```\ngit push -u origin master\n```\n##### 8. 状态查询命令\n```\ngit status\n```","source":"_posts/【Git】如何用命令将本地项目上传到git.md","raw":"---\ntitle: 【Git】如何用命令将本地项目上传到git\nlayout: post\ncomments: true\ndate: 2017-06-20 10:31:07\ncategories: Git\ntags: [Git]\nkeywords:\ndescription:\n---\n##### 1. 先在GitHub网站上 New 一个资源库，如 demo\n<!-- more -->\n\n##### 2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库\n```\ngit init\n```\n##### 3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件\n```\ngit add .\n```\n##### 4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明\n```\ngit commit -m 'first commit'\n```\n##### 5. 关联到远程库\n```\ngit remote add origin 你的远程库地址\n```\n如：\n\n\tgit remote add origin https://github.com/yangpiena/demo.git\n或\n\n\tgit remote add origin git@github.com:yangpiena/demo.git\n\n##### 6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\n```\ngit pull --rebase origin master\n```\n##### 7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\n```\ngit push -u origin master\n```\n##### 8. 状态查询命令\n```\ngit status\n```","slug":"【Git】如何用命令将本地项目上传到git","published":1,"updated":"2017-08-14T02:12:37.380Z","_id":"cjpuwa1hd001js0jt24mu24wl","photos":[],"link":"","content":"<h5 id=\"1-先在GitHub网站上-New-一个资源库，如-demo\"><a href=\"#1-先在GitHub网站上-New-一个资源库，如-demo\" class=\"headerlink\" title=\"1. 先在GitHub网站上 New 一个资源库，如 demo\"></a>1. 先在GitHub网站上 New 一个资源库，如 demo</h5><a id=\"more\"></a>\n<h5 id=\"2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库\"><a href=\"#2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库\" class=\"headerlink\" title=\"2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库\"></a>2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件\"><a href=\"#3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件\" class=\"headerlink\" title=\"3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件\"></a>3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明\"><a href=\"#4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明\" class=\"headerlink\" title=\"4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明\"></a>4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &apos;first commit&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-关联到远程库\"><a href=\"#5-关联到远程库\" class=\"headerlink\" title=\"5. 关联到远程库\"></a>5. 关联到远程库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin 你的远程库地址</span><br></pre></td></tr></table></figure>\n<p>如：</p>\n<pre><code>git remote add origin https://github.com/yangpiena/demo.git\n</code></pre><p>或</p>\n<pre><code>git remote add origin git@github.com:yangpiena/demo.git\n</code></pre><h5 id=\"6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\"><a href=\"#6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\" class=\"headerlink\" title=\"6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\"></a>6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n<h5 id=\"7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\"><a href=\"#7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\" class=\"headerlink\" title=\"7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\"></a>7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h5 id=\"8-状态查询命令\"><a href=\"#8-状态查询命令\" class=\"headerlink\" title=\"8. 状态查询命令\"></a>8. 状态查询命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h5 id=\"1-先在GitHub网站上-New-一个资源库，如-demo\"><a href=\"#1-先在GitHub网站上-New-一个资源库，如-demo\" class=\"headerlink\" title=\"1. 先在GitHub网站上 New 一个资源库，如 demo\"></a>1. 先在GitHub网站上 New 一个资源库，如 demo</h5>","more":"<h5 id=\"2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库\"><a href=\"#2-进入本地项目文件夹，通过命令-git-init-把这个目录变成Git可以管理的仓库\" class=\"headerlink\" title=\"2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库\"></a>2. 进入本地项目文件夹，通过命令 git init 把这个目录变成Git可以管理的仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件\"><a href=\"#3-把文件添加到版本库中，使用命令-git-add-添加到暂存区里面去，不要忘记后面的小数点“-”，意为添加文件夹下的所有文件\" class=\"headerlink\" title=\"3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件\"></a>3. 把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明\"><a href=\"#4-用命令-git-commit-告诉Git，把文件提交到仓库。引号内为提交说明\" class=\"headerlink\" title=\"4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明\"></a>4. 用命令 git commit 告诉Git，把文件提交到仓库。引号内为提交说明</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &apos;first commit&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-关联到远程库\"><a href=\"#5-关联到远程库\" class=\"headerlink\" title=\"5. 关联到远程库\"></a>5. 关联到远程库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin 你的远程库地址</span><br></pre></td></tr></table></figure>\n<p>如：</p>\n<pre><code>git remote add origin https://github.com/yangpiena/demo.git\n</code></pre><p>或</p>\n<pre><code>git remote add origin git@github.com:yangpiena/demo.git\n</code></pre><h5 id=\"6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\"><a href=\"#6-获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\" class=\"headerlink\" title=\"6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\"></a>6. 获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n<h5 id=\"7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\"><a href=\"#7-把本地库的内容推送到远程，使用-git-push-命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\" class=\"headerlink\" title=\"7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\"></a>7. 把本地库的内容推送到远程，使用 git push 命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h5 id=\"8-状态查询命令\"><a href=\"#8-状态查询命令\" class=\"headerlink\" title=\"8. 状态查询命令\"></a>8. 状态查询命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>"},{"title":"【HAProxy】ACL规则定义","layout":"post","comments":1,"date":"2017-12-20T02:03:51.000Z","keywords":null,"description":null,"_content":"HAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。\nHAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。\n\n<!-- more -->\n\n---\n\n### ACL规则定义\n格式：`acl <aclname> <criterion> [flags] [operator] [<value>]`\n\n`<aclname>`：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；\n`<criterion>`：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在`<value>`之前指定一个操作符[operator]；\n`[flags]`：目前haproxy的acl支持的标志位有3个：\n* -i：不区分中模式字符的大小写；\n* -f：从指定的文件中加载模式；\n* --：标志符的强制结束标记，在模式中的字符串像标记符时使用；\n\n`<value>`：acl测试条件支持的值有以下4类：\n* 整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；\n* 字符串：支持使用“-i”以忽略字符大小写，支持使用“\\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；\n* 正则表达式：其机制类同字符串匹配；\n* IP地址及网络地址；\n> 注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。\n\n---\n\n###### 常用的测试标准(criteria)\n- **基于七层协议（http）规则acl测试标准**\n1. method `<string>`\n测试HTTP请求报文中请求类型。\n例如： 利用method来实现前段读写分离：\n\t\tacl  read method GET\n\t\tacl  read method HEAD\n\t\tacl write method PUT\n\t\tacl write method POST\n\t\tuse_backend imgservers if read\n\t\tuse_backend uploadservers if write\n\n2. path_beg `<string>` ||url_beg\n用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 /static、/images、/javascript或/stylesheets头。\n例如：利用path_beg实现以/static /images开头的请求转交到 static server上：\n\t\tacl url_static path_beg -i /static /images \n\t\tuse_backend static if url_static \n\n3. path_end `<string>` || url_reg\n用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾\n例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：\n\t\tacl url_static path_end -i .jpg .gif .png .css .js .html\n\t\tuse_backend static if url_static\n\n4. hdr_beg `<string>`\n用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。\n例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上\n\t\tacl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080  \n\t\tuse_backend lvs3 if is_lvs3 \n\n5. hdr_end `<string>`\n用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式\n例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上\n\t\tacl is_lvs3 hdr_end(host) -i lvs3.test.net:8080  \n\t\tuse_backend lvs3 if is_lvs2 \n\n6. hdr `<string>`\n用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。\n例如 当用户访问172.16.1.100时，重定向到http://www.afwing.com\n\t\tacl  dstipaddr  hdr(Host) 172.16.1.100\n\t\tredirect  location   http://www.afwing.com if  dstipaddr\n\n7. hdr_reg `<string>`\n如果请求的域名满足正则表达式，返回true， -i是忽略大小写\n\t\tacl denali_policy hdr_reg(host) -i ^(www.inbank.com|image.inbank.com)$\n\n8. hdr_dom `<string>`\n如果请求域名满足www.inbank.com，返回true， -i是忽略大小写\n\t\tacl tm_policy hdr_dom(host) -i www.inbank.com\n\n9. url_sub\n在请求url中包含sip_apiname=，则此控制策略返回true，否则为false\n\t\tacl invalid_req url_sub -i sip_apiname=#定义一个名为invalid_req的策略\n\n10. url_dir\n在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false\n\t\tacl timetask_req url_dir -i timetask\n\n11. hdr_cnt `<string>`\n当请求的header中Content-length等于0时，返回true\n\t\tacl missing_cl hdr_cnt(Content-length) eq 0\n\n- **基于四层协议（ip）规则acl测试标准**\n1. dst和dst_port\n定义访问地址为目标地址或目标端口的acl规则\n\n2. src和src_port\n定义访问地址为源地址或源端口的acl规则\n例如： 允许10.0.0.0/24的用户访问，其他用户将禁止\n\t\tacl net10  src  10.0.0.0/24\n\t\ttcp-request content  accept  if  net10\n\t\ttcp-request  content  reject\n\t\ttcp-request content accept [ {if | unless} ]\n\t\tAccept a connection if/unless a content inspection condition is matched\n\n---\n\n### ACL规则引用\n当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：\n1. 正常写法：\n\t\tuse_backend static if url_static\n\n2. 或者写法：\n\t\tuse_backend backend1 if aclA || aclB \n\t\tuse_backend backend1 if aclA || !aclC\n注意上面“||”也可以使用or来表示\n\n3. 非（不符合）写法：\n\t\tuse_backend backend1 if aclA !aclB \n\t\tuse_backend backend1 if aclA !aclB !aclC\n\n4. 与（and）写法：\n\t\tuse_backend backend1 if aclA !aclB \n\t\tuse_backend backend1 if aclA !aclB !aclC\n\n---\n\n###### 常见应用实例\n1. 当请求中header中Content-length等于0，阻止请求返回403\n\t\tblock if missing_cl\n\n2. block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。\n\t\tblock if !invalid_req || timetask_req\n\n3. 当满足denali_policy的策略时，使用denali_server的backend\n\t\tuse_backend denali_server if denali_policy\n\n4. 当满足tm_policy的策略时，使用tm_server的backend\n\t\tuse_backend tm_server if tm_policy\n\n5. reqisetbe关键字定义，根据定义的关键字选择backend\n\t\treqisetbe ^Host:\\ img dynamic\n\t\treqisetbe ^[^\\ ]\\*\\ /(img|css)/ dynamic\n\t\treqisetbe ^[^\\ ]\\*\\ /admin/stats stats\n\n6. 以上都不满足的时候使用默认mms_server的backend\n\t\tdefault_backend mms\n\n7. 利用acl实现页面动静分离;\n\n\t\tfrontend webservs\n\t\t         bind            *:80\n\t\t         acl             url_static path_beg -i /static /images /javascript /stylesheets\n\t\t         acl             url_static path_end -i .jpg .gif .png .css .js .html\n\t\t         acl             url_php    path_end  -i .php\n\t\t         use_backend     static if url_static or host_static\n\t\t         use_backend     dynamic if url_php\n\t\t         default_backend dynamic\n\t\tbackend static\n\t\t        balance roundrobin\n\t\t        server  node1 192.168.1.111:80 check maxconn 3000\n\t\tbackend dynamic\n\t\t        balance roundrobin\n\t\t        server  node2 192.168.1.112:80 check maxconn 1000  ","source":"_posts/【HAProxy】ACL规则定义.md","raw":"---\ntitle: 【HAProxy】ACL规则定义\nlayout: post\ncomments: true\ndate: 2017-12-20 10:03:51\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\nHAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。\nHAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。\n\n<!-- more -->\n\n---\n\n### ACL规则定义\n格式：`acl <aclname> <criterion> [flags] [operator] [<value>]`\n\n`<aclname>`：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；\n`<criterion>`：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在`<value>`之前指定一个操作符[operator]；\n`[flags]`：目前haproxy的acl支持的标志位有3个：\n* -i：不区分中模式字符的大小写；\n* -f：从指定的文件中加载模式；\n* --：标志符的强制结束标记，在模式中的字符串像标记符时使用；\n\n`<value>`：acl测试条件支持的值有以下4类：\n* 整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；\n* 字符串：支持使用“-i”以忽略字符大小写，支持使用“\\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；\n* 正则表达式：其机制类同字符串匹配；\n* IP地址及网络地址；\n> 注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。\n\n---\n\n###### 常用的测试标准(criteria)\n- **基于七层协议（http）规则acl测试标准**\n1. method `<string>`\n测试HTTP请求报文中请求类型。\n例如： 利用method来实现前段读写分离：\n\t\tacl  read method GET\n\t\tacl  read method HEAD\n\t\tacl write method PUT\n\t\tacl write method POST\n\t\tuse_backend imgservers if read\n\t\tuse_backend uploadservers if write\n\n2. path_beg `<string>` ||url_beg\n用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 /static、/images、/javascript或/stylesheets头。\n例如：利用path_beg实现以/static /images开头的请求转交到 static server上：\n\t\tacl url_static path_beg -i /static /images \n\t\tuse_backend static if url_static \n\n3. path_end `<string>` || url_reg\n用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾\n例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：\n\t\tacl url_static path_end -i .jpg .gif .png .css .js .html\n\t\tuse_backend static if url_static\n\n4. hdr_beg `<string>`\n用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。\n例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上\n\t\tacl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080  \n\t\tuse_backend lvs3 if is_lvs3 \n\n5. hdr_end `<string>`\n用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式\n例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上\n\t\tacl is_lvs3 hdr_end(host) -i lvs3.test.net:8080  \n\t\tuse_backend lvs3 if is_lvs2 \n\n6. hdr `<string>`\n用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。\n例如 当用户访问172.16.1.100时，重定向到http://www.afwing.com\n\t\tacl  dstipaddr  hdr(Host) 172.16.1.100\n\t\tredirect  location   http://www.afwing.com if  dstipaddr\n\n7. hdr_reg `<string>`\n如果请求的域名满足正则表达式，返回true， -i是忽略大小写\n\t\tacl denali_policy hdr_reg(host) -i ^(www.inbank.com|image.inbank.com)$\n\n8. hdr_dom `<string>`\n如果请求域名满足www.inbank.com，返回true， -i是忽略大小写\n\t\tacl tm_policy hdr_dom(host) -i www.inbank.com\n\n9. url_sub\n在请求url中包含sip_apiname=，则此控制策略返回true，否则为false\n\t\tacl invalid_req url_sub -i sip_apiname=#定义一个名为invalid_req的策略\n\n10. url_dir\n在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false\n\t\tacl timetask_req url_dir -i timetask\n\n11. hdr_cnt `<string>`\n当请求的header中Content-length等于0时，返回true\n\t\tacl missing_cl hdr_cnt(Content-length) eq 0\n\n- **基于四层协议（ip）规则acl测试标准**\n1. dst和dst_port\n定义访问地址为目标地址或目标端口的acl规则\n\n2. src和src_port\n定义访问地址为源地址或源端口的acl规则\n例如： 允许10.0.0.0/24的用户访问，其他用户将禁止\n\t\tacl net10  src  10.0.0.0/24\n\t\ttcp-request content  accept  if  net10\n\t\ttcp-request  content  reject\n\t\ttcp-request content accept [ {if | unless} ]\n\t\tAccept a connection if/unless a content inspection condition is matched\n\n---\n\n### ACL规则引用\n当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：\n1. 正常写法：\n\t\tuse_backend static if url_static\n\n2. 或者写法：\n\t\tuse_backend backend1 if aclA || aclB \n\t\tuse_backend backend1 if aclA || !aclC\n注意上面“||”也可以使用or来表示\n\n3. 非（不符合）写法：\n\t\tuse_backend backend1 if aclA !aclB \n\t\tuse_backend backend1 if aclA !aclB !aclC\n\n4. 与（and）写法：\n\t\tuse_backend backend1 if aclA !aclB \n\t\tuse_backend backend1 if aclA !aclB !aclC\n\n---\n\n###### 常见应用实例\n1. 当请求中header中Content-length等于0，阻止请求返回403\n\t\tblock if missing_cl\n\n2. block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。\n\t\tblock if !invalid_req || timetask_req\n\n3. 当满足denali_policy的策略时，使用denali_server的backend\n\t\tuse_backend denali_server if denali_policy\n\n4. 当满足tm_policy的策略时，使用tm_server的backend\n\t\tuse_backend tm_server if tm_policy\n\n5. reqisetbe关键字定义，根据定义的关键字选择backend\n\t\treqisetbe ^Host:\\ img dynamic\n\t\treqisetbe ^[^\\ ]\\*\\ /(img|css)/ dynamic\n\t\treqisetbe ^[^\\ ]\\*\\ /admin/stats stats\n\n6. 以上都不满足的时候使用默认mms_server的backend\n\t\tdefault_backend mms\n\n7. 利用acl实现页面动静分离;\n\n\t\tfrontend webservs\n\t\t         bind            *:80\n\t\t         acl             url_static path_beg -i /static /images /javascript /stylesheets\n\t\t         acl             url_static path_end -i .jpg .gif .png .css .js .html\n\t\t         acl             url_php    path_end  -i .php\n\t\t         use_backend     static if url_static or host_static\n\t\t         use_backend     dynamic if url_php\n\t\t         default_backend dynamic\n\t\tbackend static\n\t\t        balance roundrobin\n\t\t        server  node1 192.168.1.111:80 check maxconn 3000\n\t\tbackend dynamic\n\t\t        balance roundrobin\n\t\t        server  node2 192.168.1.112:80 check maxconn 1000  ","slug":"【HAProxy】ACL规则定义","published":1,"updated":"2017-12-22T07:18:25.734Z","_id":"cjpuwa1hg001ks0jtlijfxkzq","photos":[],"link":"","content":"<p>HAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。<br>HAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。</p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"ACL规则定义\"><a href=\"#ACL规则定义\" class=\"headerlink\" title=\"ACL规则定义\"></a>ACL规则定义</h3><p>格式：<code>acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] [&lt;value&gt;]</code></p>\n<p><code>&lt;aclname&gt;</code>：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；<br><code>&lt;criterion&gt;</code>：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在<code>&lt;value&gt;</code>之前指定一个操作符[operator]；<br><code>[flags]</code>：目前haproxy的acl支持的标志位有3个：</p>\n<ul>\n<li>-i：不区分中模式字符的大小写；</li>\n<li>-f：从指定的文件中加载模式；</li>\n<li>–：标志符的强制结束标记，在模式中的字符串像标记符时使用；</li>\n</ul>\n<p><code>&lt;value&gt;</code>：acl测试条件支持的值有以下4类：</p>\n<ul>\n<li>整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；</li>\n<li>字符串：支持使用“-i”以忽略字符大小写，支持使用“\\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；</li>\n<li>正则表达式：其机制类同字符串匹配；</li>\n<li>IP地址及网络地址；<blockquote>\n<p>注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h6 id=\"常用的测试标准-criteria\"><a href=\"#常用的测试标准-criteria\" class=\"headerlink\" title=\"常用的测试标准(criteria)\"></a>常用的测试标准(criteria)</h6><ul>\n<li><strong>基于七层协议（http）规则acl测试标准</strong></li>\n</ul>\n<ol>\n<li><p>method <code>&lt;string&gt;</code><br>测试HTTP请求报文中请求类型。<br>例如： 利用method来实现前段读写分离：</p>\n<pre><code>acl  read method GET\nacl  read method HEAD\nacl write method PUT\nacl write method POST\nuse_backend imgservers if read\nuse_backend uploadservers if write\n</code></pre></li>\n<li><p>path_beg <code>&lt;string&gt;</code> ||url_beg<br>用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 /static、/images、/javascript或/stylesheets头。<br>例如：利用path_beg实现以/static /images开头的请求转交到 static server上：</p>\n<pre><code>acl url_static path_beg -i /static /images \nuse_backend static if url_static \n</code></pre></li>\n<li><p>path_end <code>&lt;string&gt;</code> || url_reg<br>用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾<br>例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：</string></p>\n<pre><code>acl url_static path_end -i .jpg .gif .png .css .js .html\nuse_backend static if url_static\n</code></pre></li>\n<li><p>hdr_beg <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。<br>例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上</string></p>\n<pre><code>acl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080  \nuse_backend lvs3 if is_lvs3 \n</code></pre></li>\n<li><p>hdr_end <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式<br>例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上</string></p>\n<pre><code>acl is_lvs3 hdr_end(host) -i lvs3.test.net:8080  \nuse_backend lvs3 if is_lvs2 \n</code></pre></li>\n<li><p>hdr <code>&lt;string&gt;</code><br>用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。<br>例如 当用户访问172.16.1.100时，重定向到<a href=\"http://www.afwing.com\" target=\"_blank\" rel=\"noopener\">http://www.afwing.com</a></p>\n<pre><code>acl  dstipaddr  hdr(Host) 172.16.1.100\nredirect  location   http://www.afwing.com if  dstipaddr\n</code></pre></li>\n<li><p>hdr_reg <code>&lt;string&gt;</code><br>如果请求的域名满足正则表达式，返回true， -i是忽略大小写</p>\n<pre><code>acl denali_policy hdr_reg(host) -i ^(www.inbank.com|image.inbank.com)$\n</code></pre></li>\n<li><p>hdr_dom <code>&lt;string&gt;</code><br>如果请求域名满足www.inbank.com，返回true， -i是忽略大小写</p>\n<pre><code>acl tm_policy hdr_dom(host) -i www.inbank.com\n</code></pre></li>\n<li><p>url_sub<br>在请求url中包含sip_apiname=，则此控制策略返回true，否则为false</p>\n<pre><code>acl invalid_req url_sub -i sip_apiname=#定义一个名为invalid_req的策略\n</code></pre></li>\n<li><p>url_dir<br>在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false</p>\n<pre><code>acl timetask_req url_dir -i timetask\n</code></pre></li>\n<li><p>hdr_cnt <code>&lt;string&gt;</code><br>当请求的header中Content-length等于0时，返回true</p>\n<pre><code>acl missing_cl hdr_cnt(Content-length) eq 0\n</code></pre></li>\n</ol>\n<ul>\n<li><strong>基于四层协议（ip）规则acl测试标准</strong></li>\n</ul>\n<ol>\n<li><p>dst和dst_port<br>定义访问地址为目标地址或目标端口的acl规则</p>\n</li>\n<li><p>src和src_port<br>定义访问地址为源地址或源端口的acl规则<br>例如： 允许10.0.0.0/24的用户访问，其他用户将禁止</p>\n<pre><code>acl net10  src  10.0.0.0/24\ntcp-request content  accept  if  net10\ntcp-request  content  reject\ntcp-request content accept [ {if | unless} ]\nAccept a connection if/unless a content inspection condition is matched\n</code></pre></li>\n</ol>\n<hr>\n<h3 id=\"ACL规则引用\"><a href=\"#ACL规则引用\" class=\"headerlink\" title=\"ACL规则引用\"></a>ACL规则引用</h3><p>当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：</p>\n<ol>\n<li><p>正常写法：</p>\n<pre><code>use_backend static if url_static\n</code></pre></li>\n<li><p>或者写法：</p>\n<pre><code>use_backend backend1 if aclA || aclB \nuse_backend backend1 if aclA || !aclC\n</code></pre><p>注意上面“||”也可以使用or来表示</p>\n</li>\n<li><p>非（不符合）写法：</p>\n<pre><code>use_backend backend1 if aclA !aclB \nuse_backend backend1 if aclA !aclB !aclC\n</code></pre></li>\n<li><p>与（and）写法：</p>\n<pre><code>use_backend backend1 if aclA !aclB \nuse_backend backend1 if aclA !aclB !aclC\n</code></pre></li>\n</ol>\n<hr>\n<h6 id=\"常见应用实例\"><a href=\"#常见应用实例\" class=\"headerlink\" title=\"常见应用实例\"></a>常见应用实例</h6><ol>\n<li><p>当请求中header中Content-length等于0，阻止请求返回403</p>\n<pre><code>block if missing_cl\n</code></pre></li>\n<li><p>block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。</p>\n<pre><code>block if !invalid_req || timetask_req\n</code></pre></li>\n<li><p>当满足denali_policy的策略时，使用denali_server的backend</p>\n<pre><code>use_backend denali_server if denali_policy\n</code></pre></li>\n<li><p>当满足tm_policy的策略时，使用tm_server的backend</p>\n<pre><code>use_backend tm_server if tm_policy\n</code></pre></li>\n<li><p>reqisetbe关键字定义，根据定义的关键字选择backend</p>\n<pre><code>reqisetbe ^Host:\\ img dynamic\nreqisetbe ^[^\\ ]\\*\\ /(img|css)/ dynamic\nreqisetbe ^[^\\ ]\\*\\ /admin/stats stats\n</code></pre></li>\n<li><p>以上都不满足的时候使用默认mms_server的backend</p>\n<pre><code>default_backend mms\n</code></pre></li>\n<li><p>利用acl实现页面动静分离;</p>\n<pre><code>frontend webservs\n         bind            *:80\n         acl             url_static path_beg -i /static /images /javascript /stylesheets\n         acl             url_static path_end -i .jpg .gif .png .css .js .html\n         acl             url_php    path_end  -i .php\n         use_backend     static if url_static or host_static\n         use_backend     dynamic if url_php\n         default_backend dynamic\nbackend static\n        balance roundrobin\n        server  node1 192.168.1.111:80 check maxconn 3000\nbackend dynamic\n        balance roundrobin\n        server  node2 192.168.1.112:80 check maxconn 1000  \n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>HAProxy的ACL具有很强大的功能，能够定义三到七层的规则。ACL的作用，就是为了匹配一些特别的请求，然后对其进行修改或者分发到不同的服务器组中。<br>HAProxy的ACL用于实现基于请求报文的首部、响应报文的内容或 其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。 其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件 ，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至 某特定的后端。</p>","more":"<hr>\n<h3 id=\"ACL规则定义\"><a href=\"#ACL规则定义\" class=\"headerlink\" title=\"ACL规则定义\"></a>ACL规则定义</h3><p>格式：<code>acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] [&lt;value&gt;]</code></p>\n<p><code>&lt;aclname&gt;</code>：ACL名称，区分字符大小写，且其只能包含大小写字母、数字、-(连接线)、_(下划线)、.(点号)和:(冒号)；haproxy中，acl可以重名，这可以把多个测试条件定义为一个共同的acl；<br><code>&lt;criterion&gt;</code>：测试标准，即对什么信息发起测试；测试方式可以由[flags]指定的标志进行调整；而有些测试标准也可以需要为其在<code>&lt;value&gt;</code>之前指定一个操作符[operator]；<br><code>[flags]</code>：目前haproxy的acl支持的标志位有3个：</p>\n<ul>\n<li>-i：不区分中模式字符的大小写；</li>\n<li>-f：从指定的文件中加载模式；</li>\n<li>–：标志符的强制结束标记，在模式中的字符串像标记符时使用；</li>\n</ul>\n<p><code>&lt;value&gt;</code>：acl测试条件支持的值有以下4类：</p>\n<ul>\n<li>整数或整数范围：如1024:65535表示从1024至65535；仅支持使用正整数(如果出现类似小数的标识，其为通常为版本测试)，且支持使用的操作符有5个，分别为eq、ge、gt、le和lt；</li>\n<li>字符串：支持使用“-i”以忽略字符大小写，支持使用“\\”进行转义；如果在模式首部出现了-i，可以在其之前使用“–”标志位；</li>\n<li>正则表达式：其机制类同字符串匹配；</li>\n<li>IP地址及网络地址；<blockquote>\n<p>注意:同一个acl中可以指定多个测试条件，这些测试条件需要由逻辑操作符指定其关系。条件间的组合测试关系有三种：“与”(默认即为与操作)、“或”(使用“||”操作符)以及“非”(使用“!”操作符)。</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h6 id=\"常用的测试标准-criteria\"><a href=\"#常用的测试标准-criteria\" class=\"headerlink\" title=\"常用的测试标准(criteria)\"></a>常用的测试标准(criteria)</h6><ul>\n<li><strong>基于七层协议（http）规则acl测试标准</strong></li>\n</ul>\n<ol>\n<li><p>method <code>&lt;string&gt;</code><br>测试HTTP请求报文中请求类型。<br>例如： 利用method来实现前段读写分离：</p>\n<pre><code>acl  read method GET\nacl  read method HEAD\nacl write method PUT\nacl write method POST\nuse_backend imgservers if read\nuse_backend uploadservers if write\n</code></pre></li>\n<li><p>path_beg <code>&lt;string&gt;</code> ||url_beg<br>用于测试请求的URL是否以指定的模式开头;下面的例子用于测试URL是否以 /static、/images、/javascript或/stylesheets头。<br>例如：利用path_beg实现以/static /images开头的请求转交到 static server上：</p>\n<pre><code>acl url_static path_beg -i /static /images \nuse_backend static if url_static \n</code></pre></li>\n<li><p>path_end <code>&lt;string&gt;</code> || url_reg<br>用于测试请求的URL是否以<string>指定的模式结尾。例如，下面的例子用户测试URL是否以jpg、gif、png、css或js结尾<br>例如：利用path_end实现以.jpg .gif .png .css等结尾的格式的请求转交到 static server上：</string></p>\n<pre><code>acl url_static path_end -i .jpg .gif .png .css .js .html\nuse_backend static if url_static\n</code></pre></li>\n<li><p>hdr_beg <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的开头部分是否符合<string>指定的模式。<br>例如：当request header中的host前缀部分匹配到lvs.test.net.:8080则将请求转给后端backend定义的 is_lvs3上</string></p>\n<pre><code>acl is_lvs3 hdr_beg(host) -i lvs3.test.net:8080  \nuse_backend lvs3 if is_lvs3 \n</code></pre></li>\n<li><p>hdr_end <code>&lt;string&gt;</code><br>用于测试请求报文的指定首部的结尾部分是否符合<string>指定的模式<br>例如：当request header中的host后缀部分匹配到lvs3.test.net.:8080则将请求转给后端backend定义的 is_lvs2上</string></p>\n<pre><code>acl is_lvs3 hdr_end(host) -i lvs3.test.net:8080  \nuse_backend lvs3 if is_lvs2 \n</code></pre></li>\n<li><p>hdr <code>&lt;string&gt;</code><br>用于测试请求报文中的所有首部或指定首部信息是否满足指定的条件；指定首部时， 其名称不区分大小写， 且在括号中“（）”不能有任何多余的空白字符。测试服务器端的响应报文时可以使用shdr()。<br>例如 当用户访问172.16.1.100时，重定向到<a href=\"http://www.afwing.com\" target=\"_blank\" rel=\"noopener\">http://www.afwing.com</a></p>\n<pre><code>acl  dstipaddr  hdr(Host) 172.16.1.100\nredirect  location   http://www.afwing.com if  dstipaddr\n</code></pre></li>\n<li><p>hdr_reg <code>&lt;string&gt;</code><br>如果请求的域名满足正则表达式，返回true， -i是忽略大小写</p>\n<pre><code>acl denali_policy hdr_reg(host) -i ^(www.inbank.com|image.inbank.com)$\n</code></pre></li>\n<li><p>hdr_dom <code>&lt;string&gt;</code><br>如果请求域名满足www.inbank.com，返回true， -i是忽略大小写</p>\n<pre><code>acl tm_policy hdr_dom(host) -i www.inbank.com\n</code></pre></li>\n<li><p>url_sub<br>在请求url中包含sip_apiname=，则此控制策略返回true，否则为false</p>\n<pre><code>acl invalid_req url_sub -i sip_apiname=#定义一个名为invalid_req的策略\n</code></pre></li>\n<li><p>url_dir<br>在请求url中存在timetask作为部分地址路径，则此控制策略返回true，否则返回false</p>\n<pre><code>acl timetask_req url_dir -i timetask\n</code></pre></li>\n<li><p>hdr_cnt <code>&lt;string&gt;</code><br>当请求的header中Content-length等于0时，返回true</p>\n<pre><code>acl missing_cl hdr_cnt(Content-length) eq 0\n</code></pre></li>\n</ol>\n<ul>\n<li><strong>基于四层协议（ip）规则acl测试标准</strong></li>\n</ul>\n<ol>\n<li><p>dst和dst_port<br>定义访问地址为目标地址或目标端口的acl规则</p>\n</li>\n<li><p>src和src_port<br>定义访问地址为源地址或源端口的acl规则<br>例如： 允许10.0.0.0/24的用户访问，其他用户将禁止</p>\n<pre><code>acl net10  src  10.0.0.0/24\ntcp-request content  accept  if  net10\ntcp-request  content  reject\ntcp-request content accept [ {if | unless} ]\nAccept a connection if/unless a content inspection condition is matched\n</code></pre></li>\n</ol>\n<hr>\n<h3 id=\"ACL规则引用\"><a href=\"#ACL规则引用\" class=\"headerlink\" title=\"ACL规则引用\"></a>ACL规则引用</h3><p>当定义好了ACL后我们可以利用“use_backend” 参数来引用acl规则，如果需要引用多个acl时，只需要依次在后面添加相关acl ，也可以 匹配多个acl，如下示例：</p>\n<ol>\n<li><p>正常写法：</p>\n<pre><code>use_backend static if url_static\n</code></pre></li>\n<li><p>或者写法：</p>\n<pre><code>use_backend backend1 if aclA || aclB \nuse_backend backend1 if aclA || !aclC\n</code></pre><p>注意上面“||”也可以使用or来表示</p>\n</li>\n<li><p>非（不符合）写法：</p>\n<pre><code>use_backend backend1 if aclA !aclB \nuse_backend backend1 if aclA !aclB !aclC\n</code></pre></li>\n<li><p>与（and）写法：</p>\n<pre><code>use_backend backend1 if aclA !aclB \nuse_backend backend1 if aclA !aclB !aclC\n</code></pre></li>\n</ol>\n<hr>\n<h6 id=\"常见应用实例\"><a href=\"#常见应用实例\" class=\"headerlink\" title=\"常见应用实例\"></a>常见应用实例</h6><ol>\n<li><p>当请求中header中Content-length等于0，阻止请求返回403</p>\n<pre><code>block if missing_cl\n</code></pre></li>\n<li><p>block表示阻止请求，返回403错误，当前表示如果不满足策略invalid_req，或者满足策略timetask_req，则阻止请求。</p>\n<pre><code>block if !invalid_req || timetask_req\n</code></pre></li>\n<li><p>当满足denali_policy的策略时，使用denali_server的backend</p>\n<pre><code>use_backend denali_server if denali_policy\n</code></pre></li>\n<li><p>当满足tm_policy的策略时，使用tm_server的backend</p>\n<pre><code>use_backend tm_server if tm_policy\n</code></pre></li>\n<li><p>reqisetbe关键字定义，根据定义的关键字选择backend</p>\n<pre><code>reqisetbe ^Host:\\ img dynamic\nreqisetbe ^[^\\ ]\\*\\ /(img|css)/ dynamic\nreqisetbe ^[^\\ ]\\*\\ /admin/stats stats\n</code></pre></li>\n<li><p>以上都不满足的时候使用默认mms_server的backend</p>\n<pre><code>default_backend mms\n</code></pre></li>\n<li><p>利用acl实现页面动静分离;</p>\n<pre><code>frontend webservs\n         bind            *:80\n         acl             url_static path_beg -i /static /images /javascript /stylesheets\n         acl             url_static path_end -i .jpg .gif .png .css .js .html\n         acl             url_php    path_end  -i .php\n         use_backend     static if url_static or host_static\n         use_backend     dynamic if url_php\n         default_backend dynamic\nbackend static\n        balance roundrobin\n        server  node1 192.168.1.111:80 check maxconn 3000\nbackend dynamic\n        balance roundrobin\n        server  node2 192.168.1.112:80 check maxconn 1000  \n</code></pre></li>\n</ol>"},{"title":"【HAProxy】介绍和应用","layout":"post","comments":1,"date":"2017-12-22T07:15:53.000Z","keywords":null,"description":null,"_content":"### HAProxy简介\nHAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。\n\nHAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。\n\nHAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。\n\n包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。\n\nHAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。\n\n<!-- more -->\n\n---\n\n### HAProxy基础概念\n代理的作用\n* 正向代理，反向代理\n* 代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查\n* 内容路由：根据流量以及内容类型将请求转发至特定的服务器\n* 转码器：支持压缩功能，将数据以压缩形式发送给客户端\n\n缓存的作用\n* 减少访冗余内容传输\n* 节省带宽，缓解网络瓶颈\n* 降低了对原始服务器的请求压力\n* 降低了传输延迟\n\n负载均衡集群\n* 四层代理：lvs, nginx(stream)，HAProxy(mode tcp)\n通过分析IP层及TCP/UDP层的流量实现的基于“IP+端口”的负载均衡。\n\n* 七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound...\n可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。\n\n七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。\n\n**HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容**\n\n---\n\n### HAProxy功能\n* HAProxy是TCP/HTTP反向代理服务器，尤其适合于高可用性环境\n* 可以针对HTTP请求添加cookie，进行路由后端服务器\n* 可平衡负载至后端服务器，并支持持久连接\n* 支持基于cookie进行调度\n* 支持所有主服务器故障切换至备用服务器\n* 支持专用端口实现监控服务\n* 支持不影响现有连接情况下停止接受新连接请求\n* 可以在双向添加，修改或删除HTTP报文首部\n* 支持基于pattern实现连接请求的访问控制\n* 通过特定的URI为授权用户提供详细的状态信息\n* 支持http反向代理\n* 支持动态程序的反向代理\n* 支持基于数据库的反向代理\n版本：1.4 1.5 1.6 1.7 1.8\n\n---\n\n### HAProxy应用\n##### HAProxy进行安全加固\n用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如\n\n\tbackend dynamic\n\t    mode http\n\t    acl being_scanned be_sess_rate gt 100\n\t    redirect location /denied.html if being_scanned\n\n##### 通过ACL指定可访问的用户\n阻断来自非指定IP的访问80端口的请求\n\n\tacl myhost src 172.16.100.1\n\tacl myport dst_port 80\n\ttcp-request connection reject if !myhost myport　　\n还可以用block\n\n\tblock if ! myhost myport\n\n##### 根据用户访问内容实现动静分离\n\n\tfrontend http-in\n\t    bind            *:80\n\t    mode            http\n\t    log             global\n\t    option          httpclose\n\t    acl             url_static path_beg -i /static /images /javascript /stylesheets\n\t    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js\n\t    use_backend     static_servers if url_static\n\t    default_backend dynamic_servers\n\tbackend static_servers\n\t    balance roundrobin\n\t    server  imgsrv1 172.18.64.7:80 check maxconn 6000\n\t    server  imgsrv2 172.18.64.107:80 check maxconn 6000\n\tbackend dynamic_servers\n\t    balance source\n\t    server  websrv1 172.18.64.17:80 check maxconn 1000\n\t    server  websrv2 172.18.64.106:80 check maxconn 1000\n\n##### HAProxy实现浏览器控制\n阻断火狐浏览器发送的请求  \n\n\tacl firefox hdr_reg(User-Agent) -i .*firefox.*\n\tblock if firefox\n将IE用户请求分配到静态服务器\n\n\tacl ie_useragent hdr_reg(User-Agent) -i .*ie.*\n\tuse_backend static_servers if ie_useragent\n\n##### HAProxy实现真实日志记录\noption forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。\nHAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。\n\n\tfrontend www\n\tmode http\n\toption forwardfor except 127.0.0.1\n\n##### HAProxy实现会话保持\n1. 源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。\n缺点：当后端一台服务器挂了以后会造成部分session丢失\n\n\tbackend SOURCE_srv\n\t        mode    http\n\t        balance source\n\t        server  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3\n\t        server  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3\n\t        server  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3\n2. cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。\n\n\tbackend COOKIE_srv\n\t        mode   http\n\t        cookie SERVERID insert indirect nocache\n\t        server app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3\n\t        server app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3\n\t        server app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3\n在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID=A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID=A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。\n\n##### HAProxy性能优化参数\noption redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器\noption dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包\nretries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查\nmaxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小\n","source":"_posts/【HAProxy】介绍和应用.md","raw":"---\ntitle: 【HAProxy】介绍和应用\nlayout: post\ncomments: true\ndate: 2017-12-22 15:15:53\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\n### HAProxy简介\nHAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。\n\nHAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。\n\nHAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。\n\n包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。\n\nHAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。\n\n<!-- more -->\n\n---\n\n### HAProxy基础概念\n代理的作用\n* 正向代理，反向代理\n* 代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查\n* 内容路由：根据流量以及内容类型将请求转发至特定的服务器\n* 转码器：支持压缩功能，将数据以压缩形式发送给客户端\n\n缓存的作用\n* 减少访冗余内容传输\n* 节省带宽，缓解网络瓶颈\n* 降低了对原始服务器的请求压力\n* 降低了传输延迟\n\n负载均衡集群\n* 四层代理：lvs, nginx(stream)，HAProxy(mode tcp)\n通过分析IP层及TCP/UDP层的流量实现的基于“IP+端口”的负载均衡。\n\n* 七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound...\n可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。\n\n七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。\n\n**HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容**\n\n---\n\n### HAProxy功能\n* HAProxy是TCP/HTTP反向代理服务器，尤其适合于高可用性环境\n* 可以针对HTTP请求添加cookie，进行路由后端服务器\n* 可平衡负载至后端服务器，并支持持久连接\n* 支持基于cookie进行调度\n* 支持所有主服务器故障切换至备用服务器\n* 支持专用端口实现监控服务\n* 支持不影响现有连接情况下停止接受新连接请求\n* 可以在双向添加，修改或删除HTTP报文首部\n* 支持基于pattern实现连接请求的访问控制\n* 通过特定的URI为授权用户提供详细的状态信息\n* 支持http反向代理\n* 支持动态程序的反向代理\n* 支持基于数据库的反向代理\n版本：1.4 1.5 1.6 1.7 1.8\n\n---\n\n### HAProxy应用\n##### HAProxy进行安全加固\n用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如\n\n\tbackend dynamic\n\t    mode http\n\t    acl being_scanned be_sess_rate gt 100\n\t    redirect location /denied.html if being_scanned\n\n##### 通过ACL指定可访问的用户\n阻断来自非指定IP的访问80端口的请求\n\n\tacl myhost src 172.16.100.1\n\tacl myport dst_port 80\n\ttcp-request connection reject if !myhost myport　　\n还可以用block\n\n\tblock if ! myhost myport\n\n##### 根据用户访问内容实现动静分离\n\n\tfrontend http-in\n\t    bind            *:80\n\t    mode            http\n\t    log             global\n\t    option          httpclose\n\t    acl             url_static path_beg -i /static /images /javascript /stylesheets\n\t    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js\n\t    use_backend     static_servers if url_static\n\t    default_backend dynamic_servers\n\tbackend static_servers\n\t    balance roundrobin\n\t    server  imgsrv1 172.18.64.7:80 check maxconn 6000\n\t    server  imgsrv2 172.18.64.107:80 check maxconn 6000\n\tbackend dynamic_servers\n\t    balance source\n\t    server  websrv1 172.18.64.17:80 check maxconn 1000\n\t    server  websrv2 172.18.64.106:80 check maxconn 1000\n\n##### HAProxy实现浏览器控制\n阻断火狐浏览器发送的请求  \n\n\tacl firefox hdr_reg(User-Agent) -i .*firefox.*\n\tblock if firefox\n将IE用户请求分配到静态服务器\n\n\tacl ie_useragent hdr_reg(User-Agent) -i .*ie.*\n\tuse_backend static_servers if ie_useragent\n\n##### HAProxy实现真实日志记录\noption forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。\nHAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。\n\n\tfrontend www\n\tmode http\n\toption forwardfor except 127.0.0.1\n\n##### HAProxy实现会话保持\n1. 源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。\n缺点：当后端一台服务器挂了以后会造成部分session丢失\n\n\tbackend SOURCE_srv\n\t        mode    http\n\t        balance source\n\t        server  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3\n\t        server  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3\n\t        server  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3\n2. cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。\n\n\tbackend COOKIE_srv\n\t        mode   http\n\t        cookie SERVERID insert indirect nocache\n\t        server app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3\n\t        server app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3\n\t        server app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3\n在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID=A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID=A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。\n\n##### HAProxy性能优化参数\noption redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器\noption dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包\nretries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查\nmaxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小\n","slug":"【HAProxy】介绍和应用","published":1,"updated":"2017-12-22T07:29:28.011Z","_id":"cjpuwa1hl001os0jtbzt8vzte","photos":[],"link":"","content":"<h3 id=\"HAProxy简介\"><a href=\"#HAProxy简介\" class=\"headerlink\" title=\"HAProxy简介\"></a>HAProxy简介</h3><p>HAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。</p>\n<p>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。</p>\n<p>HAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。</p>\n<p>包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。</p>\n<p>HAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。</p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"HAProxy基础概念\"><a href=\"#HAProxy基础概念\" class=\"headerlink\" title=\"HAProxy基础概念\"></a>HAProxy基础概念</h3><p>代理的作用</p>\n<ul>\n<li>正向代理，反向代理</li>\n<li>代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查</li>\n<li>内容路由：根据流量以及内容类型将请求转发至特定的服务器</li>\n<li>转码器：支持压缩功能，将数据以压缩形式发送给客户端</li>\n</ul>\n<p>缓存的作用</p>\n<ul>\n<li>减少访冗余内容传输</li>\n<li>节省带宽，缓解网络瓶颈</li>\n<li>降低了对原始服务器的请求压力</li>\n<li>降低了传输延迟</li>\n</ul>\n<p>负载均衡集群</p>\n<ul>\n<li><p>四层代理：lvs, nginx(stream)，HAProxy(mode tcp)<br>通过分析IP层及TCP/UDP层的流量实现的基于“IP+端口”的负载均衡。</p>\n</li>\n<li><p>七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound…<br>可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。</p>\n</li>\n</ul>\n<p>七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。</p>\n<p><strong>HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容</strong></p>\n<hr>\n<h3 id=\"HAProxy功能\"><a href=\"#HAProxy功能\" class=\"headerlink\" title=\"HAProxy功能\"></a>HAProxy功能</h3><ul>\n<li>HAProxy是TCP/HTTP反向代理服务器，尤其适合于高可用性环境</li>\n<li>可以针对HTTP请求添加cookie，进行路由后端服务器</li>\n<li>可平衡负载至后端服务器，并支持持久连接</li>\n<li>支持基于cookie进行调度</li>\n<li>支持所有主服务器故障切换至备用服务器</li>\n<li>支持专用端口实现监控服务</li>\n<li>支持不影响现有连接情况下停止接受新连接请求</li>\n<li>可以在双向添加，修改或删除HTTP报文首部</li>\n<li>支持基于pattern实现连接请求的访问控制</li>\n<li>通过特定的URI为授权用户提供详细的状态信息</li>\n<li>支持http反向代理</li>\n<li>支持动态程序的反向代理</li>\n<li>支持基于数据库的反向代理<br>版本：1.4 1.5 1.6 1.7 1.8</li>\n</ul>\n<hr>\n<h3 id=\"HAProxy应用\"><a href=\"#HAProxy应用\" class=\"headerlink\" title=\"HAProxy应用\"></a>HAProxy应用</h3><h5 id=\"HAProxy进行安全加固\"><a href=\"#HAProxy进行安全加固\" class=\"headerlink\" title=\"HAProxy进行安全加固\"></a>HAProxy进行安全加固</h5><p>用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如</p>\n<pre><code>backend dynamic\n    mode http\n    acl being_scanned be_sess_rate gt 100\n    redirect location /denied.html if being_scanned\n</code></pre><h5 id=\"通过ACL指定可访问的用户\"><a href=\"#通过ACL指定可访问的用户\" class=\"headerlink\" title=\"通过ACL指定可访问的用户\"></a>通过ACL指定可访问的用户</h5><p>阻断来自非指定IP的访问80端口的请求</p>\n<pre><code>acl myhost src 172.16.100.1\nacl myport dst_port 80\ntcp-request connection reject if !myhost myport　　\n</code></pre><p>还可以用block</p>\n<pre><code>block if ! myhost myport\n</code></pre><h5 id=\"根据用户访问内容实现动静分离\"><a href=\"#根据用户访问内容实现动静分离\" class=\"headerlink\" title=\"根据用户访问内容实现动静分离\"></a>根据用户访问内容实现动静分离</h5><pre><code>frontend http-in\n    bind            *:80\n    mode            http\n    log             global\n    option          httpclose\n    acl             url_static path_beg -i /static /images /javascript /stylesheets\n    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js\n    use_backend     static_servers if url_static\n    default_backend dynamic_servers\nbackend static_servers\n    balance roundrobin\n    server  imgsrv1 172.18.64.7:80 check maxconn 6000\n    server  imgsrv2 172.18.64.107:80 check maxconn 6000\nbackend dynamic_servers\n    balance source\n    server  websrv1 172.18.64.17:80 check maxconn 1000\n    server  websrv2 172.18.64.106:80 check maxconn 1000\n</code></pre><h5 id=\"HAProxy实现浏览器控制\"><a href=\"#HAProxy实现浏览器控制\" class=\"headerlink\" title=\"HAProxy实现浏览器控制\"></a>HAProxy实现浏览器控制</h5><p>阻断火狐浏览器发送的请求  </p>\n<pre><code>acl firefox hdr_reg(User-Agent) -i .*firefox.*\nblock if firefox\n</code></pre><p>将IE用户请求分配到静态服务器</p>\n<pre><code>acl ie_useragent hdr_reg(User-Agent) -i .*ie.*\nuse_backend static_servers if ie_useragent\n</code></pre><h5 id=\"HAProxy实现真实日志记录\"><a href=\"#HAProxy实现真实日志记录\" class=\"headerlink\" title=\"HAProxy实现真实日志记录\"></a>HAProxy实现真实日志记录</h5><p>option forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。<br>HAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。</p>\n<pre><code>frontend www\nmode http\noption forwardfor except 127.0.0.1\n</code></pre><h5 id=\"HAProxy实现会话保持\"><a href=\"#HAProxy实现会话保持\" class=\"headerlink\" title=\"HAProxy实现会话保持\"></a>HAProxy实现会话保持</h5><ol>\n<li><p>源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。<br>缺点：当后端一台服务器挂了以后会造成部分session丢失</p>\n<p> backend SOURCE_srv</p>\n<pre><code>mode    http\nbalance source\nserver  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3\nserver  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3\nserver  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3\n</code></pre></li>\n<li><p>cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。</p>\n<p> backend COOKIE_srv</p>\n<pre><code>mode   http\ncookie SERVERID insert indirect nocache\nserver app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3\nserver app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3\nserver app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3\n</code></pre><p>在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID=A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID=A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。</p>\n</li>\n</ol>\n<h5 id=\"HAProxy性能优化参数\"><a href=\"#HAProxy性能优化参数\" class=\"headerlink\" title=\"HAProxy性能优化参数\"></a>HAProxy性能优化参数</h5><p>option redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器<br>option dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包<br>retries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查<br>maxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"HAProxy简介\"><a href=\"#HAProxy简介\" class=\"headerlink\" title=\"HAProxy简介\"></a>HAProxy简介</h3><p>HAProxy是一个使用C语言编写的自由及开放源代码软件，其提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。</p>\n<p>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。</p>\n<p>HAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。</p>\n<p>包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。</p>\n<p>HAProxy是法国人Willy Tarreau开发的一个开源软件，是一款应对客户端10000以上的同时连接的高性能的TCP和 HTTP负载均衡器。其功能是用来提供基于cookie的持久性， 基于内容的交换，过载保护的高级流量管制，自动故障切换 ，以正则表达式为基础的标题控制运行时间，基于Web的报表，高级日志记录以帮助排除故障的应用或网络及其他功能。</p>","more":"<hr>\n<h3 id=\"HAProxy基础概念\"><a href=\"#HAProxy基础概念\" class=\"headerlink\" title=\"HAProxy基础概念\"></a>HAProxy基础概念</h3><p>代理的作用</p>\n<ul>\n<li>正向代理，反向代理</li>\n<li>代理服务器，可以提供缓存功能加速客户端访问，同时可以对缓存数据进行有效性检查</li>\n<li>内容路由：根据流量以及内容类型将请求转发至特定的服务器</li>\n<li>转码器：支持压缩功能，将数据以压缩形式发送给客户端</li>\n</ul>\n<p>缓存的作用</p>\n<ul>\n<li>减少访冗余内容传输</li>\n<li>节省带宽，缓解网络瓶颈</li>\n<li>降低了对原始服务器的请求压力</li>\n<li>降低了传输延迟</li>\n</ul>\n<p>负载均衡集群</p>\n<ul>\n<li><p>四层代理：lvs, nginx(stream)，HAProxy(mode tcp)<br>通过分析IP层及TCP/UDP层的流量实现的基于“IP+端口”的负载均衡。</p>\n</li>\n<li><p>七层代理：http: nginx(http, ngx_http_upstream_module), HAProxy(mode http), httpd, ats, perlbal, pound…<br>可以根据内容，再配合负载均衡算法来选择后端服务器，不但可以根据 “ip+端口”方式进行负载分流，还可以根据网站的URL，访问域名，浏览 器类别，语言等决定负载均衡的策略。</p>\n</li>\n</ul>\n<p>七层负载均衡模式下，负载均衡与客户端及后端的服务器会分别建立一次 TCP连接，而在四层负载均衡模式下(DR)，仅建立一次TCP连接；七层负载均衡对负载均衡设备的要求更高，处理能力也低于四层负载均衡。</p>\n<p><strong>HAProxy与lvs的负载均衡很大一点不同的是，lvs仅仅是基于内核的简单调度，而HAProxy则是当请求到达反向代理端时，代理端帮前端去请求相应内容</strong></p>\n<hr>\n<h3 id=\"HAProxy功能\"><a href=\"#HAProxy功能\" class=\"headerlink\" title=\"HAProxy功能\"></a>HAProxy功能</h3><ul>\n<li>HAProxy是TCP/HTTP反向代理服务器，尤其适合于高可用性环境</li>\n<li>可以针对HTTP请求添加cookie，进行路由后端服务器</li>\n<li>可平衡负载至后端服务器，并支持持久连接</li>\n<li>支持基于cookie进行调度</li>\n<li>支持所有主服务器故障切换至备用服务器</li>\n<li>支持专用端口实现监控服务</li>\n<li>支持不影响现有连接情况下停止接受新连接请求</li>\n<li>可以在双向添加，修改或删除HTTP报文首部</li>\n<li>支持基于pattern实现连接请求的访问控制</li>\n<li>通过特定的URI为授权用户提供详细的状态信息</li>\n<li>支持http反向代理</li>\n<li>支持动态程序的反向代理</li>\n<li>支持基于数据库的反向代理<br>版本：1.4 1.5 1.6 1.7 1.8</li>\n</ul>\n<hr>\n<h3 id=\"HAProxy应用\"><a href=\"#HAProxy应用\" class=\"headerlink\" title=\"HAProxy应用\"></a>HAProxy应用</h3><h5 id=\"HAProxy进行安全加固\"><a href=\"#HAProxy进行安全加固\" class=\"headerlink\" title=\"HAProxy进行安全加固\"></a>HAProxy进行安全加固</h5><p>用于测试指定的backend上会话创建的速率(即每秒创建的会话数)是否满足指定的条件；常用于在指定 backend上的会话速率过高时将用户请求转发至另外的backend，或用于阻止攻击行为。例如</p>\n<pre><code>backend dynamic\n    mode http\n    acl being_scanned be_sess_rate gt 100\n    redirect location /denied.html if being_scanned\n</code></pre><h5 id=\"通过ACL指定可访问的用户\"><a href=\"#通过ACL指定可访问的用户\" class=\"headerlink\" title=\"通过ACL指定可访问的用户\"></a>通过ACL指定可访问的用户</h5><p>阻断来自非指定IP的访问80端口的请求</p>\n<pre><code>acl myhost src 172.16.100.1\nacl myport dst_port 80\ntcp-request connection reject if !myhost myport　　\n</code></pre><p>还可以用block</p>\n<pre><code>block if ! myhost myport\n</code></pre><h5 id=\"根据用户访问内容实现动静分离\"><a href=\"#根据用户访问内容实现动静分离\" class=\"headerlink\" title=\"根据用户访问内容实现动静分离\"></a>根据用户访问内容实现动静分离</h5><pre><code>frontend http-in\n    bind            *:80\n    mode            http\n    log             global\n    option          httpclose\n    acl             url_static path_beg -i /static /images /javascript /stylesheets\n    acl             url_static path_end -i .jpg .jpeg .gif .png .css .js\n    use_backend     static_servers if url_static\n    default_backend dynamic_servers\nbackend static_servers\n    balance roundrobin\n    server  imgsrv1 172.18.64.7:80 check maxconn 6000\n    server  imgsrv2 172.18.64.107:80 check maxconn 6000\nbackend dynamic_servers\n    balance source\n    server  websrv1 172.18.64.17:80 check maxconn 1000\n    server  websrv2 172.18.64.106:80 check maxconn 1000\n</code></pre><h5 id=\"HAProxy实现浏览器控制\"><a href=\"#HAProxy实现浏览器控制\" class=\"headerlink\" title=\"HAProxy实现浏览器控制\"></a>HAProxy实现浏览器控制</h5><p>阻断火狐浏览器发送的请求  </p>\n<pre><code>acl firefox hdr_reg(User-Agent) -i .*firefox.*\nblock if firefox\n</code></pre><p>将IE用户请求分配到静态服务器</p>\n<pre><code>acl ie_useragent hdr_reg(User-Agent) -i .*ie.*\nuse_backend static_servers if ie_useragent\n</code></pre><h5 id=\"HAProxy实现真实日志记录\"><a href=\"#HAProxy实现真实日志记录\" class=\"headerlink\" title=\"HAProxy实现真实日志记录\"></a>HAProxy实现真实日志记录</h5><p>option forwardfor [ except ] [ header ] [ if-none ] 允许在发往服务器的请求首部中插入“X-Forwarded-For”首部。<br>HAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以 向每个发往服务器的请求上添加此首部，并以客户端IP为其value。 需要注意的是，HAProxy工作于隧道模式，其仅检查每一个连接的第一个请求，因此，仅第一个请求报文被附加此首部。 下面是一个例子。</p>\n<pre><code>frontend www\nmode http\noption forwardfor except 127.0.0.1\n</code></pre><h5 id=\"HAProxy实现会话保持\"><a href=\"#HAProxy实现会话保持\" class=\"headerlink\" title=\"HAProxy实现会话保持\"></a>HAProxy实现会话保持</h5><ol>\n<li><p>源地址hash（用户IP识别）Haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx的IP hash 指令）。<br>缺点：当后端一台服务器挂了以后会造成部分session丢失</p>\n<p> backend SOURCE_srv</p>\n<pre><code>mode    http\nbalance source\nserver  app-node1 10.31.1.179:80 check port 80 inter 3000 rise 3 fall 3\nserver  app-node2 10.31.1.191:80 check port 80 inter 3000 rise 3 fall 3\nserver  app-node3 10.31.0.35:80 check port 80 inter 3000 rise 3 fall 3\n</code></pre></li>\n<li><p>cookie 识别 HAProxy 将WEB服务端返回给客户端的cookie中插入HAProxy中特定的字符串(或添加前缀)在后端的服务器COOKIE ID。</p>\n<p> backend COOKIE_srv</p>\n<pre><code>mode   http\ncookie SERVERID insert indirect nocache\nserver app-node1 10.31.1.179:80 check port 80 cookie a inter 3000 rise 3 fall 3\nserver app-node2 10.31.1.191:80 check port 80 cookie b inter 3000 rise 3 fall 3\nserver app-node3 10.31.0.251:80 check port 80 cookie c inter 3000 rise 3 fall 3\n</code></pre><p>在LB1上配置好HAProxy后，LB1将接受用户的所有请求。如果一个用户请求不包含任何cookie，那这个请求将被HAProxy转发到一台可用的WEB服务器。可能是webA,webB，webC。然后HAProxy将把处理这个请求的WEB服务器的cookie值插入到请求响应中。如SERVERID=A。当这个客户端再次访问 并在HTTP请求头中带有SERVERID=A,HAProxy将会把它的请求直接转发给webA处理。在请求到达 webA之前，cookie将被移除，webA将不会看到这个cookie。如果webA不可用，对应的请求将被转发到其他可用的WEB服务器，相应的cookie值也将被重新设置。</p>\n</li>\n</ol>\n<h5 id=\"HAProxy性能优化参数\"><a href=\"#HAProxy性能优化参数\" class=\"headerlink\" title=\"HAProxy性能优化参数\"></a>HAProxy性能优化参数</h5><p>option redispatch：当server对应的服务器挂掉后，强制定向到其他健康的服务器<br>option dontlognull ：保证HAProxy不记录上级负载均衡发送过来 的用于检测状态没有数据的心跳包<br>retries 3 : 3次连接失败就认为服务器不可用，主要通过后面的check检查<br>maxconn 30000 : 代理时所能接受的最大并发连接数， 应该要比后端主机的并发总和要小</p>"},{"title":"【HAProxy】安装配置","layout":"post","comments":1,"date":"2017-12-19T07:34:42.000Z","keywords":null,"description":null,"_content":"### HAProxy下载\n[官网下载](https://www.haproxy.org/)\n[Fossies下载](https://fossies.org/linux/misc/)\n[官方文档](http://cbonte.github.io/haproxy-dconv/)\n\n<!-- more -->\n\n---\n\n### HAProxy安装\n#### 1. Linux下\n##### 1.1 下载\n进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可\n```\ncd /usr/download/\nwget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz\n```\n\n##### 1.2 解压\n```\ntar -zxvf haproxy-1.8.1.tar.gz\n```\n##### 1.3 安装\n```\ncd haproxy-1.8.1\nmake TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy\nmake install PREFIX=/usr/local/haproxy\n```\n参数说明:\n**TARGET=linux26**            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用`uname -r`可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。\n**ARCH=x86_64**               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。\n注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。\n**PREFIX=/usr/local/haprpxy** # 指定安装目录，默认为/usr/local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如/usr/local/haprpxy为haprpxy的安装路径。\n\n> CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。\n> * 安装make\nyum -y install gcc automake autoconf libtool make\n> * 安装gcc\nyum install gcc gcc-c++\n>\n> SUSE Linux Enterprise Server 12安装gcc\n> 安装命令：zypper install gcc\n> 如果出现如下错误：\n> Failed to mount cd:///?devices=/dev/disk/by-id/ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on /var/adm/mount/AP_0x63by2U: Mounting media failed (mount: no medium found on /dev/sr0)\n> 意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。\n\n#### 2. Windows下\n*暂无*\n\n---\n\n### HAProxy配置\n安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr/local/haproxy下。\n```\nvi /usr/local/haproxy/haproxy.cfg\n```\n粘贴如下内容至haproxy.cfg\n\n\t###################### 全局配置 ######################\n\tglobal\n\t       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n\t       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n\t       daemon                                      # 以后台形式运行harpoxy\n\t       uid     5040                                # 运行haproxy的用户\n\t       gid     5040                                # 运行haproxy的用户所在的组\n\t       chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t       log             global\n\t       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t       option          httpclose  # 每次请求完毕后主动关闭http通道\n\t       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t       retries         3          # 3次连接失败就认为是服务器不可用\n\t       timeout connect 300000     # 连接超时\n\t       timeout client  500000     # 客户端超时\n\t       timeout server  500000     # 服务器超时\n\n\t###################### 统计页面配置 ######################\n\tlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       bind          0.0.0.0:8888 # 监听端口\n\t       maxconn       1            # 默认的最大连接数\n\t       option        httplog      # 采用http日志格式\n\t       stats         enable       # 启用状态监控\n\t       stats refresh 30s          # 统计页面自动刷新时间\n\t       stats uri     /stats       # 统计页面url\n\t       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n\t       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n\t       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n\t###################### 业务前端配置 ######################\n\tfrontend xx\n\t         bind            0.0.0.0:80\n\t         default_backend xxServers\n\n\t###################### 业务后端配置 ######################\n\tbackend xxServers\n\t        balance source\n\t        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n\t        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n\n###### 实现日志记录\nhaproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。\n修改rsyslog配置文件：`vim /etc/rsyslog.conf`\n\n\t# Provides UDP syslog reception\n\t$ModLoad imudp      #取消注释\n\t$UDPServerRun 514   #取消注释\n\tlocal0.*            /usr/local/haproxy/logs/haproxy.log\n\t# 指定设备local0日志存放位置\n修改rsyslog配置文件：`vim /etc/sysconfig/rsyslog`\n\n\tSYSLOGD_OPTIONS=\"-r -m 0\"\n\tservice syslog restart\nhaproxy的日志信息也可以设置存放在专门的日志服务器中。\n\n---\n\n### HAProxy启动\n```\n/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n```\n检查是否启动：\n\n\t[root@Linux-xx ~]# ps -e|grep haproxy\n\t 1221 ?        00:01:32 haproxy\n看到上面结果，表明haproxy已经正常启动了。\n\n---\n\n### HAProxy查看状态\n```\nhttp://localhost:8888/stats\n```\n参数说明：\n**8888**  即haproxy配置文件中的监听端口\n**stats** 即haproxy配置文件中的监听名称\n\n如果无法访问，请查看防火墙中端口是否开启。\n> Centos查看8888端口占用情况，使用命令：`lsof -i tcp:8888`\nCentos列出所有使用的端口，使用命令：`netstat -ntlp`\n\n如果端口未开启，请设置防火墙开放端口。\n#### 1. 开启端口（以80端口为例） \n* 方法一：\n```\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 \n/etc/init.d/iptables save                             ## 保存修改 \nservice iptables restart                              ## 重启防火墙，使修改生效\n```\n* 方法二：\n\t先打开配置文件\n```\nvi /etc/sysconfig/iptables\n```\n\t再加入下面内容\n\t\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n\t最后，重启防火墙或重启计算机，修改完成。\n>修改防火墙时注意最好留下VNC和SSH的管理端口。\n\n#### 2. 关闭端口\n* 方法一：\n```\n/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 \n/etc/init.d/iptables save                           ## 保存修改 \nservice iptables restart                            ## 重启防火墙，使修改生效\n```\n* 方法二：\n\t先打开配置文件\n```\nvi /etc/sysconfig/iptables\n```\n\t再加入下面内容\n\t\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP\n\t最后重启防火墙或重启计算机，修改完成。\n\n#### 3. 查看端口状态\n```\n/etc/init.d/iptables status\n```\n\n#### 4. 临时性完全关闭防火墙，可以不重启计算机\n```\n#/etc/init.d/iptables status                ## 查看防火墙状态\n#/etc/init.d/iptable stop                   ## 本次关闭防火墙\n#/etc/init.d/iptable restart                ## 重启防火墙\n```\n\n#### 5. 永久性关闭防火墙\n```\n#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启\n```\n\n#### 6. CentOS的iptables示例\n\t# Firewall configuration written by system-config-securitylevel\n\t# Manual customization of this file is not recommended.*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t:RH-Firewall-1-INPUT - [0:0]\n\t-A INPUT -j RH-Firewall-1-INPUT\n\t-A FORWARD -j RH-Firewall-1-INPUT\n\t-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited\n\tCOMMIT\n要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令`iptables -L`可验证一下是否规则都已经生效，至此完成防火墙设置修改。\n\n---\n\n### HAProxy关闭\n直接kill pid即可。\n\n\n### [HAProxy脚本启动和关闭](http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/)\n","source":"_posts/【HAProxy】安装配置.md","raw":"---\ntitle: 【HAProxy】安装配置\nlayout: post\ncomments: true\ndate: 2017-12-19 15:34:42\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\n### HAProxy下载\n[官网下载](https://www.haproxy.org/)\n[Fossies下载](https://fossies.org/linux/misc/)\n[官方文档](http://cbonte.github.io/haproxy-dconv/)\n\n<!-- more -->\n\n---\n\n### HAProxy安装\n#### 1. Linux下\n##### 1.1 下载\n进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可\n```\ncd /usr/download/\nwget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz\n```\n\n##### 1.2 解压\n```\ntar -zxvf haproxy-1.8.1.tar.gz\n```\n##### 1.3 安装\n```\ncd haproxy-1.8.1\nmake TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy\nmake install PREFIX=/usr/local/haproxy\n```\n参数说明:\n**TARGET=linux26**            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用`uname -r`可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。\n**ARCH=x86_64**               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。\n注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。\n**PREFIX=/usr/local/haprpxy** # 指定安装目录，默认为/usr/local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如/usr/local/haprpxy为haprpxy的安装路径。\n\n> CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。\n> * 安装make\nyum -y install gcc automake autoconf libtool make\n> * 安装gcc\nyum install gcc gcc-c++\n>\n> SUSE Linux Enterprise Server 12安装gcc\n> 安装命令：zypper install gcc\n> 如果出现如下错误：\n> Failed to mount cd:///?devices=/dev/disk/by-id/ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on /var/adm/mount/AP_0x63by2U: Mounting media failed (mount: no medium found on /dev/sr0)\n> 意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。\n\n#### 2. Windows下\n*暂无*\n\n---\n\n### HAProxy配置\n安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr/local/haproxy下。\n```\nvi /usr/local/haproxy/haproxy.cfg\n```\n粘贴如下内容至haproxy.cfg\n\n\t###################### 全局配置 ######################\n\tglobal\n\t       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n\t       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n\t       daemon                                      # 以后台形式运行harpoxy\n\t       uid     5040                                # 运行haproxy的用户\n\t       gid     5040                                # 运行haproxy的用户所在的组\n\t       chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t       log             global\n\t       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t       option          httpclose  # 每次请求完毕后主动关闭http通道\n\t       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t       retries         3          # 3次连接失败就认为是服务器不可用\n\t       timeout connect 300000     # 连接超时\n\t       timeout client  500000     # 客户端超时\n\t       timeout server  500000     # 服务器超时\n\n\t###################### 统计页面配置 ######################\n\tlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       bind          0.0.0.0:8888 # 监听端口\n\t       maxconn       1            # 默认的最大连接数\n\t       option        httplog      # 采用http日志格式\n\t       stats         enable       # 启用状态监控\n\t       stats refresh 30s          # 统计页面自动刷新时间\n\t       stats uri     /stats       # 统计页面url\n\t       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n\t       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n\t       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n\t###################### 业务前端配置 ######################\n\tfrontend xx\n\t         bind            0.0.0.0:80\n\t         default_backend xxServers\n\n\t###################### 业务后端配置 ######################\n\tbackend xxServers\n\t        balance source\n\t        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n\t        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n\n###### 实现日志记录\nhaproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。\n修改rsyslog配置文件：`vim /etc/rsyslog.conf`\n\n\t# Provides UDP syslog reception\n\t$ModLoad imudp      #取消注释\n\t$UDPServerRun 514   #取消注释\n\tlocal0.*            /usr/local/haproxy/logs/haproxy.log\n\t# 指定设备local0日志存放位置\n修改rsyslog配置文件：`vim /etc/sysconfig/rsyslog`\n\n\tSYSLOGD_OPTIONS=\"-r -m 0\"\n\tservice syslog restart\nhaproxy的日志信息也可以设置存放在专门的日志服务器中。\n\n---\n\n### HAProxy启动\n```\n/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n```\n检查是否启动：\n\n\t[root@Linux-xx ~]# ps -e|grep haproxy\n\t 1221 ?        00:01:32 haproxy\n看到上面结果，表明haproxy已经正常启动了。\n\n---\n\n### HAProxy查看状态\n```\nhttp://localhost:8888/stats\n```\n参数说明：\n**8888**  即haproxy配置文件中的监听端口\n**stats** 即haproxy配置文件中的监听名称\n\n如果无法访问，请查看防火墙中端口是否开启。\n> Centos查看8888端口占用情况，使用命令：`lsof -i tcp:8888`\nCentos列出所有使用的端口，使用命令：`netstat -ntlp`\n\n如果端口未开启，请设置防火墙开放端口。\n#### 1. 开启端口（以80端口为例） \n* 方法一：\n```\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 \n/etc/init.d/iptables save                             ## 保存修改 \nservice iptables restart                              ## 重启防火墙，使修改生效\n```\n* 方法二：\n\t先打开配置文件\n```\nvi /etc/sysconfig/iptables\n```\n\t再加入下面内容\n\t\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n\t最后，重启防火墙或重启计算机，修改完成。\n>修改防火墙时注意最好留下VNC和SSH的管理端口。\n\n#### 2. 关闭端口\n* 方法一：\n```\n/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 \n/etc/init.d/iptables save                           ## 保存修改 \nservice iptables restart                            ## 重启防火墙，使修改生效\n```\n* 方法二：\n\t先打开配置文件\n```\nvi /etc/sysconfig/iptables\n```\n\t再加入下面内容\n\t\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP\n\t最后重启防火墙或重启计算机，修改完成。\n\n#### 3. 查看端口状态\n```\n/etc/init.d/iptables status\n```\n\n#### 4. 临时性完全关闭防火墙，可以不重启计算机\n```\n#/etc/init.d/iptables status                ## 查看防火墙状态\n#/etc/init.d/iptable stop                   ## 本次关闭防火墙\n#/etc/init.d/iptable restart                ## 重启防火墙\n```\n\n#### 5. 永久性关闭防火墙\n```\n#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启\n```\n\n#### 6. CentOS的iptables示例\n\t# Firewall configuration written by system-config-securitylevel\n\t# Manual customization of this file is not recommended.*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t:RH-Firewall-1-INPUT - [0:0]\n\t-A INPUT -j RH-Firewall-1-INPUT\n\t-A FORWARD -j RH-Firewall-1-INPUT\n\t-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT\n\t-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited\n\tCOMMIT\n要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令`iptables -L`可验证一下是否规则都已经生效，至此完成防火墙设置修改。\n\n---\n\n### HAProxy关闭\n直接kill pid即可。\n\n\n### [HAProxy脚本启动和关闭](http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/)\n","slug":"【HAProxy】安装配置","published":1,"updated":"2018-02-01T09:02:39.397Z","_id":"cjpuwa1hn001qs0jtci1lgsyq","photos":[],"link":"","content":"<h3 id=\"HAProxy下载\"><a href=\"#HAProxy下载\" class=\"headerlink\" title=\"HAProxy下载\"></a>HAProxy下载</h3><p><a href=\"https://www.haproxy.org/\" target=\"_blank\" rel=\"noopener\">官网下载</a><br><a href=\"https://fossies.org/linux/misc/\" target=\"_blank\" rel=\"noopener\">Fossies下载</a><br><a href=\"http://cbonte.github.io/haproxy-dconv/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"HAProxy安装\"><a href=\"#HAProxy安装\" class=\"headerlink\" title=\"HAProxy安装\"></a>HAProxy安装</h3><h4 id=\"1-Linux下\"><a href=\"#1-Linux下\" class=\"headerlink\" title=\"1. Linux下\"></a>1. Linux下</h4><h5 id=\"1-1-下载\"><a href=\"#1-1-下载\" class=\"headerlink\" title=\"1.1 下载\"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/download/</span><br><span class=\"line\">wget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"1-2-解压\"><a href=\"#1-2-解压\" class=\"headerlink\" title=\"1.2 解压\"></a>1.2 解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-安装\"><a href=\"#1-3-安装\" class=\"headerlink\" title=\"1.3 安装\"></a>1.3 安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd haproxy-1.8.1</span><br><span class=\"line\">make TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy</span><br><span class=\"line\">make install PREFIX=/usr/local/haproxy</span><br></pre></td></tr></table></figure>\n<p>参数说明:<br><strong>TARGET=linux26</strong>            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用<code>uname -r</code>可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。<br><strong>ARCH=x86_64</strong>               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。<br>注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。<br><strong>PREFIX=/usr/local/haprpxy</strong> # 指定安装目录，默认为/usr/local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如/usr/local/haprpxy为haprpxy的安装路径。</p>\n<blockquote>\n<p>CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。</p>\n<ul>\n<li>安装make<br>yum -y install gcc automake autoconf libtool make</li>\n<li>安装gcc<br>yum install gcc gcc-c++</li>\n</ul>\n<p>SUSE Linux Enterprise Server 12安装gcc<br>安装命令：zypper install gcc<br>如果出现如下错误：<br>Failed to mount cd:///?devices=/dev/disk/by-id/ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on /var/adm/mount/AP_0x63by2U: Mounting media failed (mount: no medium found on /dev/sr0)<br>意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。</p>\n</blockquote>\n<h4 id=\"2-Windows下\"><a href=\"#2-Windows下\" class=\"headerlink\" title=\"2. Windows下\"></a>2. Windows下</h4><p><em>暂无</em></p>\n<hr>\n<h3 id=\"HAProxy配置\"><a href=\"#HAProxy配置\" class=\"headerlink\" title=\"HAProxy配置\"></a>HAProxy配置</h3><p>安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr/local/haproxy下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure></p>\n<p>粘贴如下内容至haproxy.cfg</p>\n<pre><code>###################### 全局配置 ######################\nglobal\n       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n       daemon                                      # 以后台形式运行harpoxy\n       uid     5040                                # 运行haproxy的用户\n       gid     5040                                # 运行haproxy的用户所在的组\n       chroot  /usr/local/haproxy                  # 改变当前工作目录\n       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n###################### 默认配置 ######################\ndefaults\n       log             global\n       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n       option          httpclose  # 每次请求完毕后主动关闭http通道\n       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n       retries         3          # 3次连接失败就认为是服务器不可用\n       timeout connect 300000     # 连接超时\n       timeout client  500000     # 客户端超时\n       timeout server  500000     # 服务器超时\n\n###################### 统计页面配置 ######################\nlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       bind          0.0.0.0:8888 # 监听端口\n       maxconn       1            # 默认的最大连接数\n       option        httplog      # 采用http日志格式\n       stats         enable       # 启用状态监控\n       stats refresh 30s          # 统计页面自动刷新时间\n       stats uri     /stats       # 统计页面url\n       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n###################### 业务前端配置 ######################\nfrontend xx\n         bind            0.0.0.0:80\n         default_backend xxServers\n\n###################### 业务后端配置 ######################\nbackend xxServers\n        balance source\n        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre><h6 id=\"实现日志记录\"><a href=\"#实现日志记录\" class=\"headerlink\" title=\"实现日志记录\"></a>实现日志记录</h6><p>haproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。<br>修改rsyslog配置文件：<code>vim /etc/rsyslog.conf</code></p>\n<pre><code># Provides UDP syslog reception\n$ModLoad imudp      #取消注释\n$UDPServerRun 514   #取消注释\nlocal0.*            /usr/local/haproxy/logs/haproxy.log\n# 指定设备local0日志存放位置\n</code></pre><p>修改rsyslog配置文件：<code>vim /etc/sysconfig/rsyslog</code></p>\n<pre><code>SYSLOGD_OPTIONS=&quot;-r -m 0&quot;\nservice syslog restart\n</code></pre><p>haproxy的日志信息也可以设置存放在专门的日志服务器中。</p>\n<hr>\n<h3 id=\"HAProxy启动\"><a href=\"#HAProxy启动\" class=\"headerlink\" title=\"HAProxy启动\"></a>HAProxy启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure>\n<p>检查是否启动：</p>\n<pre><code>[root@Linux-xx ~]# ps -e|grep haproxy\n 1221 ?        00:01:32 haproxy\n</code></pre><p>看到上面结果，表明haproxy已经正常启动了。</p>\n<hr>\n<h3 id=\"HAProxy查看状态\"><a href=\"#HAProxy查看状态\" class=\"headerlink\" title=\"HAProxy查看状态\"></a>HAProxy查看状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8888/stats</span><br></pre></td></tr></table></figure>\n<p>参数说明：<br><strong>8888</strong>  即haproxy配置文件中的监听端口<br><strong>stats</strong> 即haproxy配置文件中的监听名称</p>\n<p>如果无法访问，请查看防火墙中端口是否开启。</p>\n<blockquote>\n<p>Centos查看8888端口占用情况，使用命令：<code>lsof -i tcp:8888</code><br>Centos列出所有使用的端口，使用命令：<code>netstat -ntlp</code></p>\n</blockquote>\n<p>如果端口未开启，请设置防火墙开放端口。</p>\n<h4 id=\"1-开启端口（以80端口为例）\"><a href=\"#1-开启端口（以80端口为例）\" class=\"headerlink\" title=\"1. 开启端口（以80端口为例）\"></a>1. 开启端口（以80端口为例）</h4><ul>\n<li><p>方法一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 </span><br><span class=\"line\">/etc/init.d/iptables save                             ## 保存修改 </span><br><span class=\"line\">service iptables restart                              ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：<br>  先打开配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n<p>  再加入下面内容</p>\n<pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n</code></pre><p>  最后，重启防火墙或重启计算机，修改完成。</p>\n<blockquote>\n<p>修改防火墙时注意最好留下VNC和SSH的管理端口。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"2-关闭端口\"><a href=\"#2-关闭端口\" class=\"headerlink\" title=\"2. 关闭端口\"></a>2. 关闭端口</h4><ul>\n<li><p>方法一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 </span><br><span class=\"line\">/etc/init.d/iptables save                           ## 保存修改 </span><br><span class=\"line\">service iptables restart                            ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：<br>  先打开配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n<p>  再加入下面内容</p>\n<pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP\n</code></pre><p>  最后重启防火墙或重启计算机，修改完成。</p>\n</li>\n</ul>\n<h4 id=\"3-查看端口状态\"><a href=\"#3-查看端口状态\" class=\"headerlink\" title=\"3. 查看端口状态\"></a>3. 查看端口状态</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-临时性完全关闭防火墙，可以不重启计算机\"><a href=\"#4-临时性完全关闭防火墙，可以不重启计算机\" class=\"headerlink\" title=\"4. 临时性完全关闭防火墙，可以不重启计算机\"></a>4. 临时性完全关闭防火墙，可以不重启计算机</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#/etc/init.d/iptables status                ## 查看防火墙状态</span><br><span class=\"line\">#/etc/init.d/iptable stop                   ## 本次关闭防火墙</span><br><span class=\"line\">#/etc/init.d/iptable restart                ## 重启防火墙</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-永久性关闭防火墙\"><a href=\"#5-永久性关闭防火墙\" class=\"headerlink\" title=\"5. 永久性关闭防火墙\"></a>5. 永久性关闭防火墙</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-CentOS的iptables示例\"><a href=\"#6-CentOS的iptables示例\" class=\"headerlink\" title=\"6. CentOS的iptables示例\"></a>6. CentOS的iptables示例</h4><pre><code># Firewall configuration written by system-config-securitylevel\n# Manual customization of this file is not recommended.*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:RH-Firewall-1-INPUT - [0:0]\n-A INPUT -j RH-Firewall-1-INPUT\n-A FORWARD -j RH-Firewall-1-INPUT\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT\n-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\n-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT\n-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited\nCOMMIT\n</code></pre><p>要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令<code>iptables -L</code>可验证一下是否规则都已经生效，至此完成防火墙设置修改。</p>\n<hr>\n<h3 id=\"HAProxy关闭\"><a href=\"#HAProxy关闭\" class=\"headerlink\" title=\"HAProxy关闭\"></a>HAProxy关闭</h3><p>直接kill pid即可。</p>\n<h3 id=\"HAProxy脚本启动和关闭\"><a href=\"#HAProxy脚本启动和关闭\" class=\"headerlink\" title=\"HAProxy脚本启动和关闭\"></a><a href=\"http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/\" target=\"_blank\" rel=\"noopener\">HAProxy脚本启动和关闭</a></h3>","site":{"data":{}},"excerpt":"<h3 id=\"HAProxy下载\"><a href=\"#HAProxy下载\" class=\"headerlink\" title=\"HAProxy下载\"></a>HAProxy下载</h3><p><a href=\"https://www.haproxy.org/\" target=\"_blank\" rel=\"noopener\">官网下载</a><br><a href=\"https://fossies.org/linux/misc/\" target=\"_blank\" rel=\"noopener\">Fossies下载</a><br><a href=\"http://cbonte.github.io/haproxy-dconv/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>","more":"<hr>\n<h3 id=\"HAProxy安装\"><a href=\"#HAProxy安装\" class=\"headerlink\" title=\"HAProxy安装\"></a>HAProxy安装</h3><h4 id=\"1-Linux下\"><a href=\"#1-Linux下\" class=\"headerlink\" title=\"1. Linux下\"></a>1. Linux下</h4><h5 id=\"1-1-下载\"><a href=\"#1-1-下载\" class=\"headerlink\" title=\"1.1 下载\"></a>1.1 下载</h5><p>进入下载目录，使用wget下载，如果已离线下载成功，则跳过该步，直接上传安装包到下载目录即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/download/</span><br><span class=\"line\">wget http://fossies.org/linux/misc/haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"1-2-解压\"><a href=\"#1-2-解压\" class=\"headerlink\" title=\"1.2 解压\"></a>1.2 解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf haproxy-1.8.1.tar.gz</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-安装\"><a href=\"#1-3-安装\" class=\"headerlink\" title=\"1.3 安装\"></a>1.3 安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd haproxy-1.8.1</span><br><span class=\"line\">make TARGET=linux26 ARCH=x86_64 PREFIX=/usr/local/haproxy</span><br><span class=\"line\">make install PREFIX=/usr/local/haproxy</span><br></pre></td></tr></table></figure>\n<p>参数说明:<br><strong>TARGET=linux26</strong>            # 指定对目标操作系统在编译的时候进行优化，可选择如下值之一：Generic, linux22, linux24, linux24e, linux26, solaris, freebsd, openbsd, Cygwin, custom。如果不确定目标系统，可以保留默认值generic。使用<code>uname -r</code>可查看内核，如：2.6.32-642.11.1.el6.x86_64，此时该参数就为linux26。<br><strong>ARCH=x86_64</strong>               # 系统位数。指定ARCH值可强制编译生成针对一个特定系统架构的程序。通常用于在一个系统架构的平台上生成针对另一个不同架构平台的程序，比如在一个64位架构的目标系统上编译生成一个32位的程序。当前可选的值有：x86_64, i386, i486, i586, i686。<br>注：若选择上述其中的一个值，”-m32”或”-m64”会被添加到CFLAGS和LDFLAGS选项中。<br><strong>PREFIX=/usr/local/haprpxy</strong> # 指定安装目录，默认为/usr/local，其他诸如文档之类的文件将会在PREFIX指定的相应目录下。例如/usr/local/haprpxy为haprpxy的安装路径。</p>\n<blockquote>\n<p>CentOS中无法使用make、make install命令，提示：make: command not found，此时需在线安装make和gcc。</p>\n<ul>\n<li>安装make<br>yum -y install gcc automake autoconf libtool make</li>\n<li>安装gcc<br>yum install gcc gcc-c++</li>\n</ul>\n<p>SUSE Linux Enterprise Server 12安装gcc<br>安装命令：zypper install gcc<br>如果出现如下错误：<br>Failed to mount cd:///?devices=/dev/disk/by-id/ata-VMware_Virtual_IDE_CDROM_Drive_10000000000000000001 on /var/adm/mount/AP_0x63by2U: Mounting media failed (mount: no medium found on /dev/sr0)<br>意思就是要插入DVD，此时，如果是虚拟机，则选择编辑设置，指定系统的ISO镜像，然后勾选已连接，问题就解决了。</p>\n</blockquote>\n<h4 id=\"2-Windows下\"><a href=\"#2-Windows下\" class=\"headerlink\" title=\"2. Windows下\"></a>2. Windows下</h4><p><em>暂无</em></p>\n<hr>\n<h3 id=\"HAProxy配置\"><a href=\"#HAProxy配置\" class=\"headerlink\" title=\"HAProxy配置\"></a>HAProxy配置</h3><p>安装完毕后，进入安装目录修改配置文件，默认情况下安装目录里是没有.cfg配置文件的，可以回到安装文件目录下，将examples下的haproxy.cfg拷贝到usr/local/haproxy下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure></p>\n<p>粘贴如下内容至haproxy.cfg</p>\n<pre><code>###################### 全局配置 ######################\nglobal\n       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n       daemon                                      # 以后台形式运行harpoxy\n       uid     5040                                # 运行haproxy的用户\n       gid     5040                                # 运行haproxy的用户所在的组\n       chroot  /usr/local/haproxy                  # 改变当前工作目录\n       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n###################### 默认配置 ######################\ndefaults\n       log             global\n       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n       option          httpclose  # 每次请求完毕后主动关闭http通道\n       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n       retries         3          # 3次连接失败就认为是服务器不可用\n       timeout connect 300000     # 连接超时\n       timeout client  500000     # 客户端超时\n       timeout server  500000     # 服务器超时\n\n###################### 统计页面配置 ######################\nlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       bind          0.0.0.0:8888 # 监听端口\n       maxconn       1            # 默认的最大连接数\n       option        httplog      # 采用http日志格式\n       stats         enable       # 启用状态监控\n       stats refresh 30s          # 统计页面自动刷新时间\n       stats uri     /stats       # 统计页面url\n       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n###################### 业务前端配置 ######################\nfrontend xx\n         bind            0.0.0.0:80\n         default_backend xxServers\n\n###################### 业务后端配置 ######################\nbackend xxServers\n        balance source\n        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre><h6 id=\"实现日志记录\"><a href=\"#实现日志记录\" class=\"headerlink\" title=\"实现日志记录\"></a>实现日志记录</h6><p>haproxy配置文件中默认定义了log 127.0.0.1 local0，说明日志将被记录在本机的local0设施中。<br>修改rsyslog配置文件：<code>vim /etc/rsyslog.conf</code></p>\n<pre><code># Provides UDP syslog reception\n$ModLoad imudp      #取消注释\n$UDPServerRun 514   #取消注释\nlocal0.*            /usr/local/haproxy/logs/haproxy.log\n# 指定设备local0日志存放位置\n</code></pre><p>修改rsyslog配置文件：<code>vim /etc/sysconfig/rsyslog</code></p>\n<pre><code>SYSLOGD_OPTIONS=&quot;-r -m 0&quot;\nservice syslog restart\n</code></pre><p>haproxy的日志信息也可以设置存放在专门的日志服务器中。</p>\n<hr>\n<h3 id=\"HAProxy启动\"><a href=\"#HAProxy启动\" class=\"headerlink\" title=\"HAProxy启动\"></a>HAProxy启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure>\n<p>检查是否启动：</p>\n<pre><code>[root@Linux-xx ~]# ps -e|grep haproxy\n 1221 ?        00:01:32 haproxy\n</code></pre><p>看到上面结果，表明haproxy已经正常启动了。</p>\n<hr>\n<h3 id=\"HAProxy查看状态\"><a href=\"#HAProxy查看状态\" class=\"headerlink\" title=\"HAProxy查看状态\"></a>HAProxy查看状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8888/stats</span><br></pre></td></tr></table></figure>\n<p>参数说明：<br><strong>8888</strong>  即haproxy配置文件中的监听端口<br><strong>stats</strong> 即haproxy配置文件中的监听名称</p>\n<p>如果无法访问，请查看防火墙中端口是否开启。</p>\n<blockquote>\n<p>Centos查看8888端口占用情况，使用命令：<code>lsof -i tcp:8888</code><br>Centos列出所有使用的端口，使用命令：<code>netstat -ntlp</code></p>\n</blockquote>\n<p>如果端口未开启，请设置防火墙开放端口。</p>\n<h4 id=\"1-开启端口（以80端口为例）\"><a href=\"#1-开启端口（以80端口为例）\" class=\"headerlink\" title=\"1. 开启端口（以80端口为例）\"></a>1. 开启端口（以80端口为例）</h4><ul>\n<li><p>方法一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT   ## 写入修改 </span><br><span class=\"line\">/etc/init.d/iptables save                             ## 保存修改 </span><br><span class=\"line\">service iptables restart                              ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：<br>  先打开配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n<p>  再加入下面内容</p>\n<pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n</code></pre><p>  最后，重启防火墙或重启计算机，修改完成。</p>\n<blockquote>\n<p>修改防火墙时注意最好留下VNC和SSH的管理端口。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"2-关闭端口\"><a href=\"#2-关闭端口\" class=\"headerlink\" title=\"2. 关闭端口\"></a>2. 关闭端口</h4><ul>\n<li><p>方法一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP   ## 写入修改 </span><br><span class=\"line\">/etc/init.d/iptables save                           ## 保存修改 </span><br><span class=\"line\">service iptables restart                            ## 重启防火墙，使修改生效</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：<br>  先打开配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n<p>  再加入下面内容</p>\n<pre><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP\n</code></pre><p>  最后重启防火墙或重启计算机，修改完成。</p>\n</li>\n</ul>\n<h4 id=\"3-查看端口状态\"><a href=\"#3-查看端口状态\" class=\"headerlink\" title=\"3. 查看端口状态\"></a>3. 查看端口状态</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-临时性完全关闭防火墙，可以不重启计算机\"><a href=\"#4-临时性完全关闭防火墙，可以不重启计算机\" class=\"headerlink\" title=\"4. 临时性完全关闭防火墙，可以不重启计算机\"></a>4. 临时性完全关闭防火墙，可以不重启计算机</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#/etc/init.d/iptables status                ## 查看防火墙状态</span><br><span class=\"line\">#/etc/init.d/iptable stop                   ## 本次关闭防火墙</span><br><span class=\"line\">#/etc/init.d/iptable restart                ## 重启防火墙</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-永久性关闭防火墙\"><a href=\"#5-永久性关闭防火墙\" class=\"headerlink\" title=\"5. 永久性关闭防火墙\"></a>5. 永久性关闭防火墙</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chkconfig --level 35 iptables off          ## 注意中间的是两个英式小短线；重启</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-CentOS的iptables示例\"><a href=\"#6-CentOS的iptables示例\" class=\"headerlink\" title=\"6. CentOS的iptables示例\"></a>6. CentOS的iptables示例</h4><pre><code># Firewall configuration written by system-config-securitylevel\n# Manual customization of this file is not recommended.*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:RH-Firewall-1-INPUT - [0:0]\n-A INPUT -j RH-Firewall-1-INPUT\n-A FORWARD -j RH-Firewall-1-INPUT\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT\n-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\n-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT\n-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited\nCOMMIT\n</code></pre><p>要根据具体需求修改此文件，如不希望开放80端口提供web服务，那么应相应地删除80所在一行即可。全部修改完后重启iptables，之后使用命令<code>iptables -L</code>可验证一下是否规则都已经生效，至此完成防火墙设置修改。</p>\n<hr>\n<h3 id=\"HAProxy关闭\"><a href=\"#HAProxy关闭\" class=\"headerlink\" title=\"HAProxy关闭\"></a>HAProxy关闭</h3><p>直接kill pid即可。</p>\n<h3 id=\"HAProxy脚本启动和关闭\"><a href=\"#HAProxy脚本启动和关闭\" class=\"headerlink\" title=\"HAProxy脚本启动和关闭\"></a><a href=\"http://yangpiena.coding.me/2018/02/01/%E3%80%90HAProxy%E3%80%91%E8%84%9A%E6%9C%AC%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/\" target=\"_blank\" rel=\"noopener\">HAProxy脚本启动和关闭</a></h3>"},{"title":"【HAProxy】脚本启动和关闭","layout":"post","comments":1,"date":"2018-02-01T08:11:00.000Z","keywords":null,"description":null,"_content":"\n### CentOS下实现脚本启动和关闭\n#### 1. 编写启动脚本\n```\nvi /etc/rc.d/init.d/haproxy\n```\n本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。\n打开文件haproxy，贴入如下内容：\n\n\t#!/bin/sh\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n\t#\n\t# chkconfig: - 85 15\n\t# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \\\n\t#              for high availability environments.\n\t# processname: haproxy\n\t# config: /etc/haproxy/haproxy.cfg\n\t# pidfile: /var/run/haproxy.pid\n\n\t# Script Author: Simon Matter <simon.matter@invoca.ch>\n\t# Version: 2004060600\n\n\t# Source function library.\n\tif [ -f /etc/init.d/functions ]; then\n\t  . /etc/init.d/functions\n\telif [ -f /etc/rc.d/init.d/functions ] ; then\n\t  . /etc/rc.d/init.d/functions\n\telse\n\t  exit 0\n\tfi\n\n\t# Source networking configuration.\n\t. /etc/sysconfig/network\n\n\t# Check that networking is up.\n\t[ ${NETWORKING} = \"no\" ] && exit 0\n\n\t# This is our service name\n\tBASENAME=`basename $0`\n\tif [ -L $0 ]; then\n\t  BASENAME=`find $0 -name $BASENAME -printf %l`\n\t  BASENAME=`basename $BASENAME`\n\tfi\n\n\tBIN=/usr/local/haproxy/sbin/haproxy\n\n\tCFG=/usr/local/haproxy/haproxy.cfg\n\t[ -f $CFG ] || exit 1\n\n\tPIDFILE=/var/run/$BASENAME.pid\n\tLOCKFILE=/var/lock/subsys/$BASENAME\n\n\tRETVAL=0\n\n\tstart() {\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\n\t  echo -n \"Starting $BASENAME: \"\n\t  daemon $BIN -D -f $CFG -p $PIDFILE\n\t  RETVAL=$?\n\t  echo\n\t  [ $RETVAL -eq 0 ] && touch $LOCKFILE\n\t  return $RETVAL\n\t}\n\n\tstop() {\n\t  echo -n \"Shutting down $BASENAME: \"\n\t  killproc $BASENAME -USR1\n\t  RETVAL=$?\n\t  echo\n\t  [ $RETVAL -eq 0 ] && rm -f $LOCKFILE\n\t  [ $RETVAL -eq 0 ] && rm -f $PIDFILE\n\t  return $RETVAL\n\t}\n\n\trestart() {\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\t  stop\n\t  start\n\t}\n\n\treload() {\n\t  if ! [ -s $PIDFILE ]; then\n\t    return 0\n\t  fi\n\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\t  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)\n\t}\n\n\tcheck() {\n\t  $BIN -c -q -V -f $CFG\n\t}\n\n\tquiet_check() {\n\t  $BIN -c -q -f $CFG\n\t}\n\n\trhstatus() {\n\t  status $BASENAME\n\t}\n\n\tcondrestart() {\n\t  [ -e $LOCKFILE ] && restart || :\n\t}\n\n\t# See how we were called.\n\tcase \"$1\" in\n\t  start)\n\t    start\n\t    ;;\n\t  stop)\n\t    stop\n\t    ;;\n\t  restart)\n\t    restart\n\t    ;;\n\t  reload)\n\t    reload\n\t    ;;\n\t  condrestart)\n\t    condrestart\n\t    ;;\n\t  status)\n\t    rhstatus\n\t    ;;\n\t  check)\n\t    check\n\t    ;;\n\t  *)\n\t    echo $\"Usage: $BASENAME {start|stop|restart|reload|condrestart|status|check}\"\n\t    exit 1\n\tesac\n\t \n\texit $?\n如果安装路径有变动，则只需修改上面的`BIN=/usr/local/haproxy/sbin/haproxy`和`CFG=/usr/local/haproxy/haproxy.cfg`即可。\n\n#### 2. 脚本随系统自启动\n```\nchmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性\nchkconfig --add haproxy            # 添加服务\nchkconfig haproxy on\n```\n如果出现结果： *service haproxy does not support chkconfig* \n解决办法是在 **/etc/rc.d/init.d/haproxy** 中添加下面两句到 **#!/bin/bash** 之后:\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n----其中2345是默认启动级别，级别有0-6共7个级别。\n----等级0表示：表示关机\n----等级1表示：单用户模式\n----等级2表示：无网络连接的多用户命令行模式\n----等级3表示：有网络连接的多用户命令行模式\n----等级4表示：不可用\n----等级5表示：带图形界面的多用户模式\n----等级6表示：重新启动\n----10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。\n\n>添加后效果如下：\n\t[root@Linux-xx ~]# cat /etc/rc.d/init.d/haproxy\n\t#!/bin/bash\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n\tBASE_DIR=\"/usr/local/haproxy\"\n\tARGV=\"$@\"  \n\tstart()\n\t...\n\t...\n\n#### 3. 启动与关闭\n```\nservice haproxy start\nservice haproxy stop\n```\n\n---\n\n### Suse Linux Enterprise 12下实现脚本启动和关闭\n#### 1. 在~目录下，执行下面命令\n```\nvim .profile\n```\n\n#### 2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：\n\t\t# .profile\n\n\t\t# Get the aliases and functions\n\t\tif [ -f ~/.bashrc ]; then\n\t\t        . ~/.bashrc\n\t\tfi\n\n\t\t# User specific environment and startup programs\n\n\t\tHAPROXY_HOME=/usr/local/haproxy\n\t\tPATH=$PATH:$HOME/bin:$HAPROXY_HOME\n\n\t\texport HAPROXY_HOME\n\t\texport PATH\n保存并退出。\n\n#### 3. 执行下面命令，使立即生效\n```\nsource ~/.profile\n```\n\n#### 4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，\n```\nvim /usr/local/haproxy/haproxy\n```\n在文件中写入如下代码，保存并退出。\n\n\t#!/bin/bash\n\t# /usr/local/haproxy\n\t# YPN 2018-02-01 Create\n\n\tif [ \"$1\"x = \"start\"x ]; then\n\t  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n\tfi\n\tif [ \"$1\"x = \"stop\"x ]; then\n\t  killall haproxy\n\tfi\n\tif [ \"$1\"x = \"check\"x ]; then\n\t  ps -e|grep haproxy\n\tfi\n\tif [ \"$1\"x = \"log\"x ]; then\n\t  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000\n\tfi\n\n#### 5. 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/local/haproxy/haproxy\n```\n\n#### 6. 最后，执行下面命令可启动、关闭haproxy或查看日志\n启动：\n```\nhaproxy start\n```\n关闭：\n```\nhaproxy stop\n```\n查看日志：\n```\nhaproxy log\n```\n检查haprxy进程：\n```\nhaproxy check\n```\n\n#### 7. 随系统自启动\n```\nvim /etc/init.d/boot.local\n```\n加入以下内容，保存退出后生效。\n\n\t/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n","source":"_posts/【HAProxy】脚本启动和关闭.md","raw":"---\ntitle: 【HAProxy】脚本启动和关闭\nlayout: post\ncomments: true\ndate: 2018-02-01 16:11:00\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\n\n### CentOS下实现脚本启动和关闭\n#### 1. 编写启动脚本\n```\nvi /etc/rc.d/init.d/haproxy\n```\n本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。\n打开文件haproxy，贴入如下内容：\n\n\t#!/bin/sh\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n\t#\n\t# chkconfig: - 85 15\n\t# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \\\n\t#              for high availability environments.\n\t# processname: haproxy\n\t# config: /etc/haproxy/haproxy.cfg\n\t# pidfile: /var/run/haproxy.pid\n\n\t# Script Author: Simon Matter <simon.matter@invoca.ch>\n\t# Version: 2004060600\n\n\t# Source function library.\n\tif [ -f /etc/init.d/functions ]; then\n\t  . /etc/init.d/functions\n\telif [ -f /etc/rc.d/init.d/functions ] ; then\n\t  . /etc/rc.d/init.d/functions\n\telse\n\t  exit 0\n\tfi\n\n\t# Source networking configuration.\n\t. /etc/sysconfig/network\n\n\t# Check that networking is up.\n\t[ ${NETWORKING} = \"no\" ] && exit 0\n\n\t# This is our service name\n\tBASENAME=`basename $0`\n\tif [ -L $0 ]; then\n\t  BASENAME=`find $0 -name $BASENAME -printf %l`\n\t  BASENAME=`basename $BASENAME`\n\tfi\n\n\tBIN=/usr/local/haproxy/sbin/haproxy\n\n\tCFG=/usr/local/haproxy/haproxy.cfg\n\t[ -f $CFG ] || exit 1\n\n\tPIDFILE=/var/run/$BASENAME.pid\n\tLOCKFILE=/var/lock/subsys/$BASENAME\n\n\tRETVAL=0\n\n\tstart() {\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\n\t  echo -n \"Starting $BASENAME: \"\n\t  daemon $BIN -D -f $CFG -p $PIDFILE\n\t  RETVAL=$?\n\t  echo\n\t  [ $RETVAL -eq 0 ] && touch $LOCKFILE\n\t  return $RETVAL\n\t}\n\n\tstop() {\n\t  echo -n \"Shutting down $BASENAME: \"\n\t  killproc $BASENAME -USR1\n\t  RETVAL=$?\n\t  echo\n\t  [ $RETVAL -eq 0 ] && rm -f $LOCKFILE\n\t  [ $RETVAL -eq 0 ] && rm -f $PIDFILE\n\t  return $RETVAL\n\t}\n\n\trestart() {\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\t  stop\n\t  start\n\t}\n\n\treload() {\n\t  if ! [ -s $PIDFILE ]; then\n\t    return 0\n\t  fi\n\n\t  quiet_check\n\t  if [ $? -ne 0 ]; then\n\t    echo \"Errors found in configuration file, check it with '$BASENAME check'.\"\n\t    return 1\n\t  fi\n\t  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)\n\t}\n\n\tcheck() {\n\t  $BIN -c -q -V -f $CFG\n\t}\n\n\tquiet_check() {\n\t  $BIN -c -q -f $CFG\n\t}\n\n\trhstatus() {\n\t  status $BASENAME\n\t}\n\n\tcondrestart() {\n\t  [ -e $LOCKFILE ] && restart || :\n\t}\n\n\t# See how we were called.\n\tcase \"$1\" in\n\t  start)\n\t    start\n\t    ;;\n\t  stop)\n\t    stop\n\t    ;;\n\t  restart)\n\t    restart\n\t    ;;\n\t  reload)\n\t    reload\n\t    ;;\n\t  condrestart)\n\t    condrestart\n\t    ;;\n\t  status)\n\t    rhstatus\n\t    ;;\n\t  check)\n\t    check\n\t    ;;\n\t  *)\n\t    echo $\"Usage: $BASENAME {start|stop|restart|reload|condrestart|status|check}\"\n\t    exit 1\n\tesac\n\t \n\texit $?\n如果安装路径有变动，则只需修改上面的`BIN=/usr/local/haproxy/sbin/haproxy`和`CFG=/usr/local/haproxy/haproxy.cfg`即可。\n\n#### 2. 脚本随系统自启动\n```\nchmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性\nchkconfig --add haproxy            # 添加服务\nchkconfig haproxy on\n```\n如果出现结果： *service haproxy does not support chkconfig* \n解决办法是在 **/etc/rc.d/init.d/haproxy** 中添加下面两句到 **#!/bin/bash** 之后:\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n----其中2345是默认启动级别，级别有0-6共7个级别。\n----等级0表示：表示关机\n----等级1表示：单用户模式\n----等级2表示：无网络连接的多用户命令行模式\n----等级3表示：有网络连接的多用户命令行模式\n----等级4表示：不可用\n----等级5表示：带图形界面的多用户模式\n----等级6表示：重新启动\n----10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。\n\n>添加后效果如下：\n\t[root@Linux-xx ~]# cat /etc/rc.d/init.d/haproxy\n\t#!/bin/bash\n\t#chkconfig: 2345 10 90\n\t#description:haproxy\n\tBASE_DIR=\"/usr/local/haproxy\"\n\tARGV=\"$@\"  \n\tstart()\n\t...\n\t...\n\n#### 3. 启动与关闭\n```\nservice haproxy start\nservice haproxy stop\n```\n\n---\n\n### Suse Linux Enterprise 12下实现脚本启动和关闭\n#### 1. 在~目录下，执行下面命令\n```\nvim .profile\n```\n\n#### 2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：\n\t\t# .profile\n\n\t\t# Get the aliases and functions\n\t\tif [ -f ~/.bashrc ]; then\n\t\t        . ~/.bashrc\n\t\tfi\n\n\t\t# User specific environment and startup programs\n\n\t\tHAPROXY_HOME=/usr/local/haproxy\n\t\tPATH=$PATH:$HOME/bin:$HAPROXY_HOME\n\n\t\texport HAPROXY_HOME\n\t\texport PATH\n保存并退出。\n\n#### 3. 执行下面命令，使立即生效\n```\nsource ~/.profile\n```\n\n#### 4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，\n```\nvim /usr/local/haproxy/haproxy\n```\n在文件中写入如下代码，保存并退出。\n\n\t#!/bin/bash\n\t# /usr/local/haproxy\n\t# YPN 2018-02-01 Create\n\n\tif [ \"$1\"x = \"start\"x ]; then\n\t  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n\tfi\n\tif [ \"$1\"x = \"stop\"x ]; then\n\t  killall haproxy\n\tfi\n\tif [ \"$1\"x = \"check\"x ]; then\n\t  ps -e|grep haproxy\n\tfi\n\tif [ \"$1\"x = \"log\"x ]; then\n\t  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000\n\tfi\n\n#### 5. 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/local/haproxy/haproxy\n```\n\n#### 6. 最后，执行下面命令可启动、关闭haproxy或查看日志\n启动：\n```\nhaproxy start\n```\n关闭：\n```\nhaproxy stop\n```\n查看日志：\n```\nhaproxy log\n```\n检查haprxy进程：\n```\nhaproxy check\n```\n\n#### 7. 随系统自启动\n```\nvim /etc/init.d/boot.local\n```\n加入以下内容，保存退出后生效。\n\n\t/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n","slug":"【HAProxy】脚本启动和关闭","published":1,"updated":"2018-04-11T04:26:32.402Z","_id":"cjpuwa1hs001vs0jth2kvvi33","photos":[],"link":"","content":"<h3 id=\"CentOS下实现脚本启动和关闭\"><a href=\"#CentOS下实现脚本启动和关闭\" class=\"headerlink\" title=\"CentOS下实现脚本启动和关闭\"></a>CentOS下实现脚本启动和关闭</h3><h4 id=\"1-编写启动脚本\"><a href=\"#1-编写启动脚本\" class=\"headerlink\" title=\"1. 编写启动脚本\"></a>1. 编写启动脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/rc.d/init.d/haproxy</span><br></pre></td></tr></table></figure>\n<p>本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。<br>打开文件haproxy，贴入如下内容：</p>\n<pre><code>#!/bin/sh\n#chkconfig: 2345 10 90\n#description:haproxy\n#\n# chkconfig: - 85 15\n# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \\\n#              for high availability environments.\n# processname: haproxy\n# config: /etc/haproxy/haproxy.cfg\n# pidfile: /var/run/haproxy.pid\n\n# Script Author: Simon Matter &lt;simon.matter@invoca.ch&gt;\n# Version: 2004060600\n\n# Source function library.\nif [ -f /etc/init.d/functions ]; then\n  . /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ] ; then\n  . /etc/rc.d/init.d/functions\nelse\n  exit 0\nfi\n\n# Source networking configuration.\n. /etc/sysconfig/network\n\n# Check that networking is up.\n[ ${NETWORKING} = &quot;no&quot; ] &amp;&amp; exit 0\n\n# This is our service name\nBASENAME=`basename $0`\nif [ -L $0 ]; then\n  BASENAME=`find $0 -name $BASENAME -printf %l`\n  BASENAME=`basename $BASENAME`\nfi\n\nBIN=/usr/local/haproxy/sbin/haproxy\n\nCFG=/usr/local/haproxy/haproxy.cfg\n[ -f $CFG ] || exit 1\n\nPIDFILE=/var/run/$BASENAME.pid\nLOCKFILE=/var/lock/subsys/$BASENAME\n\nRETVAL=0\n\nstart() {\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n\n  echo -n &quot;Starting $BASENAME: &quot;\n  daemon $BIN -D -f $CFG -p $PIDFILE\n  RETVAL=$?\n  echo\n  [ $RETVAL -eq 0 ] &amp;&amp; touch $LOCKFILE\n  return $RETVAL\n}\n\nstop() {\n  echo -n &quot;Shutting down $BASENAME: &quot;\n  killproc $BASENAME -USR1\n  RETVAL=$?\n  echo\n  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $LOCKFILE\n  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $PIDFILE\n  return $RETVAL\n}\n\nrestart() {\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n  stop\n  start\n}\n\nreload() {\n  if ! [ -s $PIDFILE ]; then\n    return 0\n  fi\n\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)\n}\n\ncheck() {\n  $BIN -c -q -V -f $CFG\n}\n\nquiet_check() {\n  $BIN -c -q -f $CFG\n}\n\nrhstatus() {\n  status $BASENAME\n}\n\ncondrestart() {\n  [ -e $LOCKFILE ] &amp;&amp; restart || :\n}\n\n# See how we were called.\ncase &quot;$1&quot; in\n  start)\n    start\n    ;;\n  stop)\n    stop\n    ;;\n  restart)\n    restart\n    ;;\n  reload)\n    reload\n    ;;\n  condrestart)\n    condrestart\n    ;;\n  status)\n    rhstatus\n    ;;\n  check)\n    check\n    ;;\n  *)\n    echo $&quot;Usage: $BASENAME {start|stop|restart|reload|condrestart|status|check}&quot;\n    exit 1\nesac\n\nexit $?\n</code></pre><p>如果安装路径有变动，则只需修改上面的<code>BIN=/usr/local/haproxy/sbin/haproxy</code>和<code>CFG=/usr/local/haproxy/haproxy.cfg</code>即可。</p>\n<h4 id=\"2-脚本随系统自启动\"><a href=\"#2-脚本随系统自启动\" class=\"headerlink\" title=\"2. 脚本随系统自启动\"></a>2. 脚本随系统自启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性</span><br><span class=\"line\">chkconfig --add haproxy            # 添加服务</span><br><span class=\"line\">chkconfig haproxy on</span><br></pre></td></tr></table></figure>\n<p>如果出现结果： <em>service haproxy does not support chkconfig</em><br>解决办法是在 <strong>/etc/rc.d/init.d/haproxy</strong> 中添加下面两句到 <strong>#!/bin/bash</strong> 之后:</p>\n<pre><code>#chkconfig: 2345 10 90\n#description:haproxy\n</code></pre><p>—-其中2345是默认启动级别，级别有0-6共7个级别。<br>—-等级0表示：表示关机<br>—-等级1表示：单用户模式<br>—-等级2表示：无网络连接的多用户命令行模式<br>—-等级3表示：有网络连接的多用户命令行模式<br>—-等级4表示：不可用<br>—-等级5表示：带图形界面的多用户模式<br>—-等级6表示：重新启动<br>—-10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。</p>\n<blockquote>\n<p>添加后效果如下：<br>    [root@Linux-xx ~]# cat /etc/rc.d/init.d/haproxy</p>\n<pre><code>#!/bin/bash\n#chkconfig: 2345 10 90\n#description:haproxy\nBASE_DIR=&quot;/usr/local/haproxy&quot;\nARGV=&quot;$@&quot;  \nstart()\n...\n...\n</code></pre></blockquote>\n<h4 id=\"3-启动与关闭\"><a href=\"#3-启动与关闭\" class=\"headerlink\" title=\"3. 启动与关闭\"></a>3. 启动与关闭</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service haproxy start</span><br><span class=\"line\">service haproxy stop</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Suse-Linux-Enterprise-12下实现脚本启动和关闭\"><a href=\"#Suse-Linux-Enterprise-12下实现脚本启动和关闭\" class=\"headerlink\" title=\"Suse Linux Enterprise 12下实现脚本启动和关闭\"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id=\"1-在-目录下，执行下面命令\"><a href=\"#1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"1. 在~目录下，执行下面命令\"></a>1. 在~目录下，执行下面命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code># .profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nHAPROXY_HOME=/usr/local/haproxy\nPATH=$PATH:$HOME/bin:$HAPROXY_HOME\n\nexport HAPROXY_HOME\nexport PATH\n</code></pre><p>保存并退出。</p>\n<h4 id=\"3-执行下面命令，使立即生效\"><a href=\"#3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"3. 执行下面命令，使立即生效\"></a>3. 执行下面命令，使立即生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，\"><a href=\"#4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，\" class=\"headerlink\" title=\"4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，\"></a>4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/local/haproxy\n# YPN 2018-02-01 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  killall haproxy\nfi\nif [ &quot;$1&quot;x = &quot;check&quot;x ]; then\n  ps -e|grep haproxy\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000\nfi\n</code></pre><h4 id=\"5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"5. 给文件添加权限，使脚本文件可以执行，命令为\"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-最后，执行下面命令可启动、关闭haproxy或查看日志\"><a href=\"#6-最后，执行下面命令可启动、关闭haproxy或查看日志\" class=\"headerlink\" title=\"6. 最后，执行下面命令可启动、关闭haproxy或查看日志\"></a>6. 最后，执行下面命令可启动、关闭haproxy或查看日志</h4><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy log</span><br></pre></td></tr></table></figure></p>\n<p>检查haprxy进程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy check</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-随系统自启动\"><a href=\"#7-随系统自启动\" class=\"headerlink\" title=\"7. 随系统自启动\"></a>7. 随系统自启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/init.d/boot.local</span><br></pre></td></tr></table></figure>\n<p>加入以下内容，保存退出后生效。</p>\n<pre><code>/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"CentOS下实现脚本启动和关闭\"><a href=\"#CentOS下实现脚本启动和关闭\" class=\"headerlink\" title=\"CentOS下实现脚本启动和关闭\"></a>CentOS下实现脚本启动和关闭</h3><h4 id=\"1-编写启动脚本\"><a href=\"#1-编写启动脚本\" class=\"headerlink\" title=\"1. 编写启动脚本\"></a>1. 编写启动脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/rc.d/init.d/haproxy</span><br></pre></td></tr></table></figure>\n<p>本身不存在此文件，使用以上命令，进入vi编辑器，再使用命令保存退出即可新建此文件。<br>打开文件haproxy，贴入如下内容：</p>\n<pre><code>#!/bin/sh\n#chkconfig: 2345 10 90\n#description:haproxy\n#\n# chkconfig: - 85 15\n# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \\\n#              for high availability environments.\n# processname: haproxy\n# config: /etc/haproxy/haproxy.cfg\n# pidfile: /var/run/haproxy.pid\n\n# Script Author: Simon Matter &lt;simon.matter@invoca.ch&gt;\n# Version: 2004060600\n\n# Source function library.\nif [ -f /etc/init.d/functions ]; then\n  . /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ] ; then\n  . /etc/rc.d/init.d/functions\nelse\n  exit 0\nfi\n\n# Source networking configuration.\n. /etc/sysconfig/network\n\n# Check that networking is up.\n[ ${NETWORKING} = &quot;no&quot; ] &amp;&amp; exit 0\n\n# This is our service name\nBASENAME=`basename $0`\nif [ -L $0 ]; then\n  BASENAME=`find $0 -name $BASENAME -printf %l`\n  BASENAME=`basename $BASENAME`\nfi\n\nBIN=/usr/local/haproxy/sbin/haproxy\n\nCFG=/usr/local/haproxy/haproxy.cfg\n[ -f $CFG ] || exit 1\n\nPIDFILE=/var/run/$BASENAME.pid\nLOCKFILE=/var/lock/subsys/$BASENAME\n\nRETVAL=0\n\nstart() {\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n\n  echo -n &quot;Starting $BASENAME: &quot;\n  daemon $BIN -D -f $CFG -p $PIDFILE\n  RETVAL=$?\n  echo\n  [ $RETVAL -eq 0 ] &amp;&amp; touch $LOCKFILE\n  return $RETVAL\n}\n\nstop() {\n  echo -n &quot;Shutting down $BASENAME: &quot;\n  killproc $BASENAME -USR1\n  RETVAL=$?\n  echo\n  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $LOCKFILE\n  [ $RETVAL -eq 0 ] &amp;&amp; rm -f $PIDFILE\n  return $RETVAL\n}\n\nrestart() {\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n  stop\n  start\n}\n\nreload() {\n  if ! [ -s $PIDFILE ]; then\n    return 0\n  fi\n\n  quiet_check\n  if [ $? -ne 0 ]; then\n    echo &quot;Errors found in configuration file, check it with &apos;$BASENAME check&apos;.&quot;\n    return 1\n  fi\n  $BIN -D -f $CFG -p $PIDFILE -sf $(cat $PIDFILE)\n}\n\ncheck() {\n  $BIN -c -q -V -f $CFG\n}\n\nquiet_check() {\n  $BIN -c -q -f $CFG\n}\n\nrhstatus() {\n  status $BASENAME\n}\n\ncondrestart() {\n  [ -e $LOCKFILE ] &amp;&amp; restart || :\n}\n\n# See how we were called.\ncase &quot;$1&quot; in\n  start)\n    start\n    ;;\n  stop)\n    stop\n    ;;\n  restart)\n    restart\n    ;;\n  reload)\n    reload\n    ;;\n  condrestart)\n    condrestart\n    ;;\n  status)\n    rhstatus\n    ;;\n  check)\n    check\n    ;;\n  *)\n    echo $&quot;Usage: $BASENAME {start|stop|restart|reload|condrestart|status|check}&quot;\n    exit 1\nesac\n\nexit $?\n</code></pre><p>如果安装路径有变动，则只需修改上面的<code>BIN=/usr/local/haproxy/sbin/haproxy</code>和<code>CFG=/usr/local/haproxy/haproxy.cfg</code>即可。</p>\n<h4 id=\"2-脚本随系统自启动\"><a href=\"#2-脚本随系统自启动\" class=\"headerlink\" title=\"2. 脚本随系统自启动\"></a>2. 脚本随系统自启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /etc/rc.d/init.d/haproxy  # 添加执行属性</span><br><span class=\"line\">chkconfig --add haproxy            # 添加服务</span><br><span class=\"line\">chkconfig haproxy on</span><br></pre></td></tr></table></figure>\n<p>如果出现结果： <em>service haproxy does not support chkconfig</em><br>解决办法是在 <strong>/etc/rc.d/init.d/haproxy</strong> 中添加下面两句到 <strong>#!/bin/bash</strong> 之后:</p>\n<pre><code>#chkconfig: 2345 10 90\n#description:haproxy\n</code></pre><p>—-其中2345是默认启动级别，级别有0-6共7个级别。<br>—-等级0表示：表示关机<br>—-等级1表示：单用户模式<br>—-等级2表示：无网络连接的多用户命令行模式<br>—-等级3表示：有网络连接的多用户命令行模式<br>—-等级4表示：不可用<br>—-等级5表示：带图形界面的多用户模式<br>—-等级6表示：重新启动<br>—-10是启动优先级，90是停机优先级，优先级范围是0-100，数字越大，优先级越低。</p>\n<blockquote>\n<p>添加后效果如下：<br>    [root@Linux-xx ~]# cat /etc/rc.d/init.d/haproxy</p>\n<pre><code>#!/bin/bash\n#chkconfig: 2345 10 90\n#description:haproxy\nBASE_DIR=&quot;/usr/local/haproxy&quot;\nARGV=&quot;$@&quot;  \nstart()\n...\n...\n</code></pre></blockquote>\n<h4 id=\"3-启动与关闭\"><a href=\"#3-启动与关闭\" class=\"headerlink\" title=\"3. 启动与关闭\"></a>3. 启动与关闭</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service haproxy start</span><br><span class=\"line\">service haproxy stop</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Suse-Linux-Enterprise-12下实现脚本启动和关闭\"><a href=\"#Suse-Linux-Enterprise-12下实现脚本启动和关闭\" class=\"headerlink\" title=\"Suse Linux Enterprise 12下实现脚本启动和关闭\"></a>Suse Linux Enterprise 12下实现脚本启动和关闭</h3><h4 id=\"1-在-目录下，执行下面命令\"><a href=\"#1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"1. 在~目录下，执行下面命令\"></a>1. 在~目录下，执行下面命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-在-profile文件中定义HAPROXY-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2. 在.profile文件中定义HAPROXY_HOME变量，并将变量追加到PATH后面，效果如下：</h4><pre><code># .profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nHAPROXY_HOME=/usr/local/haproxy\nPATH=$PATH:$HOME/bin:$HAPROXY_HOME\n\nexport HAPROXY_HOME\nexport PATH\n</code></pre><p>保存并退出。</p>\n<h4 id=\"3-执行下面命令，使立即生效\"><a href=\"#3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"3. 执行下面命令，使立即生效\"></a>3. 执行下面命令，使立即生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，\"><a href=\"#4-执行下面命令，在HAPROXY-HOME目录下创建脚本文件，\" class=\"headerlink\" title=\"4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，\"></a>4. 执行下面命令，在HAPROXY_HOME目录下创建脚本文件，</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/local/haproxy\n# YPN 2018-02-01 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  /usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  killall haproxy\nfi\nif [ &quot;$1&quot;x = &quot;check&quot;x ]; then\n  ps -e|grep haproxy\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f /usr/local/haproxy/logs/haproxy.pid -n 1000\nfi\n</code></pre><h4 id=\"5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"5. 给文件添加权限，使脚本文件可以执行，命令为\"></a>5. 给文件添加权限，使脚本文件可以执行，命令为</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/local/haproxy/haproxy</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-最后，执行下面命令可启动、关闭haproxy或查看日志\"><a href=\"#6-最后，执行下面命令可启动、关闭haproxy或查看日志\" class=\"headerlink\" title=\"6. 最后，执行下面命令可启动、关闭haproxy或查看日志\"></a>6. 最后，执行下面命令可启动、关闭haproxy或查看日志</h4><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy log</span><br></pre></td></tr></table></figure></p>\n<p>检查haprxy进程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">haproxy check</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-随系统自启动\"><a href=\"#7-随系统自启动\" class=\"headerlink\" title=\"7. 随系统自启动\"></a>7. 随系统自启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/init.d/boot.local</span><br></pre></td></tr></table></figure>\n<p>加入以下内容，保存退出后生效。</p>\n<pre><code>/usr/local/haproxy/sbin/haproxy -f /usr/local/haproxy/haproxy.cfg\n</code></pre>"},{"title":"【HAProxy】负载均衡算法","layout":"post","comments":1,"date":"2017-12-20T02:03:35.000Z","keywords":null,"description":null,"_content":"使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。\n\n<!-- more -->\n\n1. roundrobin\n表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n2. static-rr\n基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。\n例如：\nserver APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1\nserver APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n3. leastconn\n新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n4. source\n将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。\n例如：\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n\n5. uri\n对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。\n例如：\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n6. url_param\n表示根据请求的URl参数'balance url_param' requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；\n该算法一般用于将同一个用户的信息发送到同一个后端服务器；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\nbalance url_param www.blog.51cto.com\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n7. hdr(name)\n表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；\n如果缺少头或者头没有任何值，则用roundrobin代替；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n8. rdp-cookie(name)\n表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；\n该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。\n如果没有cookie，则使用roundrobin算法代替；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n9. first\n根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。","source":"_posts/【HAProxy】负载均衡算法.md","raw":"---\ntitle: 【HAProxy】负载均衡算法\nlayout: post\ncomments: true\ndate: 2017-12-20 10:03:35\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\n使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。\n\n<!-- more -->\n\n1. roundrobin\n表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n2. static-rr\n基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。\n例如：\nserver APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1\nserver APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n3. leastconn\n新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n4. source\n将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。\n例如：\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n\n5. uri\n对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。\n例如：\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n6. url_param\n表示根据请求的URl参数'balance url_param' requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；\n该算法一般用于将同一个用户的信息发送到同一个后端服务器；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\nbalance url_param www.blog.51cto.com\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n7. hdr(name)\n表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；\n如果缺少头或者头没有任何值，则用roundrobin代替；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n\n8. rdp-cookie(name)\n表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；\n该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。\n如果没有cookie，则使用roundrobin算法代替；\n该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。\n例如：\n192.168.109.5  It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n192.168.109.5  It is work!\n192.168.109.3 It is work!\n\n9. first\n根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。","slug":"【HAProxy】负载均衡算法","published":1,"updated":"2017-12-22T08:10:38.151Z","_id":"cjpuwa1ht001ws0jtwx1djo2u","photos":[],"link":"","content":"<p>使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。</p>\n<a id=\"more\"></a>\n<ol>\n<li><p>roundrobin<br>表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>static-rr<br>基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。<br>例如：<br>server APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1<br>server APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>leastconn<br>新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>source<br>将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!</p>\n</li>\n<li><p>uri<br>对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。<br>例如：<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>url_param<br>表示根据请求的URl参数’balance url_param’ requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；<br>该算法一般用于将同一个用户的信息发送到同一个后端服务器；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>balance url_param www.blog.51cto.com<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>hdr(name)<br>表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；<br>如果缺少头或者头没有任何值，则用roundrobin代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</name></name></p>\n</li>\n<li><p>rdp-cookie(name)<br>表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；<br>该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。<br>如果没有cookie，则使用roundrobin算法代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</name></p>\n</li>\n<li><p>first<br>根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>使用balance定义负载均衡算法，可用于“defaults”、“listen”和“backend”。用于在负载均衡场景中挑选一个server，其仅应用于用户新请求或需要将一个连接重新派发至另一个服务器时。常用的算法有：undrobin、source和lestconn。</p>","more":"<ol>\n<li><p>roundrobin<br>表示简单的轮询，每个服务器根据权重轮流使用，在在服务器的处理时间保持均匀分布时，这是最平衡、最公平的算法。此算法是动态的，这表示其权重可以在运行时进行调整，不过，在设计上 ，每个后端服务器仅能最多接受4128个连接。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>static-rr<br>基于权重进行轮叫，与roundrobin类似，但是为静态方法，在运行时调整其服务器权重不会生效；不过，其在后端服务器连接数上没有限制。<br>例如：<br>server APP03 192.168.109.5:81 cookie app1inst3 check inter 2000 rise 2 fall 5  weight 1<br>server APP04 192.168.109.3:80 cookie app1inst4 check inter 2000 rise 2 fall 5  weight 5<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>leastconn<br>新的连接请求被派发至具有最少连接数目的后端服务器；在有着较长时间会 话的场景中推荐使用此算法，如LDAP、SQL等，其并不太适用于较短会话的应用层协议。该算法是动态的，对于实例启动慢的服务器权重会在运行中调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>source<br>将请求的源地址进行hash运算，并由后端服务器的权重总数相除后派发至某匹 配的服务器；这可以使得同一个客户端IP的请求始终被派发至某特定的服务器；不过，当服务器权重总数发生变化时，如某服务器宕机或添加了新的服务器，许多客户端的请求可能会被派发至与此前请求不同的服务器；常用于负载均衡无cookie功能的基于TCP的协议 ；其默认为静态，不过也可以使用hash-type修改此特性。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!</p>\n</li>\n<li><p>uri<br>对URI的左半部分(“问题”标记之前的部分)或整个URI进行hash运算，并由服务 器的总权重相除后派发至某匹配的服务器；这可以使得对同一个URI的请求总是被派发至某特定的服务器，除非服务器的权重总数发生了变化；此算法常用于代理缓存或反病毒代理以提高缓存的命中率；需要注意的是，此算法仅应用于HTTP后端服务器场景；其默认为静态算法。<br>例如：<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>url_param<br>表示根据请求的URl参数’balance url_param’ requires an URL parameter name，在HTTP GET请求的查询串中查找<param>中指定的URL参数，基本上可以锁定使用特制的URL到特定的负载均衡器节点的要求；<br>该算法一般用于将同一个用户的信息发送到同一个后端服务器；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>balance url_param www.blog.51cto.com<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</p>\n</li>\n<li><p>hdr(name)<br>表示根据HTTP请求头来锁定每一次HTTP请求；在每个HTTP请求中查找HTTP头<name>，HTTP头<name>将被看作在每个HTTP请求，并针对特定的节点；<br>如果缺少头或者头没有任何值，则用roundrobin代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!</name></name></p>\n</li>\n<li><p>rdp-cookie(name)<br>表示根据据cookie(name)来锁定并哈希每一次TCP请求。为每个进来的TCP请求查询并哈希RDP cookie<name>；<br>该机制用于退化的持久模式，可以使同一个用户或者同一个会话ID总是发送给同一台服务器。<br>如果没有cookie，则使用roundrobin算法代替；<br>该算法默认是静态的，所以运行时修改服务器的权重是无效的，但是算法会根据“hash-type”的变化做调整。<br>例如：<br>192.168.109.5  It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!<br>192.168.109.5  It is work!<br>192.168.109.3 It is work!</name></p>\n</li>\n<li><p>first<br>根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限， 新请求才会分配给下一台服务。</p>\n</li>\n</ol>"},{"title":"【JavaScript】字符串去除空格","layout":"post","comments":1,"date":"2016-11-28T08:50:37.000Z","keywords":null,"description":null,"_content":"\n- 去除所有空格:   \nstr   =   str.replace(/\\s+/g,\"\");       \n- 去除两边空格:   \nstr   =   str.replace(/^\\s+|\\s+$/g,\"\");\n- 去除左空格：\nstr=str.replace( /^\\s*/, '');\n- 去除右空格：\nstr=str.replace(/(\\s*$)/g, \"\");\n\n<!-- more -->","source":"_posts/【JavaScript】字符串去除空格.md","raw":"---\ntitle: 【JavaScript】字符串去除空格\nlayout: post\ncomments: true\ndate: 2016-11-28 16:50:37\ncategories: JavaScript\ntags: [JavaScript, 字符串]\nkeywords:\ndescription:\n---\n\n- 去除所有空格:   \nstr   =   str.replace(/\\s+/g,\"\");       \n- 去除两边空格:   \nstr   =   str.replace(/^\\s+|\\s+$/g,\"\");\n- 去除左空格：\nstr=str.replace( /^\\s*/, '');\n- 去除右空格：\nstr=str.replace(/(\\s*$)/g, \"\");\n\n<!-- more -->","slug":"【JavaScript】字符串去除空格","published":1,"updated":"2017-02-27T04:11:49.325Z","_id":"cjpuwa1hv0020s0jt7g1jykvm","photos":[],"link":"","content":"<ul>\n<li>去除所有空格:<br>str   =   str.replace(/\\s+/g,””);       </li>\n<li>去除两边空格:<br>str   =   str.replace(/^\\s+|\\s+$/g,””);</li>\n<li>去除左空格：<br>str=str.replace( /^\\s*/, ‘’);</li>\n<li>去除右空格：<br>str=str.replace(/(\\s*$)/g, “”);</li>\n</ul>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<ul>\n<li>去除所有空格:<br>str   =   str.replace(/\\s+/g,””);       </li>\n<li>去除两边空格:<br>str   =   str.replace(/^\\s+|\\s+$/g,””);</li>\n<li>去除左空格：<br>str=str.replace( /^\\s*/, ‘’);</li>\n<li>去除右空格：<br>str=str.replace(/(\\s*$)/g, “”);</li>\n</ul>","more":""},{"title":"【程序员】日志书写规范","layout":"post","comments":1,"date":"2016-11-24T02:48:45.000Z","keywords":null,"description":null,"_content":"* 日志类型：新增、修复、优化、删除\n* 版本类型：稳定版、开发版、体验版\n* 更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。\n\n<!-- more -->","source":"_posts/【IT】日志书写规范.md","raw":"---\ntitle: 【程序员】日志书写规范\nlayout: post\ncomments: true\ndate: 2016-11-24 10:48:45\ncategories: IT\ntags: [IT, 日志]\nkeywords:\ndescription:\n---\n* 日志类型：新增、修复、优化、删除\n* 版本类型：稳定版、开发版、体验版\n* 更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。\n\n<!-- more -->","slug":"【IT】日志书写规范","published":1,"updated":"2017-02-27T04:14:59.926Z","_id":"cjpuwa1hy0022s0jta0imp4m5","photos":[],"link":"","content":"<ul>\n<li>日志类型：新增、修复、优化、删除</li>\n<li>版本类型：稳定版、开发版、体验版</li>\n<li>更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。</li>\n</ul>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<ul>\n<li>日志类型：新增、修复、优化、删除</li>\n<li>版本类型：稳定版、开发版、体验版</li>\n<li>更新日志暖语：没有惊天动地的改变，只有处处为您着想的细节调整。</li>\n</ul>","more":""},{"title":"【HAProxy】配置详解","layout":"post","comments":1,"date":"2017-12-22T01:10:25.000Z","keywords":null,"description":null,"_content":"### 配置文件\nhaproxy.cfg主要有两部分组成：global和proxies配置段\n\n##### global：全局配置段\n进程及安全配置相关的参数\n性能调整相关参数\nDebug参数\n\n##### proxies：代理配置段\n* defaults：为frontend, backend, listen提供默认配置\n* fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend\n* backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器\n* listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置\n\n<!-- more -->\n\n> 所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、\\_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。\n\n> 时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。\n us: 微秒(microseconds)，即1/1000000秒；\n ms: 毫秒(milliseconds)，即1/1000秒；\n s: 秒(seconds)；\n m: 分钟(minutes)；\n h：小时(hours)；\n d: 天(days)；\n\n---\n\n### 配置参数\n##### 全局配置\n通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。\n\n\t###################### 全局配置 ######################\n\tglobal\n\t      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出\n\t    # log     127.0.0.1 local0 info\n\t      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制\n\t      chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t      uid     5040                                # 运行haproxy的用户（自定义）\n\t      gid     5040                                # 运行haproxy的用户所在的组（自定义）\n\t      daemon                                      # 以后台形式运行harpoxy\n\t    # nbproc  2                                   # 设置进程数量\n\t      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件\n\t    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试\n\t    # quiet\n\n* log\n全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；\n* maxconn\n设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”\n* chroot \n修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；\n* daemon\n让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；\n* nbproc \n指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；\n* pidfile\n将haproxy的进程写入pid文件。\n* ulimit-n\n设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。\n* stats\n可开启一个unix socket管理接口。\n* gid\n以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。\n* group\n同gid，不过指定的组名。\n\n##### 默认配置\n在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t      log             global\n\t      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t      option          httpclose    # 每次请求完毕后主动关闭http通道\n\t    # option          dontlognull  # 不记录健康检查日志信息\n\t      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接\n\t      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置\n\t      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数\n\t    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式\n\t    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash\n\t    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数\n\t      timeout connect 3000         # 连接超时\n\t      timeout client  50000        # 客户端超时\n\t      timeout server  50000        # 服务器超时\n\t    # timeout check   2000         # 心跳检测超时\n\t    # timeout http-keep-alive 10s  # 默认持久连接超时时间\n\t    # timeout http-request    10s  # 默认http请求超时时间\n\t    # timeout queue   1m           # 默认队列超时时间\n\n* mode { tcp|http|health }\n设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。\n\t* tcp\n\t实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；\n\t* http\n\t实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；\n\t* health\n\t实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能\n* log   global\n设置日志继承全局配置段的设置。\n* option httplog\n表示开始打开记录http请求的日志功能。\n* option dontlognull\n如果产生了一个空连接，那这个空连接的日志将不会记录。\n* option http-server-close\n打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。\n* option forwardfor except 127.0.0.0/8\n如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。\n* option redispatch\n当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。\n* retries 3\n向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。\n* option abortonclose\n当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。\n* timout http-request 10s\n客户端发送http请求的超时时间。\n* timeout queue 1m\n当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。\n* timeout connect 5s\nhaproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。\n* timeout client 1m\n定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。\n* timeout server 1m\n定义haproxy与上游服务器非活动连接的超时时间。\n* timeout http-keep-alive 10s\n设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。\n* timeout check 10s\n健康检测的时间的最大超时时间。\n* maxconn 3000\n最大并发连接数。\n* contimeout 5000\n设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。\n* clitimeout 3000\n设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。\n* srvtimeout 3000\n设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。\n* balance roundrobin\n设置负载算法为：轮询算法\n\n##### frontend前端配置\nfrontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。\n\n\t###################### frontend前端配置 ######################\n\tfrontend main\n\t   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。\n\t   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。\n\t   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。\n\t   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。\n\t   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。\n\t   default_backend dynamic          # 不满足则响应backend的默认页面\n\n* frontend http_80_in\n定义一个名为http_80_in的frontend。\n* bind 0.0.0.0:80\n定义haproxy前端部分监听的端口。\n* mode http\n定义为http模式。\n* log global\n继承global中log的定义。\n* option forwardfor\n使后端server获取到客户端的真实IP。\n* default_backend\ndefault_backend 在没有匹配的\"use_backend\"规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在\"frontend\"和\"backend\"之间进行内容交换时，通常使用\"use- backend\"定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。\n使用案例：\n\tuse_backend dynamic  if  url_dyn\n\tuse_backend static  if url_css url_img extension_img\n\tdefault_backend dynamic\n\n##### backend后端配置\n在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。\n\n\t###################### backend后端配置 ######################\n\tbackend webserver\n\t        mode    http\n\t        balance roundrobin                   # 负载轮询\n\t        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它\n\t        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3\n\t        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3\n\t        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率 \n\t        # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重\n\t\n\tbackend imgserver\n\t        mode    http\n\t        option  httpchk /index.php\n\t        balance roundrobin \n\t        server  img01 192.168.137.101:80 check inter 2000 fall 3\n\t        server  img02 192.168.137.102:80 check inter 2000 fall 3\n\t\n\tbackend dynamic \n\t        balance roundrobin \n\t        server  test1 192.168.1.23:80 check maxconn 2000 \n\t        server  test2 192.168.1.24:80 check maxconn 2000\n\n* cookie\n表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。\n* option httpchk\n此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。\noption httpchk用法：\n\t* method\n\t表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。\n\t一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。\n\t* uri\n\t表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。\n\t* version\n\t指定心跳检测时的HTTP的版本号。\n* server\n用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*\n\t* name\n\t为后端真实服务器指定一个内部名称，随便这下义一个即可。\n\t* address\n\t后端真实服务器的iP地址或主机名。\n\t* port\n\t指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。\n\t* param\n\t为后端服务器设定的一系列参数，可用参数非常多，\n* check\n表示启用对此后端服务器执行健康检查。\n* inter\n设置健康状态检查的时间间隔，单位为毫秒。\n* rise\n设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。\n* fall\n设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。\n* cookie\n为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。\n* cookie server1\n表示web1的serverid为server1。\n* weigth\n设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。\n* maxconn\n设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”\n* backup\n设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。\n\n##### listen配置\n常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体\n\n\t###################### 统计页面配置 ######################\n\tlisten stats\n\t       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       mode          http                 # http的7层模式\n\t       option        httplog              # 采用http日志格式\n\t     # log           127.0.0.1 local0 err # 错误日志记录\n\t       maxconn       10                   # 默认的最大连接数\n\t       stats refresh 30s                  # 统计页面自动刷新时间\n\t       stats uri     /stats               # 统计页面url\n\t       stats realm   YANGPIENA\\ Haproxy   # 统计页面密码框上提示文本\n\t       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名\n\t       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1\n\t       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息\n\t       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n##### errorfile配置\n格式为: errorfile  错误代码code  错误代码文件路径\nerrorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n\n---\n\n### 一份完整的haproxy配置文件实例：\n\n\t###################### 全局配置 ######################\n\tglobal\n\t       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n\t       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n\t       daemon                                      # 以后台形式运行harpoxy\n\t       uid     5040                                # 运行haproxy的用户\n\t       gid     5040                                # 运行haproxy的用户所在的组\n\t       chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t       log             global\n\t       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t       option          httpclose  # 每次请求完毕后主动关闭http通道\n\t       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t       retries         3          # 3次连接失败就认为是服务器不可用\n\t       timeout connect 300000     # 连接超时\n\t       timeout client  500000     # 客户端超时\n\t       timeout server  500000     # 服务器超时\n\n\t###################### 统计页面配置 ######################\n\tlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       bind          0.0.0.0:8888 # 监听端口\n\t       maxconn       1            # 默认的最大连接数\n\t       option        httplog      # 采用http日志格式\n\t       stats         enable       # 启用状态监控\n\t       stats refresh 30s          # 统计页面自动刷新时间\n\t       stats uri     /stats       # 统计页面url\n\t       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n\t       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n\t       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n\t###################### 业务前端配置 ######################\n\tfrontend xx\n\t         bind            0.0.0.0:80\n\t         default_backend xxServers\n\n\t###################### 业务后端配置 ######################\n\tbackend xxServers\n\t        balance source\n\t        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n\t        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n","source":"_posts/【HAProxy】配置详解.md","raw":"---\ntitle: 【HAProxy】配置详解\nlayout: post\ncomments: true\ndate: 2017-12-22 09:10:25\ncategories: HAProxy\ntags: [HAProxy]\nkeywords:\ndescription:\n---\n### 配置文件\nhaproxy.cfg主要有两部分组成：global和proxies配置段\n\n##### global：全局配置段\n进程及安全配置相关的参数\n性能调整相关参数\nDebug参数\n\n##### proxies：代理配置段\n* defaults：为frontend, backend, listen提供默认配置\n* fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend\n* backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器\n* listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置\n\n<!-- more -->\n\n> 所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、\\_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。\n\n> 时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。\n us: 微秒(microseconds)，即1/1000000秒；\n ms: 毫秒(milliseconds)，即1/1000秒；\n s: 秒(seconds)；\n m: 分钟(minutes)；\n h：小时(hours)；\n d: 天(days)；\n\n---\n\n### 配置参数\n##### 全局配置\n通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。\n\n\t###################### 全局配置 ######################\n\tglobal\n\t      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出\n\t    # log     127.0.0.1 local0 info\n\t      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制\n\t      chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t      uid     5040                                # 运行haproxy的用户（自定义）\n\t      gid     5040                                # 运行haproxy的用户所在的组（自定义）\n\t      daemon                                      # 以后台形式运行harpoxy\n\t    # nbproc  2                                   # 设置进程数量\n\t      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件\n\t    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试\n\t    # quiet\n\n* log\n全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；\n* maxconn\n设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”\n* chroot \n修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；\n* daemon\n让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；\n* nbproc \n指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；\n* pidfile\n将haproxy的进程写入pid文件。\n* ulimit-n\n设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。\n* stats\n可开启一个unix socket管理接口。\n* gid\n以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。\n* group\n同gid，不过指定的组名。\n\n##### 默认配置\n在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t      log             global\n\t      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t      option          httpclose    # 每次请求完毕后主动关闭http通道\n\t    # option          dontlognull  # 不记录健康检查日志信息\n\t      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接\n\t      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置\n\t      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数\n\t    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式\n\t    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash\n\t    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数\n\t      timeout connect 3000         # 连接超时\n\t      timeout client  50000        # 客户端超时\n\t      timeout server  50000        # 服务器超时\n\t    # timeout check   2000         # 心跳检测超时\n\t    # timeout http-keep-alive 10s  # 默认持久连接超时时间\n\t    # timeout http-request    10s  # 默认http请求超时时间\n\t    # timeout queue   1m           # 默认队列超时时间\n\n* mode { tcp|http|health }\n设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。\n\t* tcp\n\t实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；\n\t* http\n\t实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；\n\t* health\n\t实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能\n* log   global\n设置日志继承全局配置段的设置。\n* option httplog\n表示开始打开记录http请求的日志功能。\n* option dontlognull\n如果产生了一个空连接，那这个空连接的日志将不会记录。\n* option http-server-close\n打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。\n* option forwardfor except 127.0.0.0/8\n如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。\n* option redispatch\n当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。\n* retries 3\n向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。\n* option abortonclose\n当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。\n* timout http-request 10s\n客户端发送http请求的超时时间。\n* timeout queue 1m\n当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。\n* timeout connect 5s\nhaproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。\n* timeout client 1m\n定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。\n* timeout server 1m\n定义haproxy与上游服务器非活动连接的超时时间。\n* timeout http-keep-alive 10s\n设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。\n* timeout check 10s\n健康检测的时间的最大超时时间。\n* maxconn 3000\n最大并发连接数。\n* contimeout 5000\n设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。\n* clitimeout 3000\n设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。\n* srvtimeout 3000\n设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。\n* balance roundrobin\n设置负载算法为：轮询算法\n\n##### frontend前端配置\nfrontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。\n\n\t###################### frontend前端配置 ######################\n\tfrontend main\n\t   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。\n\t   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。\n\t   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。\n\t   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。\n\t   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。\n\t   default_backend dynamic          # 不满足则响应backend的默认页面\n\n* frontend http_80_in\n定义一个名为http_80_in的frontend。\n* bind 0.0.0.0:80\n定义haproxy前端部分监听的端口。\n* mode http\n定义为http模式。\n* log global\n继承global中log的定义。\n* option forwardfor\n使后端server获取到客户端的真实IP。\n* default_backend\ndefault_backend 在没有匹配的\"use_backend\"规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在\"frontend\"和\"backend\"之间进行内容交换时，通常使用\"use- backend\"定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。\n使用案例：\n\tuse_backend dynamic  if  url_dyn\n\tuse_backend static  if url_css url_img extension_img\n\tdefault_backend dynamic\n\n##### backend后端配置\n在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。\n\n\t###################### backend后端配置 ######################\n\tbackend webserver\n\t        mode    http\n\t        balance roundrobin                   # 负载轮询\n\t        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它\n\t        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3\n\t        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3\n\t        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率 \n\t        # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重\n\t\n\tbackend imgserver\n\t        mode    http\n\t        option  httpchk /index.php\n\t        balance roundrobin \n\t        server  img01 192.168.137.101:80 check inter 2000 fall 3\n\t        server  img02 192.168.137.102:80 check inter 2000 fall 3\n\t\n\tbackend dynamic \n\t        balance roundrobin \n\t        server  test1 192.168.1.23:80 check maxconn 2000 \n\t        server  test2 192.168.1.24:80 check maxconn 2000\n\n* cookie\n表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。\n* option httpchk\n此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。\noption httpchk用法：\n\t* method\n\t表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。\n\t一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。\n\t* uri\n\t表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。\n\t* version\n\t指定心跳检测时的HTTP的版本号。\n* server\n用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*\n\t* name\n\t为后端真实服务器指定一个内部名称，随便这下义一个即可。\n\t* address\n\t后端真实服务器的iP地址或主机名。\n\t* port\n\t指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。\n\t* param\n\t为后端服务器设定的一系列参数，可用参数非常多，\n* check\n表示启用对此后端服务器执行健康检查。\n* inter\n设置健康状态检查的时间间隔，单位为毫秒。\n* rise\n设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。\n* fall\n设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。\n* cookie\n为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。\n* cookie server1\n表示web1的serverid为server1。\n* weigth\n设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。\n* maxconn\n设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”\n* backup\n设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。\n\n##### listen配置\n常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体\n\n\t###################### 统计页面配置 ######################\n\tlisten stats\n\t       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       mode          http                 # http的7层模式\n\t       option        httplog              # 采用http日志格式\n\t     # log           127.0.0.1 local0 err # 错误日志记录\n\t       maxconn       10                   # 默认的最大连接数\n\t       stats refresh 30s                  # 统计页面自动刷新时间\n\t       stats uri     /stats               # 统计页面url\n\t       stats realm   YANGPIENA\\ Haproxy   # 统计页面密码框上提示文本\n\t       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名\n\t       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1\n\t       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息\n\t       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n##### errorfile配置\n格式为: errorfile  错误代码code  错误代码文件路径\nerrorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n\n---\n\n### 一份完整的haproxy配置文件实例：\n\n\t###################### 全局配置 ######################\n\tglobal\n\t       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n\t       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n\t       daemon                                      # 以后台形式运行harpoxy\n\t       uid     5040                                # 运行haproxy的用户\n\t       gid     5040                                # 运行haproxy的用户所在的组\n\t       chroot  /usr/local/haproxy                  # 改变当前工作目录\n\t       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n\t###################### 默认配置 ######################\n\tdefaults\n\t       log             global\n\t       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n\t       option          httpclose  # 每次请求完毕后主动关闭http通道\n\t       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n\t       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n\t       retries         3          # 3次连接失败就认为是服务器不可用\n\t       timeout connect 300000     # 连接超时\n\t       timeout client  500000     # 客户端超时\n\t       timeout server  500000     # 服务器超时\n\n\t###################### 统计页面配置 ######################\n\tlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n\t       bind          0.0.0.0:8888 # 监听端口\n\t       maxconn       1            # 默认的最大连接数\n\t       option        httplog      # 采用http日志格式\n\t       stats         enable       # 启用状态监控\n\t       stats refresh 30s          # 统计页面自动刷新时间\n\t       stats uri     /stats       # 统计页面url\n\t       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n\t       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n\t       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n\t###################### 业务前端配置 ######################\n\tfrontend xx\n\t         bind            0.0.0.0:80\n\t         default_backend xxServers\n\n\t###################### 业务后端配置 ######################\n\tbackend xxServers\n\t        balance source\n\t        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n\t        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n\t        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n\t###################### 错误页面配置 ######################\n\terrorfile 403 /usr/local/haproxy/errorfiles/403.http\n\terrorfile 500 /usr/local/haproxy/errorfiles/500.http\n\terrorfile 502 /usr/local/haproxy/errorfiles/502.http\n\terrorfile 503 /usr/local/haproxy/errorfiles/503.http\n\terrorfile 504 /usr/local/haproxy/errorfiles/504.http\n","slug":"【HAProxy】配置详解","published":1,"updated":"2017-12-22T07:02:26.728Z","_id":"cjpuwa1i20025s0jtd6ig171t","photos":[],"link":"","content":"<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>haproxy.cfg主要有两部分组成：global和proxies配置段</p>\n<h5 id=\"global：全局配置段\"><a href=\"#global：全局配置段\" class=\"headerlink\" title=\"global：全局配置段\"></a>global：全局配置段</h5><p>进程及安全配置相关的参数<br>性能调整相关参数<br>Debug参数</p>\n<h5 id=\"proxies：代理配置段\"><a href=\"#proxies：代理配置段\" class=\"headerlink\" title=\"proxies：代理配置段\"></a>proxies：代理配置段</h5><ul>\n<li>defaults：为frontend, backend, listen提供默认配置</li>\n<li>fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend</li>\n<li>backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器</li>\n<li>listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p>所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。</p>\n<p>时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。<br> us: 微秒(microseconds)，即1/1000000秒；<br> ms: 毫秒(milliseconds)，即1/1000秒；<br> s: 秒(seconds)；<br> m: 分钟(minutes)；<br> h：小时(hours)；<br> d: 天(days)；</p>\n</blockquote>\n<hr>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><h5 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h5><p>通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。</p>\n<pre><code>###################### 全局配置 ######################\nglobal\n      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出\n    # log     127.0.0.1 local0 info\n      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制\n      chroot  /usr/local/haproxy                  # 改变当前工作目录\n      uid     5040                                # 运行haproxy的用户（自定义）\n      gid     5040                                # 运行haproxy的用户所在的组（自定义）\n      daemon                                      # 以后台形式运行harpoxy\n    # nbproc  2                                   # 设置进程数量\n      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件\n    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试\n    # quiet\n</code></pre><ul>\n<li>log<br>全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；</li>\n<li>maxconn<br>设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li>\n<li>chroot<br>修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；</li>\n<li>daemon<br>让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；</li>\n<li>nbproc<br>指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；</li>\n<li>pidfile<br>将haproxy的进程写入pid文件。</li>\n<li>ulimit-n<br>设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。</li>\n<li>stats<br>可开启一个unix socket管理接口。</li>\n<li>gid<br>以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。</li>\n<li>group<br>同gid，不过指定的组名。</li>\n</ul>\n<h5 id=\"默认配置\"><a href=\"#默认配置\" class=\"headerlink\" title=\"默认配置\"></a>默认配置</h5><p>在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。</p>\n<pre><code>###################### 默认配置 ######################\ndefaults\n      log             global\n      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n      option          httpclose    # 每次请求完毕后主动关闭http通道\n    # option          dontlognull  # 不记录健康检查日志信息\n      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接\n      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置\n      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数\n    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式\n    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash\n    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数\n      timeout connect 3000         # 连接超时\n      timeout client  50000        # 客户端超时\n      timeout server  50000        # 服务器超时\n    # timeout check   2000         # 心跳检测超时\n    # timeout http-keep-alive 10s  # 默认持久连接超时时间\n    # timeout http-request    10s  # 默认http请求超时时间\n    # timeout queue   1m           # 默认队列超时时间\n</code></pre><ul>\n<li>mode { tcp|http|health }<br>设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。<ul>\n<li>tcp<br>实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；</li>\n<li>http<br>实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；</li>\n<li>health<br>实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能</li>\n</ul>\n</li>\n<li>log   global<br>设置日志继承全局配置段的设置。</li>\n<li>option httplog<br>表示开始打开记录http请求的日志功能。</li>\n<li>option dontlognull<br>如果产生了一个空连接，那这个空连接的日志将不会记录。</li>\n<li>option http-server-close<br>打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。</li>\n<li>option forwardfor except 127.0.0.0/8<br>如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。</li>\n<li>option redispatch<br>当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。</li>\n<li>retries 3<br>向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。</li>\n<li>option abortonclose<br>当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。</li>\n<li>timout http-request 10s<br>客户端发送http请求的超时时间。</li>\n<li>timeout queue 1m<br>当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。</li>\n<li>timeout connect 5s<br>haproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。</li>\n<li>timeout client 1m<br>定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。</li>\n<li>timeout server 1m<br>定义haproxy与上游服务器非活动连接的超时时间。</li>\n<li>timeout http-keep-alive 10s<br>设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。</li>\n<li>timeout check 10s<br>健康检测的时间的最大超时时间。</li>\n<li>maxconn 3000<br>最大并发连接数。</li>\n<li>contimeout 5000<br>设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。</li>\n<li>clitimeout 3000<br>设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。</li>\n<li>srvtimeout 3000<br>设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。</li>\n<li>balance roundrobin<br>设置负载算法为：轮询算法</li>\n</ul>\n<h5 id=\"frontend前端配置\"><a href=\"#frontend前端配置\" class=\"headerlink\" title=\"frontend前端配置\"></a>frontend前端配置</h5><p>frontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。</p>\n<pre><code>###################### frontend前端配置 ######################\nfrontend main\n   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。\n   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。\n   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。\n   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。\n   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。\n   default_backend dynamic          # 不满足则响应backend的默认页面\n</code></pre><ul>\n<li>frontend http_80_in<br>定义一个名为http_80_in的frontend。</li>\n<li>bind 0.0.0.0:80<br>定义haproxy前端部分监听的端口。</li>\n<li>mode http<br>定义为http模式。</li>\n<li>log global<br>继承global中log的定义。</li>\n<li>option forwardfor<br>使后端server获取到客户端的真实IP。</li>\n<li>default_backend<br>default_backend 在没有匹配的”use_backend”规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在”frontend”和”backend”之间进行内容交换时，通常使用”use- backend”定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。<br>使用案例：<br>  use_backend dynamic  if  url_dyn<br>  use_backend static  if url_css url_img extension_img<br>  default_backend dynamic</li>\n</ul>\n<h5 id=\"backend后端配置\"><a href=\"#backend后端配置\" class=\"headerlink\" title=\"backend后端配置\"></a>backend后端配置</h5><p>在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。</p>\n<pre><code>###################### backend后端配置 ######################\nbackend webserver\n        mode    http\n        balance roundrobin                   # 负载轮询\n        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它\n        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3\n        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3\n        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率 \n        # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重\n\nbackend imgserver\n        mode    http\n        option  httpchk /index.php\n        balance roundrobin \n        server  img01 192.168.137.101:80 check inter 2000 fall 3\n        server  img02 192.168.137.102:80 check inter 2000 fall 3\n\nbackend dynamic \n        balance roundrobin \n        server  test1 192.168.1.23:80 check maxconn 2000 \n        server  test2 192.168.1.24:80 check maxconn 2000\n</code></pre><ul>\n<li>cookie<br>表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。</li>\n<li>option httpchk<br>此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。<br>option httpchk用法：<ul>\n<li>method<br>表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。<br>一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。</li>\n<li>uri<br>表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。</li>\n<li>version<br>指定心跳检测时的HTTP的版本号。</li>\n</ul>\n</li>\n<li>server<br>用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*<ul>\n<li>name<br>为后端真实服务器指定一个内部名称，随便这下义一个即可。</li>\n<li>address<br>后端真实服务器的iP地址或主机名。</li>\n<li>port<br>指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。</li>\n<li>param<br>为后端服务器设定的一系列参数，可用参数非常多，</li>\n</ul>\n</li>\n<li>check<br>表示启用对此后端服务器执行健康检查。</li>\n<li>inter<br>设置健康状态检查的时间间隔，单位为毫秒。</li>\n<li>rise<br>设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。</li>\n<li>fall<br>设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。</li>\n<li>cookie<br>为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。</li>\n<li>cookie server1<br>表示web1的serverid为server1。</li>\n<li>weigth<br>设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。</li>\n<li>maxconn<br>设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li>\n<li>backup<br>设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。</li>\n</ul>\n<h5 id=\"listen配置\"><a href=\"#listen配置\" class=\"headerlink\" title=\"listen配置\"></a>listen配置</h5><p>常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体</p>\n<pre><code>###################### 统计页面配置 ######################\nlisten stats\n       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       mode          http                 # http的7层模式\n       option        httplog              # 采用http日志格式\n     # log           127.0.0.1 local0 err # 错误日志记录\n       maxconn       10                   # 默认的最大连接数\n       stats refresh 30s                  # 统计页面自动刷新时间\n       stats uri     /stats               # 统计页面url\n       stats realm   YANGPIENA\\ Haproxy   # 统计页面密码框上提示文本\n       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名\n       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1\n       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息\n       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n</code></pre><h5 id=\"errorfile配置\"><a href=\"#errorfile配置\" class=\"headerlink\" title=\"errorfile配置\"></a>errorfile配置</h5><p>格式为: errorfile  错误代码code  错误代码文件路径<br>errorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：</p>\n<pre><code>###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre><hr>\n<h3 id=\"一份完整的haproxy配置文件实例：\"><a href=\"#一份完整的haproxy配置文件实例：\" class=\"headerlink\" title=\"一份完整的haproxy配置文件实例：\"></a>一份完整的haproxy配置文件实例：</h3><pre><code>###################### 全局配置 ######################\nglobal\n       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n       daemon                                      # 以后台形式运行harpoxy\n       uid     5040                                # 运行haproxy的用户\n       gid     5040                                # 运行haproxy的用户所在的组\n       chroot  /usr/local/haproxy                  # 改变当前工作目录\n       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n###################### 默认配置 ######################\ndefaults\n       log             global\n       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n       option          httpclose  # 每次请求完毕后主动关闭http通道\n       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n       retries         3          # 3次连接失败就认为是服务器不可用\n       timeout connect 300000     # 连接超时\n       timeout client  500000     # 客户端超时\n       timeout server  500000     # 服务器超时\n\n###################### 统计页面配置 ######################\nlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       bind          0.0.0.0:8888 # 监听端口\n       maxconn       1            # 默认的最大连接数\n       option        httplog      # 采用http日志格式\n       stats         enable       # 启用状态监控\n       stats refresh 30s          # 统计页面自动刷新时间\n       stats uri     /stats       # 统计页面url\n       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n###################### 业务前端配置 ######################\nfrontend xx\n         bind            0.0.0.0:80\n         default_backend xxServers\n\n###################### 业务后端配置 ######################\nbackend xxServers\n        balance source\n        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>haproxy.cfg主要有两部分组成：global和proxies配置段</p>\n<h5 id=\"global：全局配置段\"><a href=\"#global：全局配置段\" class=\"headerlink\" title=\"global：全局配置段\"></a>global：全局配置段</h5><p>进程及安全配置相关的参数<br>性能调整相关参数<br>Debug参数</p>\n<h5 id=\"proxies：代理配置段\"><a href=\"#proxies：代理配置段\" class=\"headerlink\" title=\"proxies：代理配置段\"></a>proxies：代理配置段</h5><ul>\n<li>defaults：为frontend, backend, listen提供默认配置</li>\n<li>fronted：接收请求的前端虚拟节点，frontend可以增加规则直接指定具体使用后端的backend</li>\n<li>backend：后端服务集群的配置，真实服务器，一个backend对应一个或者多个实体服务器</li>\n<li>listen：同时拥有前端和后端,适用于一对一环境。fronted和backend的组合体，比如haproxy实例状态监控部分配置</li>\n</ul>","more":"<blockquote>\n<p>所有代理的名称只能使用大写字母、小写字母、数字、-(中线)、_(下划线)、.(点号)和:(冒号)。此外，ACL名称会区分字母大小写。</p>\n<p>时间格式配置说明：默认以毫秒为单位，但也可以使用其它的时间单位后缀。<br> us: 微秒(microseconds)，即1/1000000秒；<br> ms: 毫秒(milliseconds)，即1/1000秒；<br> s: 秒(seconds)；<br> m: 分钟(minutes)；<br> h：小时(hours)；<br> d: 天(days)；</p>\n</blockquote>\n<hr>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><h5 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h5><p>通常主要用于定义全局参数，属于进程级的配置，通常和操作系统配置有关。</p>\n<pre><code>###################### 全局配置 ######################\nglobal\n      log     127.0.0.1 local0                    # 日志输出配置，日志都记录在本机，通过local0输出\n    # log     127.0.0.1 local0 info\n      maxconn 1500                                # 默认最大连接数,需考虑ulimit-n限制\n      chroot  /usr/local/haproxy                  # 改变当前工作目录\n      uid     5040                                # 运行haproxy的用户（自定义）\n      gid     5040                                # 运行haproxy的用户所在的组（自定义）\n      daemon                                      # 以后台形式运行harpoxy\n    # nbproc  2                                   # 设置进程数量\n      pidfile /usr/local/haproxy/logs/haproxy.pid # 将所有进程的pid写入文件\n    # debug                                       # haproxy 调试级别，建议只在开启单进程的时候调试\n    # quiet\n</code></pre><ul>\n<li>log<br>全局的日志配置，local0是日志输出设置，info表示日志级别（err，waning，info，debug）；</li>\n<li>maxconn<br>设定每个HAProxy进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li>\n<li>chroot<br>修改haproxy的工作目录至指定的目录并在放弃权限之前执行chroot()操作,可以提升haproxy的安全级别，不过需要注意的是要确保指定的目录为空目录且任何用户均不能有写权限；</li>\n<li>daemon<br>让haproxy以守护进程的方式工作于后台，其等同于“-D”选项的功能，当然，也可以在命令行中以“-db”选项将其禁用；</li>\n<li>nbproc<br>指定启动的haproxy进程个数，只能用于守护进程模式的haproxy；默认只启动一个进程，鉴于调试困难等多方面的原因，一般只在单进程仅能打开少数文件描述符的场景中才使用多进程模式；</li>\n<li>pidfile<br>将haproxy的进程写入pid文件。</li>\n<li>ulimit-n<br>设定每进程所能够打开的最大文件描述符数目，默认情况下其会自动进行计算，因此不推荐修改此选项。</li>\n<li>stats<br>可开启一个unix socket管理接口。</li>\n<li>gid<br>以指定的GID运行haproxy，建议使用专用于运行haproxy的GID， 以免因权限问题带来风险。</li>\n<li>group<br>同gid，不过指定的组名。</li>\n</ul>\n<h5 id=\"默认配置\"><a href=\"#默认配置\" class=\"headerlink\" title=\"默认配置\"></a>默认配置</h5><p>在此部分中设置的参数值，默认会自动引用到下面的frontend、backend、listen部分中，因此，某些参数属于公用的配置，只需要在defaults部分添加一次即可。而如果frontend、backend、listen部分也配置了与defaults部分一样的参数，Defaults部分参数对应的值自动被覆盖。</p>\n<pre><code>###################### 默认配置 ######################\ndefaults\n      log             global\n      mode            http         # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n      option          httpclose    # 每次请求完毕后主动关闭http通道\n    # option          dontlognull  # 不记录健康检查日志信息\n      option          forwardfor   # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n      option          redispatch   # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n    # option          abortonclose # 当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接\n      retries         2            # 两次连接失败就认为是服务器不可用，也可以通过后面设置\n      balance         static-rr    # 支持static-rr，leastconn,first,uri等参数\n    # balance         roundrobin   # 设置默认负载均衡方式，轮询方式\n    # balance         source       # 设置默认负载均衡方式，保存session值，类似于nginx的ip_hash\n    # balnace         leastconn    # 设置默认负载均衡方式，最小连接数\n      timeout connect 3000         # 连接超时\n      timeout client  50000        # 客户端超时\n      timeout server  50000        # 服务器超时\n    # timeout check   2000         # 心跳检测超时\n    # timeout http-keep-alive 10s  # 默认持久连接超时时间\n    # timeout http-request    10s  # 默认http请求超时时间\n    # timeout queue   1m           # 默认队列超时时间\n</code></pre><ul>\n<li>mode { tcp|http|health }<br>设定实例的运行模式或协议。当实现内容交换时，前端和后端必须工作于同一种模式(一般 说来都是HTTP模式)，否则将无法启动实例。<ul>\n<li>tcp<br>实例运行于纯TCP模式，在客户端和服务器端之间将建立一个全双工的连接，且不会对7层报文做任何类型的检查；此为默认模式，通常用于SSL、SSH、SMTP等应用；</li>\n<li>http<br>实例运行于HTTP模式，客户端请求在转发至后端服务器之前将被深度分析，所有不与RFC格式兼容的请求都会被拒绝；</li>\n<li>health<br>实例工作于health模式，其对入站请求仅响应“OK”信息并关闭连接，且不会记录任何日志信息；此模式将用于响应外部组件的健康状态检查请求；目前来讲，此模式已经废弃，因为tcp或http模式中的monitor关键字可完成类似功能</li>\n</ul>\n</li>\n<li>log   global<br>设置日志继承全局配置段的设置。</li>\n<li>option httplog<br>表示开始打开记录http请求的日志功能。</li>\n<li>option dontlognull<br>如果产生了一个空连接，那这个空连接的日志将不会记录。</li>\n<li>option http-server-close<br>打开http协议中服务器端关闭功能，使得支持长连接，使得会话可以被重用，使得每一个日志记录都会被记录。</li>\n<li>option forwardfor except 127.0.0.0/8<br>如果上游服务器上的应用程序想记录客户端的真实IP地址，haproxy会把客户端的IP信息发送给上游服务器，在HTTP请求中添加”X-Forwarded-For”字段,但当是haproxy自身的健康检测机制去访问上游服务器时是不应该把这样的访问日志记录到日志中的，所以用except来排除127.0.0.0，即haproxy身。</li>\n<li>option redispatch<br>当与上游服务器的会话失败(服务器故障或其他原因)时，把会话重新分发到其他健康的服务器上,当原来故障的服务器恢复时，会话又被定向到已恢复的服务器上。还可以用”retries”关键字来设定在判定会话失败时的尝试连接的次数。</li>\n<li>retries 3<br>向上游服务器尝试连接的最大次数，超过此值就认为后端服务器不可用。</li>\n<li>option abortonclose<br>当haproxy负载很高时，自动结束掉当前队列处理比较久的链接。</li>\n<li>timout http-request 10s<br>客户端发送http请求的超时时间。</li>\n<li>timeout queue 1m<br>当上游服务器在高负载响应haproxy时，会把haproxy发送来的请求放进一个队列中，timeout queue定义放入这个队列的超时时间。</li>\n<li>timeout connect 5s<br>haproxy与后端服务器连接超时时间，如果在同一个局域网可设置较小的时间。</li>\n<li>timeout client 1m<br>定义客户端与haproxy连接后，数据传输完毕，不再有数据传输，即非活动连接的超时时间。</li>\n<li>timeout server 1m<br>定义haproxy与上游服务器非活动连接的超时时间。</li>\n<li>timeout http-keep-alive 10s<br>设置新的http请求连接建立的最大超时时间，时间较短时可以尽快释放出资源，节约资源。</li>\n<li>timeout check 10s<br>健康检测的时间的最大超时时间。</li>\n<li>maxconn 3000<br>最大并发连接数。</li>\n<li>contimeout 5000<br>设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容。</li>\n<li>clitimeout 3000<br>设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容。</li>\n<li>srvtimeout 3000<br>设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容。</li>\n<li>balance roundrobin<br>设置负载算法为：轮询算法</li>\n</ul>\n<h5 id=\"frontend前端配置\"><a href=\"#frontend前端配置\" class=\"headerlink\" title=\"frontend前端配置\"></a>frontend前端配置</h5><p>frontend是在haproxy 1.3版本以后才引入的一个组件，同时引入的还有backend组件。通过引入这些组件，在很大程度上简化了haproxy配置文件的复杂性。forntend可以根据ACL规则直接指定要使用的后端backend。</p>\n<pre><code>###################### frontend前端配置 ######################\nfrontend main\n   bind *:80                        # 这里建议使用该方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。\n   acl web hdr(host) -i www.abc.com # acl后面是规则名称，\\-i为忽略大小写，后面跟的是要访问的域名，如果访问这个(域名，就触发web规则。\n   acl img hdr(host) -i img.abc.com # 如果访问img.abc.com这个域名，就触发img规则。\n   use_backend webserver if web     # 如果上面定义的web规则被触发，就将请求分发到webserver这个作用域。\n   use_backend imgserver if img     # 如果上面定义的img规则被触发，就将请求分发到imgserver这个作用域。\n   default_backend dynamic          # 不满足则响应backend的默认页面\n</code></pre><ul>\n<li>frontend http_80_in<br>定义一个名为http_80_in的frontend。</li>\n<li>bind 0.0.0.0:80<br>定义haproxy前端部分监听的端口。</li>\n<li>mode http<br>定义为http模式。</li>\n<li>log global<br>继承global中log的定义。</li>\n<li>option forwardfor<br>使后端server获取到客户端的真实IP。</li>\n<li>default_backend<br>default_backend 在没有匹配的”use_backend”规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在”frontend”和”backend”之间进行内容交换时，通常使用”use- backend”定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。<br>使用案例：<br>  use_backend dynamic  if  url_dyn<br>  use_backend static  if url_css url_img extension_img<br>  default_backend dynamic</li>\n</ul>\n<h5 id=\"backend后端配置\"><a href=\"#backend后端配置\" class=\"headerlink\" title=\"backend后端配置\"></a>backend后端配置</h5><p>在HAProxy1.3版本之前，HAProxy的所有配置选项都在这个部分中设置。为了保持兼容性，haproxy新的版本依然保留了listen组件配置试。两种配置方式任选一中。</p>\n<pre><code>###################### backend后端配置 ######################\nbackend webserver\n        mode    http\n        balance roundrobin                   # 负载轮询\n        option  httpchk /index.html HTTP/1.0 # 健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它\n        server  web1 10.16.0.9:8085  cookie 1 weight 5 check inter 2000 rise 2 fall 3\n        server  web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3\n        # cookie 1表示serverid为1，check inter 1500 是检测心跳频率 \n        # rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重\n\nbackend imgserver\n        mode    http\n        option  httpchk /index.php\n        balance roundrobin \n        server  img01 192.168.137.101:80 check inter 2000 fall 3\n        server  img02 192.168.137.102:80 check inter 2000 fall 3\n\nbackend dynamic \n        balance roundrobin \n        server  test1 192.168.1.23:80 check maxconn 2000 \n        server  test2 192.168.1.24:80 check maxconn 2000\n</code></pre><ul>\n<li>cookie<br>表示充许向cookie插入SERVERID,每台服务器的SERVERID可以下面的server关键字中使用cookie关键字定义。</li>\n<li>option httpchk<br>此选项表示启用HTTP的服务状态检测功能。 HAProxy作为一个专业的负载均衡器，并且它支持对backend部分指定的后端服务节点的 健康检查，以保证在后端的backend中某个节点不能服务时，把从frontend端进来的客户端请求分配至backend中其他健康节点上，从而保证 整体服务的可用性。<br>option httpchk用法：<ul>\n<li>method<br>表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。<br>一般健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，相对于GET，HEAD方式更快，更简单。</li>\n<li>uri<br>表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状态，在正常情况下返回状态码200，返回其他状态码均为异常状态。</li>\n<li>version<br>指定心跳检测时的HTTP的版本号。</li>\n</ul>\n</li>\n<li>server<br>用来定义多台后端真实服务器,不能用于defaults和frontend部分,格式为:server name address:port param*<ul>\n<li>name<br>为后端真实服务器指定一个内部名称，随便这下义一个即可。</li>\n<li>address<br>后端真实服务器的iP地址或主机名。</li>\n<li>port<br>指定连接请求发往真实服务器时的目标端口，在未设定时，将使用客户端请求时的同一端口。</li>\n<li>param<br>为后端服务器设定的一系列参数，可用参数非常多，</li>\n</ul>\n</li>\n<li>check<br>表示启用对此后端服务器执行健康检查。</li>\n<li>inter<br>设置健康状态检查的时间间隔，单位为毫秒。</li>\n<li>rise<br>设置人故障状态转换至正常状态需要成功检查的次数，如 rise 2：表示2次检查正确就认为此服务器可用。</li>\n<li>fall<br>设置后端服务器从正常状态转换为不可用状态需要检查的次数，如 fall 3表示3 次检查失败就认为此服务器不可用。</li>\n<li>cookie<br>为指定的后端服务器设定cookie值，此外指定的值将在请求入站时被检查，第一次为此值挑选的后端服务器将在后续的请求中一直被选中，其目的在于实现持久连接的功能。</li>\n<li>cookie server1<br>表示web1的serverid为server1。</li>\n<li>weigth<br>设置后端真实服务器的权重，默认为1，最大值为256，设置为0表示不参与负载均衡。</li>\n<li>maxconn<br>设定每个backend中server进程可接受的最大并发连接数，此选项等同于linux命令选项”ulimit -n”</li>\n<li>backup<br>设置后端真实服务器的备份服器，仅仅在后端所有真实服务器均不可用的情况下才启用。</li>\n</ul>\n<h5 id=\"listen配置\"><a href=\"#listen配置\" class=\"headerlink\" title=\"listen配置\"></a>listen配置</h5><p>常常用于状态页面监控，以及后端server检查，是Fronted和backend的组合体</p>\n<pre><code>###################### 统计页面配置 ######################\nlisten stats\n       bind          0.0.0.0:1080         # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       mode          http                 # http的7层模式\n       option        httplog              # 采用http日志格式\n     # log           127.0.0.1 local0 err # 错误日志记录\n       maxconn       10                   # 默认的最大连接数\n       stats refresh 30s                  # 统计页面自动刷新时间\n       stats uri     /stats               # 统计页面url\n       stats realm   YANGPIENA\\ Haproxy   # 统计页面密码框上提示文本\n       stats auth    admin:admin          # 设置监控页面的用户和密码:admin,可以设置多个用户名\n       stats auth    admin1:admin1        # 设置监控页面的用户和密码：admin1\n       stats hide-version                 # 隐藏统计页面上HAProxy的版本信息\n       stats admin if TRUE                # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n</code></pre><h5 id=\"errorfile配置\"><a href=\"#errorfile配置\" class=\"headerlink\" title=\"errorfile配置\"></a>errorfile配置</h5><p>格式为: errorfile  错误代码code  错误代码文件路径<br>errorfile错误页面配置，在用户请求不存在的页面时，返回一个页面文件给客户端，而非由haproxy生成的错误代码；可用于所有段中。例如：</p>\n<pre><code>###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre><hr>\n<h3 id=\"一份完整的haproxy配置文件实例：\"><a href=\"#一份完整的haproxy配置文件实例：\" class=\"headerlink\" title=\"一份完整的haproxy配置文件实例：\"></a>一份完整的haproxy配置文件实例：</h3><pre><code>###################### 全局配置 ######################\nglobal\n       log     127.0.0.1 local0                    # 日志输出配置，所有日志记录在本机，通过local0输出\n       maxconn 3000                                # 默认最大连接数,需考虑ulimit-n限制\n       daemon                                      # 以后台形式运行harpoxy\n       uid     5040                                # 运行haproxy的用户\n       gid     5040                                # 运行haproxy的用户所在的组\n       chroot  /usr/local/haproxy                  # 改变当前工作目录\n       pidfile /usr/local/haproxy/logs/haproxy.pid # 当前进程的pid文件\n\n###################### 默认配置 ######################\ndefaults\n       log             global\n       mode            http       # 模式：tcp|http|health，tcp是4层，http是7层，health只会返回OK\n       option          httpclose  # 每次请求完毕后主动关闭http通道\n       option          forwardfor # 如果后端服务器需要获得客户端真实ip，可从Http Header中获得客户端ip\n       option          redispatch # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n       retries         3          # 3次连接失败就认为是服务器不可用\n       timeout connect 300000     # 连接超时\n       timeout client  500000     # 客户端超时\n       timeout server  500000     # 服务器超时\n\n###################### 统计页面配置 ######################\nlisten stats                      # 设置Frontend和Backend的组合体，监控组的名称，按需要自定义名称\n       bind          0.0.0.0:8888 # 监听端口\n       maxconn       1            # 默认的最大连接数\n       option        httplog      # 采用http日志格式\n       stats         enable       # 启用状态监控\n       stats refresh 30s          # 统计页面自动刷新时间\n       stats uri     /stats       # 统计页面url\n       stats realm   YANGPIENA    # 统计页面密码框上提示文本\n       stats auth    admin:admin  # 设置监控页面的用户和密码:admin,可以设置多个用户名（再增加一行即可）\n       stats admin   if TRUE      # 设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)\n\n###################### 业务前端配置 ######################\nfrontend xx\n         bind            0.0.0.0:80\n         default_backend xxServers\n\n###################### 业务后端配置 ######################\nbackend xxServers\n        balance source\n        server  50.41:80          10.1.50.41:80     weight 1 check inter 1500 rise 2 fall 3\n        server  50.42:80          10.1.50.42:80     weight 1 check inter 1500 rise 2 fall 3\n        server  108.6:8080        10.1.108.6:8080   weight 1 check inter 1500 rise 2 fall 3\n        server  218.95.162.130:88 218.95.162.130:88 weight 1 check inter 1500 rise 2 fall 3\n\n###################### 错误页面配置 ######################\nerrorfile 403 /usr/local/haproxy/errorfiles/403.http\nerrorfile 500 /usr/local/haproxy/errorfiles/500.http\nerrorfile 502 /usr/local/haproxy/errorfiles/502.http\nerrorfile 503 /usr/local/haproxy/errorfiles/503.http\nerrorfile 504 /usr/local/haproxy/errorfiles/504.http\n</code></pre>"},{"title":"【Java】jdk下载安装","layout":"post","comments":1,"date":"2016-12-28T01:29:53.000Z","keywords":null,"description":null,"_content":"### JDK[官网下载](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n<!-- more -->\n\n---\n\n### JDK安装\n\n#### 1. Windows下\n##### 1.1 安装\n安装目录建议自定义为C:\\Java下，其它按默认安装即可。\n##### 1.2 配置环境变量\n在系统变量里，\n新建变量名：`JAVA_HOME`   \t变量值：C:\\Java\\jdk1.7.0_80\n编辑变量名：`Path`  \t\t追加值：;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin\n新建变量名：`CLASSPATH` \t变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar\n>注意：在设置变量的末尾不要加上“；”）\n\n##### 1.3 测试\n设置完成之后我们需要测试，打开`运行`，输入`CMD`，在命令行上执行以下命令：\n```\njava -version\n```\n如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。\n\n\tjava version \"1.7.0_80\"\n\tJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\n\tJava HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)\n\n---\n\n#### 2. Linux下\n##### 2.1 在/usr/目录下创建java目录\n```\n[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java\n[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java\n[root@izwe12zdi799668qfxdm5oz java]# \n```\n##### 2.2 下载或拷贝jdk到java目录下，然后解压\n```\n[root@izwe12zdi799668qfxdm5oz java]# ls\njdk-7u80-linux-x64.gz\n[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz \njdk1.7.0_80/\njdk1.7.0_80/LICENSE\njdk1.7.0_80/release\njdk1.7.0_80/jre/\n.\n.\n.\njdk1.7.0_80/db/NOTICE\njdk1.7.0_80/README.html\njdk1.7.0_80/THIRDPARTYLICENSEREADME.txt\n[root@izwe12zdi799668qfxdm5oz java]# ls\njdk1.7.0_80  jdk-7u80-linux-x64.gz\n[root@izwe12zdi799668qfxdm5oz java]# \n```\n> 安装包也可以使用命令`curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz `下载，这里我直接拷贝了已下载好的。\n\n##### 2.3 设置环境变量\n```\n[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile\n```\n在profile中最后的`done`和`unset i`之间添加如下内容:\n\n\t#set java environment\n\tJAVA_HOME=/usr/java/jdk1.7.0_80\n\tJRE_HOME=/usr/java/jdk1.7.0_80/jre\n\tCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n\tPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n\texport JAVA_HOME JRE_HOME CLASS_PATH PATH\n添加后如下：\n\n\t[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile \n\t.\n\t.\n\t.\n\tfor i in /etc/profile.d/*.sh ; do\n\t    if [ -r \"$i\" ]; then\n\t        if [ \"${-#*i}\" != \"$-\" ]; then \n\t            . \"$i\"\n\t        else\n\t            . \"$i\" >/dev/null\n\t        fi\n\t    fi\n\tdone\n\n\t#set java environment\n\tJAVA_HOME=/usr/java/jdk1.7.0_80\n\tJRE_HOME=/usr/java/jdk1.7.0_80/jre\n\tCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n\tPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n\texport JAVA_HOME JRE_HOME CLASS_PATH PATH\n\n\tunset i\n\tunset -f pathmunge\n\t[root@izwe12zdi799668qfxdm5oz java]# \n再执行以下命令，使修改生效：\n```\n[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile\n```\n\n##### 2.4 测试\n执行命令：\n```\njava -version\n```\n出现如下，表示安装成功。\n\n\tjava version \"1.7.0_80\"\n\tJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\n\tJava HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)\n\n---\n\n### 可能出现的错误信息\n`bash: ./java: cannot execute binary file`\n出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。\n查看linux是32位还是64位系统用如下命令\n```\nsudo uname --m\n```\ni686   //表示是32位\nx86_64 // 表示是64位","source":"_posts/【Java】jdk下载安装.md","raw":"---\ntitle: 【Java】jdk下载安装\nlayout: post\ncomments: true\ndate: 2016-12-28 09:29:53\ncategories: Java\ntags: [Java, jdk]\nkeywords:\ndescription:\n---\n### JDK[官网下载](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n<!-- more -->\n\n---\n\n### JDK安装\n\n#### 1. Windows下\n##### 1.1 安装\n安装目录建议自定义为C:\\Java下，其它按默认安装即可。\n##### 1.2 配置环境变量\n在系统变量里，\n新建变量名：`JAVA_HOME`   \t变量值：C:\\Java\\jdk1.7.0_80\n编辑变量名：`Path`  \t\t追加值：;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin\n新建变量名：`CLASSPATH` \t变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar\n>注意：在设置变量的末尾不要加上“；”）\n\n##### 1.3 测试\n设置完成之后我们需要测试，打开`运行`，输入`CMD`，在命令行上执行以下命令：\n```\njava -version\n```\n如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。\n\n\tjava version \"1.7.0_80\"\n\tJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\n\tJava HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)\n\n---\n\n#### 2. Linux下\n##### 2.1 在/usr/目录下创建java目录\n```\n[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java\n[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java\n[root@izwe12zdi799668qfxdm5oz java]# \n```\n##### 2.2 下载或拷贝jdk到java目录下，然后解压\n```\n[root@izwe12zdi799668qfxdm5oz java]# ls\njdk-7u80-linux-x64.gz\n[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz \njdk1.7.0_80/\njdk1.7.0_80/LICENSE\njdk1.7.0_80/release\njdk1.7.0_80/jre/\n.\n.\n.\njdk1.7.0_80/db/NOTICE\njdk1.7.0_80/README.html\njdk1.7.0_80/THIRDPARTYLICENSEREADME.txt\n[root@izwe12zdi799668qfxdm5oz java]# ls\njdk1.7.0_80  jdk-7u80-linux-x64.gz\n[root@izwe12zdi799668qfxdm5oz java]# \n```\n> 安装包也可以使用命令`curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz `下载，这里我直接拷贝了已下载好的。\n\n##### 2.3 设置环境变量\n```\n[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile\n```\n在profile中最后的`done`和`unset i`之间添加如下内容:\n\n\t#set java environment\n\tJAVA_HOME=/usr/java/jdk1.7.0_80\n\tJRE_HOME=/usr/java/jdk1.7.0_80/jre\n\tCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n\tPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n\texport JAVA_HOME JRE_HOME CLASS_PATH PATH\n添加后如下：\n\n\t[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile \n\t.\n\t.\n\t.\n\tfor i in /etc/profile.d/*.sh ; do\n\t    if [ -r \"$i\" ]; then\n\t        if [ \"${-#*i}\" != \"$-\" ]; then \n\t            . \"$i\"\n\t        else\n\t            . \"$i\" >/dev/null\n\t        fi\n\t    fi\n\tdone\n\n\t#set java environment\n\tJAVA_HOME=/usr/java/jdk1.7.0_80\n\tJRE_HOME=/usr/java/jdk1.7.0_80/jre\n\tCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n\tPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n\texport JAVA_HOME JRE_HOME CLASS_PATH PATH\n\n\tunset i\n\tunset -f pathmunge\n\t[root@izwe12zdi799668qfxdm5oz java]# \n再执行以下命令，使修改生效：\n```\n[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile\n```\n\n##### 2.4 测试\n执行命令：\n```\njava -version\n```\n出现如下，表示安装成功。\n\n\tjava version \"1.7.0_80\"\n\tJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\n\tJava HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)\n\n---\n\n### 可能出现的错误信息\n`bash: ./java: cannot execute binary file`\n出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。\n查看linux是32位还是64位系统用如下命令\n```\nsudo uname --m\n```\ni686   //表示是32位\nx86_64 // 表示是64位","slug":"【Java】jdk下载安装","published":1,"updated":"2017-08-14T06:26:38.763Z","_id":"cjpuwa1i40028s0jtmxfe6c6t","photos":[],"link":"","content":"<h3 id=\"JDK官网下载\"><a href=\"#JDK官网下载\" class=\"headerlink\" title=\"JDK官网下载\"></a>JDK<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3><a id=\"more\"></a>\n<hr>\n<h3 id=\"JDK安装\"><a href=\"#JDK安装\" class=\"headerlink\" title=\"JDK安装\"></a>JDK安装</h3><h4 id=\"1-Windows下\"><a href=\"#1-Windows下\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-安装\"><a href=\"#1-1-安装\" class=\"headerlink\" title=\"1.1 安装\"></a>1.1 安装</h5><p>安装目录建议自定义为C:\\Java下，其它按默认安装即可。</p>\n<h5 id=\"1-2-配置环境变量\"><a href=\"#1-2-配置环境变量\" class=\"headerlink\" title=\"1.2 配置环境变量\"></a>1.2 配置环境变量</h5><p>在系统变量里，<br>新建变量名：<code>JAVA_HOME</code>       变量值：C:\\Java\\jdk1.7.0_80<br>编辑变量名：<code>Path</code>          追加值：;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin<br>新建变量名：<code>CLASSPATH</code>     变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar</p>\n<blockquote>\n<p>注意：在设置变量的末尾不要加上“；”）</p>\n</blockquote>\n<h5 id=\"1-3-测试\"><a href=\"#1-3-测试\" class=\"headerlink\" title=\"1.3 测试\"></a>1.3 测试</h5><p>设置完成之后我们需要测试，打开<code>运行</code>，输入<code>CMD</code>，在命令行上执行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure></p>\n<p>如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。</p>\n<pre><code>java version &quot;1.7.0_80&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\nJava HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)\n</code></pre><hr>\n<h4 id=\"2-Linux下\"><a href=\"#2-Linux下\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-在-usr-目录下创建java目录\"><a href=\"#2-1-在-usr-目录下创建java目录\" class=\"headerlink\" title=\"2.1 在/usr/目录下创建java目录\"></a>2.1 在/usr/目录下创建java目录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-下载或拷贝jdk到java目录下，然后解压\"><a href=\"#2-2-下载或拷贝jdk到java目录下，然后解压\" class=\"headerlink\" title=\"2.2 下载或拷贝jdk到java目录下，然后解压\"></a>2.2 下载或拷贝jdk到java目录下，然后解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class=\"line\">jdk-7u80-linux-x64.gz</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz </span><br><span class=\"line\">jdk1.7.0_80/</span><br><span class=\"line\">jdk1.7.0_80/LICENSE</span><br><span class=\"line\">jdk1.7.0_80/release</span><br><span class=\"line\">jdk1.7.0_80/jre/</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">jdk1.7.0_80/db/NOTICE</span><br><span class=\"line\">jdk1.7.0_80/README.html</span><br><span class=\"line\">jdk1.7.0_80/THIRDPARTYLICENSEREADME.txt</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class=\"line\">jdk1.7.0_80  jdk-7u80-linux-x64.gz</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>安装包也可以使用命令<code>curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz</code>下载，这里我直接拷贝了已下载好的。</p>\n</blockquote>\n<h5 id=\"2-3-设置环境变量\"><a href=\"#2-3-设置环境变量\" class=\"headerlink\" title=\"2.3 设置环境变量\"></a>2.3 设置环境变量</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile</span><br></pre></td></tr></table></figure>\n<p>在profile中最后的<code>done</code>和<code>unset i</code>之间添加如下内容:</p>\n<pre><code>#set java environment\nJAVA_HOME=/usr/java/jdk1.7.0_80\nJRE_HOME=/usr/java/jdk1.7.0_80/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n</code></pre><p>添加后如下：</p>\n<pre><code>[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile \n.\n.\n.\nfor i in /etc/profile.d/*.sh ; do\n    if [ -r &quot;$i&quot; ]; then\n        if [ &quot;${-#*i}&quot; != &quot;$-&quot; ]; then \n            . &quot;$i&quot;\n        else\n            . &quot;$i&quot; &gt;/dev/null\n        fi\n    fi\ndone\n\n#set java environment\nJAVA_HOME=/usr/java/jdk1.7.0_80\nJRE_HOME=/usr/java/jdk1.7.0_80/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n\nunset i\nunset -f pathmunge\n[root@izwe12zdi799668qfxdm5oz java]# \n</code></pre><p>再执行以下命令，使修改生效：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-4-测试\"><a href=\"#2-4-测试\" class=\"headerlink\" title=\"2.4 测试\"></a>2.4 测试</h5><p>执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure></p>\n<p>出现如下，表示安装成功。</p>\n<pre><code>java version &quot;1.7.0_80&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)\n</code></pre><hr>\n<h3 id=\"可能出现的错误信息\"><a href=\"#可能出现的错误信息\" class=\"headerlink\" title=\"可能出现的错误信息\"></a>可能出现的错误信息</h3><p><code>bash: ./java: cannot execute binary file</code><br>出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。<br>查看linux是32位还是64位系统用如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo uname --m</span><br></pre></td></tr></table></figure></p>\n<p>i686   //表示是32位<br>x86_64 // 表示是64位</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"JDK官网下载\"><a href=\"#JDK官网下载\" class=\"headerlink\" title=\"JDK官网下载\"></a>JDK<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3>","more":"<hr>\n<h3 id=\"JDK安装\"><a href=\"#JDK安装\" class=\"headerlink\" title=\"JDK安装\"></a>JDK安装</h3><h4 id=\"1-Windows下\"><a href=\"#1-Windows下\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-安装\"><a href=\"#1-1-安装\" class=\"headerlink\" title=\"1.1 安装\"></a>1.1 安装</h5><p>安装目录建议自定义为C:\\Java下，其它按默认安装即可。</p>\n<h5 id=\"1-2-配置环境变量\"><a href=\"#1-2-配置环境变量\" class=\"headerlink\" title=\"1.2 配置环境变量\"></a>1.2 配置环境变量</h5><p>在系统变量里，<br>新建变量名：<code>JAVA_HOME</code>       变量值：C:\\Java\\jdk1.7.0_80<br>编辑变量名：<code>Path</code>          追加值：;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin<br>新建变量名：<code>CLASSPATH</code>     变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar</p>\n<blockquote>\n<p>注意：在设置变量的末尾不要加上“；”）</p>\n</blockquote>\n<h5 id=\"1-3-测试\"><a href=\"#1-3-测试\" class=\"headerlink\" title=\"1.3 测试\"></a>1.3 测试</h5><p>设置完成之后我们需要测试，打开<code>运行</code>，输入<code>CMD</code>，在命令行上执行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure></p>\n<p>如果出现以下内容，那么JDK配置成功，否则就需要检查环境变量的配置。</p>\n<pre><code>java version &quot;1.7.0_80&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\nJava HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)\n</code></pre><hr>\n<h4 id=\"2-Linux下\"><a href=\"#2-Linux下\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-在-usr-目录下创建java目录\"><a href=\"#2-1-在-usr-目录下创建java目录\" class=\"headerlink\" title=\"2.1 在/usr/目录下创建java目录\"></a>2.1 在/usr/目录下创建java目录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz ~]# mkdir /usr/java</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz ~]# cd /usr/java</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-下载或拷贝jdk到java目录下，然后解压\"><a href=\"#2-2-下载或拷贝jdk到java目录下，然后解压\" class=\"headerlink\" title=\"2.2 下载或拷贝jdk到java目录下，然后解压\"></a>2.2 下载或拷贝jdk到java目录下，然后解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class=\"line\">jdk-7u80-linux-x64.gz</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# tar -zxvf jdk-7u80-linux-x64.gz </span><br><span class=\"line\">jdk1.7.0_80/</span><br><span class=\"line\">jdk1.7.0_80/LICENSE</span><br><span class=\"line\">jdk1.7.0_80/release</span><br><span class=\"line\">jdk1.7.0_80/jre/</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">jdk1.7.0_80/db/NOTICE</span><br><span class=\"line\">jdk1.7.0_80/README.html</span><br><span class=\"line\">jdk1.7.0_80/THIRDPARTYLICENSEREADME.txt</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# ls</span><br><span class=\"line\">jdk1.7.0_80  jdk-7u80-linux-x64.gz</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]#</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>安装包也可以使用命令<code>curl -O http://download.Oracle.com/otn-pub/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz</code>下载，这里我直接拷贝了已下载好的。</p>\n</blockquote>\n<h5 id=\"2-3-设置环境变量\"><a href=\"#2-3-设置环境变量\" class=\"headerlink\" title=\"2.3 设置环境变量\"></a>2.3 设置环境变量</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# vi /etc/profile</span><br></pre></td></tr></table></figure>\n<p>在profile中最后的<code>done</code>和<code>unset i</code>之间添加如下内容:</p>\n<pre><code>#set java environment\nJAVA_HOME=/usr/java/jdk1.7.0_80\nJRE_HOME=/usr/java/jdk1.7.0_80/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n</code></pre><p>添加后如下：</p>\n<pre><code>[root@izwe12zdi799668qfxdm5oz java]# cat /etc/profile \n.\n.\n.\nfor i in /etc/profile.d/*.sh ; do\n    if [ -r &quot;$i&quot; ]; then\n        if [ &quot;${-#*i}&quot; != &quot;$-&quot; ]; then \n            . &quot;$i&quot;\n        else\n            . &quot;$i&quot; &gt;/dev/null\n        fi\n    fi\ndone\n\n#set java environment\nJAVA_HOME=/usr/java/jdk1.7.0_80\nJRE_HOME=/usr/java/jdk1.7.0_80/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n\nunset i\nunset -f pathmunge\n[root@izwe12zdi799668qfxdm5oz java]# \n</code></pre><p>再执行以下命令，使修改生效：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz java]# source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-4-测试\"><a href=\"#2-4-测试\" class=\"headerlink\" title=\"2.4 测试\"></a>2.4 测试</h5><p>执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure></p>\n<p>出现如下，表示安装成功。</p>\n<pre><code>java version &quot;1.7.0_80&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)\n</code></pre><hr>\n<h3 id=\"可能出现的错误信息\"><a href=\"#可能出现的错误信息\" class=\"headerlink\" title=\"可能出现的错误信息\"></a>可能出现的错误信息</h3><p><code>bash: ./java: cannot execute binary file</code><br>出现这个错误的原因可能是在32位的操作系统上安装了64位的jdk，请检查jdk版本和Linux版本位数是否一致。<br>查看linux是32位还是64位系统用如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo uname --m</span><br></pre></td></tr></table></figure></p>\n<p>i686   //表示是32位<br>x86_64 // 表示是64位</p>"},{"title":"【IT】log4j.properties","layout":"post","comments":1,"date":"2016-12-22T04:26:51.000Z","keywords":null,"description":null,"_content":"\nlog4j的配置方法很多，下面记录一个简单配置，以供常用：\n<!-- more -->\n```java\n#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL\n#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL\nlog4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile\n#\n#输出到控制台 \nlog4j.appender.systemOut = org.apache.log4j.ConsoleAppender\nlog4j.appender.systemOut.layout = org.apache.log4j.PatternLayout\nlog4j.appender.systemOut.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.systemOut.Threshold = INFO\nlog4j.appender.systemOut.ImmediateFlush = TRUE\nlog4j.appender.systemOut.Target = System.out\n#\n#输出到文件 \nlog4j.appender.logFile = org.apache.log4j.FileAppender\nlog4j.appender.logFile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.logFile.Threshold = ERROR\nlog4j.appender.logFile.ImmediateFlush = TRUE\nlog4j.appender.logFile.Append = TRUE\nlog4j.appender.logFile.File = ${catalina.home}/logs/error.log\nlog4j.appender.logFile.Encoding = UTF-8\n#\n#设定文件大小输出到文件 \nlog4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender\nlog4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.logRollingFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.logRollingFile.Threshold = INFO\nlog4j.appender.logRollingFile.ImmediateFlush = TRUE\nlog4j.appender.logRollingFile.Append = TRUE\nlog4j.appender.logRollingFile.File = ${catalina.home}/logs/log.log\nlog4j.appender.logRollingFile.MaxFileSize = 10MB\nlog4j.appender.logRollingFile.MaxBackupIndex = 10\nlog4j.appender.logRollingFile.Encoding = UTF-8\n#\n##按DatePattern输出到文件 \n#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender\n#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout\n#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\n#log4j.appender.logDailyFile.Threshold = DEBUG\n#log4j.appender.logDailyFile.ImmediateFlush = TRUE\n#log4j.appender.logDailyFile.Append = TRUE\n#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts\n#log4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'\n#log4j.appender.logDailyFile.Encoding = UTF-8\n#\n##用Email发送日志 \n#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender\n#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout\n#log4j.appender.logMail.layout.LocationInfo = TRUE\n#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile\n#log4j.appender.logMail.Threshold = DEBUG\n#log4j.appender.logMail.SMTPDebug = FALSE\n#log4j.appender.logMail.SMTPHost = SMTP.163.com\n#log4j.appender.logMail.From = xly3000@163.com\n#log4j.appender.logMail.To = xly3000@gmail.com\n##log4j.appender.logMail.Cc = xly3000@gmail.com\n##log4j.appender.logMail.Bcc = xly3000@gmail.com\n#log4j.appender.logMail.SMTPUsername = xly3000\n#log4j.appender.logMail.SMTPPassword = 1234567\n#log4j.appender.logMail.Subject = Log4j Log Messages\n##log4j.appender.logMail.BufferSize = 1024\n##log4j.appender.logMail.SMTPAuth = TRUE\n#\n##将日志登录到MySQL数据库 \n#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender\n#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout\n#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver\n#log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly\n#log4j.appender.logDB.User = root\n#log4j.appender.logDB.Password = 123456\n#log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d{yyyy-MM-ddHH:mm:ss}','%p','%c','%F','%t','%L','%l','%m')\n```","source":"_posts/【IT】log4j-properties.md","raw":"---\ntitle: 【IT】log4j.properties\nlayout: post\ncomments: true\ndate: 2016-12-22 12:26:51\ncategories: IT\ntags: [IT, log4j]\nkeywords:\ndescription:\n---\n\nlog4j的配置方法很多，下面记录一个简单配置，以供常用：\n<!-- more -->\n```java\n#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL\n#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL\nlog4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile\n#\n#输出到控制台 \nlog4j.appender.systemOut = org.apache.log4j.ConsoleAppender\nlog4j.appender.systemOut.layout = org.apache.log4j.PatternLayout\nlog4j.appender.systemOut.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.systemOut.Threshold = INFO\nlog4j.appender.systemOut.ImmediateFlush = TRUE\nlog4j.appender.systemOut.Target = System.out\n#\n#输出到文件 \nlog4j.appender.logFile = org.apache.log4j.FileAppender\nlog4j.appender.logFile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.logFile.Threshold = ERROR\nlog4j.appender.logFile.ImmediateFlush = TRUE\nlog4j.appender.logFile.Append = TRUE\nlog4j.appender.logFile.File = ${catalina.home}/logs/error.log\nlog4j.appender.logFile.Encoding = UTF-8\n#\n#设定文件大小输出到文件 \nlog4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender\nlog4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.logRollingFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\nlog4j.appender.logRollingFile.Threshold = INFO\nlog4j.appender.logRollingFile.ImmediateFlush = TRUE\nlog4j.appender.logRollingFile.Append = TRUE\nlog4j.appender.logRollingFile.File = ${catalina.home}/logs/log.log\nlog4j.appender.logRollingFile.MaxFileSize = 10MB\nlog4j.appender.logRollingFile.MaxBackupIndex = 10\nlog4j.appender.logRollingFile.Encoding = UTF-8\n#\n##按DatePattern输出到文件 \n#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender\n#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout\n#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\n#log4j.appender.logDailyFile.Threshold = DEBUG\n#log4j.appender.logDailyFile.ImmediateFlush = TRUE\n#log4j.appender.logDailyFile.Append = TRUE\n#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts\n#log4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'\n#log4j.appender.logDailyFile.Encoding = UTF-8\n#\n##用Email发送日志 \n#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender\n#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout\n#log4j.appender.logMail.layout.LocationInfo = TRUE\n#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile\n#log4j.appender.logMail.Threshold = DEBUG\n#log4j.appender.logMail.SMTPDebug = FALSE\n#log4j.appender.logMail.SMTPHost = SMTP.163.com\n#log4j.appender.logMail.From = xly3000@163.com\n#log4j.appender.logMail.To = xly3000@gmail.com\n##log4j.appender.logMail.Cc = xly3000@gmail.com\n##log4j.appender.logMail.Bcc = xly3000@gmail.com\n#log4j.appender.logMail.SMTPUsername = xly3000\n#log4j.appender.logMail.SMTPPassword = 1234567\n#log4j.appender.logMail.Subject = Log4j Log Messages\n##log4j.appender.logMail.BufferSize = 1024\n##log4j.appender.logMail.SMTPAuth = TRUE\n#\n##将日志登录到MySQL数据库 \n#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender\n#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout\n#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver\n#log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly\n#log4j.appender.logDB.User = root\n#log4j.appender.logDB.Password = 123456\n#log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d{yyyy-MM-ddHH:mm:ss}','%p','%c','%F','%t','%L','%l','%m')\n```","slug":"【IT】log4j-properties","published":1,"updated":"2017-02-27T04:14:29.842Z","_id":"cjpuwa1i50029s0jtyblh9m20","photos":[],"link":"","content":"<p>log4j的配置方法很多，下面记录一个简单配置，以供常用：<br><a id=\"more\"></a><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL</span><br><span class=\"line\">#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL</span><br><span class=\"line\">log4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile</span><br><span class=\"line\">#</span><br><span class=\"line\">#输出到控制台 </span><br><span class=\"line\">log4j.appender.systemOut = org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.systemOut.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.systemOut.Threshold = INFO</span><br><span class=\"line\">log4j.appender.systemOut.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.systemOut.Target = System.out</span><br><span class=\"line\">#</span><br><span class=\"line\">#输出到文件 </span><br><span class=\"line\">log4j.appender.logFile = org.apache.log4j.FileAppender</span><br><span class=\"line\">log4j.appender.logFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.logFile.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.logFile.Threshold = ERROR</span><br><span class=\"line\">log4j.appender.logFile.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.logFile.Append = TRUE</span><br><span class=\"line\">log4j.appender.logFile.File = $&#123;catalina.home&#125;/logs/error.log</span><br><span class=\"line\">log4j.appender.logFile.Encoding = UTF-<span class=\"number\">8</span></span><br><span class=\"line\">#</span><br><span class=\"line\">#设定文件大小输出到文件 </span><br><span class=\"line\">log4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender</span><br><span class=\"line\">log4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.logRollingFile.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.logRollingFile.Threshold = INFO</span><br><span class=\"line\">log4j.appender.logRollingFile.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.logRollingFile.Append = TRUE</span><br><span class=\"line\">log4j.appender.logRollingFile.File = $&#123;catalina.home&#125;/logs/log.log</span><br><span class=\"line\">log4j.appender.logRollingFile.MaxFileSize = <span class=\"number\">10</span>MB</span><br><span class=\"line\">log4j.appender.logRollingFile.MaxBackupIndex = <span class=\"number\">10</span></span><br><span class=\"line\">log4j.appender.logRollingFile.Encoding = UTF-<span class=\"number\">8</span></span><br><span class=\"line\">#</span><br><span class=\"line\">##按DatePattern输出到文件 </span><br><span class=\"line\">#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">#log4j.appender.logDailyFile.Threshold = DEBUG</span><br><span class=\"line\">#log4j.appender.logDailyFile.ImmediateFlush = TRUE</span><br><span class=\"line\">#log4j.appender.logDailyFile.Append = TRUE</span><br><span class=\"line\">#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts</span><br><span class=\"line\">#log4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'</span><br><span class=\"line\">#log4j.appender.logDailyFile.Encoding = UTF-8</span><br><span class=\"line\">#</span><br><span class=\"line\">##用Email发送日志 </span><br><span class=\"line\">#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender</span><br><span class=\"line\">#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout</span><br><span class=\"line\">#log4j.appender.logMail.layout.LocationInfo = TRUE</span><br><span class=\"line\">#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile</span><br><span class=\"line\">#log4j.appender.logMail.Threshold = DEBUG</span><br><span class=\"line\">#log4j.appender.logMail.SMTPDebug = FALSE</span><br><span class=\"line\">#log4j.appender.logMail.SMTPHost = SMTP.163.com</span><br><span class=\"line\">#log4j.appender.logMail.From = xly3000@163.com</span><br><span class=\"line\">#log4j.appender.logMail.To = xly3000@gmail.com</span><br><span class=\"line\">##log4j.appender.logMail.Cc = xly3000@gmail.com</span><br><span class=\"line\">##log4j.appender.logMail.Bcc = xly3000@gmail.com</span><br><span class=\"line\">#log4j.appender.logMail.SMTPUsername = xly3000</span><br><span class=\"line\">#log4j.appender.logMail.SMTPPassword = 1234567</span><br><span class=\"line\">#log4j.appender.logMail.Subject = Log4j Log Messages</span><br><span class=\"line\">##log4j.appender.logMail.BufferSize = 1024</span><br><span class=\"line\">##log4j.appender.logMail.SMTPAuth = TRUE</span><br><span class=\"line\">#</span><br><span class=\"line\">##将日志登录到MySQL数据库 </span><br><span class=\"line\">#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender</span><br><span class=\"line\">#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver</span><br><span class=\"line\">#log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly</span><br><span class=\"line\">#log4j.appender.logDB.User = root</span><br><span class=\"line\">#log4j.appender.logDB.Password = 123456</span><br><span class=\"line\">#log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d&#123;yyyy-MM-ddHH:mm:ss&#125;','%p','%c','%F','%t','%L','%l','%m')</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>log4j的配置方法很多，下面记录一个简单配置，以供常用：<br>","more":"<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#OFF,systemOut,logFile,logDailyFile,logRollingFile,logMail,logDB,ALL</span><br><span class=\"line\">#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL</span><br><span class=\"line\">log4j.rootLogger = INFO,ERROR,systemOut,logFile,logRollingFile</span><br><span class=\"line\">#</span><br><span class=\"line\">#输出到控制台 </span><br><span class=\"line\">log4j.appender.systemOut = org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.systemOut.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.systemOut.Threshold = INFO</span><br><span class=\"line\">log4j.appender.systemOut.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.systemOut.Target = System.out</span><br><span class=\"line\">#</span><br><span class=\"line\">#输出到文件 </span><br><span class=\"line\">log4j.appender.logFile = org.apache.log4j.FileAppender</span><br><span class=\"line\">log4j.appender.logFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.logFile.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.logFile.Threshold = ERROR</span><br><span class=\"line\">log4j.appender.logFile.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.logFile.Append = TRUE</span><br><span class=\"line\">log4j.appender.logFile.File = $&#123;catalina.home&#125;/logs/error.log</span><br><span class=\"line\">log4j.appender.logFile.Encoding = UTF-<span class=\"number\">8</span></span><br><span class=\"line\">#</span><br><span class=\"line\">#设定文件大小输出到文件 </span><br><span class=\"line\">log4j.appender.logRollingFile = org.apache.log4j.RollingFileAppender</span><br><span class=\"line\">log4j.appender.logRollingFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.logRollingFile.layout.ConversionPattern = [%-<span class=\"number\">5</span>p][%-<span class=\"number\">22</span>d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">log4j.appender.logRollingFile.Threshold = INFO</span><br><span class=\"line\">log4j.appender.logRollingFile.ImmediateFlush = TRUE</span><br><span class=\"line\">log4j.appender.logRollingFile.Append = TRUE</span><br><span class=\"line\">log4j.appender.logRollingFile.File = $&#123;catalina.home&#125;/logs/log.log</span><br><span class=\"line\">log4j.appender.logRollingFile.MaxFileSize = <span class=\"number\">10</span>MB</span><br><span class=\"line\">log4j.appender.logRollingFile.MaxBackupIndex = <span class=\"number\">10</span></span><br><span class=\"line\">log4j.appender.logRollingFile.Encoding = UTF-<span class=\"number\">8</span></span><br><span class=\"line\">#</span><br><span class=\"line\">##按DatePattern输出到文件 </span><br><span class=\"line\">#log4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">#log4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">#log4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d&#123;yyyy/MM/dd HH:mm:ssS&#125;][%l]%n%m%n</span><br><span class=\"line\">#log4j.appender.logDailyFile.Threshold = DEBUG</span><br><span class=\"line\">#log4j.appender.logDailyFile.ImmediateFlush = TRUE</span><br><span class=\"line\">#log4j.appender.logDailyFile.Append = TRUE</span><br><span class=\"line\">#log4j.appender.logDailyFile.File = ../Struts2/WebRoot/log/DailyFile/log4j_Struts</span><br><span class=\"line\">#log4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'</span><br><span class=\"line\">#log4j.appender.logDailyFile.Encoding = UTF-8</span><br><span class=\"line\">#</span><br><span class=\"line\">##用Email发送日志 </span><br><span class=\"line\">#log4j.appender.logMail = org.apache.log4j.net.SMTPAppender</span><br><span class=\"line\">#log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout</span><br><span class=\"line\">#log4j.appender.logMail.layout.LocationInfo = TRUE</span><br><span class=\"line\">#log4j.appender.logMail.layout.Title = Struts2 Mail LogFile</span><br><span class=\"line\">#log4j.appender.logMail.Threshold = DEBUG</span><br><span class=\"line\">#log4j.appender.logMail.SMTPDebug = FALSE</span><br><span class=\"line\">#log4j.appender.logMail.SMTPHost = SMTP.163.com</span><br><span class=\"line\">#log4j.appender.logMail.From = xly3000@163.com</span><br><span class=\"line\">#log4j.appender.logMail.To = xly3000@gmail.com</span><br><span class=\"line\">##log4j.appender.logMail.Cc = xly3000@gmail.com</span><br><span class=\"line\">##log4j.appender.logMail.Bcc = xly3000@gmail.com</span><br><span class=\"line\">#log4j.appender.logMail.SMTPUsername = xly3000</span><br><span class=\"line\">#log4j.appender.logMail.SMTPPassword = 1234567</span><br><span class=\"line\">#log4j.appender.logMail.Subject = Log4j Log Messages</span><br><span class=\"line\">##log4j.appender.logMail.BufferSize = 1024</span><br><span class=\"line\">##log4j.appender.logMail.SMTPAuth = TRUE</span><br><span class=\"line\">#</span><br><span class=\"line\">##将日志登录到MySQL数据库 </span><br><span class=\"line\">#log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender</span><br><span class=\"line\">#log4j.appender.logDB.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">#log4j.appender.logDB.Driver = com.mysql.jdbc.Driver</span><br><span class=\"line\">#log4j.appender.logDB.URL = jdbc:mysql://127.0.0.1:3306/xly</span><br><span class=\"line\">#log4j.appender.logDB.User = root</span><br><span class=\"line\">#log4j.appender.logDB.Password = 123456</span><br><span class=\"line\">#log4j.appender.logDB.Sql = INSERT INTOT_log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('Struts2','%d&#123;yyyy-MM-ddHH:mm:ss&#125;','%p','%c','%F','%t','%L','%l','%m')</span><br></pre></td></tr></table></figure></p>"},{"title":"【Java】tomcat启动jvm内存设置","layout":"post","comments":1,"date":"2016-12-28T02:06:29.000Z","keywords":null,"description":null,"_content":"\n#### Linux\n在/usr/local/apache-tomcat-7.0.57/bin目录下的catalina.sh中添加：\n\n\tJAVA_OPTS='-Xms512m -Xmx1024m'\n> -Xms：初始值\n-Xmx：最大值\n-Xmn：最小值\n\n<!-- more -->\n#### Windows\n- 若使用startup.bat启动tomcat，则在C:\\apache-tomcat-7.0.57\\bin\\catalina.bat最前面加入：\n\t\tset JAVA_OPTS=-Xms512m -Xmx1024m\n\n- 而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin/tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。\n**解决办法：**\n修改注册表HKEY_LOCAL_MACHINE/SOFTWARE/Apache Software Foundation/Tomcat Service Manager/Tomcat5/Parameters/JavaOptions\n原值为\n\t\t-Dcatalina.home=\"C:/ApacheGroup/Tomcat 5.0\"\n\t\t-Djava.endorsed.dirs=\"C:/ApacheGroup/Tomcat 5.0/common/endorsed\"\n\t\t-Xrs\n在最后加入\n\t\t-Xms300m -Xmx350m  \n退出注册表，重起tomcat服务，设置生效。","source":"_posts/【Java】tomcat启动jvm内存设置.md","raw":"---\ntitle: 【Java】tomcat启动jvm内存设置\nlayout: post\ncomments: true\ndate: 2016-12-28 10:06:29\ncategories: Java\ntags: [Java, tomcat]\nkeywords:\ndescription:\n---\n\n#### Linux\n在/usr/local/apache-tomcat-7.0.57/bin目录下的catalina.sh中添加：\n\n\tJAVA_OPTS='-Xms512m -Xmx1024m'\n> -Xms：初始值\n-Xmx：最大值\n-Xmn：最小值\n\n<!-- more -->\n#### Windows\n- 若使用startup.bat启动tomcat，则在C:\\apache-tomcat-7.0.57\\bin\\catalina.bat最前面加入：\n\t\tset JAVA_OPTS=-Xms512m -Xmx1024m\n\n- 而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin/tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。\n**解决办法：**\n修改注册表HKEY_LOCAL_MACHINE/SOFTWARE/Apache Software Foundation/Tomcat Service Manager/Tomcat5/Parameters/JavaOptions\n原值为\n\t\t-Dcatalina.home=\"C:/ApacheGroup/Tomcat 5.0\"\n\t\t-Djava.endorsed.dirs=\"C:/ApacheGroup/Tomcat 5.0/common/endorsed\"\n\t\t-Xrs\n在最后加入\n\t\t-Xms300m -Xmx350m  \n退出注册表，重起tomcat服务，设置生效。","slug":"【Java】tomcat启动jvm内存设置","published":1,"updated":"2017-02-27T04:11:29.412Z","_id":"cjpuwa1ic002ds0jtc8tre2bb","photos":[],"link":"","content":"<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>在/usr/local/apache-tomcat-7.0.57/bin目录下的catalina.sh中添加：</p>\n<pre><code>JAVA_OPTS=&apos;-Xms512m -Xmx1024m&apos;\n</code></pre><blockquote>\n<p>-Xms：初始值<br>-Xmx：最大值<br>-Xmn：最小值</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><ul>\n<li><p>若使用startup.bat启动tomcat，则在C:\\apache-tomcat-7.0.57\\bin\\catalina.bat最前面加入：</p>\n<pre><code>set JAVA_OPTS=-Xms512m -Xmx1024m\n</code></pre></li>\n<li><p>而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin/tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。<br><strong>解决办法：</strong><br>修改注册表HKEY_LOCAL_MACHINE/SOFTWARE/Apache Software Foundation/Tomcat Service Manager/Tomcat5/Parameters/JavaOptions<br>原值为</p>\n<pre><code>-Dcatalina.home=&quot;C:/ApacheGroup/Tomcat 5.0&quot;\n-Djava.endorsed.dirs=&quot;C:/ApacheGroup/Tomcat 5.0/common/endorsed&quot;\n-Xrs\n</code></pre><p>在最后加入</p>\n<pre><code>-Xms300m -Xmx350m  \n</code></pre><p>退出注册表，重起tomcat服务，设置生效。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>在/usr/local/apache-tomcat-7.0.57/bin目录下的catalina.sh中添加：</p>\n<pre><code>JAVA_OPTS=&apos;-Xms512m -Xmx1024m&apos;\n</code></pre><blockquote>\n<p>-Xms：初始值<br>-Xmx：最大值<br>-Xmn：最小值</p>\n</blockquote>","more":"<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><ul>\n<li><p>若使用startup.bat启动tomcat，则在C:\\apache-tomcat-7.0.57\\bin\\catalina.bat最前面加入：</p>\n<pre><code>set JAVA_OPTS=-Xms512m -Xmx1024m\n</code></pre></li>\n<li><p>而如果利用windows的系统服务启动tomcat服务，那上面的设置就不生效了，windows服务执行的是bin/tomcat.exe。他读取注册表中的值，而不是catalina.bat的设置。<br><strong>解决办法：</strong><br>修改注册表HKEY_LOCAL_MACHINE/SOFTWARE/Apache Software Foundation/Tomcat Service Manager/Tomcat5/Parameters/JavaOptions<br>原值为</p>\n<pre><code>-Dcatalina.home=&quot;C:/ApacheGroup/Tomcat 5.0&quot;\n-Djava.endorsed.dirs=&quot;C:/ApacheGroup/Tomcat 5.0/common/endorsed&quot;\n-Xrs\n</code></pre><p>在最后加入</p>\n<pre><code>-Xms300m -Xmx350m  \n</code></pre><p>退出注册表，重起tomcat服务，设置生效。</p>\n</li>\n</ul>"},{"title":"【Java】tomcat下载和安装","layout":"post","comments":1,"date":"2016-12-28T01:49:28.000Z","keywords":null,"description":null,"_content":"### Tomcat[官网下载](https://tomcat.apache.org/)\n\n---\n\n### Tomcat安装\n\n#### 1. Windows下\n##### 1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。\n\n##### 1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：\n\n\tREM JDK安装所在的路径\n\tSET JAVA_HOME=D:\\Program Files\\Java\\jdk1.6.0_30\n\tREM 免安装的Tomcat解压后的路径\n\tSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。\n\n##### 1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。\n\n##### 1.4 修改\\conf\\tomcat-users.xml文件，在`<tomcat-users>`标签内加入\n\n\t<role rolename=\"manager\"/>\n\t<role rolename=\"admin\"/>\n\t<user username=\"admin\" password=\"admin\" roles=\"admin,manager\"/>\n这样才可以使用Tomcat的管理界面。\n\n<!-- more -->\n\n---\n\n#### 2. Linux下\n##### 2.1 下载或拷贝tomcat安装包到user目录下，然后解压\n```\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\napache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp\n[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz\napache-tomcat-7.0.65/bin/catalina.sh\napache-tomcat-7.0.65/bin/configtest.sh\napache-tomcat-7.0.65/bin/daemon.sh\n.\n.\n.\napache-tomcat-7.0.65/webapps/manager/index.jsp\napache-tomcat-7.0.65/webapps/manager/status.xsd\napache-tomcat-7.0.65/webapps/manager/xform.xsl\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\napache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# \n```\n\n##### 2.2 删除安装包，并重命名解压后的文件夹为tomcat\n```\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz \n[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\nbin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# \n```\n\n##### 2.3 启动tomcat\n执行startup.sh启动tomcat，如下表示启动成功：\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh \nUsing CATALINA_BASE:   /usr/tomcat\nUsing CATALINA_HOME:   /usr/tomcat\nUsing CATALINA_TMPDIR: /usr/tomcat/temp\nUsing JRE_HOME:        /usr/java/jdk1.7.0_80/jre\nUsing CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar\nTomcat started.\n[root@izwe12zdi799668qfxdm5oz tomcat]# \n```\n\n##### 2.4 查看log信息\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deploying web application directory /usr/tomcat/webapps/ROOT\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms\nAug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"http-bio-8080\"]\nAug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"ajp-bio-8009\"]\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start\nINFO: Server startup in 77809 ms\n```\n\n##### 2.5 防火墙开放8080端口\n打开防火墙配置文件：\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables\n```\n> 部分系统没有iptables文件，请参考[CentOS使用iptables](http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/)\n\n增加以下代码：\n\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n重启防火墙\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart\n```\n\n##### 2.6 访问tomcat\n在浏览器访问地址：http://IP:8080\n\n##### 2.7 停止tomcat\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh \nUsing CATALINA_BASE:   /usr/tomcat\nUsing CATALINA_HOME:   /usr/tomcat\nUsing CATALINA_TMPDIR: /usr/tomcat/temp\nUsing JRE_HOME:        /usr/java/jdk1.7.0_80/jre\nUsing CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar\n[root@izwe12zdi799668qfxdm5oz tomcat]# \n```\n\n---\n\n### Tomcat设置服务\n\n#### 1. Windows下\n##### 1.1 修改\\bin目录中的service.bat\n\n\t\trem 在第一个if语句的前面一行添加下面的行：\n\t\tSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n\t\trem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录\n如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：\n按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：\n\n\t\tset SERVICE_NAME=tomcat6.0\n\t\trem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。\n\n\t\tset PR_DISPLAYNAME=Apache Tomcat\n\t\trem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。\n\n\t\tset PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcat\n\t\trem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。\n\n##### 1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行`service.bat install`命令\n```\nD:\\Program Files\\tomcat6.0.35\\bin>service.bat install\nInstalling the service  'tomcat6.0' ...\nUsing CATALINA_HOME:    \"D:\\Program Files\\tomcat6.0.35\"\nUsing CATALINA_BASE:    \"D:\\Program Files\\tomcat6.0.35\"\nUsing JAVA_HOME:        \"D:\\Program Files\\Java\\jdk1.6.0_30\"\nUsing JVM:              \"D:\\Program Files\\Java\\jdk1.6.0_30\\jre\\bin\\server\\jvm.dll\"\nThe service 'tomcat6.0' has been installed.\n```\n程序提示：The service 'tomcat6.0（你修改以后的SERVICE_NAME）' has been installed说明服务Tomcat已经被安装成功。相应的，运行`service.bat remove`可以移除服务。\n\n##### 1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为\"自动\"，以后机器启动以后Tomcat就在后台启动了。\n\n---\n\n#### 2. Linux下\n##### 2.1 在~目录下，执行下面命令\n```\nvim .bash_profile\n```\n\n##### 2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：\n\t\t# .bash_profile\n\n\t\t# Get the aliases and functions\n\t\tif [ -f ~/.bashrc ]; then\n\t\t        . ~/.bashrc\n\t\tfi\n\n\t\t# User specific environment and startup programs\n\n\t\tTOMCAT_HOME=/usr/tomcat\n\t\tPATH=$PATH:$HOME/bin:$TOMCAT_HOME/bin\n\n\t\texport TOMCAT_HOME\n\t\texport PATH\n保存并退出。\n\n##### 2.3 执行下面命令，使立即生效\n```\nsource ./.bash_profile\n```\n\n##### 2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，\n```\nvim /usr/tomcat/bin/tomcat\n```\n在文件中写入如下代码，保存并退出。\n\t\t#!/bin/bash\n\t\t# /usr/tomcat/bin\n\t\t# YPN 2017-08-21 Create\n\n\t\tif [ \"$1\"x = \"start\"x ]; then\n\t\t  exec $TOMCAT_HOME/bin/startup.sh\n\t\tfi\n\t\tif [ \"$1\"x = \"stop\"x ]; then\n\t\t  exec $TOMCAT_HOME/bin/shutdown.sh\n\t\tfi\n\t\tif [ \"$1\"x = \"log\"x ]; then\n\t\t  tail -f $TOMCAT_HOME/logs/catalina.out -n 1000\n\t\tfi\n\n##### 2.5 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/tomcat/bin/tomcat\n```\n\n##### 2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志\n启动：\n```\ntomcat start\n```\n关闭：\n```\ntomcat stop\n```\n查看日志：\n```\ntomcat log\n```\n\n---\n\n### Tomcat设置开机启动（Linux）\n打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后\n```\nvim /etc/rc.d/rc.local\n```\n配置文件：\n\n\texport JAVA_HOME=/usr/java/jdk1.7.0_80\n\texport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n\texport PATH=$PATH:$JAVA_HOME/bin\n\texport CATALINA_HOME=/usr/tomcat/\n\t#tomcat自启动\n\t/usr/tomcat/bin/startup.\ntomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。","source":"_posts/【Java】tomcat下载和安装.md","raw":"---\ntitle: 【Java】tomcat下载和安装\nlayout: post\ncomments: true\ndate: 2016-12-28 09:49:28\ncategories: Java\ntags: [Java, tomcat]\nkeywords:\ndescription:\n---\n### Tomcat[官网下载](https://tomcat.apache.org/)\n\n---\n\n### Tomcat安装\n\n#### 1. Windows下\n##### 1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。\n\n##### 1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：\n\n\tREM JDK安装所在的路径\n\tSET JAVA_HOME=D:\\Program Files\\Java\\jdk1.6.0_30\n\tREM 免安装的Tomcat解压后的路径\n\tSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。\n\n##### 1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。\n\n##### 1.4 修改\\conf\\tomcat-users.xml文件，在`<tomcat-users>`标签内加入\n\n\t<role rolename=\"manager\"/>\n\t<role rolename=\"admin\"/>\n\t<user username=\"admin\" password=\"admin\" roles=\"admin,manager\"/>\n这样才可以使用Tomcat的管理界面。\n\n<!-- more -->\n\n---\n\n#### 2. Linux下\n##### 2.1 下载或拷贝tomcat安装包到user目录下，然后解压\n```\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\napache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp\n[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz\napache-tomcat-7.0.65/bin/catalina.sh\napache-tomcat-7.0.65/bin/configtest.sh\napache-tomcat-7.0.65/bin/daemon.sh\n.\n.\n.\napache-tomcat-7.0.65/webapps/manager/index.jsp\napache-tomcat-7.0.65/webapps/manager/status.xsd\napache-tomcat-7.0.65/webapps/manager/xform.xsl\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\napache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# \n```\n\n##### 2.2 删除安装包，并重命名解压后的文件夹为tomcat\n```\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz \n[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls\nbin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat\n[root@iZwe13xjwyedbm0tjgmez1Z usr]# \n```\n\n##### 2.3 启动tomcat\n执行startup.sh启动tomcat，如下表示启动成功：\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh \nUsing CATALINA_BASE:   /usr/tomcat\nUsing CATALINA_HOME:   /usr/tomcat\nUsing CATALINA_TMPDIR: /usr/tomcat/temp\nUsing JRE_HOME:        /usr/java/jdk1.7.0_80/jre\nUsing CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar\nTomcat started.\n[root@izwe12zdi799668qfxdm5oz tomcat]# \n```\n\n##### 2.4 查看log信息\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deploying web application directory /usr/tomcat/webapps/ROOT\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms\nAug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"http-bio-8080\"]\nAug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"ajp-bio-8009\"]\nAug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start\nINFO: Server startup in 77809 ms\n```\n\n##### 2.5 防火墙开放8080端口\n打开防火墙配置文件：\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables\n```\n> 部分系统没有iptables文件，请参考[CentOS使用iptables](http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/)\n\n增加以下代码：\n\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n重启防火墙\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart\n```\n\n##### 2.6 访问tomcat\n在浏览器访问地址：http://IP:8080\n\n##### 2.7 停止tomcat\n```\n[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh \nUsing CATALINA_BASE:   /usr/tomcat\nUsing CATALINA_HOME:   /usr/tomcat\nUsing CATALINA_TMPDIR: /usr/tomcat/temp\nUsing JRE_HOME:        /usr/java/jdk1.7.0_80/jre\nUsing CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar\n[root@izwe12zdi799668qfxdm5oz tomcat]# \n```\n\n---\n\n### Tomcat设置服务\n\n#### 1. Windows下\n##### 1.1 修改\\bin目录中的service.bat\n\n\t\trem 在第一个if语句的前面一行添加下面的行：\n\t\tSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n\t\trem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录\n如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：\n按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：\n\n\t\tset SERVICE_NAME=tomcat6.0\n\t\trem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。\n\n\t\tset PR_DISPLAYNAME=Apache Tomcat\n\t\trem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。\n\n\t\tset PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcat\n\t\trem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。\n\n##### 1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行`service.bat install`命令\n```\nD:\\Program Files\\tomcat6.0.35\\bin>service.bat install\nInstalling the service  'tomcat6.0' ...\nUsing CATALINA_HOME:    \"D:\\Program Files\\tomcat6.0.35\"\nUsing CATALINA_BASE:    \"D:\\Program Files\\tomcat6.0.35\"\nUsing JAVA_HOME:        \"D:\\Program Files\\Java\\jdk1.6.0_30\"\nUsing JVM:              \"D:\\Program Files\\Java\\jdk1.6.0_30\\jre\\bin\\server\\jvm.dll\"\nThe service 'tomcat6.0' has been installed.\n```\n程序提示：The service 'tomcat6.0（你修改以后的SERVICE_NAME）' has been installed说明服务Tomcat已经被安装成功。相应的，运行`service.bat remove`可以移除服务。\n\n##### 1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为\"自动\"，以后机器启动以后Tomcat就在后台启动了。\n\n---\n\n#### 2. Linux下\n##### 2.1 在~目录下，执行下面命令\n```\nvim .bash_profile\n```\n\n##### 2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：\n\t\t# .bash_profile\n\n\t\t# Get the aliases and functions\n\t\tif [ -f ~/.bashrc ]; then\n\t\t        . ~/.bashrc\n\t\tfi\n\n\t\t# User specific environment and startup programs\n\n\t\tTOMCAT_HOME=/usr/tomcat\n\t\tPATH=$PATH:$HOME/bin:$TOMCAT_HOME/bin\n\n\t\texport TOMCAT_HOME\n\t\texport PATH\n保存并退出。\n\n##### 2.3 执行下面命令，使立即生效\n```\nsource ./.bash_profile\n```\n\n##### 2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，\n```\nvim /usr/tomcat/bin/tomcat\n```\n在文件中写入如下代码，保存并退出。\n\t\t#!/bin/bash\n\t\t# /usr/tomcat/bin\n\t\t# YPN 2017-08-21 Create\n\n\t\tif [ \"$1\"x = \"start\"x ]; then\n\t\t  exec $TOMCAT_HOME/bin/startup.sh\n\t\tfi\n\t\tif [ \"$1\"x = \"stop\"x ]; then\n\t\t  exec $TOMCAT_HOME/bin/shutdown.sh\n\t\tfi\n\t\tif [ \"$1\"x = \"log\"x ]; then\n\t\t  tail -f $TOMCAT_HOME/logs/catalina.out -n 1000\n\t\tfi\n\n##### 2.5 给文件添加权限，使脚本文件可以执行，命令为\n```\nchmod 755 /usr/tomcat/bin/tomcat\n```\n\n##### 2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志\n启动：\n```\ntomcat start\n```\n关闭：\n```\ntomcat stop\n```\n查看日志：\n```\ntomcat log\n```\n\n---\n\n### Tomcat设置开机启动（Linux）\n打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后\n```\nvim /etc/rc.d/rc.local\n```\n配置文件：\n\n\texport JAVA_HOME=/usr/java/jdk1.7.0_80\n\texport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n\texport PATH=$PATH:$JAVA_HOME/bin\n\texport CATALINA_HOME=/usr/tomcat/\n\t#tomcat自启动\n\t/usr/tomcat/bin/startup.\ntomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。","slug":"【Java】tomcat下载和安装","published":1,"updated":"2017-08-21T02:45:39.731Z","_id":"cjpuwa1if002fs0jtm7zstin0","photos":[],"link":"","content":"<h3 id=\"Tomcat官网下载\"><a href=\"#Tomcat官网下载\" class=\"headerlink\" title=\"Tomcat官网下载\"></a>Tomcat<a href=\"https://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3><hr>\n<h3 id=\"Tomcat安装\"><a href=\"#Tomcat安装\" class=\"headerlink\" title=\"Tomcat安装\"></a>Tomcat安装</h3><h4 id=\"1-Windows下\"><a href=\"#1-Windows下\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。\"><a href=\"#1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。\" class=\"headerlink\" title=\"1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。\"></a>1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。</h5><h5 id=\"1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：\"><a href=\"#1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：\" class=\"headerlink\" title=\"1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：\"></a>1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：</h5><pre><code>REM JDK安装所在的路径\nSET JAVA_HOME=D:\\Program Files\\Java\\jdk1.6.0_30\nREM 免安装的Tomcat解压后的路径\nSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n</code></pre><p>如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。</p>\n<h5 id=\"1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。\"><a href=\"#1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。\" class=\"headerlink\" title=\"1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。\"></a>1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。</h5><h5 id=\"1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入\"><a href=\"#1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入\" class=\"headerlink\" title=\"1.4 修改\\conf\\tomcat-users.xml文件，在&lt;tomcat-users&gt;标签内加入\"></a>1.4 修改\\conf\\tomcat-users.xml文件，在<code>&lt;tomcat-users&gt;</code>标签内加入</h5><pre><code>&lt;role rolename=&quot;manager&quot;/&gt;\n&lt;role rolename=&quot;admin&quot;/&gt;\n&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,manager&quot;/&gt;\n</code></pre><p>这样才可以使用Tomcat的管理界面。</p>\n<a id=\"more\"></a>\n<hr>\n<h4 id=\"2-Linux下\"><a href=\"#2-Linux下\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-下载或拷贝tomcat安装包到user目录下，然后解压\"><a href=\"#2-1-下载或拷贝tomcat安装包到user目录下，然后解压\" class=\"headerlink\" title=\"2.1 下载或拷贝tomcat安装包到user目录下，然后解压\"></a>2.1 下载或拷贝tomcat安装包到user目录下，然后解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/catalina.sh</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/configtest.sh</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/daemon.sh</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/index.jsp</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/status.xsd</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/xform.xsl</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">apache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-删除安装包，并重命名解压后的文件夹为tomcat\"><a href=\"#2-2-删除安装包，并重命名解压后的文件夹为tomcat\" class=\"headerlink\" title=\"2.2 删除安装包，并重命名解压后的文件夹为tomcat\"></a>2.2 删除安装包，并重命名解压后的文件夹为tomcat</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz </span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-3-启动tomcat\"><a href=\"#2-3-启动tomcat\" class=\"headerlink\" title=\"2.3 启动tomcat\"></a>2.3 启动tomcat</h5><p>执行startup.sh启动tomcat，如下表示启动成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh </span><br><span class=\"line\">Using CATALINA_BASE:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class=\"line\">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">Tomcat started.</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-4-查看log信息\"><a href=\"#2-4-查看log信息\" class=\"headerlink\" title=\"2.4 查看log信息\"></a>2.4 查看log信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class=\"line\">INFO: Deploying web application directory /usr/tomcat/webapps/ROOT</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class=\"line\">INFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class=\"line\">INFO: Starting ProtocolHandler [&quot;http-bio-8080&quot;]</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class=\"line\">INFO: Starting ProtocolHandler [&quot;ajp-bio-8009&quot;]</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start</span><br><span class=\"line\">INFO: Server startup in 77809 ms</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-5-防火墙开放8080端口\"><a href=\"#2-5-防火墙开放8080端口\" class=\"headerlink\" title=\"2.5 防火墙开放8080端口\"></a>2.5 防火墙开放8080端口</h5><p>打开防火墙配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>部分系统没有iptables文件，请参考<a href=\"http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/\" target=\"_blank\" rel=\"noopener\">CentOS使用iptables</a></p>\n</blockquote>\n<p>增加以下代码：</p>\n<pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n</code></pre><p>重启防火墙<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-6-访问tomcat\"><a href=\"#2-6-访问tomcat\" class=\"headerlink\" title=\"2.6 访问tomcat\"></a>2.6 访问tomcat</h5><p>在浏览器访问地址：<a href=\"http://IP:8080\" target=\"_blank\" rel=\"noopener\">http://IP:8080</a></p>\n<h5 id=\"2-7-停止tomcat\"><a href=\"#2-7-停止tomcat\" class=\"headerlink\" title=\"2.7 停止tomcat\"></a>2.7 停止tomcat</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh </span><br><span class=\"line\">Using CATALINA_BASE:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class=\"line\">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Tomcat设置服务\"><a href=\"#Tomcat设置服务\" class=\"headerlink\" title=\"Tomcat设置服务\"></a>Tomcat设置服务</h3><h4 id=\"1-Windows下-1\"><a href=\"#1-Windows下-1\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-修改-bin目录中的service-bat\"><a href=\"#1-1-修改-bin目录中的service-bat\" class=\"headerlink\" title=\"1.1 修改\\bin目录中的service.bat\"></a>1.1 修改\\bin目录中的service.bat</h5><pre><code>rem 在第一个if语句的前面一行添加下面的行：\nSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\nrem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录\n</code></pre><p>如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：<br>按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：</p>\n<pre><code>set SERVICE_NAME=tomcat6.0\nrem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。\n\nset PR_DISPLAYNAME=Apache Tomcat\nrem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。\n\nset PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcat\nrem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。\n</code></pre><h5 id=\"1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令\"><a href=\"#1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令\" class=\"headerlink\" title=\"1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行service.bat install命令\"></a>1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行<code>service.bat install</code>命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Program Files\\tomcat6.0.35\\bin&gt;service.bat install</span><br><span class=\"line\">Installing the service  &apos;tomcat6.0&apos; ...</span><br><span class=\"line\">Using CATALINA_HOME:    &quot;D:\\Program Files\\tomcat6.0.35&quot;</span><br><span class=\"line\">Using CATALINA_BASE:    &quot;D:\\Program Files\\tomcat6.0.35&quot;</span><br><span class=\"line\">Using JAVA_HOME:        &quot;D:\\Program Files\\Java\\jdk1.6.0_30&quot;</span><br><span class=\"line\">Using JVM:              &quot;D:\\Program Files\\Java\\jdk1.6.0_30\\jre\\bin\\server\\jvm.dll&quot;</span><br><span class=\"line\">The service &apos;tomcat6.0&apos; has been installed.</span><br></pre></td></tr></table></figure>\n<p>程序提示：The service ‘tomcat6.0（你修改以后的SERVICE_NAME）’ has been installed说明服务Tomcat已经被安装成功。相应的，运行<code>service.bat remove</code>可以移除服务。</p>\n<h5 id=\"1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\"><a href=\"#1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\" class=\"headerlink\" title=\"1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\"></a>1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。</h5><hr>\n<h4 id=\"2-Linux下-1\"><a href=\"#2-Linux下-1\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-在-目录下，执行下面命令\"><a href=\"#2-1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"2.1 在~目录下，执行下面命令\"></a>2.1 在~目录下，执行下面命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：</h5><pre><code># .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nTOMCAT_HOME=/usr/tomcat\nPATH=$PATH:$HOME/bin:$TOMCAT_HOME/bin\n\nexport TOMCAT_HOME\nexport PATH\n</code></pre><p>保存并退出。</p>\n<h5 id=\"2-3-执行下面命令，使立即生效\"><a href=\"#2-3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"2.3 执行下面命令，使立即生效\"></a>2.3 执行下面命令，使立即生效</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ./.bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，\"><a href=\"#2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，\" class=\"headerlink\" title=\"2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，\"></a>2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/tomcat/bin\n# YPN 2017-08-21 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  exec $TOMCAT_HOME/bin/startup.sh\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  exec $TOMCAT_HOME/bin/shutdown.sh\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f $TOMCAT_HOME/logs/catalina.out -n 1000\nfi\n</code></pre><h5 id=\"2-5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#2-5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"2.5 给文件添加权限，使脚本文件可以执行，命令为\"></a>2.5 给文件添加权限，使脚本文件可以执行，命令为</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志\"><a href=\"#2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志\" class=\"headerlink\" title=\"2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志\"></a>2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志</h5><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat log</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"Tomcat设置开机启动（Linux）\"><a href=\"#Tomcat设置开机启动（Linux）\" class=\"headerlink\" title=\"Tomcat设置开机启动（Linux）\"></a>Tomcat设置开机启动（Linux）</h3><p>打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p>\n<p>配置文件：</p>\n<pre><code>export JAVA_HOME=/usr/java/jdk1.7.0_80\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\nexport CATALINA_HOME=/usr/tomcat/\n#tomcat自启动\n/usr/tomcat/bin/startup.\n</code></pre><p>tomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"Tomcat官网下载\"><a href=\"#Tomcat官网下载\" class=\"headerlink\" title=\"Tomcat官网下载\"></a>Tomcat<a href=\"https://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">官网下载</a></h3><hr>\n<h3 id=\"Tomcat安装\"><a href=\"#Tomcat安装\" class=\"headerlink\" title=\"Tomcat安装\"></a>Tomcat安装</h3><h4 id=\"1-Windows下\"><a href=\"#1-Windows下\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。\"><a href=\"#1-1-将下载的apache-tomcat-6-0-35-windows-x86-zip压缩包解压。\" class=\"headerlink\" title=\"1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。\"></a>1.1 将下载的apache-tomcat-6.0.35-windows-x86.zip压缩包解压。</h5><h5 id=\"1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：\"><a href=\"#1-2-修改-bin-startup-bat文件，在第一行前面加入以下内容：\" class=\"headerlink\" title=\"1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：\"></a>1.2 修改\\bin\\startup.bat文件，在第一行前面加入以下内容：</h5><pre><code>REM JDK安装所在的路径\nSET JAVA_HOME=D:\\Program Files\\Java\\jdk1.6.0_30\nREM 免安装的Tomcat解压后的路径\nSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\n</code></pre><p>如果需要使用shutdown.bat关闭服务器的话，也按照上面加入。</p>\n<h5 id=\"1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。\"><a href=\"#1-3-这样，运行startup-bat就可以启动Tomcat，运行shutdown-bat就可以关闭服务器了。\" class=\"headerlink\" title=\"1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。\"></a>1.3 这样，运行startup.bat就可以启动Tomcat，运行shutdown.bat就可以关闭服务器了。</h5><h5 id=\"1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入\"><a href=\"#1-4-修改-conf-tomcat-users-xml文件，在-lt-tomcat-users-gt-标签内加入\" class=\"headerlink\" title=\"1.4 修改\\conf\\tomcat-users.xml文件，在&lt;tomcat-users&gt;标签内加入\"></a>1.4 修改\\conf\\tomcat-users.xml文件，在<code>&lt;tomcat-users&gt;</code>标签内加入</h5><pre><code>&lt;role rolename=&quot;manager&quot;/&gt;\n&lt;role rolename=&quot;admin&quot;/&gt;\n&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,manager&quot;/&gt;\n</code></pre><p>这样才可以使用Tomcat的管理界面。</p>","more":"<hr>\n<h4 id=\"2-Linux下\"><a href=\"#2-Linux下\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-下载或拷贝tomcat安装包到user目录下，然后解压\"><a href=\"#2-1-下载或拷贝tomcat安装包到user目录下，然后解压\" class=\"headerlink\" title=\"2.1 下载或拷贝tomcat安装包到user目录下，然后解压\"></a>2.1 下载或拷贝tomcat安装包到user目录下，然后解压</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#  tar -zxvf apache-tomcat-7.0.65.tar.gz</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/catalina.sh</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/configtest.sh</span><br><span class=\"line\">apache-tomcat-7.0.65/bin/daemon.sh</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/index.jsp</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/status.xsd</span><br><span class=\"line\">apache-tomcat-7.0.65/webapps/manager/xform.xsl</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">apache-tomcat-7.0.65  apache-tomcat-7.0.65.tar.gz  bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-删除安装包，并重命名解压后的文件夹为tomcat\"><a href=\"#2-2-删除安装包，并重命名解压后的文件夹为tomcat\" class=\"headerlink\" title=\"2.2 删除安装包，并重命名解压后的文件夹为tomcat\"></a>2.2 删除安装包，并重命名解压后的文件夹为tomcat</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# rm -fr apache-tomcat-7.0.65.tar.gz </span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# mv apache-tomcat-7.0.65/ tomcat</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]# ls</span><br><span class=\"line\">bin  etc  games  include  java  lib  lib64  libexec  local  sbin  share  src  tmp  tomcat</span><br><span class=\"line\">[root@iZwe13xjwyedbm0tjgmez1Z usr]#</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-3-启动tomcat\"><a href=\"#2-3-启动tomcat\" class=\"headerlink\" title=\"2.3 启动tomcat\"></a>2.3 启动tomcat</h5><p>执行startup.sh启动tomcat，如下表示启动成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/startup.sh </span><br><span class=\"line\">Using CATALINA_BASE:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class=\"line\">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">Tomcat started.</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-4-查看log信息\"><a href=\"#2-4-查看log信息\" class=\"headerlink\" title=\"2.4 查看log信息\"></a>2.4 查看log信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# tail -f logs/catalina.out</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class=\"line\">INFO: Deploying web application directory /usr/tomcat/webapps/ROOT</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.HostConfig deployDirectory</span><br><span class=\"line\">INFO: Deployment of web application directory /usr/tomcat/webapps/ROOT has finished in 39 ms</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class=\"line\">INFO: Starting ProtocolHandler [&quot;http-bio-8080&quot;]</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.coyote.AbstractProtocol start</span><br><span class=\"line\">INFO: Starting ProtocolHandler [&quot;ajp-bio-8009&quot;]</span><br><span class=\"line\">Aug 11, 2017 12:29:19 PM org.apache.catalina.startup.Catalina start</span><br><span class=\"line\">INFO: Server startup in 77809 ms</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-5-防火墙开放8080端口\"><a href=\"#2-5-防火墙开放8080端口\" class=\"headerlink\" title=\"2.5 防火墙开放8080端口\"></a>2.5 防火墙开放8080端口</h5><p>打开防火墙配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>部分系统没有iptables文件，请参考<a href=\"http://yangpiena.coding.me/2017/08/11/%E3%80%90Linux%E3%80%91CentOS%E4%BD%BF%E7%94%A8iptables/\" target=\"_blank\" rel=\"noopener\">CentOS使用iptables</a></p>\n</blockquote>\n<p>增加以下代码：</p>\n<pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n</code></pre><p>重启防火墙<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# service iptables restart</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-6-访问tomcat\"><a href=\"#2-6-访问tomcat\" class=\"headerlink\" title=\"2.6 访问tomcat\"></a>2.6 访问tomcat</h5><p>在浏览器访问地址：<a href=\"http://IP:8080\" target=\"_blank\" rel=\"noopener\">http://IP:8080</a></p>\n<h5 id=\"2-7-停止tomcat\"><a href=\"#2-7-停止tomcat\" class=\"headerlink\" title=\"2.7 停止tomcat\"></a>2.7 停止tomcat</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]# bin/shutdown.sh </span><br><span class=\"line\">Using CATALINA_BASE:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/java/jdk1.7.0_80/jre</span><br><span class=\"line\">Using CLASSPATH:       /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">[root@izwe12zdi799668qfxdm5oz tomcat]#</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Tomcat设置服务\"><a href=\"#Tomcat设置服务\" class=\"headerlink\" title=\"Tomcat设置服务\"></a>Tomcat设置服务</h3><h4 id=\"1-Windows下-1\"><a href=\"#1-Windows下-1\" class=\"headerlink\" title=\"1. Windows下\"></a>1. Windows下</h4><h5 id=\"1-1-修改-bin目录中的service-bat\"><a href=\"#1-1-修改-bin目录中的service-bat\" class=\"headerlink\" title=\"1.1 修改\\bin目录中的service.bat\"></a>1.1 修改\\bin目录中的service.bat</h5><pre><code>rem 在第一个if语句的前面一行添加下面的行：\nSET CATALINA_HOME=D:\\Program Files\\tomcat6.0.35\nrem 上面这一行是设置CATALINA_HOME变量指到解压后的Tomcat目录\n</code></pre><p>如果从来没有安装过Tomcat，或者保证Services.msc启动服务管理器检查没有Apache Tomcat系统服务，到此你就可以转到第2步了。否则继续往下走：<br>按照下面的描述修改下面的相应的几行，每行下面都附有文字说明设置的作用：</p>\n<pre><code>set SERVICE_NAME=tomcat6.0\nrem 上面一行，将tomcat6.0修改成你需要的服务名，这个将是以后使用net start/stop来操作的服务名称。\n\nset PR_DISPLAYNAME=Apache Tomcat\nrem 上面一行，Apache Tomcat改为你需要显示的服务名，这个将显示在服务管理器中。\n\nset PR_DESCRIPTION=Apache Tomcat Server - http://jakarta.apache.org/tomcat\nrem 这一行改不改无所谓，是服务的描述，根据自己的喜好决定吧。\n</code></pre><h5 id=\"1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令\"><a href=\"#1-2-运行cmd打开控制台，进入解压后的Tomat的-bin目录下，运行service-bat-install命令\" class=\"headerlink\" title=\"1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行service.bat install命令\"></a>1.2 运行cmd打开控制台，进入解压后的Tomat的/bin目录下，运行<code>service.bat install</code>命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Program Files\\tomcat6.0.35\\bin&gt;service.bat install</span><br><span class=\"line\">Installing the service  &apos;tomcat6.0&apos; ...</span><br><span class=\"line\">Using CATALINA_HOME:    &quot;D:\\Program Files\\tomcat6.0.35&quot;</span><br><span class=\"line\">Using CATALINA_BASE:    &quot;D:\\Program Files\\tomcat6.0.35&quot;</span><br><span class=\"line\">Using JAVA_HOME:        &quot;D:\\Program Files\\Java\\jdk1.6.0_30&quot;</span><br><span class=\"line\">Using JVM:              &quot;D:\\Program Files\\Java\\jdk1.6.0_30\\jre\\bin\\server\\jvm.dll&quot;</span><br><span class=\"line\">The service &apos;tomcat6.0&apos; has been installed.</span><br></pre></td></tr></table></figure>\n<p>程序提示：The service ‘tomcat6.0（你修改以后的SERVICE_NAME）’ has been installed说明服务Tomcat已经被安装成功。相应的，运行<code>service.bat remove</code>可以移除服务。</p>\n<h5 id=\"1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\"><a href=\"#1-3-到这里，服务添加成功，运行services-msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\" class=\"headerlink\" title=\"1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。\"></a>1.3 到这里，服务添加成功，运行services.msc，可以看到添加的服务，默认状态下该服务是手动运行的，在它的属性中，将启动类型更改为”自动”，以后机器启动以后Tomcat就在后台启动了。</h5><hr>\n<h4 id=\"2-Linux下-1\"><a href=\"#2-Linux下-1\" class=\"headerlink\" title=\"2. Linux下\"></a>2. Linux下</h4><h5 id=\"2-1-在-目录下，执行下面命令\"><a href=\"#2-1-在-目录下，执行下面命令\" class=\"headerlink\" title=\"2.1 在~目录下，执行下面命令\"></a>2.1 在~目录下，执行下面命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：\"><a href=\"#2-2-在-bash-profile文件中定义TOMCAT-HOME变量，并将变量追加到PATH后面，效果如下：\" class=\"headerlink\" title=\"2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：\"></a>2.2 在.bash_profile文件中定义TOMCAT_HOME变量，并将变量追加到PATH后面，效果如下：</h5><pre><code># .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nTOMCAT_HOME=/usr/tomcat\nPATH=$PATH:$HOME/bin:$TOMCAT_HOME/bin\n\nexport TOMCAT_HOME\nexport PATH\n</code></pre><p>保存并退出。</p>\n<h5 id=\"2-3-执行下面命令，使立即生效\"><a href=\"#2-3-执行下面命令，使立即生效\" class=\"headerlink\" title=\"2.3 执行下面命令，使立即生效\"></a>2.3 执行下面命令，使立即生效</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ./.bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，\"><a href=\"#2-4-执行下面命令，在tomcat的bin目录下创建脚本文件，\" class=\"headerlink\" title=\"2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，\"></a>2.4 执行下面命令，在tomcat的bin目录下创建脚本文件，</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure>\n<p>在文件中写入如下代码，保存并退出。</p>\n<pre><code>#!/bin/bash\n# /usr/tomcat/bin\n# YPN 2017-08-21 Create\n\nif [ &quot;$1&quot;x = &quot;start&quot;x ]; then\n  exec $TOMCAT_HOME/bin/startup.sh\nfi\nif [ &quot;$1&quot;x = &quot;stop&quot;x ]; then\n  exec $TOMCAT_HOME/bin/shutdown.sh\nfi\nif [ &quot;$1&quot;x = &quot;log&quot;x ]; then\n  tail -f $TOMCAT_HOME/logs/catalina.out -n 1000\nfi\n</code></pre><h5 id=\"2-5-给文件添加权限，使脚本文件可以执行，命令为\"><a href=\"#2-5-给文件添加权限，使脚本文件可以执行，命令为\" class=\"headerlink\" title=\"2.5 给文件添加权限，使脚本文件可以执行，命令为\"></a>2.5 给文件添加权限，使脚本文件可以执行，命令为</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/tomcat/bin/tomcat</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志\"><a href=\"#2-6-最后，执行下面命令可启动、关闭tomcat，或查看日志\" class=\"headerlink\" title=\"2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志\"></a>2.6 最后，执行下面命令可启动、关闭tomcat，或查看日志</h5><p>启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat start</span><br></pre></td></tr></table></figure></p>\n<p>关闭：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat stop</span><br></pre></td></tr></table></figure></p>\n<p>查看日志：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tomcat log</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"Tomcat设置开机启动（Linux）\"><a href=\"#Tomcat设置开机启动（Linux）\" class=\"headerlink\" title=\"Tomcat设置开机启动（Linux）\"></a>Tomcat设置开机启动（Linux）</h3><p>打开linux设置开启启动的文件，将下面的配置文件写入此文件的最后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p>\n<p>配置文件：</p>\n<pre><code>export JAVA_HOME=/usr/java/jdk1.7.0_80\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\nexport CATALINA_HOME=/usr/tomcat/\n#tomcat自启动\n/usr/tomcat/bin/startup.\n</code></pre><p>tomcat依赖于java的jdk，所以设置的时将jdk也同步导入。至此配置完成。</p>"},{"title":"【Java】tomcat部署项目访问不加项目名设置","layout":"post","comments":1,"date":"2017-08-17T02:19:48.000Z","keywords":null,"description":null,"_content":"1. 打开conf目录下server.xml；\n\n2. 在Host内添加如下Context，其中docBase改为自己的项目路径即可。\n\t\t<Context path=\"\" docBase=\"/usr/tomcat/webapps/xxExpert\" reloadable=\"false\" />\n<!--more-->\n\n3. 添加后效果如下：\n\t\t<Host name=\"localhost\"  appBase=\"webapps\"\n\t\t    unpackWARs=\"true\" autoDeploy=\"true\">\n\n\t\t\t<!-- SingleSignOn valve, share authentication between web applications\n\t\t\t     Documentation at: /docs/config/valve.html -->\n\t\t\t<!--\n\t\t\t<Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" />\n\t\t\t-->\n\n\t\t\t<!-- Access log processes all example.\n\t\t\t     Documentation at: /docs/config/valve.html\n\t\t\t     Note: The pattern used is equivalent to using pattern=\"common\" -->\n\t\t\t<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n\t\t\t       prefix=\"localhost_access_log.\" suffix=\".txt\"\n\t\t\t       pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n\t\t\t<Context path=\"\" docBase=\"/usr/tomcat/webapps/xxExpert\" reloadable=\"false\" />\n\n\t\t</Host>","source":"_posts/【Java】tomcat部署项目访问不加项目名设置.md","raw":"---\ntitle: 【Java】tomcat部署项目访问不加项目名设置\nlayout: post\ncomments: true\ndate: 2017-08-17 10:19:48\ncategories: Java\ntags: [Java, tomcat]\nkeywords:\ndescription:\n---\n1. 打开conf目录下server.xml；\n\n2. 在Host内添加如下Context，其中docBase改为自己的项目路径即可。\n\t\t<Context path=\"\" docBase=\"/usr/tomcat/webapps/xxExpert\" reloadable=\"false\" />\n<!--more-->\n\n3. 添加后效果如下：\n\t\t<Host name=\"localhost\"  appBase=\"webapps\"\n\t\t    unpackWARs=\"true\" autoDeploy=\"true\">\n\n\t\t\t<!-- SingleSignOn valve, share authentication between web applications\n\t\t\t     Documentation at: /docs/config/valve.html -->\n\t\t\t<!--\n\t\t\t<Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" />\n\t\t\t-->\n\n\t\t\t<!-- Access log processes all example.\n\t\t\t     Documentation at: /docs/config/valve.html\n\t\t\t     Note: The pattern used is equivalent to using pattern=\"common\" -->\n\t\t\t<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\n\t\t\t       prefix=\"localhost_access_log.\" suffix=\".txt\"\n\t\t\t       pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n\n\t\t\t<Context path=\"\" docBase=\"/usr/tomcat/webapps/xxExpert\" reloadable=\"false\" />\n\n\t\t</Host>","slug":"【Java】tomcat部署项目访问不加项目名设置","published":1,"updated":"2017-08-17T02:30:37.089Z","_id":"cjpuwa1ij002ks0jt684rhs43","photos":[],"link":"","content":"<ol>\n<li><p>打开conf目录下server.xml；</p>\n</li>\n<li><p>在Host内添加如下Context，其中docBase改为自己的项目路径即可。</p>\n<pre><code>&lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;\n</code></pre><a id=\"more\"></a>\n</li>\n<li><p>添加后效果如下：</p>\n<pre><code>&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;\n    unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;\n\n    &lt;!-- SingleSignOn valve, share authentication between web applications\n         Documentation at: /docs/config/valve.html --&gt;\n    &lt;!--\n    &lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&gt;\n    --&gt;\n\n    &lt;!-- Access log processes all example.\n         Documentation at: /docs/config/valve.html\n         Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;\n    &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;\n           prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;\n           pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;\n\n    &lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;\n\n&lt;/Host&gt;\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"<ol>\n<li><p>打开conf目录下server.xml；</p>\n</li>\n<li><p>在Host内添加如下Context，其中docBase改为自己的项目路径即可。</p>\n<pre><code>&lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;\n</code></pre>","more":"</li>\n<li><p>添加后效果如下：</p>\n<pre><code>&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;\n    unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;\n\n    &lt;!-- SingleSignOn valve, share authentication between web applications\n         Documentation at: /docs/config/valve.html --&gt;\n    &lt;!--\n    &lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&gt;\n    --&gt;\n\n    &lt;!-- Access log processes all example.\n         Documentation at: /docs/config/valve.html\n         Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;\n    &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;\n           prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;\n           pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;\n\n    &lt;Context path=&quot;&quot; docBase=&quot;/usr/tomcat/webapps/xxExpert&quot; reloadable=&quot;false&quot; /&gt;\n\n&lt;/Host&gt;\n</code></pre></li>\n</ol>"},{"title":"【Kettle】使用命令行来运行数据库job","layout":"post","comments":1,"date":"2016-12-28T02:48:13.000Z","keywords":null,"description":null,"_content":"\n当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：\n\n\td:\n\tcd d:\\data-integration\n\tkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\\KettleLog\\kettlelog.log\n\tpause\n<!-- more -->\n> 其中，“d:\\data-integration”表示kitchen命令所在路径；\n\t\t/rep 后跟资源库名称\n\t\t/dir 后跟job所在目录名称，如实际路径为：/taby/tabyToXX_Job\n\t\t/user 后跟用户名\n\t\t/pass 后跟密码\n\t\t/job 后跟job名称\n\t\t/level 后跟日志等级\n\t\t/logfile 后跟日志文件\n","source":"_posts/【Kettle】使用命令行来运行数据库job.md","raw":"---\ntitle: 【Kettle】使用命令行来运行数据库job\nlayout: post\ncomments: true\ndate: 2016-12-28 10:48:13\ncategories: Kettle\ntags: [Kettle, job]\nkeywords:\ndescription:\n---\n\n当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：\n\n\td:\n\tcd d:\\data-integration\n\tkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\\KettleLog\\kettlelog.log\n\tpause\n<!-- more -->\n> 其中，“d:\\data-integration”表示kitchen命令所在路径；\n\t\t/rep 后跟资源库名称\n\t\t/dir 后跟job所在目录名称，如实际路径为：/taby/tabyToXX_Job\n\t\t/user 后跟用户名\n\t\t/pass 后跟密码\n\t\t/job 后跟job名称\n\t\t/level 后跟日志等级\n\t\t/logfile 后跟日志文件\n","slug":"【Kettle】使用命令行来运行数据库job","published":1,"updated":"2017-02-27T04:12:04.580Z","_id":"cjpuwa1il002ls0jtfl7xkyni","photos":[],"link":"","content":"<p>当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：</p>\n<pre><code>d:\ncd d:\\data-integration\nkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\\KettleLog\\kettlelog.log\npause\n</code></pre><a id=\"more\"></a>\n<blockquote>\n<p>其中，“d:\\data-integration”表示kitchen命令所在路径；<br>        /rep 后跟资源库名称<br>        /dir 后跟job所在目录名称，如实际路径为：/taby/tabyToXX_Job<br>        /user 后跟用户名<br>        /pass 后跟密码<br>        /job 后跟job名称<br>        /level 后跟日志等级<br>        /logfile 后跟日志文件</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>当您的Job是在数据库中存储，并需要通过命令行（.bat）方式运行时，如下编辑.bat文件即可：</p>\n<pre><code>d:\ncd d:\\data-integration\nkitchen /rep xxKettle /dir taby /user admin /pass admin /job tabyToXX_Job /level basic /logfile D:\\KettleLog\\kettlelog.log\npause\n</code></pre>","more":"<blockquote>\n<p>其中，“d:\\data-integration”表示kitchen命令所在路径；<br>        /rep 后跟资源库名称<br>        /dir 后跟job所在目录名称，如实际路径为：/taby/tabyToXX_Job<br>        /user 后跟用户名<br>        /pass 后跟密码<br>        /job 后跟job名称<br>        /level 后跟日志等级<br>        /logfile 后跟日志文件</p>\n</blockquote>"},{"title":"【Linux】CentOS使用iptables","layout":"post","comments":1,"date":"2017-08-11T06:35:35.000Z","keywords":null,"description":null,"_content":"### CentOS 6.x\n##### 1. 任意运行一条iptables防火墙规则配置命令\n```\niptables -P OUTPUT ACCEPT\n```\n##### 2. 对iptables服务进行保存\n```\nservice iptables save\n```\n##### 3. 重启iptables服务\n```\nservice iptables restart\n```\n<!--more-->\n\n---\n\n### CentOS 7.x\n##### 1. 关闭firewall\n停止firewall服务：\n```\nsystemctl stop firewalld.service\n```\n禁止firewall开机启动：\n```\nsystemctl disable firewalld.service\n```\n\n##### 2. 安装iptables防火墙\n执行yum命令安装：\n```\nyum install iptables-services\n```\n编辑防火墙配置文件：\n```\nvi /etc/sysconfig/iptables\n```\n在配置文件中加入以下内容后，保存并退出：\n\n\t# sample configuration for iptables service\n\t# you can edit this manually or use system-config-firewall\n\t# please do not ask us to add additional ports/services to this default configuration\n\t*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n\t-A INPUT -p icmp -j ACCEPT\n\t-A INPUT -i lo -j ACCEPT\n\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n\n\t-A INPUT -j REJECT --reject-with icmp-host-prohibited\n\t-A FORWARD -j REJECT --reject-with icmp-host-prohibited\n\tCOMMIT\n最后重启防火墙使配置生效\n```\nsystemctl restart iptables.service\n```\n\n##### 3. 设置防火墙开机启动\n```\nsystemctl enable iptables.service\n```\n\n##### 4. 关闭SELinux\n编辑SELinux的配置文件：\n```\nvi /etc/selinux/config\n```\n如下图，注释掉`SELINUX=enforcing`和`SELINUXTYPE=targeted`。\n\n\t# This file controls the state of SELinux on the system.\n\t# SELINUX= can take one of these three values:\n\t#     enforcing - SELinux security policy is enforced.\n\t#     permissive - SELinux prints warnings instead of enforcing.\n\t#     disabled - No SELinux policy is loaded.\n\tSELINUX=disabled\n\t# SELINUXTYPE= can take one of three two values:\n\t#     targeted - Targeted processes are protected,\n\t#     minimum - Modification of targeted policy. Only selected processes are protected.\n\t#     mls - Multi Level Security protection.\n\t#SELINUXTYPE=targeted\n最后执行以下命令，使配置立即生效\n```\nsetenforce 0\n```","source":"_posts/【Linux】CentOS使用iptables.md","raw":"---\ntitle: 【Linux】CentOS使用iptables\nlayout: post\ncomments: true\ndate: 2017-08-11 14:35:35\ncategories: OS\ntags: [Linux]\nkeywords:\ndescription:\n---\n### CentOS 6.x\n##### 1. 任意运行一条iptables防火墙规则配置命令\n```\niptables -P OUTPUT ACCEPT\n```\n##### 2. 对iptables服务进行保存\n```\nservice iptables save\n```\n##### 3. 重启iptables服务\n```\nservice iptables restart\n```\n<!--more-->\n\n---\n\n### CentOS 7.x\n##### 1. 关闭firewall\n停止firewall服务：\n```\nsystemctl stop firewalld.service\n```\n禁止firewall开机启动：\n```\nsystemctl disable firewalld.service\n```\n\n##### 2. 安装iptables防火墙\n执行yum命令安装：\n```\nyum install iptables-services\n```\n编辑防火墙配置文件：\n```\nvi /etc/sysconfig/iptables\n```\n在配置文件中加入以下内容后，保存并退出：\n\n\t# sample configuration for iptables service\n\t# you can edit this manually or use system-config-firewall\n\t# please do not ask us to add additional ports/services to this default configuration\n\t*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n\t-A INPUT -p icmp -j ACCEPT\n\t-A INPUT -i lo -j ACCEPT\n\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT\n\t-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n\n\t-A INPUT -j REJECT --reject-with icmp-host-prohibited\n\t-A FORWARD -j REJECT --reject-with icmp-host-prohibited\n\tCOMMIT\n最后重启防火墙使配置生效\n```\nsystemctl restart iptables.service\n```\n\n##### 3. 设置防火墙开机启动\n```\nsystemctl enable iptables.service\n```\n\n##### 4. 关闭SELinux\n编辑SELinux的配置文件：\n```\nvi /etc/selinux/config\n```\n如下图，注释掉`SELINUX=enforcing`和`SELINUXTYPE=targeted`。\n\n\t# This file controls the state of SELinux on the system.\n\t# SELINUX= can take one of these three values:\n\t#     enforcing - SELinux security policy is enforced.\n\t#     permissive - SELinux prints warnings instead of enforcing.\n\t#     disabled - No SELinux policy is loaded.\n\tSELINUX=disabled\n\t# SELINUXTYPE= can take one of three two values:\n\t#     targeted - Targeted processes are protected,\n\t#     minimum - Modification of targeted policy. Only selected processes are protected.\n\t#     mls - Multi Level Security protection.\n\t#SELINUXTYPE=targeted\n最后执行以下命令，使配置立即生效\n```\nsetenforce 0\n```","slug":"【Linux】CentOS使用iptables","published":1,"updated":"2017-08-14T01:56:28.989Z","_id":"cjpuwa1iq002ps0jtfc3df8o6","photos":[],"link":"","content":"<h3 id=\"CentOS-6-x\"><a href=\"#CentOS-6-x\" class=\"headerlink\" title=\"CentOS 6.x\"></a>CentOS 6.x</h3><h5 id=\"1-任意运行一条iptables防火墙规则配置命令\"><a href=\"#1-任意运行一条iptables防火墙规则配置命令\" class=\"headerlink\" title=\"1. 任意运行一条iptables防火墙规则配置命令\"></a>1. 任意运行一条iptables防火墙规则配置命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-对iptables服务进行保存\"><a href=\"#2-对iptables服务进行保存\" class=\"headerlink\" title=\"2. 对iptables服务进行保存\"></a>2. 对iptables服务进行保存</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables save</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-重启iptables服务\"><a href=\"#3-重启iptables服务\" class=\"headerlink\" title=\"3. 重启iptables服务\"></a>3. 重启iptables服务</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables restart</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"CentOS-7-x\"><a href=\"#CentOS-7-x\" class=\"headerlink\" title=\"CentOS 7.x\"></a>CentOS 7.x</h3><h5 id=\"1-关闭firewall\"><a href=\"#1-关闭firewall\" class=\"headerlink\" title=\"1. 关闭firewall\"></a>1. 关闭firewall</h5><p>停止firewall服务：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></p>\n<p>禁止firewall开机启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-安装iptables防火墙\"><a href=\"#2-安装iptables防火墙\" class=\"headerlink\" title=\"2. 安装iptables防火墙\"></a>2. 安装iptables防火墙</h5><p>执行yum命令安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install iptables-services</span><br></pre></td></tr></table></figure></p>\n<p>编辑防火墙配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p>\n<p>在配置文件中加入以下内容后，保存并退出：</p>\n<pre><code># sample configuration for iptables service\n# you can edit this manually or use system-config-firewall\n# please do not ask us to add additional ports/services to this default configuration\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n</code></pre><p>最后重启防火墙使配置生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart iptables.service</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"3-设置防火墙开机启动\"><a href=\"#3-设置防火墙开机启动\" class=\"headerlink\" title=\"3. 设置防火墙开机启动\"></a>3. 设置防火墙开机启动</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable iptables.service</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-关闭SELinux\"><a href=\"#4-关闭SELinux\" class=\"headerlink\" title=\"4. 关闭SELinux\"></a>4. 关闭SELinux</h5><p>编辑SELinux的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/selinux/config</span><br></pre></td></tr></table></figure></p>\n<p>如下图，注释掉<code>SELINUX=enforcing</code>和<code>SELINUXTYPE=targeted</code>。</p>\n<pre><code># This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=disabled\n# SELINUXTYPE= can take one of three two values:\n#     targeted - Targeted processes are protected,\n#     minimum - Modification of targeted policy. Only selected processes are protected.\n#     mls - Multi Level Security protection.\n#SELINUXTYPE=targeted\n</code></pre><p>最后执行以下命令，使配置立即生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenforce 0</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"CentOS-6-x\"><a href=\"#CentOS-6-x\" class=\"headerlink\" title=\"CentOS 6.x\"></a>CentOS 6.x</h3><h5 id=\"1-任意运行一条iptables防火墙规则配置命令\"><a href=\"#1-任意运行一条iptables防火墙规则配置命令\" class=\"headerlink\" title=\"1. 任意运行一条iptables防火墙规则配置命令\"></a>1. 任意运行一条iptables防火墙规则配置命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -P OUTPUT ACCEPT</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-对iptables服务进行保存\"><a href=\"#2-对iptables服务进行保存\" class=\"headerlink\" title=\"2. 对iptables服务进行保存\"></a>2. 对iptables服务进行保存</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables save</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-重启iptables服务\"><a href=\"#3-重启iptables服务\" class=\"headerlink\" title=\"3. 重启iptables服务\"></a>3. 重启iptables服务</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables restart</span><br></pre></td></tr></table></figure>","more":"<hr>\n<h3 id=\"CentOS-7-x\"><a href=\"#CentOS-7-x\" class=\"headerlink\" title=\"CentOS 7.x\"></a>CentOS 7.x</h3><h5 id=\"1-关闭firewall\"><a href=\"#1-关闭firewall\" class=\"headerlink\" title=\"1. 关闭firewall\"></a>1. 关闭firewall</h5><p>停止firewall服务：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></p>\n<p>禁止firewall开机启动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-安装iptables防火墙\"><a href=\"#2-安装iptables防火墙\" class=\"headerlink\" title=\"2. 安装iptables防火墙\"></a>2. 安装iptables防火墙</h5><p>执行yum命令安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install iptables-services</span><br></pre></td></tr></table></figure></p>\n<p>编辑防火墙配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p>\n<p>在配置文件中加入以下内容后，保存并退出：</p>\n<pre><code># sample configuration for iptables service\n# you can edit this manually or use system-config-firewall\n# please do not ask us to add additional ports/services to this default configuration\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80  -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n</code></pre><p>最后重启防火墙使配置生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart iptables.service</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"3-设置防火墙开机启动\"><a href=\"#3-设置防火墙开机启动\" class=\"headerlink\" title=\"3. 设置防火墙开机启动\"></a>3. 设置防火墙开机启动</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable iptables.service</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-关闭SELinux\"><a href=\"#4-关闭SELinux\" class=\"headerlink\" title=\"4. 关闭SELinux\"></a>4. 关闭SELinux</h5><p>编辑SELinux的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/selinux/config</span><br></pre></td></tr></table></figure></p>\n<p>如下图，注释掉<code>SELINUX=enforcing</code>和<code>SELINUXTYPE=targeted</code>。</p>\n<pre><code># This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=disabled\n# SELINUXTYPE= can take one of three two values:\n#     targeted - Targeted processes are protected,\n#     minimum - Modification of targeted policy. Only selected processes are protected.\n#     mls - Multi Level Security protection.\n#SELINUXTYPE=targeted\n</code></pre><p>最后执行以下命令，使配置立即生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenforce 0</span><br></pre></td></tr></table></figure></p>"},{"title":"【Linux】CentOS网络连接system eth0不可用解决办法","layout":"post","comments":1,"date":"2018-02-13T02:41:43.000Z","keywords":null,"description":null,"_content":"### CentOS 6.x\nVMware克隆CentOS 6导致网络连接system eth0不可用的解决办法\n###### 1. 打开下面文件，注释掉原eth0，将eth1改为eth0\n\n\t\tvim /etc/udev/rules.d/70-persistent-net.rules\n\n一般能看到eth0、eth1两个配置规则，注释掉NAME=\"eth0\"的配置规则，将另一个配置规则的NAME=\"eth1\"改成NAME=\"eth0\"。\n\n###### 2. 将改后eth0的ATTR{address}==\"00:50:56:a9:4c:f9\"中的网卡地址修改到下面文件\n\n\tvim /etc/sysconfig/network-scripts/ifcfg-eth0\n\n保存到HWADDR=\"00:50:56:a9:4c:f9\"处。","source":"_posts/【Linux】CentOS网络连接system-eth0不可用解决办法.md","raw":"---\ntitle: 【Linux】CentOS网络连接system eth0不可用解决办法\nlayout: post\ncomments: true\ndate: 2018-02-13 10:41:43\ncategories: OS\ntags: [Linux]\nkeywords:\ndescription:\n---\n### CentOS 6.x\nVMware克隆CentOS 6导致网络连接system eth0不可用的解决办法\n###### 1. 打开下面文件，注释掉原eth0，将eth1改为eth0\n\n\t\tvim /etc/udev/rules.d/70-persistent-net.rules\n\n一般能看到eth0、eth1两个配置规则，注释掉NAME=\"eth0\"的配置规则，将另一个配置规则的NAME=\"eth1\"改成NAME=\"eth0\"。\n\n###### 2. 将改后eth0的ATTR{address}==\"00:50:56:a9:4c:f9\"中的网卡地址修改到下面文件\n\n\tvim /etc/sysconfig/network-scripts/ifcfg-eth0\n\n保存到HWADDR=\"00:50:56:a9:4c:f9\"处。","slug":"【Linux】CentOS网络连接system-eth0不可用解决办法","published":1,"updated":"2018-02-13T03:06:56.358Z","_id":"cjpuwa1iu002rs0jtddgjucjc","photos":[],"link":"","content":"<h3 id=\"CentOS-6-x\"><a href=\"#CentOS-6-x\" class=\"headerlink\" title=\"CentOS 6.x\"></a>CentOS 6.x</h3><p>VMware克隆CentOS 6导致网络连接system eth0不可用的解决办法</p>\n<h6 id=\"1-打开下面文件，注释掉原eth0，将eth1改为eth0\"><a href=\"#1-打开下面文件，注释掉原eth0，将eth1改为eth0\" class=\"headerlink\" title=\"1. 打开下面文件，注释掉原eth0，将eth1改为eth0\"></a>1. 打开下面文件，注释掉原eth0，将eth1改为eth0</h6><pre><code>vim /etc/udev/rules.d/70-persistent-net.rules\n</code></pre><p>一般能看到eth0、eth1两个配置规则，注释掉NAME=”eth0”的配置规则，将另一个配置规则的NAME=”eth1”改成NAME=”eth0”。</p>\n<h6 id=\"2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件\"><a href=\"#2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件\" class=\"headerlink\" title=\"2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件\"></a>2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件</h6><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0\n</code></pre><p>保存到HWADDR=”00:50:56:a9:4c:f9”处。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"CentOS-6-x\"><a href=\"#CentOS-6-x\" class=\"headerlink\" title=\"CentOS 6.x\"></a>CentOS 6.x</h3><p>VMware克隆CentOS 6导致网络连接system eth0不可用的解决办法</p>\n<h6 id=\"1-打开下面文件，注释掉原eth0，将eth1改为eth0\"><a href=\"#1-打开下面文件，注释掉原eth0，将eth1改为eth0\" class=\"headerlink\" title=\"1. 打开下面文件，注释掉原eth0，将eth1改为eth0\"></a>1. 打开下面文件，注释掉原eth0，将eth1改为eth0</h6><pre><code>vim /etc/udev/rules.d/70-persistent-net.rules\n</code></pre><p>一般能看到eth0、eth1两个配置规则，注释掉NAME=”eth0”的配置规则，将另一个配置规则的NAME=”eth1”改成NAME=”eth0”。</p>\n<h6 id=\"2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件\"><a href=\"#2-将改后eth0的ATTR-address-”00-50-56-a9-4c-f9”中的网卡地址修改到下面文件\" class=\"headerlink\" title=\"2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件\"></a>2. 将改后eth0的ATTR{address}==”00:50:56:a9:4c:f9”中的网卡地址修改到下面文件</h6><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0\n</code></pre><p>保存到HWADDR=”00:50:56:a9:4c:f9”处。</p>\n"},{"title":"【Linux】[天翼云]数据盘分区以及格式化","layout":"post","comments":1,"date":"2017-08-10T03:41:01.000Z","keywords":null,"description":null,"_content":"#### 1. 首先切换到root账户下\n```\nsudo -i\n```\n\n<!-- more -->\n\n#### 2. 查看数据盘信息\n登录Linux云主机后，使用命令`fdisk -l`查看数据盘相关信息。\n> 使用命令`df -h`是无法查看到未分区和格式化的数据盘的。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\n\tFilesystem      Size  Used Avail Use% Mounted on\n\t/dev/vda1        40G  1.5G   36G   4% /\n\tdevtmpfs        3.9G     0  3.9G   0% /dev\n\ttmpfs           3.9G     0  3.9G   0% /dev/shm\n\ttmpfs           3.9G  392K  3.9G   1% /run\n\ttmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\n\ttmpfs           783M     0  783M   0% /run/user/0\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 3. 数据盘分区\n执行以下命令，对数据盘进行分区。\n```\nfdisk /dev/vdb\n```\n按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdb\n\tWelcome to fdisk (util-linux 2.23.2).\n\n\tChanges will remain in memory only, until you decide to write them.\n\tBe careful before using the write command.\n\n\tDevice does not contain a recognized partition table\n\tBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.\n\n\tCommand (m for help): n\n\tPartition type:\n\t   p   primary (0 primary, 0 extended, 4 free)\n\t   e   extended\n\tSelect (default p): p\n\tPartition number (1-4, default 1): 1\n\tFirst sector (2048-209715199, default 2048): \n\tUsing default value 2048\n\tLast sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199): \n\tUsing default value 209715199\n\tPartition 1 of type Linux and of size 100 GiB is set\n\n\tCommand (m for help): w\n\tThe partition table has been altered!\n\n\tCalling ioctl() to re-read partition table.\n\tSyncing disks.\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 4. 查看新分区\n使用命令`fdisk -l`，即可查看到，新的分区vdb1已经创建完成。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x6ea9e5ce\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vdb1            2048   209715199   104856576   83  Linux\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 5. 格式化新分区\n使用下面的命令对新分区进行格式化：\n```\nmkfs.ext3 /dev/vdb1\n```\n> 在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。\n\n格式化完成后如下：\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1\n\tmke2fs 1.42.9 (28-Dec-2013)\n\tFilesystem label=\n\tOS type: Linux\n\tBlock size=4096 (log=2)\n\tFragment size=4096 (log=2)\n\tStride=0 blocks, Stripe width=0 blocks\n\t6553600 inodes, 26214144 blocks\n\t1310707 blocks (5.00%) reserved for the super user\n\tFirst data block=0\n\tMaximum filesystem blocks=4294967296\n\t800 block groups\n\t32768 blocks per group, 32768 fragments per group\n\t8192 inodes per group\n\tSuperblock backups stored on blocks: \n\t        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, \n\t        4096000, 7962624, 11239424, 20480000, 23887872\n\n\tAllocating group tables: done                            \n\tWriting inode tables: done                            \n\tCreating journal (32768 blocks): done\n\tWriting superblocks and filesystem accounting information: done   \n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 6. 挂载新分区\n使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。\n```\nmkdir /fimeson\nmount /dev/vdb1 /fimeson\ndf -h\n```\n出现以下信息说明挂载成功，即可以查看到数据盘了。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\n\tFilesystem      Size  Used Avail Use% Mounted on\n\t/dev/vda1        40G  1.5G   36G   4% /\n\tdevtmpfs        3.9G     0  3.9G   0% /dev\n\ttmpfs           3.9G     0  3.9G   0% /dev/shm\n\ttmpfs           3.9G  368K  3.9G   1% /run\n\ttmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\n\ttmpfs           783M     0  783M   0% /run/user/0\n\t/dev/vdb1        99G   60M   94G   1% /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 7. 添加分区信息\n如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到/etc/fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。\n> 注意：请确认分区路径是否为 “/dev/vdb1”，若路径错误，将会造成云主机重启失败\n\n使用下面的命令添加分区信息，最后查看添加结果：\n```\necho '/dev/vdb1 /fimeson ext3 defaults 0 0' >> /etc/fstab\ncat /etc/fstab\n```\n出现以下信息表示添加分区信息成功。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# echo '/dev/vdb1 /fimeson ext3 defaults 0 0' >> /etc/fstab\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab\n\n\t#\n\t# /etc/fstab\n\t# Created by anaconda on Fri Jun  2 07:36:28 2017\n\t#\n\t# Accessible filesystems, by reference, are maintained under '/dev/disk'\n\t# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n\t#\n\tUUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1\n\t/dev/vdb1 /fimeson ext3 defaults 0 0\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# ","source":"_posts/【Linux】[天翼云]数据盘分区以及格式化.md","raw":"---\ntitle: '【Linux】[天翼云]数据盘分区以及格式化'\nlayout: post\ncomments: true\ndate: 2017-08-10 11:41:01\ncategories: Linux\ntags: [Linux]\nkeywords:\ndescription:\n---\n#### 1. 首先切换到root账户下\n```\nsudo -i\n```\n\n<!-- more -->\n\n#### 2. 查看数据盘信息\n登录Linux云主机后，使用命令`fdisk -l`查看数据盘相关信息。\n> 使用命令`df -h`是无法查看到未分区和格式化的数据盘的。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\n\tFilesystem      Size  Used Avail Use% Mounted on\n\t/dev/vda1        40G  1.5G   36G   4% /\n\tdevtmpfs        3.9G     0  3.9G   0% /dev\n\ttmpfs           3.9G     0  3.9G   0% /dev/shm\n\ttmpfs           3.9G  392K  3.9G   1% /run\n\ttmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\n\ttmpfs           783M     0  783M   0% /run/user/0\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 3. 数据盘分区\n执行以下命令，对数据盘进行分区。\n```\nfdisk /dev/vdb\n```\n按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdb\n\tWelcome to fdisk (util-linux 2.23.2).\n\n\tChanges will remain in memory only, until you decide to write them.\n\tBe careful before using the write command.\n\n\tDevice does not contain a recognized partition table\n\tBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.\n\n\tCommand (m for help): n\n\tPartition type:\n\t   p   primary (0 primary, 0 extended, 4 free)\n\t   e   extended\n\tSelect (default p): p\n\tPartition number (1-4, default 1): 1\n\tFirst sector (2048-209715199, default 2048): \n\tUsing default value 2048\n\tLast sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199): \n\tUsing default value 209715199\n\tPartition 1 of type Linux and of size 100 GiB is set\n\n\tCommand (m for help): w\n\tThe partition table has been altered!\n\n\tCalling ioctl() to re-read partition table.\n\tSyncing disks.\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 4. 查看新分区\n使用命令`fdisk -l`，即可查看到，新的分区vdb1已经创建完成。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x6ea9e5ce\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vdb1            2048   209715199   104856576   83  Linux\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 5. 格式化新分区\n使用下面的命令对新分区进行格式化：\n```\nmkfs.ext3 /dev/vdb1\n```\n> 在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。\n\n格式化完成后如下：\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1\n\tmke2fs 1.42.9 (28-Dec-2013)\n\tFilesystem label=\n\tOS type: Linux\n\tBlock size=4096 (log=2)\n\tFragment size=4096 (log=2)\n\tStride=0 blocks, Stripe width=0 blocks\n\t6553600 inodes, 26214144 blocks\n\t1310707 blocks (5.00%) reserved for the super user\n\tFirst data block=0\n\tMaximum filesystem blocks=4294967296\n\t800 block groups\n\t32768 blocks per group, 32768 fragments per group\n\t8192 inodes per group\n\tSuperblock backups stored on blocks: \n\t        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, \n\t        4096000, 7962624, 11239424, 20480000, 23887872\n\n\tAllocating group tables: done                            \n\tWriting inode tables: done                            \n\tCreating journal (32768 blocks): done\n\tWriting superblocks and filesystem accounting information: done   \n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 6. 挂载新分区\n使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。\n```\nmkdir /fimeson\nmount /dev/vdb1 /fimeson\ndf -h\n```\n出现以下信息说明挂载成功，即可以查看到数据盘了。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\n\tFilesystem      Size  Used Avail Use% Mounted on\n\t/dev/vda1        40G  1.5G   36G   4% /\n\tdevtmpfs        3.9G     0  3.9G   0% /dev\n\ttmpfs           3.9G     0  3.9G   0% /dev/shm\n\ttmpfs           3.9G  368K  3.9G   1% /run\n\ttmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\n\ttmpfs           783M     0  783M   0% /run/user/0\n\t/dev/vdb1        99G   60M   94G   1% /fimeson\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# \n\n#### 7. 添加分区信息\n如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到/etc/fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。\n> 注意：请确认分区路径是否为 “/dev/vdb1”，若路径错误，将会造成云主机重启失败\n\n使用下面的命令添加分区信息，最后查看添加结果：\n```\necho '/dev/vdb1 /fimeson ext3 defaults 0 0' >> /etc/fstab\ncat /etc/fstab\n```\n出现以下信息表示添加分区信息成功。\n\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# echo '/dev/vdb1 /fimeson ext3 defaults 0 0' >> /etc/fstab\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab\n\n\t#\n\t# /etc/fstab\n\t# Created by anaconda on Fri Jun  2 07:36:28 2017\n\t#\n\t# Accessible filesystems, by reference, are maintained under '/dev/disk'\n\t# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n\t#\n\tUUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1\n\t/dev/vdb1 /fimeson ext3 defaults 0 0\n\t[root@iZwe12zdi799668qfxdm5oZ ~]# ","slug":"【Linux】[天翼云]数据盘分区以及格式化","published":1,"updated":"2017-08-14T02:17:05.324Z","_id":"cjpuwa1iy002ws0jt6bj5qgvb","photos":[],"link":"","content":"<h4 id=\"1-首先切换到root账户下\"><a href=\"#1-首先切换到root账户下\" class=\"headerlink\" title=\"1. 首先切换到root账户下\"></a>1. 首先切换到root账户下</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"2-查看数据盘信息\"><a href=\"#2-查看数据盘信息\" class=\"headerlink\" title=\"2. 查看数据盘信息\"></a>2. 查看数据盘信息</h4><p>登录Linux云主机后，使用命令<code>fdisk -l</code>查看数据盘相关信息。</p>\n<blockquote>\n<p>使用命令<code>df -h</code>是无法查看到未分区和格式化的数据盘的。</p>\n</blockquote>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.5G   36G   4% /\ndevtmpfs        3.9G     0  3.9G   0% /dev\ntmpfs           3.9G     0  3.9G   0% /dev/shm\ntmpfs           3.9G  392K  3.9G   1% /run\ntmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\ntmpfs           783M     0  783M   0% /run/user/0\n[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"3-数据盘分区\"><a href=\"#3-数据盘分区\" class=\"headerlink\" title=\"3. 数据盘分区\"></a>3. 数据盘分区</h4><p>执行以下命令，对数据盘进行分区。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk /dev/vdb</span><br></pre></td></tr></table></figure></p>\n<p>按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdb\nWelcome to fdisk (util-linux 2.23.2).\n\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\nDevice does not contain a recognized partition table\nBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.\n\nCommand (m for help): n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-209715199, default 2048): \nUsing default value 2048\nLast sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199): \nUsing default value 209715199\nPartition 1 of type Linux and of size 100 GiB is set\n\nCommand (m for help): w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\nSyncing disks.\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"4-查看新分区\"><a href=\"#4-查看新分区\" class=\"headerlink\" title=\"4. 查看新分区\"></a>4. 查看新分区</h4><p>使用命令<code>fdisk -l</code>，即可查看到，新的分区vdb1已经创建完成。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x6ea9e5ce\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vdb1            2048   209715199   104856576   83  Linux\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"5-格式化新分区\"><a href=\"#5-格式化新分区\" class=\"headerlink\" title=\"5. 格式化新分区\"></a>5. 格式化新分区</h4><p>使用下面的命令对新分区进行格式化：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext3 /dev/vdb1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。</p>\n</blockquote>\n<p>格式化完成后如下：</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1\nmke2fs 1.42.9 (28-Dec-2013)\nFilesystem label=\nOS type: Linux\nBlock size=4096 (log=2)\nFragment size=4096 (log=2)\nStride=0 blocks, Stripe width=0 blocks\n6553600 inodes, 26214144 blocks\n1310707 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=4294967296\n800 block groups\n32768 blocks per group, 32768 fragments per group\n8192 inodes per group\nSuperblock backups stored on blocks: \n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, \n        4096000, 7962624, 11239424, 20480000, 23887872\n\nAllocating group tables: done                            \nWriting inode tables: done                            \nCreating journal (32768 blocks): done\nWriting superblocks and filesystem accounting information: done   \n\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"6-挂载新分区\"><a href=\"#6-挂载新分区\" class=\"headerlink\" title=\"6. 挂载新分区\"></a>6. 挂载新分区</h4><p>使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /fimeson</span><br><span class=\"line\">mount /dev/vdb1 /fimeson</span><br><span class=\"line\">df -h</span><br></pre></td></tr></table></figure></p>\n<p>出现以下信息说明挂载成功，即可以查看到数据盘了。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.5G   36G   4% /\ndevtmpfs        3.9G     0  3.9G   0% /dev\ntmpfs           3.9G     0  3.9G   0% /dev/shm\ntmpfs           3.9G  368K  3.9G   1% /run\ntmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\ntmpfs           783M     0  783M   0% /run/user/0\n/dev/vdb1        99G   60M   94G   1% /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"7-添加分区信息\"><a href=\"#7-添加分区信息\" class=\"headerlink\" title=\"7. 添加分区信息\"></a>7. 添加分区信息</h4><p>如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到/etc/fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。</p>\n<blockquote>\n<p>注意：请确认分区路径是否为 “/dev/vdb1”，若路径错误，将会造成云主机重启失败</p>\n</blockquote>\n<p>使用下面的命令添加分区信息，最后查看添加结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab</span><br><span class=\"line\">cat /etc/fstab</span><br></pre></td></tr></table></figure></p>\n<p>出现以下信息表示添加分区信息成功。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab\n[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab\n\n#\n# /etc/fstab\n# Created by anaconda on Fri Jun  2 07:36:28 2017\n#\n# Accessible filesystems, by reference, are maintained under &apos;/dev/disk&apos;\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\nUUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1\n/dev/vdb1 /fimeson ext3 defaults 0 0\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre>","site":{"data":{}},"excerpt":"<h4 id=\"1-首先切换到root账户下\"><a href=\"#1-首先切换到root账户下\" class=\"headerlink\" title=\"1. 首先切换到root账户下\"></a>1. 首先切换到root账户下</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"2-查看数据盘信息\"><a href=\"#2-查看数据盘信息\" class=\"headerlink\" title=\"2. 查看数据盘信息\"></a>2. 查看数据盘信息</h4><p>登录Linux云主机后，使用命令<code>fdisk -l</code>查看数据盘相关信息。</p>\n<blockquote>\n<p>使用命令<code>df -h</code>是无法查看到未分区和格式化的数据盘的。</p>\n</blockquote>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.5G   36G   4% /\ndevtmpfs        3.9G     0  3.9G   0% /dev\ntmpfs           3.9G     0  3.9G   0% /dev/shm\ntmpfs           3.9G  392K  3.9G   1% /run\ntmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\ntmpfs           783M     0  783M   0% /run/user/0\n[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"3-数据盘分区\"><a href=\"#3-数据盘分区\" class=\"headerlink\" title=\"3. 数据盘分区\"></a>3. 数据盘分区</h4><p>执行以下命令，对数据盘进行分区。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk /dev/vdb</span><br></pre></td></tr></table></figure></p>\n<p>按照界面的提示，依次输入“n”(新建分区)、“p”(新建扩展分区)、“1”(使用第1个主分区)，两次回车(使用默认配置)，输入“w”(保存分区表)，开始分区。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk /dev/vdb\nWelcome to fdisk (util-linux 2.23.2).\n\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\nDevice does not contain a recognized partition table\nBuilding a new DOS disklabel with disk identifier 0x6ea9e5ce.\n\nCommand (m for help): n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-209715199, default 2048): \nUsing default value 2048\nLast sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199): \nUsing default value 209715199\nPartition 1 of type Linux and of size 100 GiB is set\n\nCommand (m for help): w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\nSyncing disks.\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"4-查看新分区\"><a href=\"#4-查看新分区\" class=\"headerlink\" title=\"4. 查看新分区\"></a>4. 查看新分区</h4><p>使用命令<code>fdisk -l</code>，即可查看到，新的分区vdb1已经创建完成。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x6ea9e5ce\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vdb1            2048   209715199   104856576   83  Linux\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"5-格式化新分区\"><a href=\"#5-格式化新分区\" class=\"headerlink\" title=\"5. 格式化新分区\"></a>5. 格式化新分区</h4><p>使用下面的命令对新分区进行格式化：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext3 /dev/vdb1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在进行分区格式化时，开发者可自行决定文件系统的格式，如ext2、ext3等，这里我们选择ext3。</p>\n</blockquote>\n<p>格式化完成后如下：</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkfs.ext3 /dev/vdb1\nmke2fs 1.42.9 (28-Dec-2013)\nFilesystem label=\nOS type: Linux\nBlock size=4096 (log=2)\nFragment size=4096 (log=2)\nStride=0 blocks, Stripe width=0 blocks\n6553600 inodes, 26214144 blocks\n1310707 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=4294967296\n800 block groups\n32768 blocks per group, 32768 fragments per group\n8192 inodes per group\nSuperblock backups stored on blocks: \n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, \n        4096000, 7962624, 11239424, 20480000, 23887872\n\nAllocating group tables: done                            \nWriting inode tables: done                            \nCreating journal (32768 blocks): done\nWriting superblocks and filesystem accounting information: done   \n\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"6-挂载新分区\"><a href=\"#6-挂载新分区\" class=\"headerlink\" title=\"6. 挂载新分区\"></a>6. 挂载新分区</h4><p>使用下面的命令，先创建fimeson目录（目录名可自定义），再手动挂载新分区，最后查看挂载结果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /fimeson</span><br><span class=\"line\">mount /dev/vdb1 /fimeson</span><br><span class=\"line\">df -h</span><br></pre></td></tr></table></figure></p>\n<p>出现以下信息说明挂载成功，即可以查看到数据盘了。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# mkdir /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# mount /dev/vdb1 /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.5G   36G   4% /\ndevtmpfs        3.9G     0  3.9G   0% /dev\ntmpfs           3.9G     0  3.9G   0% /dev/shm\ntmpfs           3.9G  368K  3.9G   1% /run\ntmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\ntmpfs           783M     0  783M   0% /run/user/0\n/dev/vdb1        99G   60M   94G   1% /fimeson\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre><h4 id=\"7-添加分区信息\"><a href=\"#7-添加分区信息\" class=\"headerlink\" title=\"7. 添加分区信息\"></a>7. 添加分区信息</h4><p>如果希望云主机在重启或开机时能自动挂载数据盘，必须将分区信息添加到/etc/fstab中。如果没有添加，则云主机重启或开机后，都不能自动挂载数据盘。</p>\n<blockquote>\n<p>注意：请确认分区路径是否为 “/dev/vdb1”，若路径错误，将会造成云主机重启失败</p>\n</blockquote>\n<p>使用下面的命令添加分区信息，最后查看添加结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab</span><br><span class=\"line\">cat /etc/fstab</span><br></pre></td></tr></table></figure></p>\n<p>出现以下信息表示添加分区信息成功。</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ ~]# echo &apos;/dev/vdb1 /fimeson ext3 defaults 0 0&apos; &gt;&gt; /etc/fstab\n[root@iZwe12zdi799668qfxdm5oZ ~]# cat /etc/fstab\n\n#\n# /etc/fstab\n# Created by anaconda on Fri Jun  2 07:36:28 2017\n#\n# Accessible filesystems, by reference, are maintained under &apos;/dev/disk&apos;\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\nUUID=83e59f2d-45ce-4124-939a-3302e6cc6afa /                       ext4    defaults        1 1\n/dev/vdb1 /fimeson ext3 defaults 0 0\n[root@iZwe12zdi799668qfxdm5oZ ~]# \n</code></pre>"},{"title":"【Linux】Suse Linux Enterprise 12 防火墙开放服务及端口","layout":"post","comments":1,"date":"2018-02-01T09:06:18.000Z","keywords":null,"description":null,"_content":"\n### 一、图形化界面方式\n#### 1. 使用以下命令进入防火墙\n```\nsudo yast2\n```\n然后选择Security and Users -> Firewall，或用下面命令直接进入Firewall\n```\nyast2 firewall\n```\n#### 2. 开放服务\n选择Allowed Services -> Add，可以添加如ssh, http, https等服务。\n#### 3. 开放端口\n选择右下角的Advanced...，然后填写要开放的端口，多个端口之间用空格隔开。\n#### 4. 保存设置重启防火墙使生效\n选择Save Settings and Restart Firewall Now即可。\n\n---\n\n### 二、命令方式\n#### 1. 修改防火墙配置\n```\ncd /etc/sysconfig\nvim SuSEfirewall2\n```\n在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP=”ssh” 或 FW_SERVICES_EXT_TCP=”22″\n如果要开放多个端口则为 FW_SERVICES_EXT_TCP=”22 80 8090″\n最后，保存退出。\n#### 2. 重启防火墙使生效\n```\nrcSuSEfirewall2 restart\n```","source":"_posts/【Linux】Suse-Linux-Enterprise-12-防火墙开放服务及端口.md","raw":"---\ntitle: 【Linux】Suse Linux Enterprise 12 防火墙开放服务及端口\nlayout: post\ncomments: true\ndate: 2018-02-01 17:06:18\ncategories: Linux\ntags: [Linux]\nkeywords:\ndescription:\n---\n\n### 一、图形化界面方式\n#### 1. 使用以下命令进入防火墙\n```\nsudo yast2\n```\n然后选择Security and Users -> Firewall，或用下面命令直接进入Firewall\n```\nyast2 firewall\n```\n#### 2. 开放服务\n选择Allowed Services -> Add，可以添加如ssh, http, https等服务。\n#### 3. 开放端口\n选择右下角的Advanced...，然后填写要开放的端口，多个端口之间用空格隔开。\n#### 4. 保存设置重启防火墙使生效\n选择Save Settings and Restart Firewall Now即可。\n\n---\n\n### 二、命令方式\n#### 1. 修改防火墙配置\n```\ncd /etc/sysconfig\nvim SuSEfirewall2\n```\n在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP=”ssh” 或 FW_SERVICES_EXT_TCP=”22″\n如果要开放多个端口则为 FW_SERVICES_EXT_TCP=”22 80 8090″\n最后，保存退出。\n#### 2. 重启防火墙使生效\n```\nrcSuSEfirewall2 restart\n```","slug":"【Linux】Suse-Linux-Enterprise-12-防火墙开放服务及端口","published":1,"updated":"2018-02-01T09:27:01.310Z","_id":"cjpuwa1j0002xs0jti6cytjdc","photos":[],"link":"","content":"<h3 id=\"一、图形化界面方式\"><a href=\"#一、图形化界面方式\" class=\"headerlink\" title=\"一、图形化界面方式\"></a>一、图形化界面方式</h3><h4 id=\"1-使用以下命令进入防火墙\"><a href=\"#1-使用以下命令进入防火墙\" class=\"headerlink\" title=\"1. 使用以下命令进入防火墙\"></a>1. 使用以下命令进入防火墙</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yast2</span><br></pre></td></tr></table></figure>\n<p>然后选择Security and Users -&gt; Firewall，或用下面命令直接进入Firewall<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yast2 firewall</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-开放服务\"><a href=\"#2-开放服务\" class=\"headerlink\" title=\"2. 开放服务\"></a>2. 开放服务</h4><p>选择Allowed Services -&gt; Add，可以添加如ssh, http, https等服务。</p>\n<h4 id=\"3-开放端口\"><a href=\"#3-开放端口\" class=\"headerlink\" title=\"3. 开放端口\"></a>3. 开放端口</h4><p>选择右下角的Advanced…，然后填写要开放的端口，多个端口之间用空格隔开。</p>\n<h4 id=\"4-保存设置重启防火墙使生效\"><a href=\"#4-保存设置重启防火墙使生效\" class=\"headerlink\" title=\"4. 保存设置重启防火墙使生效\"></a>4. 保存设置重启防火墙使生效</h4><p>选择Save Settings and Restart Firewall Now即可。</p>\n<hr>\n<h3 id=\"二、命令方式\"><a href=\"#二、命令方式\" class=\"headerlink\" title=\"二、命令方式\"></a>二、命令方式</h3><h4 id=\"1-修改防火墙配置\"><a href=\"#1-修改防火墙配置\" class=\"headerlink\" title=\"1. 修改防火墙配置\"></a>1. 修改防火墙配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/sysconfig</span><br><span class=\"line\">vim SuSEfirewall2</span><br></pre></td></tr></table></figure>\n<p>在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP=”ssh” 或 FW_SERVICES_EXT_TCP=”22″<br>如果要开放多个端口则为 FW_SERVICES_EXT_TCP=”22 80 8090″<br>最后，保存退出。</p>\n<h4 id=\"2-重启防火墙使生效\"><a href=\"#2-重启防火墙使生效\" class=\"headerlink\" title=\"2. 重启防火墙使生效\"></a>2. 重启防火墙使生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rcSuSEfirewall2 restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、图形化界面方式\"><a href=\"#一、图形化界面方式\" class=\"headerlink\" title=\"一、图形化界面方式\"></a>一、图形化界面方式</h3><h4 id=\"1-使用以下命令进入防火墙\"><a href=\"#1-使用以下命令进入防火墙\" class=\"headerlink\" title=\"1. 使用以下命令进入防火墙\"></a>1. 使用以下命令进入防火墙</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yast2</span><br></pre></td></tr></table></figure>\n<p>然后选择Security and Users -&gt; Firewall，或用下面命令直接进入Firewall<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yast2 firewall</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-开放服务\"><a href=\"#2-开放服务\" class=\"headerlink\" title=\"2. 开放服务\"></a>2. 开放服务</h4><p>选择Allowed Services -&gt; Add，可以添加如ssh, http, https等服务。</p>\n<h4 id=\"3-开放端口\"><a href=\"#3-开放端口\" class=\"headerlink\" title=\"3. 开放端口\"></a>3. 开放端口</h4><p>选择右下角的Advanced…，然后填写要开放的端口，多个端口之间用空格隔开。</p>\n<h4 id=\"4-保存设置重启防火墙使生效\"><a href=\"#4-保存设置重启防火墙使生效\" class=\"headerlink\" title=\"4. 保存设置重启防火墙使生效\"></a>4. 保存设置重启防火墙使生效</h4><p>选择Save Settings and Restart Firewall Now即可。</p>\n<hr>\n<h3 id=\"二、命令方式\"><a href=\"#二、命令方式\" class=\"headerlink\" title=\"二、命令方式\"></a>二、命令方式</h3><h4 id=\"1-修改防火墙配置\"><a href=\"#1-修改防火墙配置\" class=\"headerlink\" title=\"1. 修改防火墙配置\"></a>1. 修改防火墙配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/sysconfig</span><br><span class=\"line\">vim SuSEfirewall2</span><br></pre></td></tr></table></figure>\n<p>在文件中找到FW_SERVICES_EXT_TCP，在其后面加上服务名或者是服务对应的端口，如SSH,FW_SERVICES_EXT_TCP=”ssh” 或 FW_SERVICES_EXT_TCP=”22″<br>如果要开放多个端口则为 FW_SERVICES_EXT_TCP=”22 80 8090″<br>最后，保存退出。</p>\n<h4 id=\"2-重启防火墙使生效\"><a href=\"#2-重启防火墙使生效\" class=\"headerlink\" title=\"2. 重启防火墙使生效\"></a>2. 重启防火墙使生效</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rcSuSEfirewall2 restart</span><br></pre></td></tr></table></figure>"},{"title":"【Linux】发展史","date":"2016-11-22T07:26:12.000Z","_content":"![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png)","source":"_posts/【Linux】发展史.md","raw":"---\ntitle: 【Linux】发展史\ndate: 2016-11-22 15:26:12\ntags: [Linux]\ncategories: Linux\n---\n![](https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png)","slug":"【Linux】发展史","published":1,"updated":"2018-11-25T06:14:23.366Z","_id":"cjpuwa1j20030s0jt8ie0dsb8","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://picturebed-1258146968.cos.ap-beijing.myqcloud.com/Linux%E5%8F%91%E5%B1%95%E5%8F%B2.png\" alt=\"\"></p>\n"},{"title":"【Linux】共享目录和远程挂载","layout":"post","comments":1,"date":"2018-04-11T14:31:31.000Z","keywords":null,"description":null,"_content":"## 共享目录\n### 1. 编辑并添加共享目录配置 \n```\nvi /etc/samba/smb.conf\n```\n添加内容格式如下：\n\n\t[xxFileServer]\n\t        path = /filedisk/xxFileServer\n\t        guest ok = yes\n\t        writable = yes\n\t        read only = No\n\t        create mask = 0777\n\t        directory mask = 0777\n\n### 2. 给共享目录设置相应的权限 \n```\nchmod -R 777 /filedisk/xxFileServer\n```\n\n### 3. 重启共享服务\n```\nservice smb restart\n```\n\n### 4. 设置开机启动共享服务 \n```\nchkconfig --level 5 smb on\n```\n\n<!-- more -->\n\n---\n\n## 远程挂载\n### 1. 创建本地目录\n```\nmkdir /var/xxFileServer\n```\n\n### 2. 挂载远程目录\n```\nmount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码\n```\n","source":"_posts/【Linux】共享目录和远程挂载.md","raw":"---\ntitle: 【Linux】共享目录和远程挂载\nlayout: post\ncomments: true\ndate: 2018-04-11 22:31:31\ncategories:\ntags:\nkeywords:\ndescription:\n---\n## 共享目录\n### 1. 编辑并添加共享目录配置 \n```\nvi /etc/samba/smb.conf\n```\n添加内容格式如下：\n\n\t[xxFileServer]\n\t        path = /filedisk/xxFileServer\n\t        guest ok = yes\n\t        writable = yes\n\t        read only = No\n\t        create mask = 0777\n\t        directory mask = 0777\n\n### 2. 给共享目录设置相应的权限 \n```\nchmod -R 777 /filedisk/xxFileServer\n```\n\n### 3. 重启共享服务\n```\nservice smb restart\n```\n\n### 4. 设置开机启动共享服务 \n```\nchkconfig --level 5 smb on\n```\n\n<!-- more -->\n\n---\n\n## 远程挂载\n### 1. 创建本地目录\n```\nmkdir /var/xxFileServer\n```\n\n### 2. 挂载远程目录\n```\nmount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码\n```\n","slug":"【Linux】共享目录和远程挂载","published":1,"updated":"2018-04-11T14:39:16.424Z","_id":"cjpuwa1j50033s0jt25k5rp05","photos":[],"link":"","content":"<h2 id=\"共享目录\"><a href=\"#共享目录\" class=\"headerlink\" title=\"共享目录\"></a>共享目录</h2><h3 id=\"1-编辑并添加共享目录配置\"><a href=\"#1-编辑并添加共享目录配置\" class=\"headerlink\" title=\"1. 编辑并添加共享目录配置\"></a>1. 编辑并添加共享目录配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n<p>添加内容格式如下：</p>\n<pre><code>[xxFileServer]\n        path = /filedisk/xxFileServer\n        guest ok = yes\n        writable = yes\n        read only = No\n        create mask = 0777\n        directory mask = 0777\n</code></pre><h3 id=\"2-给共享目录设置相应的权限\"><a href=\"#2-给共享目录设置相应的权限\" class=\"headerlink\" title=\"2. 给共享目录设置相应的权限\"></a>2. 给共享目录设置相应的权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 /filedisk/xxFileServer</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-重启共享服务\"><a href=\"#3-重启共享服务\" class=\"headerlink\" title=\"3. 重启共享服务\"></a>3. 重启共享服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service smb restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-设置开机启动共享服务\"><a href=\"#4-设置开机启动共享服务\" class=\"headerlink\" title=\"4. 设置开机启动共享服务\"></a>4. 设置开机启动共享服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig --level 5 smb on</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n<h2 id=\"远程挂载\"><a href=\"#远程挂载\" class=\"headerlink\" title=\"远程挂载\"></a>远程挂载</h2><h3 id=\"1-创建本地目录\"><a href=\"#1-创建本地目录\" class=\"headerlink\" title=\"1. 创建本地目录\"></a>1. 创建本地目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /var/xxFileServer</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-挂载远程目录\"><a href=\"#2-挂载远程目录\" class=\"headerlink\" title=\"2. 挂载远程目录\"></a>2. 挂载远程目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"共享目录\"><a href=\"#共享目录\" class=\"headerlink\" title=\"共享目录\"></a>共享目录</h2><h3 id=\"1-编辑并添加共享目录配置\"><a href=\"#1-编辑并添加共享目录配置\" class=\"headerlink\" title=\"1. 编辑并添加共享目录配置\"></a>1. 编辑并添加共享目录配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n<p>添加内容格式如下：</p>\n<pre><code>[xxFileServer]\n        path = /filedisk/xxFileServer\n        guest ok = yes\n        writable = yes\n        read only = No\n        create mask = 0777\n        directory mask = 0777\n</code></pre><h3 id=\"2-给共享目录设置相应的权限\"><a href=\"#2-给共享目录设置相应的权限\" class=\"headerlink\" title=\"2. 给共享目录设置相应的权限\"></a>2. 给共享目录设置相应的权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 /filedisk/xxFileServer</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-重启共享服务\"><a href=\"#3-重启共享服务\" class=\"headerlink\" title=\"3. 重启共享服务\"></a>3. 重启共享服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service smb restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-设置开机启动共享服务\"><a href=\"#4-设置开机启动共享服务\" class=\"headerlink\" title=\"4. 设置开机启动共享服务\"></a>4. 设置开机启动共享服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig --level 5 smb on</span><br></pre></td></tr></table></figure>","more":"<hr>\n<h2 id=\"远程挂载\"><a href=\"#远程挂载\" class=\"headerlink\" title=\"远程挂载\"></a>远程挂载</h2><h3 id=\"1-创建本地目录\"><a href=\"#1-创建本地目录\" class=\"headerlink\" title=\"1. 创建本地目录\"></a>1. 创建本地目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /var/xxFileServer</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-挂载远程目录\"><a href=\"#2-挂载远程目录\" class=\"headerlink\" title=\"2. 挂载远程目录\"></a>2. 挂载远程目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount //IP/xxFileServer /var/xxFileServer -o username=用户名,password=密码</span><br></pre></td></tr></table></figure>"},{"title":"【Linux】系统盘和数据盘","layout":"post","comments":1,"date":"2017-08-10T02:47:43.000Z","keywords":null,"description":null,"_content":"### 系统盘\n类似于Windows的C盘，Linux的系统盘可用命令`df -l`查看，可以看到根路径 / 都是位于系统盘。而/root、/home、/usr就如同Windows的C盘下的C:\\Windows、C:\\usr这些目录。\n\n<!-- more -->\n\n### 数据盘\n如果单独有数据盘，且数据盘没有分区和挂载，使用`df -l`命令是看不到的，可以使用 `fdisk -l`命令，看到有哪些硬盘，如下：\n\n\t[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n可以看到，Disk /dev/vda和Disk /dev/vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。","source":"_posts/【Linux】系统盘和数据盘.md","raw":"---\ntitle: 【Linux】系统盘和数据盘\nlayout: post\ncomments: true\ndate: 2017-08-10 10:47:43\ncategories: Linux\ntags: [Linux]\nkeywords:\ndescription:\n---\n### 系统盘\n类似于Windows的C盘，Linux的系统盘可用命令`df -l`查看，可以看到根路径 / 都是位于系统盘。而/root、/home、/usr就如同Windows的C盘下的C:\\Windows、C:\\usr这些目录。\n\n<!-- more -->\n\n### 数据盘\n如果单独有数据盘，且数据盘没有分区和挂载，使用`df -l`命令是看不到的，可以使用 `fdisk -l`命令，看到有哪些硬盘，如下：\n\n\t[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -l\n\n\tDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\tDisk label type: dos\n\tDisk identifier: 0x0008fd2d\n\n\t   Device Boot      Start         End      Blocks   Id  System\n\t/dev/vda1   *        2048    83886079    41942016   83  Linux\n\n\tDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\n\tUnits = sectors of 1 * 512 = 512 bytes\n\tSector size (logical/physical): 512 bytes / 512 bytes\n\tI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n可以看到，Disk /dev/vda和Disk /dev/vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。","slug":"【Linux】系统盘和数据盘","published":1,"updated":"2017-08-10T06:45:33.794Z","_id":"cjpuwa1j90037s0jtpiu8yxu7","photos":[],"link":"","content":"<h3 id=\"系统盘\"><a href=\"#系统盘\" class=\"headerlink\" title=\"系统盘\"></a>系统盘</h3><p>类似于Windows的C盘，Linux的系统盘可用命令<code>df -l</code>查看，可以看到根路径 / 都是位于系统盘。而/root、/home、/usr就如同Windows的C盘下的C:\\Windows、C:\\usr这些目录。</p>\n<a id=\"more\"></a>\n<h3 id=\"数据盘\"><a href=\"#数据盘\" class=\"headerlink\" title=\"数据盘\"></a>数据盘</h3><p>如果单独有数据盘，且数据盘没有分区和挂载，使用<code>df -l</code>命令是看不到的，可以使用 <code>fdisk -l</code>命令，看到有哪些硬盘，如下：</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n</code></pre><p>可以看到，Disk /dev/vda和Disk /dev/vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"系统盘\"><a href=\"#系统盘\" class=\"headerlink\" title=\"系统盘\"></a>系统盘</h3><p>类似于Windows的C盘，Linux的系统盘可用命令<code>df -l</code>查看，可以看到根路径 / 都是位于系统盘。而/root、/home、/usr就如同Windows的C盘下的C:\\Windows、C:\\usr这些目录。</p>","more":"<h3 id=\"数据盘\"><a href=\"#数据盘\" class=\"headerlink\" title=\"数据盘\"></a>数据盘</h3><p>如果单独有数据盘，且数据盘没有分区和挂载，使用<code>df -l</code>命令是看不到的，可以使用 <code>fdisk -l</code>命令，看到有哪些硬盘，如下：</p>\n<pre><code>[root@iZwe12zdi799668qfxdm5oZ /]# fdisk -l\n\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0008fd2d\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83886079    41942016   83  Linux\n\nDisk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n</code></pre><p>可以看到，Disk /dev/vda和Disk /dev/vdb表示有两块盘，但是显然vdb没有vdb1，故表示没有分区。</p>"},{"title":"【Oracle】删除和创建表空间及用户","layout":"post","comments":1,"date":"2016-11-29T02:23:08.000Z","keywords":null,"description":null,"_content":"### 1. 删除表空间和用户\n```\nDROP USER XCBA CASCADE;\nDROP tablespace XCBA_temp including contents AND datafiles;\nDROP tablespace XCBA including contents AND datafiles;\n```\n<!-- more -->\n### 2. 创建临时表空间\n```\nCREATE TEMPORARY tablespace XCBA_TEMP \ntempfile 'E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA_TEMP.dbf' \nSIZE 32m \nautoextend ON \nNEXT 32m maxsize 2048m \nextent management LOCAL;\n```\n\n### 3. 创建数据表空间\n```\nCREATE tablespace XCBA \nlogging datafile 'E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA.dbf' \nSIZE 32m \nautoextend ON \nNEXT 32m maxsize 2048m \nextent management LOCAL;\n```\n\n### 4. 创建用户并指定表空间\n```\nCREATE USER XCBA identified BY XCBA \nDEFAULT tablespace XCBA \nTEMPORARY tablespace XCBA_TEMP;\n```\n\n### 5. 给用户授予权限\n```\nGRANT CONNECT, resource TO XCBA;\nALTER USER XCBA ACCOUNT UNLOCK;\nGRANT dba TO XCBA;\nALTER USER XCBA DEFAULT role DBA\n```","source":"_posts/【Oracle】删除和创建表空间及用户.md","raw":"---\ntitle: 【Oracle】删除和创建表空间及用户\nlayout: post\ncomments: true\ndate: 2016-11-29 10:23:08\ncategories: Oracle\ntags: [Oracle, 创建表空间]\nkeywords:\ndescription:\n---\n### 1. 删除表空间和用户\n```\nDROP USER XCBA CASCADE;\nDROP tablespace XCBA_temp including contents AND datafiles;\nDROP tablespace XCBA including contents AND datafiles;\n```\n<!-- more -->\n### 2. 创建临时表空间\n```\nCREATE TEMPORARY tablespace XCBA_TEMP \ntempfile 'E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA_TEMP.dbf' \nSIZE 32m \nautoextend ON \nNEXT 32m maxsize 2048m \nextent management LOCAL;\n```\n\n### 3. 创建数据表空间\n```\nCREATE tablespace XCBA \nlogging datafile 'E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA.dbf' \nSIZE 32m \nautoextend ON \nNEXT 32m maxsize 2048m \nextent management LOCAL;\n```\n\n### 4. 创建用户并指定表空间\n```\nCREATE USER XCBA identified BY XCBA \nDEFAULT tablespace XCBA \nTEMPORARY tablespace XCBA_TEMP;\n```\n\n### 5. 给用户授予权限\n```\nGRANT CONNECT, resource TO XCBA;\nALTER USER XCBA ACCOUNT UNLOCK;\nGRANT dba TO XCBA;\nALTER USER XCBA DEFAULT role DBA\n```","slug":"【Oracle】删除和创建表空间及用户","published":1,"updated":"2017-02-27T04:13:03.349Z","_id":"cjpuwa1jb0039s0jt1sa9nd4o","photos":[],"link":"","content":"<h3 id=\"1-删除表空间和用户\"><a href=\"#1-删除表空间和用户\" class=\"headerlink\" title=\"1. 删除表空间和用户\"></a>1. 删除表空间和用户</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP USER XCBA CASCADE;</span><br><span class=\"line\">DROP tablespace XCBA_temp including contents AND datafiles;</span><br><span class=\"line\">DROP tablespace XCBA including contents AND datafiles;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"2-创建临时表空间\"><a href=\"#2-创建临时表空间\" class=\"headerlink\" title=\"2. 创建临时表空间\"></a>2. 创建临时表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TEMPORARY tablespace XCBA_TEMP </span><br><span class=\"line\">tempfile &apos;E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA_TEMP.dbf&apos; </span><br><span class=\"line\">SIZE 32m </span><br><span class=\"line\">autoextend ON </span><br><span class=\"line\">NEXT 32m maxsize 2048m </span><br><span class=\"line\">extent management LOCAL;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-创建数据表空间\"><a href=\"#3-创建数据表空间\" class=\"headerlink\" title=\"3. 创建数据表空间\"></a>3. 创建数据表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE tablespace XCBA </span><br><span class=\"line\">logging datafile &apos;E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA.dbf&apos; </span><br><span class=\"line\">SIZE 32m </span><br><span class=\"line\">autoextend ON </span><br><span class=\"line\">NEXT 32m maxsize 2048m </span><br><span class=\"line\">extent management LOCAL;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-创建用户并指定表空间\"><a href=\"#4-创建用户并指定表空间\" class=\"headerlink\" title=\"4. 创建用户并指定表空间\"></a>4. 创建用户并指定表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER XCBA identified BY XCBA </span><br><span class=\"line\">DEFAULT tablespace XCBA </span><br><span class=\"line\">TEMPORARY tablespace XCBA_TEMP;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-给用户授予权限\"><a href=\"#5-给用户授予权限\" class=\"headerlink\" title=\"5. 给用户授予权限\"></a>5. 给用户授予权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT CONNECT, resource TO XCBA;</span><br><span class=\"line\">ALTER USER XCBA ACCOUNT UNLOCK;</span><br><span class=\"line\">GRANT dba TO XCBA;</span><br><span class=\"line\">ALTER USER XCBA DEFAULT role DBA</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"1-删除表空间和用户\"><a href=\"#1-删除表空间和用户\" class=\"headerlink\" title=\"1. 删除表空间和用户\"></a>1. 删除表空间和用户</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP USER XCBA CASCADE;</span><br><span class=\"line\">DROP tablespace XCBA_temp including contents AND datafiles;</span><br><span class=\"line\">DROP tablespace XCBA including contents AND datafiles;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"2-创建临时表空间\"><a href=\"#2-创建临时表空间\" class=\"headerlink\" title=\"2. 创建临时表空间\"></a>2. 创建临时表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TEMPORARY tablespace XCBA_TEMP </span><br><span class=\"line\">tempfile &apos;E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA_TEMP.dbf&apos; </span><br><span class=\"line\">SIZE 32m </span><br><span class=\"line\">autoextend ON </span><br><span class=\"line\">NEXT 32m maxsize 2048m </span><br><span class=\"line\">extent management LOCAL;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-创建数据表空间\"><a href=\"#3-创建数据表空间\" class=\"headerlink\" title=\"3. 创建数据表空间\"></a>3. 创建数据表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE tablespace XCBA </span><br><span class=\"line\">logging datafile &apos;E:\\oracle\\product\\10.2.0\\oradata\\XCBA\\XCBA.dbf&apos; </span><br><span class=\"line\">SIZE 32m </span><br><span class=\"line\">autoextend ON </span><br><span class=\"line\">NEXT 32m maxsize 2048m </span><br><span class=\"line\">extent management LOCAL;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-创建用户并指定表空间\"><a href=\"#4-创建用户并指定表空间\" class=\"headerlink\" title=\"4. 创建用户并指定表空间\"></a>4. 创建用户并指定表空间</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER XCBA identified BY XCBA </span><br><span class=\"line\">DEFAULT tablespace XCBA </span><br><span class=\"line\">TEMPORARY tablespace XCBA_TEMP;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-给用户授予权限\"><a href=\"#5-给用户授予权限\" class=\"headerlink\" title=\"5. 给用户授予权限\"></a>5. 给用户授予权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT CONNECT, resource TO XCBA;</span><br><span class=\"line\">ALTER USER XCBA ACCOUNT UNLOCK;</span><br><span class=\"line\">GRANT dba TO XCBA;</span><br><span class=\"line\">ALTER USER XCBA DEFAULT role DBA</span><br></pre></td></tr></table></figure>"},{"title":"【Linux】命令学习","date":"2016-11-22T07:02:51.000Z","_content":"## 基础命令\n### 系统\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| reboot                                       | 重启系统                                                                   |\n| shutdown -r now                              | 重启系统                                                                   |\n| shutdown -c                                  | 取消重启                                                                   |\n| halt                                         | 立刻关机                                                                   |\n| poweroff                                     | 立刻关机                                                                   |\n| shutdown -h now                              | 立刻关机（root用户使用）                                                   |\n| shutdown -h 10                               | 10分钟后自动关机                                                           |\n| yum update                                   | 升级Linux，升级所有包同时也升级软件和系统内核                              |\n| yum upgrade                                  | 升级Linux，只升级所有包，不升级软件和系统内核                              |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| cat /proc/version                            | 查看内核版本                                                               |\n| uname -a                                     | 查看内核版本                                                               |\n| lsb_release -a                               | 查看系统版本                                                               |\n| cat /etc/issue                               | 查看系统版本                                                               |\n| cat /etc/redhat-release                      | 查看系统版本（只适合Redhat系）                                             |\n| getconf LONG_BIT                             | 查看系统位数                                                               |\n| cat /proc/cpuinfo                            | 查看CPU型号                                                                |\n| top                                          | 查看实时CPU使用率                                                          |\n| free -m                                      | 查看内存                                                                   |\n| df -l                                        | 查看硬盘空间情况                                                           |\n| du -sh ./*                                   | 查看当前目录下各文件/文件夹的大小                                          |\n| jps                                          | 查看当前所有Java进程pid的命令                                              |\n| kill                                         | 删除执行中的程序或工作                                                     |\n| kill -9                                      | 强制终止执行中的程序或工作                                                 |\n\n<!-- more -->\n\n---\n\n### 文件\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| cd                                           | 改变目录到                                                                 |\n| cd ~                                         | 回到家目录                                                                 |\n| pwd                                          | 查看当前路径                                                               |\n| mkdir                                        | 创建文件夹                                                                 |\n| touch                                        | 创建文件                                                                   |\n| rm                                           | 删除文件                                                                   |\n| rm -r                                        | 删除文件夹                                                                 |\n| rm -fr                                       | 直接删除，无需确认                                                         |\n| cp                                           | 复制                                                                       |\n| mv                                           | 移动                                                                       |\n| find                                         | 查找                                                                       |\n| which                                        | 查找                                                                       |\n| cat                                          | 查看文本内容                                                               |\n| head                                         | 查看文本前十行                                                             |\n| tail                                         | 查看文本后十行                                                             |\n| more                                         | 让文件内容一屏一屏的显示                                                   |\n| cat XXX &#124; more                          | 管道：将cat显示出来的内容重新输出给more命令                                |\n| >                                            | 重定向：将文件内容输出到指定的文件或位置。如cat /etc/services > a.txt      |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| ls -i                                        | 使用ls -i命令找到文件或文件夹的节点编号                                    |\n| find -inum 2243223 -delete                   | 使用find命令查询并且删除乱码文件或文件夹                                   |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| rm -rf fileA                                 | 删除文件或文件夹fileA的软链接                                              |\n| ln -s fileB fileA                            | 设置软链接用快捷方式fileB代替fileA                                         |\n| ln fileB fileA                               | 建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删                 |\n| ----------------------------------------------------   | ------------------------------------------------------------------ |\n| **删除指定文件夹下后缀名相同的文件**                   |                                                                    |\n| ----------------------------------------------------   | ------------------------------------------------------------------ |\n| find 目录 -name '*.abc' &#124; xargs rm                | 命令危险，可先执行前半段进行查看, 确认后再整条执行                 |\n| find . -name '*.exe' -type f -print -exec rm -rf {} \\; | 1) \".\"表示从当前目录开始递归查找                                   |\n|                                                        | 2) “-name '*.exe'\"根据名称来查找所有以.exe结尾的文件夹或者文件     |\n|                                                        | 3) \"-type f\"查找的类型为文件                                       |\n|                                                        | 4) \"-print\"输出查找的文件目录名                                    |\n|                                                        | 5) \"-exec\"后边跟要执行的命令，表示将find出来的文件或目录执行该命令 |\n|                                                        | 最后是一对{}，一个空格和一个\\，一个分号                            |\n\n---\n\n### 网络\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| netstat -apn                                 | 查看所有的进程和端口使用情况                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n\n---\n\n### vi\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **进入vi**                                   |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| vi filename                                  | 打开或新建文件，并将光标置于第一行首                                       |\n| vi +n filename                               | 打开文件，并将光标置于第n行首                                              |\n| vi + filename                                | 打开文件，并将光标置于最后一行首                                           |\n| vi +/pattern filename                        | 打开文件，并将光标置于第一个与pattern匹配的串处                            |\n| vi -r filename                               | 在上次正用vi编辑时发生系统崩溃，恢复filename                               |\n| vi filename....filename                      | 打开多个文件，依次进行编辑                                                 |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **保存退出**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| :                                            | 进入Last line mode                                                         |\n| w                                            | 保存当前文件                                                               |\n| w /tmp1                                      | 另存为/tmp1                                                                |\n| 20,59w /tmp1                                 | 仅将20-59行之间的内存另存为/tmp1                                           |\n| x 或 wq                                      | 保存并退出                                                                 |\n| q                                            | 退出vi                                                                     |\n| q!                                           | 退出不保存                                                                 |\n| !command                                     | 执行shell命令command                                                       |\n|n1,n2 w !command | 将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入|\n| r !command                                   | 将命令command的输出结果放到当前行                                          |\n| w !sudo tee %                                | 保存没权限时，可获取权限再保存                                             |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **光标移动**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| h                                            | 光标左移一个字符                                                           |\n| Backspace                                    | 光标左移一个字符                                                           |\n| l                                            | 光标右移一个字符                                                           |\n| spac                                         | 光标右移一个字符                                                           |\n| k 或 Ctrl+p                                  | 光标上移一行                                                               |\n| j 或 Ctrl+n                                  | 光标下移一行                                                               |\n| Enter                                        | 光标下移一行                                                               |\n| w 或 W                                       | 光标右移一个字至字首                                                       |\n| b 或 B                                       | 光标左移一个字至字首                                                       |\n| e 或 E                                       | 光标右移一个字至字尾                                                       |\n| )                                            | 光标移至句尾                                                               |\n| (                                            | 光标移至句首                                                               |\n| }                                            | 光标移至段落开头                                                           |\n| {                                            | 光标移至段落结尾                                                           |\n| nG                                           | 光标移至第n行首                                                            |\n| n+                                           | 光标下移n行                                                                |\n| n-                                           | 光标上移n行                                                                |\n| n$                                           | 光标移至第n行尾                                                            |\n| H                                            | 光标移至屏幕顶行                                                           |\n| M                                            | 光标移至屏幕中间行                                                         |\n| L                                            | 光标移至屏幕最后行                                                         |\n| 0                                            | （注意是数字零）光标移至当前行首                                           |\n| $                                            | 光标移至当前行尾                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **屏幕翻滚**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| Ctrl+u                                       | 向文件首翻半屏                                                             |\n| Ctrl+d                                       | 向文件尾翻半屏                                                             |\n| Ctrl+f                                       | 向文件尾翻一屏                                                             |\n| Ctrl+b                                       | 向文件首翻一屏                                                             |\n| nz                                           | 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部                         |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **插入**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| i                                            | 在光标前                                                                   |\n| I                                            | 在当前行首                                                                 |\n| a                                            | 光标后                                                                     |\n| A                                            | 在当前行尾                                                                 |\n| o                                            | 在当前行之下新开一行                                                       |\n| O                                            | 在当前行之上新开一行                                                       |\n| r                                            | 替换当前字符                                                               |\n| R                                            | 替换当前字符及其后的字符，直至按ESC键                                      |\n| s                                            | 从当前光标位置处开始，以输入的文本替代指定数目的字符                       |\n| S                                            | 删除指定数目的行，并以所输入文本代替之                                     |\n| ncw 或 nCW                                   | 修改指定数目的字                                                           |\n| nCC                                          | 修改指定数目的行                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **删除**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| ndw 或 ndW                                   | 删除光标处开始及其后的n-1个字                                              |\n| do                                           | 删至行首                                                                   |\n| d$                                           | 删至行尾                                                                   |\n| ndd                                          | 删除当前行及其后n-1行                                                      |\n| x 或 X                                       | 删除一个字符，x删除光标后的，而X删除光标前的                               |\n| Ctrl+u                                       | 删除输入方式下所输入的文本                                                 |\n| n1,n2 d                                      | 将n1行到n2行之间的内容删除                                                 |\n| %d                                           | 删除全部内容                                                               |\n| 1,$d                                         | 删除全部内容                                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **复制粘贴、剪切、移动**                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| yy                                           | 复制当前行                                                                 |\n| nyy                                          | 复制当前行开始的n行                                                        |\n| 先按 v 然后方向键选择区域，按 y 复制选中行   | 复制选中行                                                                 |\n| dd                                           | 剪切当前行                                                                 |\n| p（小）                                      | 在当前光标处下面粘贴内容。                                                 |\n| P（大）                                      | 在当前光标处上面粘贴内容                                                   |\n| n1,n2 co n3                                  | 将n1行到n2行之间的内容拷贝到第n3行下                                       |\n| n1,n2 m n3                                   | 将n1行到n2行之间的内容移至到第n3行下                                       |\n| u                                            | 撤销上一步的操作                                                           |\n| Ctrl+r                                       | 恢复上一步被撤销的操作                                                     |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **搜索（查找）**                             |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| /abc                                         | 从光标开始处向文件尾搜索abc                                                |\n| ?abc                                         | 从光标开始处向文件首搜索abc                                                |\n| /\\/abc                                       | 从光标开始处向文件尾搜索/abc，其中\\/是转义                                 |\n| n                                            | 在同一方向重复上一次搜索命令                                               |\n| N                                            | 在反方向上重复上一次搜索命令                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **替换**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| s/vivian/sky/                                | 替换当前行第一个 vivian 为 sky                                             |\n| s/vivian/sky/g                               | 替换当前行所有 vivian 为 sky                                               |\n| n,$s/vivian/sky/                             | 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky                    |\n| n,$s/vivian/sky/g                            | 替换第 n 行开始到最后一行中每一行所有 vivian 为sky                         |\n| %s/vivian/sky/g                              | （等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky               |\n|s#vivian/#sky/#              | 替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）|\n| s/p1/p2/g                                    | 将当前行中所有p1均用p2替代                                                 |\n| n1,n2s/p1/p2/g                               | 将第n1至n2行中所有p1均用p2替代                                             |\n| g/p1/s//p2/g                                 | 将文件中所有p1均用p2替换                                                   |\n| -------------------------------------------- | --------------------------------------------------------------------------       |\n| **寄存器**                                   |                                                                                  |\n| -------------------------------------------- | --------------------------------------------------------------------------       |\n| \"?nyy                                        | 将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字            |\n| \"?nyw                                        | 将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字                |\n| \"?nyl                                        | 将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字              |\n| \"?p                                          | 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 |\n| ndd                                          | 将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。                   |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **选项设置**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| set number                                   | 显示行号                                                                   |\n| set number!                                  | 不显示行号，其它选项同理加！号                                             |\n| set all                                      | 列出所有选项设置情况                                                       |\n| set term                                     | 设置终端类型                                                               |\n| set ignorance                                | 在搜索中忽略大小写                                                         |\n| set list                                     | 显示制表位(Ctrl+I)和行尾标志（$)                                           |\n| set report                                   | 显示由面向行的命令修改过的数目                                             |\n| set terse                                    | 显示简短的警告信息                                                         |\n| set warn                                     | 在转到别的文件时若没保存当前文件则显示NO write信息                         |\n| set nomagic                                  | 允许在搜索模式中，使用前面不带“\\”的特殊字符                                |\n| set nowrapscan                               | 禁止vi在搜索到达文件两端时，又从另一端开始                                 |\n| set mesg                                     | 允许vi显示其他用户用write写到自己终端上的信息                              |\n","source":"_posts/【Linux】命令学习.md","raw":"---\ntitle: 【Linux】命令学习\ndate: 2016-11-22 15:02:51\ncategories: OS\ntags: [Linux, 命令]\n---\n## 基础命令\n### 系统\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| reboot                                       | 重启系统                                                                   |\n| shutdown -r now                              | 重启系统                                                                   |\n| shutdown -c                                  | 取消重启                                                                   |\n| halt                                         | 立刻关机                                                                   |\n| poweroff                                     | 立刻关机                                                                   |\n| shutdown -h now                              | 立刻关机（root用户使用）                                                   |\n| shutdown -h 10                               | 10分钟后自动关机                                                           |\n| yum update                                   | 升级Linux，升级所有包同时也升级软件和系统内核                              |\n| yum upgrade                                  | 升级Linux，只升级所有包，不升级软件和系统内核                              |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| cat /proc/version                            | 查看内核版本                                                               |\n| uname -a                                     | 查看内核版本                                                               |\n| lsb_release -a                               | 查看系统版本                                                               |\n| cat /etc/issue                               | 查看系统版本                                                               |\n| cat /etc/redhat-release                      | 查看系统版本（只适合Redhat系）                                             |\n| getconf LONG_BIT                             | 查看系统位数                                                               |\n| cat /proc/cpuinfo                            | 查看CPU型号                                                                |\n| top                                          | 查看实时CPU使用率                                                          |\n| free -m                                      | 查看内存                                                                   |\n| df -l                                        | 查看硬盘空间情况                                                           |\n| du -sh ./*                                   | 查看当前目录下各文件/文件夹的大小                                          |\n| jps                                          | 查看当前所有Java进程pid的命令                                              |\n| kill                                         | 删除执行中的程序或工作                                                     |\n| kill -9                                      | 强制终止执行中的程序或工作                                                 |\n\n<!-- more -->\n\n---\n\n### 文件\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| cd                                           | 改变目录到                                                                 |\n| cd ~                                         | 回到家目录                                                                 |\n| pwd                                          | 查看当前路径                                                               |\n| mkdir                                        | 创建文件夹                                                                 |\n| touch                                        | 创建文件                                                                   |\n| rm                                           | 删除文件                                                                   |\n| rm -r                                        | 删除文件夹                                                                 |\n| rm -fr                                       | 直接删除，无需确认                                                         |\n| cp                                           | 复制                                                                       |\n| mv                                           | 移动                                                                       |\n| find                                         | 查找                                                                       |\n| which                                        | 查找                                                                       |\n| cat                                          | 查看文本内容                                                               |\n| head                                         | 查看文本前十行                                                             |\n| tail                                         | 查看文本后十行                                                             |\n| more                                         | 让文件内容一屏一屏的显示                                                   |\n| cat XXX &#124; more                          | 管道：将cat显示出来的内容重新输出给more命令                                |\n| >                                            | 重定向：将文件内容输出到指定的文件或位置。如cat /etc/services > a.txt      |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| ls -i                                        | 使用ls -i命令找到文件或文件夹的节点编号                                    |\n| find -inum 2243223 -delete                   | 使用find命令查询并且删除乱码文件或文件夹                                   |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| rm -rf fileA                                 | 删除文件或文件夹fileA的软链接                                              |\n| ln -s fileB fileA                            | 设置软链接用快捷方式fileB代替fileA                                         |\n| ln fileB fileA                               | 建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删                 |\n| ----------------------------------------------------   | ------------------------------------------------------------------ |\n| **删除指定文件夹下后缀名相同的文件**                   |                                                                    |\n| ----------------------------------------------------   | ------------------------------------------------------------------ |\n| find 目录 -name '*.abc' &#124; xargs rm                | 命令危险，可先执行前半段进行查看, 确认后再整条执行                 |\n| find . -name '*.exe' -type f -print -exec rm -rf {} \\; | 1) \".\"表示从当前目录开始递归查找                                   |\n|                                                        | 2) “-name '*.exe'\"根据名称来查找所有以.exe结尾的文件夹或者文件     |\n|                                                        | 3) \"-type f\"查找的类型为文件                                       |\n|                                                        | 4) \"-print\"输出查找的文件目录名                                    |\n|                                                        | 5) \"-exec\"后边跟要执行的命令，表示将find出来的文件或目录执行该命令 |\n|                                                        | 最后是一对{}，一个空格和一个\\，一个分号                            |\n\n---\n\n### 网络\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| netstat -apn                                 | 查看所有的进程和端口使用情况                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n\n---\n\n### vi\n| 命令                                         | 说明                                                                       |\n| ---------------                              | :---------------                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **进入vi**                                   |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| vi filename                                  | 打开或新建文件，并将光标置于第一行首                                       |\n| vi +n filename                               | 打开文件，并将光标置于第n行首                                              |\n| vi + filename                                | 打开文件，并将光标置于最后一行首                                           |\n| vi +/pattern filename                        | 打开文件，并将光标置于第一个与pattern匹配的串处                            |\n| vi -r filename                               | 在上次正用vi编辑时发生系统崩溃，恢复filename                               |\n| vi filename....filename                      | 打开多个文件，依次进行编辑                                                 |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **保存退出**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| :                                            | 进入Last line mode                                                         |\n| w                                            | 保存当前文件                                                               |\n| w /tmp1                                      | 另存为/tmp1                                                                |\n| 20,59w /tmp1                                 | 仅将20-59行之间的内存另存为/tmp1                                           |\n| x 或 wq                                      | 保存并退出                                                                 |\n| q                                            | 退出vi                                                                     |\n| q!                                           | 退出不保存                                                                 |\n| !command                                     | 执行shell命令command                                                       |\n|n1,n2 w !command | 将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入|\n| r !command                                   | 将命令command的输出结果放到当前行                                          |\n| w !sudo tee %                                | 保存没权限时，可获取权限再保存                                             |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **光标移动**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| h                                            | 光标左移一个字符                                                           |\n| Backspace                                    | 光标左移一个字符                                                           |\n| l                                            | 光标右移一个字符                                                           |\n| spac                                         | 光标右移一个字符                                                           |\n| k 或 Ctrl+p                                  | 光标上移一行                                                               |\n| j 或 Ctrl+n                                  | 光标下移一行                                                               |\n| Enter                                        | 光标下移一行                                                               |\n| w 或 W                                       | 光标右移一个字至字首                                                       |\n| b 或 B                                       | 光标左移一个字至字首                                                       |\n| e 或 E                                       | 光标右移一个字至字尾                                                       |\n| )                                            | 光标移至句尾                                                               |\n| (                                            | 光标移至句首                                                               |\n| }                                            | 光标移至段落开头                                                           |\n| {                                            | 光标移至段落结尾                                                           |\n| nG                                           | 光标移至第n行首                                                            |\n| n+                                           | 光标下移n行                                                                |\n| n-                                           | 光标上移n行                                                                |\n| n$                                           | 光标移至第n行尾                                                            |\n| H                                            | 光标移至屏幕顶行                                                           |\n| M                                            | 光标移至屏幕中间行                                                         |\n| L                                            | 光标移至屏幕最后行                                                         |\n| 0                                            | （注意是数字零）光标移至当前行首                                           |\n| $                                            | 光标移至当前行尾                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **屏幕翻滚**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| Ctrl+u                                       | 向文件首翻半屏                                                             |\n| Ctrl+d                                       | 向文件尾翻半屏                                                             |\n| Ctrl+f                                       | 向文件尾翻一屏                                                             |\n| Ctrl+b                                       | 向文件首翻一屏                                                             |\n| nz                                           | 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部                         |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **插入**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| i                                            | 在光标前                                                                   |\n| I                                            | 在当前行首                                                                 |\n| a                                            | 光标后                                                                     |\n| A                                            | 在当前行尾                                                                 |\n| o                                            | 在当前行之下新开一行                                                       |\n| O                                            | 在当前行之上新开一行                                                       |\n| r                                            | 替换当前字符                                                               |\n| R                                            | 替换当前字符及其后的字符，直至按ESC键                                      |\n| s                                            | 从当前光标位置处开始，以输入的文本替代指定数目的字符                       |\n| S                                            | 删除指定数目的行，并以所输入文本代替之                                     |\n| ncw 或 nCW                                   | 修改指定数目的字                                                           |\n| nCC                                          | 修改指定数目的行                                                           |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **删除**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| ndw 或 ndW                                   | 删除光标处开始及其后的n-1个字                                              |\n| do                                           | 删至行首                                                                   |\n| d$                                           | 删至行尾                                                                   |\n| ndd                                          | 删除当前行及其后n-1行                                                      |\n| x 或 X                                       | 删除一个字符，x删除光标后的，而X删除光标前的                               |\n| Ctrl+u                                       | 删除输入方式下所输入的文本                                                 |\n| n1,n2 d                                      | 将n1行到n2行之间的内容删除                                                 |\n| %d                                           | 删除全部内容                                                               |\n| 1,$d                                         | 删除全部内容                                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **复制粘贴、剪切、移动**                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| yy                                           | 复制当前行                                                                 |\n| nyy                                          | 复制当前行开始的n行                                                        |\n| 先按 v 然后方向键选择区域，按 y 复制选中行   | 复制选中行                                                                 |\n| dd                                           | 剪切当前行                                                                 |\n| p（小）                                      | 在当前光标处下面粘贴内容。                                                 |\n| P（大）                                      | 在当前光标处上面粘贴内容                                                   |\n| n1,n2 co n3                                  | 将n1行到n2行之间的内容拷贝到第n3行下                                       |\n| n1,n2 m n3                                   | 将n1行到n2行之间的内容移至到第n3行下                                       |\n| u                                            | 撤销上一步的操作                                                           |\n| Ctrl+r                                       | 恢复上一步被撤销的操作                                                     |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **搜索（查找）**                             |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| /abc                                         | 从光标开始处向文件尾搜索abc                                                |\n| ?abc                                         | 从光标开始处向文件首搜索abc                                                |\n| /\\/abc                                       | 从光标开始处向文件尾搜索/abc，其中\\/是转义                                 |\n| n                                            | 在同一方向重复上一次搜索命令                                               |\n| N                                            | 在反方向上重复上一次搜索命令                                               |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **替换**                                     |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| s/vivian/sky/                                | 替换当前行第一个 vivian 为 sky                                             |\n| s/vivian/sky/g                               | 替换当前行所有 vivian 为 sky                                               |\n| n,$s/vivian/sky/                             | 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky                    |\n| n,$s/vivian/sky/g                            | 替换第 n 行开始到最后一行中每一行所有 vivian 为sky                         |\n| %s/vivian/sky/g                              | （等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky               |\n|s#vivian/#sky/#              | 替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）|\n| s/p1/p2/g                                    | 将当前行中所有p1均用p2替代                                                 |\n| n1,n2s/p1/p2/g                               | 将第n1至n2行中所有p1均用p2替代                                             |\n| g/p1/s//p2/g                                 | 将文件中所有p1均用p2替换                                                   |\n| -------------------------------------------- | --------------------------------------------------------------------------       |\n| **寄存器**                                   |                                                                                  |\n| -------------------------------------------- | --------------------------------------------------------------------------       |\n| \"?nyy                                        | 将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字            |\n| \"?nyw                                        | 将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字                |\n| \"?nyl                                        | 将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字              |\n| \"?p                                          | 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 |\n| ndd                                          | 将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。                   |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| **选项设置**                                 |                                                                            |\n| -------------------------------------------- | -------------------------------------------------------------------------- |\n| set number                                   | 显示行号                                                                   |\n| set number!                                  | 不显示行号，其它选项同理加！号                                             |\n| set all                                      | 列出所有选项设置情况                                                       |\n| set term                                     | 设置终端类型                                                               |\n| set ignorance                                | 在搜索中忽略大小写                                                         |\n| set list                                     | 显示制表位(Ctrl+I)和行尾标志（$)                                           |\n| set report                                   | 显示由面向行的命令修改过的数目                                             |\n| set terse                                    | 显示简短的警告信息                                                         |\n| set warn                                     | 在转到别的文件时若没保存当前文件则显示NO write信息                         |\n| set nomagic                                  | 允许在搜索模式中，使用前面不带“\\”的特殊字符                                |\n| set nowrapscan                               | 禁止vi在搜索到达文件两端时，又从另一端开始                                 |\n| set mesg                                     | 允许vi显示其他用户用write写到自己终端上的信息                              |\n","slug":"【Linux】命令学习","published":1,"updated":"2018-04-11T15:39:45.152Z","_id":"cjpuwa1je003cs0jt5us3etcy","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reboot</td>\n<td style=\"text-align:left\">重启系统</td>\n</tr>\n<tr>\n<td>shutdown -r now</td>\n<td style=\"text-align:left\">重启系统</td>\n</tr>\n<tr>\n<td>shutdown -c</td>\n<td style=\"text-align:left\">取消重启</td>\n</tr>\n<tr>\n<td>halt</td>\n<td style=\"text-align:left\">立刻关机</td>\n</tr>\n<tr>\n<td>poweroff</td>\n<td style=\"text-align:left\">立刻关机</td>\n</tr>\n<tr>\n<td>shutdown -h now</td>\n<td style=\"text-align:left\">立刻关机（root用户使用）</td>\n</tr>\n<tr>\n<td>shutdown -h 10</td>\n<td style=\"text-align:left\">10分钟后自动关机</td>\n</tr>\n<tr>\n<td>yum update</td>\n<td style=\"text-align:left\">升级Linux，升级所有包同时也升级软件和系统内核</td>\n</tr>\n<tr>\n<td>yum upgrade</td>\n<td style=\"text-align:left\">升级Linux，只升级所有包，不升级软件和系统内核</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>cat /proc/version</td>\n<td style=\"text-align:left\">查看内核版本</td>\n</tr>\n<tr>\n<td>uname -a</td>\n<td style=\"text-align:left\">查看内核版本</td>\n</tr>\n<tr>\n<td>lsb_release -a</td>\n<td style=\"text-align:left\">查看系统版本</td>\n</tr>\n<tr>\n<td>cat /etc/issue</td>\n<td style=\"text-align:left\">查看系统版本</td>\n</tr>\n<tr>\n<td>cat /etc/redhat-release</td>\n<td style=\"text-align:left\">查看系统版本（只适合Redhat系）</td>\n</tr>\n<tr>\n<td>getconf LONG_BIT</td>\n<td style=\"text-align:left\">查看系统位数</td>\n</tr>\n<tr>\n<td>cat /proc/cpuinfo</td>\n<td style=\"text-align:left\">查看CPU型号</td>\n</tr>\n<tr>\n<td>top</td>\n<td style=\"text-align:left\">查看实时CPU使用率</td>\n</tr>\n<tr>\n<td>free -m</td>\n<td style=\"text-align:left\">查看内存</td>\n</tr>\n<tr>\n<td>df -l</td>\n<td style=\"text-align:left\">查看硬盘空间情况</td>\n</tr>\n<tr>\n<td>du -sh ./*</td>\n<td style=\"text-align:left\">查看当前目录下各文件/文件夹的大小</td>\n</tr>\n<tr>\n<td>jps</td>\n<td style=\"text-align:left\">查看当前所有Java进程pid的命令</td>\n</tr>\n<tr>\n<td>kill</td>\n<td style=\"text-align:left\">删除执行中的程序或工作</td>\n</tr>\n<tr>\n<td>kill -9</td>\n<td style=\"text-align:left\">强制终止执行中的程序或工作</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cd</td>\n<td style=\"text-align:left\">改变目录到</td>\n</tr>\n<tr>\n<td>cd ~</td>\n<td style=\"text-align:left\">回到家目录</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td style=\"text-align:left\">查看当前路径</td>\n</tr>\n<tr>\n<td>mkdir</td>\n<td style=\"text-align:left\">创建文件夹</td>\n</tr>\n<tr>\n<td>touch</td>\n<td style=\"text-align:left\">创建文件</td>\n</tr>\n<tr>\n<td>rm</td>\n<td style=\"text-align:left\">删除文件</td>\n</tr>\n<tr>\n<td>rm -r</td>\n<td style=\"text-align:left\">删除文件夹</td>\n</tr>\n<tr>\n<td>rm -fr</td>\n<td style=\"text-align:left\">直接删除，无需确认</td>\n</tr>\n<tr>\n<td>cp</td>\n<td style=\"text-align:left\">复制</td>\n</tr>\n<tr>\n<td>mv</td>\n<td style=\"text-align:left\">移动</td>\n</tr>\n<tr>\n<td>find</td>\n<td style=\"text-align:left\">查找</td>\n</tr>\n<tr>\n<td>which</td>\n<td style=\"text-align:left\">查找</td>\n</tr>\n<tr>\n<td>cat</td>\n<td style=\"text-align:left\">查看文本内容</td>\n</tr>\n<tr>\n<td>head</td>\n<td style=\"text-align:left\">查看文本前十行</td>\n</tr>\n<tr>\n<td>tail</td>\n<td style=\"text-align:left\">查看文本后十行</td>\n</tr>\n<tr>\n<td>more</td>\n<td style=\"text-align:left\">让文件内容一屏一屏的显示</td>\n</tr>\n<tr>\n<td>cat XXX &#124; more</td>\n<td style=\"text-align:left\">管道：将cat显示出来的内容重新输出给more命令</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td style=\"text-align:left\">重定向：将文件内容输出到指定的文件或位置。如cat /etc/services &gt; a.txt</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>ls -i</td>\n<td style=\"text-align:left\">使用ls -i命令找到文件或文件夹的节点编号</td>\n</tr>\n<tr>\n<td>find -inum 2243223 -delete</td>\n<td style=\"text-align:left\">使用find命令查询并且删除乱码文件或文件夹</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>rm -rf fileA</td>\n<td style=\"text-align:left\">删除文件或文件夹fileA的软链接</td>\n</tr>\n<tr>\n<td>ln -s fileB fileA</td>\n<td style=\"text-align:left\">设置软链接用快捷方式fileB代替fileA</td>\n</tr>\n<tr>\n<td>ln fileB fileA</td>\n<td style=\"text-align:left\">建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删</td>\n</tr>\n<tr>\n<td>—————————————————-</td>\n<td style=\"text-align:left\">——————————————————————</td>\n</tr>\n<tr>\n<td><strong>删除指定文件夹下后缀名相同的文件</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>—————————————————-</td>\n<td style=\"text-align:left\">——————————————————————</td>\n</tr>\n<tr>\n<td>find 目录 -name ‘*.abc’ &#124; xargs rm</td>\n<td style=\"text-align:left\">命令危险，可先执行前半段进行查看, 确认后再整条执行</td>\n</tr>\n<tr>\n<td>find . -name ‘*.exe’ -type f -print -exec rm -rf {} \\;</td>\n<td style=\"text-align:left\">1) “.”表示从当前目录开始递归查找</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">2) “-name ‘*.exe’”根据名称来查找所有以.exe结尾的文件夹或者文件</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">3) “-type f”查找的类型为文件</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">4) “-print”输出查找的文件目录名</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">5) “-exec”后边跟要执行的命令，表示将find出来的文件或目录执行该命令</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">最后是一对{}，一个空格和一个\\，一个分号</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>netstat -apn</td>\n<td style=\"text-align:left\">查看所有的进程和端口使用情况</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"vi\"><a href=\"#vi\" class=\"headerlink\" title=\"vi\"></a>vi</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>进入vi</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>vi filename</td>\n<td style=\"text-align:left\">打开或新建文件，并将光标置于第一行首</td>\n</tr>\n<tr>\n<td>vi +n filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于第n行首</td>\n</tr>\n<tr>\n<td>vi + filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于最后一行首</td>\n</tr>\n<tr>\n<td>vi +/pattern filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于第一个与pattern匹配的串处</td>\n</tr>\n<tr>\n<td>vi -r filename</td>\n<td style=\"text-align:left\">在上次正用vi编辑时发生系统崩溃，恢复filename</td>\n</tr>\n<tr>\n<td>vi filename….filename</td>\n<td style=\"text-align:left\">打开多个文件，依次进行编辑</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>保存退出</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>:</td>\n<td style=\"text-align:left\">进入Last line mode</td>\n</tr>\n<tr>\n<td>w</td>\n<td style=\"text-align:left\">保存当前文件</td>\n</tr>\n<tr>\n<td>w /tmp1</td>\n<td style=\"text-align:left\">另存为/tmp1</td>\n</tr>\n<tr>\n<td>20,59w /tmp1</td>\n<td style=\"text-align:left\">仅将20-59行之间的内存另存为/tmp1</td>\n</tr>\n<tr>\n<td>x 或 wq</td>\n<td style=\"text-align:left\">保存并退出</td>\n</tr>\n<tr>\n<td>q</td>\n<td style=\"text-align:left\">退出vi</td>\n</tr>\n<tr>\n<td>q!</td>\n<td style=\"text-align:left\">退出不保存</td>\n</tr>\n<tr>\n<td>!command</td>\n<td style=\"text-align:left\">执行shell命令command</td>\n</tr>\n<tr>\n<td>n1,n2 w !command</td>\n<td style=\"text-align:left\">将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</td>\n</tr>\n<tr>\n<td>r !command</td>\n<td style=\"text-align:left\">将命令command的输出结果放到当前行</td>\n</tr>\n<tr>\n<td>w !sudo tee %</td>\n<td style=\"text-align:left\">保存没权限时，可获取权限再保存</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>光标移动</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>h</td>\n<td style=\"text-align:left\">光标左移一个字符</td>\n</tr>\n<tr>\n<td>Backspace</td>\n<td style=\"text-align:left\">光标左移一个字符</td>\n</tr>\n<tr>\n<td>l</td>\n<td style=\"text-align:left\">光标右移一个字符</td>\n</tr>\n<tr>\n<td>spac</td>\n<td style=\"text-align:left\">光标右移一个字符</td>\n</tr>\n<tr>\n<td>k 或 Ctrl+p</td>\n<td style=\"text-align:left\">光标上移一行</td>\n</tr>\n<tr>\n<td>j 或 Ctrl+n</td>\n<td style=\"text-align:left\">光标下移一行</td>\n</tr>\n<tr>\n<td>Enter</td>\n<td style=\"text-align:left\">光标下移一行</td>\n</tr>\n<tr>\n<td>w 或 W</td>\n<td style=\"text-align:left\">光标右移一个字至字首</td>\n</tr>\n<tr>\n<td>b 或 B</td>\n<td style=\"text-align:left\">光标左移一个字至字首</td>\n</tr>\n<tr>\n<td>e 或 E</td>\n<td style=\"text-align:left\">光标右移一个字至字尾</td>\n</tr>\n<tr>\n<td>)</td>\n<td style=\"text-align:left\">光标移至句尾</td>\n</tr>\n<tr>\n<td>(</td>\n<td style=\"text-align:left\">光标移至句首</td>\n</tr>\n<tr>\n<td>}</td>\n<td style=\"text-align:left\">光标移至段落开头</td>\n</tr>\n<tr>\n<td>{</td>\n<td style=\"text-align:left\">光标移至段落结尾</td>\n</tr>\n<tr>\n<td>nG</td>\n<td style=\"text-align:left\">光标移至第n行首</td>\n</tr>\n<tr>\n<td>n+</td>\n<td style=\"text-align:left\">光标下移n行</td>\n</tr>\n<tr>\n<td>n-</td>\n<td style=\"text-align:left\">光标上移n行</td>\n</tr>\n<tr>\n<td>n$</td>\n<td style=\"text-align:left\">光标移至第n行尾</td>\n</tr>\n<tr>\n<td>H</td>\n<td style=\"text-align:left\">光标移至屏幕顶行</td>\n</tr>\n<tr>\n<td>M</td>\n<td style=\"text-align:left\">光标移至屏幕中间行</td>\n</tr>\n<tr>\n<td>L</td>\n<td style=\"text-align:left\">光标移至屏幕最后行</td>\n</tr>\n<tr>\n<td>0</td>\n<td style=\"text-align:left\">（注意是数字零）光标移至当前行首</td>\n</tr>\n<tr>\n<td>$</td>\n<td style=\"text-align:left\">光标移至当前行尾</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>屏幕翻滚</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>Ctrl+u</td>\n<td style=\"text-align:left\">向文件首翻半屏</td>\n</tr>\n<tr>\n<td>Ctrl+d</td>\n<td style=\"text-align:left\">向文件尾翻半屏</td>\n</tr>\n<tr>\n<td>Ctrl+f</td>\n<td style=\"text-align:left\">向文件尾翻一屏</td>\n</tr>\n<tr>\n<td>Ctrl+b</td>\n<td style=\"text-align:left\">向文件首翻一屏</td>\n</tr>\n<tr>\n<td>nz</td>\n<td style=\"text-align:left\">将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>插入</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>i</td>\n<td style=\"text-align:left\">在光标前</td>\n</tr>\n<tr>\n<td>I</td>\n<td style=\"text-align:left\">在当前行首</td>\n</tr>\n<tr>\n<td>a</td>\n<td style=\"text-align:left\">光标后</td>\n</tr>\n<tr>\n<td>A</td>\n<td style=\"text-align:left\">在当前行尾</td>\n</tr>\n<tr>\n<td>o</td>\n<td style=\"text-align:left\">在当前行之下新开一行</td>\n</tr>\n<tr>\n<td>O</td>\n<td style=\"text-align:left\">在当前行之上新开一行</td>\n</tr>\n<tr>\n<td>r</td>\n<td style=\"text-align:left\">替换当前字符</td>\n</tr>\n<tr>\n<td>R</td>\n<td style=\"text-align:left\">替换当前字符及其后的字符，直至按ESC键</td>\n</tr>\n<tr>\n<td>s</td>\n<td style=\"text-align:left\">从当前光标位置处开始，以输入的文本替代指定数目的字符</td>\n</tr>\n<tr>\n<td>S</td>\n<td style=\"text-align:left\">删除指定数目的行，并以所输入文本代替之</td>\n</tr>\n<tr>\n<td>ncw 或 nCW</td>\n<td style=\"text-align:left\">修改指定数目的字</td>\n</tr>\n<tr>\n<td>nCC</td>\n<td style=\"text-align:left\">修改指定数目的行</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>删除</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>ndw 或 ndW</td>\n<td style=\"text-align:left\">删除光标处开始及其后的n-1个字</td>\n</tr>\n<tr>\n<td>do</td>\n<td style=\"text-align:left\">删至行首</td>\n</tr>\n<tr>\n<td>d$</td>\n<td style=\"text-align:left\">删至行尾</td>\n</tr>\n<tr>\n<td>ndd</td>\n<td style=\"text-align:left\">删除当前行及其后n-1行</td>\n</tr>\n<tr>\n<td>x 或 X</td>\n<td style=\"text-align:left\">删除一个字符，x删除光标后的，而X删除光标前的</td>\n</tr>\n<tr>\n<td>Ctrl+u</td>\n<td style=\"text-align:left\">删除输入方式下所输入的文本</td>\n</tr>\n<tr>\n<td>n1,n2 d</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容删除</td>\n</tr>\n<tr>\n<td>%d</td>\n<td style=\"text-align:left\">删除全部内容</td>\n</tr>\n<tr>\n<td>1,$d</td>\n<td style=\"text-align:left\">删除全部内容</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>复制粘贴、剪切、移动</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>yy</td>\n<td style=\"text-align:left\">复制当前行</td>\n</tr>\n<tr>\n<td>nyy</td>\n<td style=\"text-align:left\">复制当前行开始的n行</td>\n</tr>\n<tr>\n<td>先按 v 然后方向键选择区域，按 y 复制选中行</td>\n<td style=\"text-align:left\">复制选中行</td>\n</tr>\n<tr>\n<td>dd</td>\n<td style=\"text-align:left\">剪切当前行</td>\n</tr>\n<tr>\n<td>p（小）</td>\n<td style=\"text-align:left\">在当前光标处下面粘贴内容。</td>\n</tr>\n<tr>\n<td>P（大）</td>\n<td style=\"text-align:left\">在当前光标处上面粘贴内容</td>\n</tr>\n<tr>\n<td>n1,n2 co n3</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容拷贝到第n3行下</td>\n</tr>\n<tr>\n<td>n1,n2 m n3</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容移至到第n3行下</td>\n</tr>\n<tr>\n<td>u</td>\n<td style=\"text-align:left\">撤销上一步的操作</td>\n</tr>\n<tr>\n<td>Ctrl+r</td>\n<td style=\"text-align:left\">恢复上一步被撤销的操作</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>搜索（查找）</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>/abc</td>\n<td style=\"text-align:left\">从光标开始处向文件尾搜索abc</td>\n</tr>\n<tr>\n<td>?abc</td>\n<td style=\"text-align:left\">从光标开始处向文件首搜索abc</td>\n</tr>\n<tr>\n<td>/\\/abc</td>\n<td style=\"text-align:left\">从光标开始处向文件尾搜索/abc，其中\\/是转义</td>\n</tr>\n<tr>\n<td>n</td>\n<td style=\"text-align:left\">在同一方向重复上一次搜索命令</td>\n</tr>\n<tr>\n<td>N</td>\n<td style=\"text-align:left\">在反方向上重复上一次搜索命令</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>替换</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>s/vivian/sky/</td>\n<td style=\"text-align:left\">替换当前行第一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>s/vivian/sky/g</td>\n<td style=\"text-align:left\">替换当前行所有 vivian 为 sky</td>\n</tr>\n<tr>\n<td>n,$s/vivian/sky/</td>\n<td style=\"text-align:left\">替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>n,$s/vivian/sky/g</td>\n<td style=\"text-align:left\">替换第 n 行开始到最后一行中每一行所有 vivian 为sky</td>\n</tr>\n<tr>\n<td>%s/vivian/sky/g</td>\n<td style=\"text-align:left\">（等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>s#vivian/#sky/#</td>\n<td style=\"text-align:left\">替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）</td>\n</tr>\n<tr>\n<td>s/p1/p2/g</td>\n<td style=\"text-align:left\">将当前行中所有p1均用p2替代</td>\n</tr>\n<tr>\n<td>n1,n2s/p1/p2/g</td>\n<td style=\"text-align:left\">将第n1至n2行中所有p1均用p2替代</td>\n</tr>\n<tr>\n<td>g/p1/s//p2/g</td>\n<td style=\"text-align:left\">将文件中所有p1均用p2替换</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>寄存器</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>“?nyy</td>\n<td style=\"text-align:left\">将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?nyw</td>\n<td style=\"text-align:left\">将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?nyl</td>\n<td style=\"text-align:left\">将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?p</td>\n<td style=\"text-align:left\">取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td>\n</tr>\n<tr>\n<td>ndd</td>\n<td style=\"text-align:left\">将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>选项设置</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>set number</td>\n<td style=\"text-align:left\">显示行号</td>\n</tr>\n<tr>\n<td>set number!</td>\n<td style=\"text-align:left\">不显示行号，其它选项同理加！号</td>\n</tr>\n<tr>\n<td>set all</td>\n<td style=\"text-align:left\">列出所有选项设置情况</td>\n</tr>\n<tr>\n<td>set term</td>\n<td style=\"text-align:left\">设置终端类型</td>\n</tr>\n<tr>\n<td>set ignorance</td>\n<td style=\"text-align:left\">在搜索中忽略大小写</td>\n</tr>\n<tr>\n<td>set list</td>\n<td style=\"text-align:left\">显示制表位(Ctrl+I)和行尾标志（$)</td>\n</tr>\n<tr>\n<td>set report</td>\n<td style=\"text-align:left\">显示由面向行的命令修改过的数目</td>\n</tr>\n<tr>\n<td>set terse</td>\n<td style=\"text-align:left\">显示简短的警告信息</td>\n</tr>\n<tr>\n<td>set warn</td>\n<td style=\"text-align:left\">在转到别的文件时若没保存当前文件则显示NO write信息</td>\n</tr>\n<tr>\n<td>set nomagic</td>\n<td style=\"text-align:left\">允许在搜索模式中，使用前面不带“\\”的特殊字符</td>\n</tr>\n<tr>\n<td>set nowrapscan</td>\n<td style=\"text-align:left\">禁止vi在搜索到达文件两端时，又从另一端开始</td>\n</tr>\n<tr>\n<td>set mesg</td>\n<td style=\"text-align:left\">允许vi显示其他用户用write写到自己终端上的信息</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reboot</td>\n<td style=\"text-align:left\">重启系统</td>\n</tr>\n<tr>\n<td>shutdown -r now</td>\n<td style=\"text-align:left\">重启系统</td>\n</tr>\n<tr>\n<td>shutdown -c</td>\n<td style=\"text-align:left\">取消重启</td>\n</tr>\n<tr>\n<td>halt</td>\n<td style=\"text-align:left\">立刻关机</td>\n</tr>\n<tr>\n<td>poweroff</td>\n<td style=\"text-align:left\">立刻关机</td>\n</tr>\n<tr>\n<td>shutdown -h now</td>\n<td style=\"text-align:left\">立刻关机（root用户使用）</td>\n</tr>\n<tr>\n<td>shutdown -h 10</td>\n<td style=\"text-align:left\">10分钟后自动关机</td>\n</tr>\n<tr>\n<td>yum update</td>\n<td style=\"text-align:left\">升级Linux，升级所有包同时也升级软件和系统内核</td>\n</tr>\n<tr>\n<td>yum upgrade</td>\n<td style=\"text-align:left\">升级Linux，只升级所有包，不升级软件和系统内核</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>cat /proc/version</td>\n<td style=\"text-align:left\">查看内核版本</td>\n</tr>\n<tr>\n<td>uname -a</td>\n<td style=\"text-align:left\">查看内核版本</td>\n</tr>\n<tr>\n<td>lsb_release -a</td>\n<td style=\"text-align:left\">查看系统版本</td>\n</tr>\n<tr>\n<td>cat /etc/issue</td>\n<td style=\"text-align:left\">查看系统版本</td>\n</tr>\n<tr>\n<td>cat /etc/redhat-release</td>\n<td style=\"text-align:left\">查看系统版本（只适合Redhat系）</td>\n</tr>\n<tr>\n<td>getconf LONG_BIT</td>\n<td style=\"text-align:left\">查看系统位数</td>\n</tr>\n<tr>\n<td>cat /proc/cpuinfo</td>\n<td style=\"text-align:left\">查看CPU型号</td>\n</tr>\n<tr>\n<td>top</td>\n<td style=\"text-align:left\">查看实时CPU使用率</td>\n</tr>\n<tr>\n<td>free -m</td>\n<td style=\"text-align:left\">查看内存</td>\n</tr>\n<tr>\n<td>df -l</td>\n<td style=\"text-align:left\">查看硬盘空间情况</td>\n</tr>\n<tr>\n<td>du -sh ./*</td>\n<td style=\"text-align:left\">查看当前目录下各文件/文件夹的大小</td>\n</tr>\n<tr>\n<td>jps</td>\n<td style=\"text-align:left\">查看当前所有Java进程pid的命令</td>\n</tr>\n<tr>\n<td>kill</td>\n<td style=\"text-align:left\">删除执行中的程序或工作</td>\n</tr>\n<tr>\n<td>kill -9</td>\n<td style=\"text-align:left\">强制终止执行中的程序或工作</td>\n</tr>\n</tbody>\n</table>","more":"<hr>\n<h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cd</td>\n<td style=\"text-align:left\">改变目录到</td>\n</tr>\n<tr>\n<td>cd ~</td>\n<td style=\"text-align:left\">回到家目录</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td style=\"text-align:left\">查看当前路径</td>\n</tr>\n<tr>\n<td>mkdir</td>\n<td style=\"text-align:left\">创建文件夹</td>\n</tr>\n<tr>\n<td>touch</td>\n<td style=\"text-align:left\">创建文件</td>\n</tr>\n<tr>\n<td>rm</td>\n<td style=\"text-align:left\">删除文件</td>\n</tr>\n<tr>\n<td>rm -r</td>\n<td style=\"text-align:left\">删除文件夹</td>\n</tr>\n<tr>\n<td>rm -fr</td>\n<td style=\"text-align:left\">直接删除，无需确认</td>\n</tr>\n<tr>\n<td>cp</td>\n<td style=\"text-align:left\">复制</td>\n</tr>\n<tr>\n<td>mv</td>\n<td style=\"text-align:left\">移动</td>\n</tr>\n<tr>\n<td>find</td>\n<td style=\"text-align:left\">查找</td>\n</tr>\n<tr>\n<td>which</td>\n<td style=\"text-align:left\">查找</td>\n</tr>\n<tr>\n<td>cat</td>\n<td style=\"text-align:left\">查看文本内容</td>\n</tr>\n<tr>\n<td>head</td>\n<td style=\"text-align:left\">查看文本前十行</td>\n</tr>\n<tr>\n<td>tail</td>\n<td style=\"text-align:left\">查看文本后十行</td>\n</tr>\n<tr>\n<td>more</td>\n<td style=\"text-align:left\">让文件内容一屏一屏的显示</td>\n</tr>\n<tr>\n<td>cat XXX &#124; more</td>\n<td style=\"text-align:left\">管道：将cat显示出来的内容重新输出给more命令</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td style=\"text-align:left\">重定向：将文件内容输出到指定的文件或位置。如cat /etc/services &gt; a.txt</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>ls -i</td>\n<td style=\"text-align:left\">使用ls -i命令找到文件或文件夹的节点编号</td>\n</tr>\n<tr>\n<td>find -inum 2243223 -delete</td>\n<td style=\"text-align:left\">使用find命令查询并且删除乱码文件或文件夹</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>rm -rf fileA</td>\n<td style=\"text-align:left\">删除文件或文件夹fileA的软链接</td>\n</tr>\n<tr>\n<td>ln -s fileB fileA</td>\n<td style=\"text-align:left\">设置软链接用快捷方式fileB代替fileA</td>\n</tr>\n<tr>\n<td>ln fileB fileA</td>\n<td style=\"text-align:left\">建立硬链接，相当于一个文件存储在两个位置，可以有效防止误删</td>\n</tr>\n<tr>\n<td>—————————————————-</td>\n<td style=\"text-align:left\">——————————————————————</td>\n</tr>\n<tr>\n<td><strong>删除指定文件夹下后缀名相同的文件</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>—————————————————-</td>\n<td style=\"text-align:left\">——————————————————————</td>\n</tr>\n<tr>\n<td>find 目录 -name ‘*.abc’ &#124; xargs rm</td>\n<td style=\"text-align:left\">命令危险，可先执行前半段进行查看, 确认后再整条执行</td>\n</tr>\n<tr>\n<td>find . -name ‘*.exe’ -type f -print -exec rm -rf {} \\;</td>\n<td style=\"text-align:left\">1) “.”表示从当前目录开始递归查找</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">2) “-name ‘*.exe’”根据名称来查找所有以.exe结尾的文件夹或者文件</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">3) “-type f”查找的类型为文件</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">4) “-print”输出查找的文件目录名</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">5) “-exec”后边跟要执行的命令，表示将find出来的文件或目录执行该命令</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:left\">最后是一对{}，一个空格和一个\\，一个分号</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>netstat -apn</td>\n<td style=\"text-align:left\">查看所有的进程和端口使用情况</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"vi\"><a href=\"#vi\" class=\"headerlink\" title=\"vi\"></a>vi</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>进入vi</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>vi filename</td>\n<td style=\"text-align:left\">打开或新建文件，并将光标置于第一行首</td>\n</tr>\n<tr>\n<td>vi +n filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于第n行首</td>\n</tr>\n<tr>\n<td>vi + filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于最后一行首</td>\n</tr>\n<tr>\n<td>vi +/pattern filename</td>\n<td style=\"text-align:left\">打开文件，并将光标置于第一个与pattern匹配的串处</td>\n</tr>\n<tr>\n<td>vi -r filename</td>\n<td style=\"text-align:left\">在上次正用vi编辑时发生系统崩溃，恢复filename</td>\n</tr>\n<tr>\n<td>vi filename….filename</td>\n<td style=\"text-align:left\">打开多个文件，依次进行编辑</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>保存退出</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>:</td>\n<td style=\"text-align:left\">进入Last line mode</td>\n</tr>\n<tr>\n<td>w</td>\n<td style=\"text-align:left\">保存当前文件</td>\n</tr>\n<tr>\n<td>w /tmp1</td>\n<td style=\"text-align:left\">另存为/tmp1</td>\n</tr>\n<tr>\n<td>20,59w /tmp1</td>\n<td style=\"text-align:left\">仅将20-59行之间的内存另存为/tmp1</td>\n</tr>\n<tr>\n<td>x 或 wq</td>\n<td style=\"text-align:left\">保存并退出</td>\n</tr>\n<tr>\n<td>q</td>\n<td style=\"text-align:left\">退出vi</td>\n</tr>\n<tr>\n<td>q!</td>\n<td style=\"text-align:left\">退出不保存</td>\n</tr>\n<tr>\n<td>!command</td>\n<td style=\"text-align:left\">执行shell命令command</td>\n</tr>\n<tr>\n<td>n1,n2 w !command</td>\n<td style=\"text-align:left\">将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</td>\n</tr>\n<tr>\n<td>r !command</td>\n<td style=\"text-align:left\">将命令command的输出结果放到当前行</td>\n</tr>\n<tr>\n<td>w !sudo tee %</td>\n<td style=\"text-align:left\">保存没权限时，可获取权限再保存</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>光标移动</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>h</td>\n<td style=\"text-align:left\">光标左移一个字符</td>\n</tr>\n<tr>\n<td>Backspace</td>\n<td style=\"text-align:left\">光标左移一个字符</td>\n</tr>\n<tr>\n<td>l</td>\n<td style=\"text-align:left\">光标右移一个字符</td>\n</tr>\n<tr>\n<td>spac</td>\n<td style=\"text-align:left\">光标右移一个字符</td>\n</tr>\n<tr>\n<td>k 或 Ctrl+p</td>\n<td style=\"text-align:left\">光标上移一行</td>\n</tr>\n<tr>\n<td>j 或 Ctrl+n</td>\n<td style=\"text-align:left\">光标下移一行</td>\n</tr>\n<tr>\n<td>Enter</td>\n<td style=\"text-align:left\">光标下移一行</td>\n</tr>\n<tr>\n<td>w 或 W</td>\n<td style=\"text-align:left\">光标右移一个字至字首</td>\n</tr>\n<tr>\n<td>b 或 B</td>\n<td style=\"text-align:left\">光标左移一个字至字首</td>\n</tr>\n<tr>\n<td>e 或 E</td>\n<td style=\"text-align:left\">光标右移一个字至字尾</td>\n</tr>\n<tr>\n<td>)</td>\n<td style=\"text-align:left\">光标移至句尾</td>\n</tr>\n<tr>\n<td>(</td>\n<td style=\"text-align:left\">光标移至句首</td>\n</tr>\n<tr>\n<td>}</td>\n<td style=\"text-align:left\">光标移至段落开头</td>\n</tr>\n<tr>\n<td>{</td>\n<td style=\"text-align:left\">光标移至段落结尾</td>\n</tr>\n<tr>\n<td>nG</td>\n<td style=\"text-align:left\">光标移至第n行首</td>\n</tr>\n<tr>\n<td>n+</td>\n<td style=\"text-align:left\">光标下移n行</td>\n</tr>\n<tr>\n<td>n-</td>\n<td style=\"text-align:left\">光标上移n行</td>\n</tr>\n<tr>\n<td>n$</td>\n<td style=\"text-align:left\">光标移至第n行尾</td>\n</tr>\n<tr>\n<td>H</td>\n<td style=\"text-align:left\">光标移至屏幕顶行</td>\n</tr>\n<tr>\n<td>M</td>\n<td style=\"text-align:left\">光标移至屏幕中间行</td>\n</tr>\n<tr>\n<td>L</td>\n<td style=\"text-align:left\">光标移至屏幕最后行</td>\n</tr>\n<tr>\n<td>0</td>\n<td style=\"text-align:left\">（注意是数字零）光标移至当前行首</td>\n</tr>\n<tr>\n<td>$</td>\n<td style=\"text-align:left\">光标移至当前行尾</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>屏幕翻滚</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>Ctrl+u</td>\n<td style=\"text-align:left\">向文件首翻半屏</td>\n</tr>\n<tr>\n<td>Ctrl+d</td>\n<td style=\"text-align:left\">向文件尾翻半屏</td>\n</tr>\n<tr>\n<td>Ctrl+f</td>\n<td style=\"text-align:left\">向文件尾翻一屏</td>\n</tr>\n<tr>\n<td>Ctrl+b</td>\n<td style=\"text-align:left\">向文件首翻一屏</td>\n</tr>\n<tr>\n<td>nz</td>\n<td style=\"text-align:left\">将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>插入</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>i</td>\n<td style=\"text-align:left\">在光标前</td>\n</tr>\n<tr>\n<td>I</td>\n<td style=\"text-align:left\">在当前行首</td>\n</tr>\n<tr>\n<td>a</td>\n<td style=\"text-align:left\">光标后</td>\n</tr>\n<tr>\n<td>A</td>\n<td style=\"text-align:left\">在当前行尾</td>\n</tr>\n<tr>\n<td>o</td>\n<td style=\"text-align:left\">在当前行之下新开一行</td>\n</tr>\n<tr>\n<td>O</td>\n<td style=\"text-align:left\">在当前行之上新开一行</td>\n</tr>\n<tr>\n<td>r</td>\n<td style=\"text-align:left\">替换当前字符</td>\n</tr>\n<tr>\n<td>R</td>\n<td style=\"text-align:left\">替换当前字符及其后的字符，直至按ESC键</td>\n</tr>\n<tr>\n<td>s</td>\n<td style=\"text-align:left\">从当前光标位置处开始，以输入的文本替代指定数目的字符</td>\n</tr>\n<tr>\n<td>S</td>\n<td style=\"text-align:left\">删除指定数目的行，并以所输入文本代替之</td>\n</tr>\n<tr>\n<td>ncw 或 nCW</td>\n<td style=\"text-align:left\">修改指定数目的字</td>\n</tr>\n<tr>\n<td>nCC</td>\n<td style=\"text-align:left\">修改指定数目的行</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>删除</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>ndw 或 ndW</td>\n<td style=\"text-align:left\">删除光标处开始及其后的n-1个字</td>\n</tr>\n<tr>\n<td>do</td>\n<td style=\"text-align:left\">删至行首</td>\n</tr>\n<tr>\n<td>d$</td>\n<td style=\"text-align:left\">删至行尾</td>\n</tr>\n<tr>\n<td>ndd</td>\n<td style=\"text-align:left\">删除当前行及其后n-1行</td>\n</tr>\n<tr>\n<td>x 或 X</td>\n<td style=\"text-align:left\">删除一个字符，x删除光标后的，而X删除光标前的</td>\n</tr>\n<tr>\n<td>Ctrl+u</td>\n<td style=\"text-align:left\">删除输入方式下所输入的文本</td>\n</tr>\n<tr>\n<td>n1,n2 d</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容删除</td>\n</tr>\n<tr>\n<td>%d</td>\n<td style=\"text-align:left\">删除全部内容</td>\n</tr>\n<tr>\n<td>1,$d</td>\n<td style=\"text-align:left\">删除全部内容</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>复制粘贴、剪切、移动</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>yy</td>\n<td style=\"text-align:left\">复制当前行</td>\n</tr>\n<tr>\n<td>nyy</td>\n<td style=\"text-align:left\">复制当前行开始的n行</td>\n</tr>\n<tr>\n<td>先按 v 然后方向键选择区域，按 y 复制选中行</td>\n<td style=\"text-align:left\">复制选中行</td>\n</tr>\n<tr>\n<td>dd</td>\n<td style=\"text-align:left\">剪切当前行</td>\n</tr>\n<tr>\n<td>p（小）</td>\n<td style=\"text-align:left\">在当前光标处下面粘贴内容。</td>\n</tr>\n<tr>\n<td>P（大）</td>\n<td style=\"text-align:left\">在当前光标处上面粘贴内容</td>\n</tr>\n<tr>\n<td>n1,n2 co n3</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容拷贝到第n3行下</td>\n</tr>\n<tr>\n<td>n1,n2 m n3</td>\n<td style=\"text-align:left\">将n1行到n2行之间的内容移至到第n3行下</td>\n</tr>\n<tr>\n<td>u</td>\n<td style=\"text-align:left\">撤销上一步的操作</td>\n</tr>\n<tr>\n<td>Ctrl+r</td>\n<td style=\"text-align:left\">恢复上一步被撤销的操作</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>搜索（查找）</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>/abc</td>\n<td style=\"text-align:left\">从光标开始处向文件尾搜索abc</td>\n</tr>\n<tr>\n<td>?abc</td>\n<td style=\"text-align:left\">从光标开始处向文件首搜索abc</td>\n</tr>\n<tr>\n<td>/\\/abc</td>\n<td style=\"text-align:left\">从光标开始处向文件尾搜索/abc，其中\\/是转义</td>\n</tr>\n<tr>\n<td>n</td>\n<td style=\"text-align:left\">在同一方向重复上一次搜索命令</td>\n</tr>\n<tr>\n<td>N</td>\n<td style=\"text-align:left\">在反方向上重复上一次搜索命令</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>替换</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>s/vivian/sky/</td>\n<td style=\"text-align:left\">替换当前行第一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>s/vivian/sky/g</td>\n<td style=\"text-align:left\">替换当前行所有 vivian 为 sky</td>\n</tr>\n<tr>\n<td>n,$s/vivian/sky/</td>\n<td style=\"text-align:left\">替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>n,$s/vivian/sky/g</td>\n<td style=\"text-align:left\">替换第 n 行开始到最后一行中每一行所有 vivian 为sky</td>\n</tr>\n<tr>\n<td>%s/vivian/sky/g</td>\n<td style=\"text-align:left\">（等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky</td>\n</tr>\n<tr>\n<td>s#vivian/#sky/#</td>\n<td style=\"text-align:left\">替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）</td>\n</tr>\n<tr>\n<td>s/p1/p2/g</td>\n<td style=\"text-align:left\">将当前行中所有p1均用p2替代</td>\n</tr>\n<tr>\n<td>n1,n2s/p1/p2/g</td>\n<td style=\"text-align:left\">将第n1至n2行中所有p1均用p2替代</td>\n</tr>\n<tr>\n<td>g/p1/s//p2/g</td>\n<td style=\"text-align:left\">将文件中所有p1均用p2替换</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>寄存器</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>“?nyy</td>\n<td style=\"text-align:left\">将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?nyw</td>\n<td style=\"text-align:left\">将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?nyl</td>\n<td style=\"text-align:left\">将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</td>\n</tr>\n<tr>\n<td>“?p</td>\n<td style=\"text-align:left\">取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td>\n</tr>\n<tr>\n<td>ndd</td>\n<td style=\"text-align:left\">将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td><strong>选项设置</strong></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td>——————————————–</td>\n<td style=\"text-align:left\">————————————————————————–</td>\n</tr>\n<tr>\n<td>set number</td>\n<td style=\"text-align:left\">显示行号</td>\n</tr>\n<tr>\n<td>set number!</td>\n<td style=\"text-align:left\">不显示行号，其它选项同理加！号</td>\n</tr>\n<tr>\n<td>set all</td>\n<td style=\"text-align:left\">列出所有选项设置情况</td>\n</tr>\n<tr>\n<td>set term</td>\n<td style=\"text-align:left\">设置终端类型</td>\n</tr>\n<tr>\n<td>set ignorance</td>\n<td style=\"text-align:left\">在搜索中忽略大小写</td>\n</tr>\n<tr>\n<td>set list</td>\n<td style=\"text-align:left\">显示制表位(Ctrl+I)和行尾标志（$)</td>\n</tr>\n<tr>\n<td>set report</td>\n<td style=\"text-align:left\">显示由面向行的命令修改过的数目</td>\n</tr>\n<tr>\n<td>set terse</td>\n<td style=\"text-align:left\">显示简短的警告信息</td>\n</tr>\n<tr>\n<td>set warn</td>\n<td style=\"text-align:left\">在转到别的文件时若没保存当前文件则显示NO write信息</td>\n</tr>\n<tr>\n<td>set nomagic</td>\n<td style=\"text-align:left\">允许在搜索模式中，使用前面不带“\\”的特殊字符</td>\n</tr>\n<tr>\n<td>set nowrapscan</td>\n<td style=\"text-align:left\">禁止vi在搜索到达文件两端时，又从另一端开始</td>\n</tr>\n<tr>\n<td>set mesg</td>\n<td style=\"text-align:left\">允许vi显示其他用户用write写到自己终端上的信息</td>\n</tr>\n</tbody>\n</table>"},{"title":"【Oracle】imp和exp语句","layout":"post","comments":1,"date":"2016-11-29T02:33:32.000Z","keywords":"备份","description":null,"_content":"## exp/imp命令详解\nexp\t\t导出命令\nimp\t\t导入命令\n\n**exp导出模式**\nfull模式：导出整个数据库\nuser模式：导出指定的用户\ntable模式：导出指定的表\ntablespace模式：导出表空间\n\n**exp导出参数**\nowner：指定要导出的用户列表\nfull=y：表示要导出整个数据库\ntables：指定要导出的表\ntablepaces：指定要导出的表空间\nrows=y：表示导出表数据,否则只导出表的结构.\nhelp=y：表示要获取帮助\nindexs：指定是否导出索引\ngrants：表示是否导出授权\nquery：定查询条件,允许用户导出表的一部分数据\ntriggers：指定是否导出触发器\n<!-- more -->\n## exp/imp使用方法\n```\nimp username/password@connect_string param=value …\nexp username/password@connect_string param=value …\n```\n例如：\n```\nexp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log owner=(xcba)\nimp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log full=y ignore=y\n```\n> 导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。\n具体作法：将“HKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”\n\n## exp/imp导入导出方式\n\n### 1. 表方式，将指定表的数据导出/导入。\n**导出：**\n导出一张或几张表：\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2\n```\n\n如果是分区表\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2\n```\n\n导出某张表的部分数据\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\<…\\” \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\<…\\”\n```\n\n**导入：**\n导入一张或几张表\n```\n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y \n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y\n```\n\n如果是分区表\n```\n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y \n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y\n```\n\n### 2. 用户方式，将指定用户的所有对象及数据导出/导入。\n**导出：**\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)\n```\n\n只导出数据对象，不导出数据  (rows=n )\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n\n```\n\n**导入：**\n```\nimp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y \nimp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y\n```\n\n### 3. 全库方式，将数据库中的所有对象导出/导入\n**导出：**\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y\n```\n\n**导入：**\n```\n$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2\n```","source":"_posts/【Oracle】imp和exp语句.md","raw":"---\ntitle: 【Oracle】imp和exp语句\nlayout: post\ncomments: true\ndate: 2016-11-29 10:33:32\ncategories: Oracle\ntags: [Oracle, 导入导出]\nkeywords: 备份\ndescription:\n---\n## exp/imp命令详解\nexp\t\t导出命令\nimp\t\t导入命令\n\n**exp导出模式**\nfull模式：导出整个数据库\nuser模式：导出指定的用户\ntable模式：导出指定的表\ntablespace模式：导出表空间\n\n**exp导出参数**\nowner：指定要导出的用户列表\nfull=y：表示要导出整个数据库\ntables：指定要导出的表\ntablepaces：指定要导出的表空间\nrows=y：表示导出表数据,否则只导出表的结构.\nhelp=y：表示要获取帮助\nindexs：指定是否导出索引\ngrants：表示是否导出授权\nquery：定查询条件,允许用户导出表的一部分数据\ntriggers：指定是否导出触发器\n<!-- more -->\n## exp/imp使用方法\n```\nimp username/password@connect_string param=value …\nexp username/password@connect_string param=value …\n```\n例如：\n```\nexp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log owner=(xcba)\nimp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log full=y ignore=y\n```\n> 导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。\n具体作法：将“HKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”\n\n## exp/imp导入导出方式\n\n### 1. 表方式，将指定表的数据导出/导入。\n**导出：**\n导出一张或几张表：\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2\n```\n\n如果是分区表\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2\n```\n\n导出某张表的部分数据\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\<…\\” \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\<…\\”\n```\n\n**导入：**\n导入一张或几张表\n```\n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y \n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y\n```\n\n如果是分区表\n```\n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y \n$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y\n```\n\n### 2. 用户方式，将指定用户的所有对象及数据导出/导入。\n**导出：**\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)\n```\n\n只导出数据对象，不导出数据  (rows=n )\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n\n```\n\n**导入：**\n```\nimp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y \nimp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y\n```\n\n### 3. 全库方式，将数据库中的所有对象导出/导入\n**导出：**\n```\n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y \n$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y\n```\n\n**导入：**\n```\n$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2\n```","slug":"【Oracle】imp和exp语句","published":1,"updated":"2017-02-27T04:12:48.902Z","_id":"cjpuwa1jh003es0jtzdyk5v3q","photos":[],"link":"","content":"<h2 id=\"exp-imp命令详解\"><a href=\"#exp-imp命令详解\" class=\"headerlink\" title=\"exp/imp命令详解\"></a>exp/imp命令详解</h2><p>exp        导出命令<br>imp        导入命令</p>\n<p><strong>exp导出模式</strong><br>full模式：导出整个数据库<br>user模式：导出指定的用户<br>table模式：导出指定的表<br>tablespace模式：导出表空间</p>\n<p><strong>exp导出参数</strong><br>owner：指定要导出的用户列表<br>full=y：表示要导出整个数据库<br>tables：指定要导出的表<br>tablepaces：指定要导出的表空间<br>rows=y：表示导出表数据,否则只导出表的结构.<br>help=y：表示要获取帮助<br>indexs：指定是否导出索引<br>grants：表示是否导出授权<br>query：定查询条件,允许用户导出表的一部分数据<br>triggers：指定是否导出触发器<br><a id=\"more\"></a></p>\n<h2 id=\"exp-imp使用方法\"><a href=\"#exp-imp使用方法\" class=\"headerlink\" title=\"exp/imp使用方法\"></a>exp/imp使用方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imp username/password@connect_string param=value …</span><br><span class=\"line\">exp username/password@connect_string param=value …</span><br></pre></td></tr></table></figure>\n<p>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log owner=(xcba)</span><br><span class=\"line\">imp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log full=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。<br>具体作法：将“HKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”</p>\n</blockquote>\n<h2 id=\"exp-imp导入导出方式\"><a href=\"#exp-imp导入导出方式\" class=\"headerlink\" title=\"exp/imp导入导出方式\"></a>exp/imp导入导出方式</h2><h3 id=\"1-表方式，将指定表的数据导出-导入。\"><a href=\"#1-表方式，将指定表的数据导出-导入。\" class=\"headerlink\" title=\"1. 表方式，将指定表的数据导出/导入。\"></a>1. 表方式，将指定表的数据导出/导入。</h3><p><strong>导出：</strong><br>导出一张或几张表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2</span><br></pre></td></tr></table></figure></p>\n<p>如果是分区表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2</span><br></pre></td></tr></table></figure></p>\n<p>导出某张表的部分数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\&lt;…\\” </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\&lt;…\\”</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br>导入一张或几张表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<p>如果是分区表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-用户方式，将指定用户的所有对象及数据导出-导入。\"><a href=\"#2-用户方式，将指定用户的所有对象及数据导出-导入。\" class=\"headerlink\" title=\"2. 用户方式，将指定用户的所有对象及数据导出/导入。\"></a>2. 用户方式，将指定用户的所有对象及数据导出/导入。</h3><p><strong>导出：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)</span><br></pre></td></tr></table></figure></p>\n<p>只导出数据对象，不导出数据  (rows=n )<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y </span><br><span class=\"line\">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-全库方式，将数据库中的所有对象导出-导入\"><a href=\"#3-全库方式，将数据库中的所有对象导出-导入\" class=\"headerlink\" title=\"3. 全库方式，将数据库中的所有对象导出/导入\"></a>3. 全库方式，将数据库中的所有对象导出/导入</h3><p><strong>导出：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"exp-imp命令详解\"><a href=\"#exp-imp命令详解\" class=\"headerlink\" title=\"exp/imp命令详解\"></a>exp/imp命令详解</h2><p>exp        导出命令<br>imp        导入命令</p>\n<p><strong>exp导出模式</strong><br>full模式：导出整个数据库<br>user模式：导出指定的用户<br>table模式：导出指定的表<br>tablespace模式：导出表空间</p>\n<p><strong>exp导出参数</strong><br>owner：指定要导出的用户列表<br>full=y：表示要导出整个数据库<br>tables：指定要导出的表<br>tablepaces：指定要导出的表空间<br>rows=y：表示导出表数据,否则只导出表的结构.<br>help=y：表示要获取帮助<br>indexs：指定是否导出索引<br>grants：表示是否导出授权<br>query：定查询条件,允许用户导出表的一部分数据<br>triggers：指定是否导出触发器<br>","more":"</p>\n<h2 id=\"exp-imp使用方法\"><a href=\"#exp-imp使用方法\" class=\"headerlink\" title=\"exp/imp使用方法\"></a>exp/imp使用方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imp username/password@connect_string param=value …</span><br><span class=\"line\">exp username/password@connect_string param=value …</span><br></pre></td></tr></table></figure>\n<p>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log owner=(xcba)</span><br><span class=\"line\">imp xcba/xcba@orcl file=C:\\xcba.dmp log=C:\\xcba.log full=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>导出备份为dmp时，需要将Oracle在注册表里的编码设置为UTF8，否则会出现中文乱码。<br>具体作法：将“HKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_OraDb10g_home1”下的“NLS_LANG”设置为“SIMPLIFIED CHINESE_CHINA.UTF8”</p>\n</blockquote>\n<h2 id=\"exp-imp导入导出方式\"><a href=\"#exp-imp导入导出方式\" class=\"headerlink\" title=\"exp/imp导入导出方式\"></a>exp/imp导入导出方式</h2><h3 id=\"1-表方式，将指定表的数据导出-导入。\"><a href=\"#1-表方式，将指定表的数据导出-导入。\" class=\"headerlink\" title=\"1. 表方式，将指定表的数据导出/导入。\"></a>1. 表方式，将指定表的数据导出/导入。</h3><p><strong>导出：</strong><br>导出一张或几张表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2</span><br></pre></td></tr></table></figure></p>\n<p>如果是分区表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2 </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1:tablespaces1,table2:tablespaces2</span><br></pre></td></tr></table></figure></p>\n<p>导出某张表的部分数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\&lt;…\\” </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\&lt;…\\”</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br>导入一张或几张表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1,table2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<p>如果是分区表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y </span><br><span class=\"line\">$  imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  tables=table1:tablespaces1,table2:tablespaces2  fromuser=dbuser touser=dbuser2 commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-用户方式，将指定用户的所有对象及数据导出-导入。\"><a href=\"#2-用户方式，将指定用户的所有对象及数据导出-导入。\" class=\"headerlink\" title=\"2. 用户方式，将指定用户的所有对象及数据导出/导入。\"></a>2. 用户方式，将指定用户的所有对象及数据导出/导入。</h3><p><strong>导出：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy) </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx, yy)</span><br></pre></td></tr></table></figure></p>\n<p>只导出数据对象，不导出数据  (rows=n )<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  mmit=y     ignore=y </span><br><span class=\"line\">imp  user/pwd  file=/dir/xxx.dmp  log=xxx.log  fromuser=dbuser  touser=dbuser2  commit=y  ignore=y</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-全库方式，将数据库中的所有对象导出-导入\"><a href=\"#3-全库方式，将数据库中的所有对象导出-导入\" class=\"headerlink\" title=\"3. 全库方式，将数据库中的所有对象导出/导入\"></a>3. 全库方式，将数据库中的所有对象导出/导入</h3><p><strong>导出：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y </span><br><span class=\"line\">$ exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y</span><br></pre></td></tr></table></figure></p>\n<p><strong>导入：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2</span><br></pre></td></tr></table></figure></p>"},{"title":"【SQL】收缩数据库","layout":"post","comments":1,"date":"2018-10-29T07:56:44.000Z","keywords":"数据库","description":null,"_content":"\n#### 1. 查询当前数据库的基本信息\n```sql\nSELECT * FROM sysfiles;\n```\n> 记录查询结果的fileid值，在第2、3步要使用\n\n#### 2. 收缩数据库\n```sql\nDBCC SHRINKDATABASE('数据库名');\n```\n\n#### 3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\n```sql\nDBCC SHRINKFILE(2,0);\n```\n\n#### 4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\n```sql\nDBCC SHRINKFILE(1,0);\n```\n\n#### 5. 执行更新操作\n```sql\nDBCC UPDATEUSAGE(0);\n```","source":"_posts/【SQL】收缩数据库.md","raw":"---\ntitle: 【SQL】收缩数据库\nlayout: post\ncomments: true\ndate: 2018-10-29 15:56:44\ncategories: SQL\ntags: [SQL,数据库]\nkeywords: 数据库\ndescription:\n---\n\n#### 1. 查询当前数据库的基本信息\n```sql\nSELECT * FROM sysfiles;\n```\n> 记录查询结果的fileid值，在第2、3步要使用\n\n#### 2. 收缩数据库\n```sql\nDBCC SHRINKDATABASE('数据库名');\n```\n\n#### 3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\n```sql\nDBCC SHRINKFILE(2,0);\n```\n\n#### 4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\n```sql\nDBCC SHRINKFILE(1,0);\n```\n\n#### 5. 执行更新操作\n```sql\nDBCC UPDATEUSAGE(0);\n```","slug":"【SQL】收缩数据库","published":1,"updated":"2018-10-29T08:06:43.124Z","_id":"cjpuwa1jm003is0jte60lpt9a","photos":[],"link":"","content":"<h4 id=\"1-查询当前数据库的基本信息\"><a href=\"#1-查询当前数据库的基本信息\" class=\"headerlink\" title=\"1. 查询当前数据库的基本信息\"></a>1. 查询当前数据库的基本信息</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> sysfiles;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>记录查询结果的fileid值，在第2、3步要使用</p>\n</blockquote>\n<h4 id=\"2-收缩数据库\"><a href=\"#2-收缩数据库\" class=\"headerlink\" title=\"2. 收缩数据库\"></a>2. 收缩数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKDATABASE('数据库名');</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\"><a href=\"#3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\" class=\"headerlink\" title=\"3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\"></a>3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKFILE(2,0);</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\"><a href=\"#4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\" class=\"headerlink\" title=\"4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\"></a>4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKFILE(1,0);</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-执行更新操作\"><a href=\"#5-执行更新操作\" class=\"headerlink\" title=\"5. 执行更新操作\"></a>5. 执行更新操作</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC UPDATEUSAGE(0);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-查询当前数据库的基本信息\"><a href=\"#1-查询当前数据库的基本信息\" class=\"headerlink\" title=\"1. 查询当前数据库的基本信息\"></a>1. 查询当前数据库的基本信息</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> sysfiles;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>记录查询结果的fileid值，在第2、3步要使用</p>\n</blockquote>\n<h4 id=\"2-收缩数据库\"><a href=\"#2-收缩数据库\" class=\"headerlink\" title=\"2. 收缩数据库\"></a>2. 收缩数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKDATABASE('数据库名');</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\"><a href=\"#3-收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\" class=\"headerlink\" title=\"3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小\"></a>3. 收缩日志文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKFILE(2,0);</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\"><a href=\"#4-收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\" class=\"headerlink\" title=\"4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小\"></a>4. 收缩数据文件，第一个参数为fileid的值，0表示收缩到初始大小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC SHRINKFILE(1,0);</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-执行更新操作\"><a href=\"#5-执行更新操作\" class=\"headerlink\" title=\"5. 执行更新操作\"></a>5. 执行更新操作</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DBCC UPDATEUSAGE(0);</span><br></pre></td></tr></table></figure>"},{"title":"【SQL】Access与SQL Server在写法上的区别","layout":"post","comments":1,"date":"2018-10-24T14:19:18.000Z","keywords":"Access","description":null,"_content":"\n#### 1. 查询语句WHERE条件带布尔类型值时\nAccess\n```sql\nAND IsA = true;\n```\nSQL Server\n```sql\nAND IsA = 1;\nAND IsA = 'true';\n```\n\n#### 2. 查询语句WHERE条件带日期时\n```sql\nSELECT * FROM 表 WHERE TimeTag = FORMAT('2016-1-6','yyyy-MM-dd hh:mm:ss');\nSELECT * FROM 表 WHERE TimeTag = FORMAT(\"2016-1-6\",\"yyyy-MM-dd hh:mm:ss\");\n```\n\n#### 3. 多分支的判断情况\nAccess\n```sql\nSELECT SWITCH(IsA = false, 0, IsA = true, 1) AS ColName FROM 表;\nSELECT IIF(IsA IS NULL, 0, IsA)              AS ColName FROM 表;\n```\nSQL Server\n```sql\nSELECT CASE IsA WHEN NULL THEN 0 ELSE 1 END AS ColName AS A FROM 表;\nSELECT CASE WHEN IsA IS NULL THEN 0 ELSE 1 END AS ColName AS A FROM 表;\n```\n\n#### 4. 将字符类型转换成数值类型\nAccess\n```sql\nVal(str)\n```\nSQL Server\n```sql\nCONVERT(INT, str)\nCAST(str AS INT)\n```\n\n#### 5. 将数值类型转换成字符类型\nAccess\n```sql\nStr(num)\n```\nSQL Server\n```sql\nCONVERT(VARCHAR(20), num)\nCAST(num AS VARCHAR)\n```\n\n\n#### 6. 格式化日期\nAccess\n```sql\nFORMAT(NOW(),'yyyy-MM-dd')\nFORMAT(NOW(),'yyyy-MM-dd hh:mm:ss')\n```\nSQL Server\n```sql\nCONVERT(VARCHAR(20),GETDATE(),23)\nCONVERT(VARCHAR(20),GETDATE(),120)\n```\n\n#### 7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致\n如更新SQL：  \n```sql\nUPDATE 表 SET Name = @Name, Age = @Age WHERE ID = @ID\n```\n则参数必须定义为：\n\n      OleDbParameter[] param = new OleDbParameter\n      {\n          new OleDbParameter(\"@Name\", model.Name),\n          new OleDbParameter(\"@Age\", model.Age),\n          new OleDbParameter(\"@ID\", model.ID), \n       }\n\n#### 8. Access类似于SQL Server的函数ISNULL()\n```sql\nIIF(IsA = '' OR IsA IS NULL, '', IsA)\n```\n\n#### 9. Access创建表或添加列时，必须附带默认约束（Defualt）\n\n#### 10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值\n如下：\n\n\tALTER TABLE 表 ADD A VARCHAR(23)\n\tSELECT IIF(STR(A) IS NULL, '空', '非空') FROM 表\n\n#### 11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\n\n#### 12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\n\n#### 13. 多表关联查询\nAccess（可理解为始终是两表间的操作）\n```sql\nSELECT * FROM  (A INNER JOIN B ON A.ID = B.ID ) INNER JOIN C ON B.ID = C.ID;\nSELECT * FROM ((A INNER JOIN B ON A.ID = B.ID ) INNER JOIN C ON B.ID = C.ID) INNER JOIN D ON C.ID = D.ID;\n```\nSQL Server\n```sql\nSELECT * FROM A INNER JOIN B ON A.ID = B.ID INNER JOIN C ON B.ID = C.ID;\n```","source":"_posts/【SQL】Access与SQL-Server在写法上的区别.md","raw":"---\ntitle: 【SQL】Access与SQL Server在写法上的区别\nlayout: post\ncomments: true\ndate: 2018-10-24 22:19:18\ncategories: SQL\ntags: [SQL, Access]\nkeywords: Access\ndescription:\n---\n\n#### 1. 查询语句WHERE条件带布尔类型值时\nAccess\n```sql\nAND IsA = true;\n```\nSQL Server\n```sql\nAND IsA = 1;\nAND IsA = 'true';\n```\n\n#### 2. 查询语句WHERE条件带日期时\n```sql\nSELECT * FROM 表 WHERE TimeTag = FORMAT('2016-1-6','yyyy-MM-dd hh:mm:ss');\nSELECT * FROM 表 WHERE TimeTag = FORMAT(\"2016-1-6\",\"yyyy-MM-dd hh:mm:ss\");\n```\n\n#### 3. 多分支的判断情况\nAccess\n```sql\nSELECT SWITCH(IsA = false, 0, IsA = true, 1) AS ColName FROM 表;\nSELECT IIF(IsA IS NULL, 0, IsA)              AS ColName FROM 表;\n```\nSQL Server\n```sql\nSELECT CASE IsA WHEN NULL THEN 0 ELSE 1 END AS ColName AS A FROM 表;\nSELECT CASE WHEN IsA IS NULL THEN 0 ELSE 1 END AS ColName AS A FROM 表;\n```\n\n#### 4. 将字符类型转换成数值类型\nAccess\n```sql\nVal(str)\n```\nSQL Server\n```sql\nCONVERT(INT, str)\nCAST(str AS INT)\n```\n\n#### 5. 将数值类型转换成字符类型\nAccess\n```sql\nStr(num)\n```\nSQL Server\n```sql\nCONVERT(VARCHAR(20), num)\nCAST(num AS VARCHAR)\n```\n\n\n#### 6. 格式化日期\nAccess\n```sql\nFORMAT(NOW(),'yyyy-MM-dd')\nFORMAT(NOW(),'yyyy-MM-dd hh:mm:ss')\n```\nSQL Server\n```sql\nCONVERT(VARCHAR(20),GETDATE(),23)\nCONVERT(VARCHAR(20),GETDATE(),120)\n```\n\n#### 7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致\n如更新SQL：  \n```sql\nUPDATE 表 SET Name = @Name, Age = @Age WHERE ID = @ID\n```\n则参数必须定义为：\n\n      OleDbParameter[] param = new OleDbParameter\n      {\n          new OleDbParameter(\"@Name\", model.Name),\n          new OleDbParameter(\"@Age\", model.Age),\n          new OleDbParameter(\"@ID\", model.ID), \n       }\n\n#### 8. Access类似于SQL Server的函数ISNULL()\n```sql\nIIF(IsA = '' OR IsA IS NULL, '', IsA)\n```\n\n#### 9. Access创建表或添加列时，必须附带默认约束（Defualt）\n\n#### 10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值\n如下：\n\n\tALTER TABLE 表 ADD A VARCHAR(23)\n\tSELECT IIF(STR(A) IS NULL, '空', '非空') FROM 表\n\n#### 11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\n\n#### 12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\n\n#### 13. 多表关联查询\nAccess（可理解为始终是两表间的操作）\n```sql\nSELECT * FROM  (A INNER JOIN B ON A.ID = B.ID ) INNER JOIN C ON B.ID = C.ID;\nSELECT * FROM ((A INNER JOIN B ON A.ID = B.ID ) INNER JOIN C ON B.ID = C.ID) INNER JOIN D ON C.ID = D.ID;\n```\nSQL Server\n```sql\nSELECT * FROM A INNER JOIN B ON A.ID = B.ID INNER JOIN C ON B.ID = C.ID;\n```","slug":"【SQL】Access与SQL-Server在写法上的区别","published":1,"updated":"2018-10-24T15:28:28.046Z","_id":"cjpuwa1jp003ls0jtdxlctth0","photos":[],"link":"","content":"<h4 id=\"1-查询语句WHERE条件带布尔类型值时\"><a href=\"#1-查询语句WHERE条件带布尔类型值时\" class=\"headerlink\" title=\"1. 查询语句WHERE条件带布尔类型值时\"></a>1. 查询语句WHERE条件带布尔类型值时</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AND IsA = true;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AND IsA = 1;</span><br><span class=\"line\">AND IsA = 'true';</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-查询语句WHERE条件带日期时\"><a href=\"#2-查询语句WHERE条件带日期时\" class=\"headerlink\" title=\"2. 查询语句WHERE条件带日期时\"></a>2. 查询语句WHERE条件带日期时</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表 <span class=\"keyword\">WHERE</span> TimeTag = <span class=\"keyword\">FORMAT</span>(<span class=\"string\">'2016-1-6'</span>,<span class=\"string\">'yyyy-MM-dd hh:mm:ss'</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表 <span class=\"keyword\">WHERE</span> TimeTag = <span class=\"keyword\">FORMAT</span>(<span class=\"string\">\"2016-1-6\"</span>,<span class=\"string\">\"yyyy-MM-dd hh:mm:ss\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-多分支的判断情况\"><a href=\"#3-多分支的判断情况\" class=\"headerlink\" title=\"3. 多分支的判断情况\"></a>3. 多分支的判断情况</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SWITCH</span>(IsA = <span class=\"literal\">false</span>, <span class=\"number\">0</span>, IsA = <span class=\"literal\">true</span>, <span class=\"number\">1</span>) <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">FROM</span> 表;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">IIF</span>(IsA <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>, IsA)              <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">FROM</span> 表;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> IsA <span class=\"keyword\">WHEN</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">THEN</span> <span class=\"number\">0</span> <span class=\"keyword\">ELSE</span> <span class=\"number\">1</span> <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">AS</span> A <span class=\"keyword\">FROM</span> 表;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> IsA <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">THEN</span> <span class=\"number\">0</span> <span class=\"keyword\">ELSE</span> <span class=\"number\">1</span> <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">AS</span> A <span class=\"keyword\">FROM</span> 表;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4-将字符类型转换成数值类型\"><a href=\"#4-将字符类型转换成数值类型\" class=\"headerlink\" title=\"4. 将字符类型转换成数值类型\"></a>4. 将字符类型转换成数值类型</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Val(str)</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(INT, str)</span><br><span class=\"line\">CAST(str AS INT)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5-将数值类型转换成字符类型\"><a href=\"#5-将数值类型转换成字符类型\" class=\"headerlink\" title=\"5. 将数值类型转换成字符类型\"></a>5. 将数值类型转换成字符类型</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Str(num)</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(VARCHAR(20), num)</span><br><span class=\"line\">CAST(num AS VARCHAR)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"6-格式化日期\"><a href=\"#6-格式化日期\" class=\"headerlink\" title=\"6. 格式化日期\"></a>6. 格式化日期</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FORMAT(NOW(),'yyyy-MM-dd')</span><br><span class=\"line\">FORMAT(NOW(),'yyyy-MM-dd hh:mm:ss')</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(VARCHAR(20),GETDATE(),23)</span><br><span class=\"line\">CONVERT(VARCHAR(20),GETDATE(),120)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致\"><a href=\"#7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致\" class=\"headerlink\" title=\"7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致\"></a>7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致</h4><p>如更新SQL：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表 <span class=\"keyword\">SET</span> <span class=\"keyword\">Name</span> = @<span class=\"keyword\">Name</span>, Age = @Age <span class=\"keyword\">WHERE</span> <span class=\"keyword\">ID</span> = @<span class=\"keyword\">ID</span></span><br></pre></td></tr></table></figure></p>\n<p>则参数必须定义为：</p>\n<pre><code>OleDbParameter[] param = new OleDbParameter\n{\n    new OleDbParameter(&quot;@Name&quot;, model.Name),\n    new OleDbParameter(&quot;@Age&quot;, model.Age),\n    new OleDbParameter(&quot;@ID&quot;, model.ID), \n }\n</code></pre><h4 id=\"8-Access类似于SQL-Server的函数ISNULL\"><a href=\"#8-Access类似于SQL-Server的函数ISNULL\" class=\"headerlink\" title=\"8. Access类似于SQL Server的函数ISNULL()\"></a>8. Access类似于SQL Server的函数ISNULL()</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IIF(IsA = '' OR IsA IS NULL, '', IsA)</span><br></pre></td></tr></table></figure>\n<h4 id=\"9-Access创建表或添加列时，必须附带默认约束（Defualt）\"><a href=\"#9-Access创建表或添加列时，必须附带默认约束（Defualt）\" class=\"headerlink\" title=\"9. Access创建表或添加列时，必须附带默认约束（Defualt）\"></a>9. Access创建表或添加列时，必须附带默认约束（Defualt）</h4><h4 id=\"10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值\"><a href=\"#10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值\" class=\"headerlink\" title=\"10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值\"></a>10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值</h4><p>如下：</p>\n<pre><code>ALTER TABLE 表 ADD A VARCHAR(23)\nSELECT IIF(STR(A) IS NULL, &apos;空&apos;, &apos;非空&apos;) FROM 表\n</code></pre><h4 id=\"11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\"><a href=\"#11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\" class=\"headerlink\" title=\"11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\"></a>11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。</h4><h4 id=\"12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\"><a href=\"#12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\" class=\"headerlink\" title=\"12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\"></a>12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。</h4><h4 id=\"13-多表关联查询\"><a href=\"#13-多表关联查询\" class=\"headerlink\" title=\"13. 多表关联查询\"></a>13. 多表关联查询</h4><p>Access（可理解为始终是两表间的操作）<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span>  (A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID ) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> ((A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID ) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> D <span class=\"keyword\">ON</span> C.ID = D.ID;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-查询语句WHERE条件带布尔类型值时\"><a href=\"#1-查询语句WHERE条件带布尔类型值时\" class=\"headerlink\" title=\"1. 查询语句WHERE条件带布尔类型值时\"></a>1. 查询语句WHERE条件带布尔类型值时</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AND IsA = true;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AND IsA = 1;</span><br><span class=\"line\">AND IsA = 'true';</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-查询语句WHERE条件带日期时\"><a href=\"#2-查询语句WHERE条件带日期时\" class=\"headerlink\" title=\"2. 查询语句WHERE条件带日期时\"></a>2. 查询语句WHERE条件带日期时</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表 <span class=\"keyword\">WHERE</span> TimeTag = <span class=\"keyword\">FORMAT</span>(<span class=\"string\">'2016-1-6'</span>,<span class=\"string\">'yyyy-MM-dd hh:mm:ss'</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表 <span class=\"keyword\">WHERE</span> TimeTag = <span class=\"keyword\">FORMAT</span>(<span class=\"string\">\"2016-1-6\"</span>,<span class=\"string\">\"yyyy-MM-dd hh:mm:ss\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-多分支的判断情况\"><a href=\"#3-多分支的判断情况\" class=\"headerlink\" title=\"3. 多分支的判断情况\"></a>3. 多分支的判断情况</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SWITCH</span>(IsA = <span class=\"literal\">false</span>, <span class=\"number\">0</span>, IsA = <span class=\"literal\">true</span>, <span class=\"number\">1</span>) <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">FROM</span> 表;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">IIF</span>(IsA <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>, IsA)              <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">FROM</span> 表;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> IsA <span class=\"keyword\">WHEN</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">THEN</span> <span class=\"number\">0</span> <span class=\"keyword\">ELSE</span> <span class=\"number\">1</span> <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">AS</span> A <span class=\"keyword\">FROM</span> 表;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> IsA <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">THEN</span> <span class=\"number\">0</span> <span class=\"keyword\">ELSE</span> <span class=\"number\">1</span> <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> ColName <span class=\"keyword\">AS</span> A <span class=\"keyword\">FROM</span> 表;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4-将字符类型转换成数值类型\"><a href=\"#4-将字符类型转换成数值类型\" class=\"headerlink\" title=\"4. 将字符类型转换成数值类型\"></a>4. 将字符类型转换成数值类型</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Val(str)</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(INT, str)</span><br><span class=\"line\">CAST(str AS INT)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5-将数值类型转换成字符类型\"><a href=\"#5-将数值类型转换成字符类型\" class=\"headerlink\" title=\"5. 将数值类型转换成字符类型\"></a>5. 将数值类型转换成字符类型</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Str(num)</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(VARCHAR(20), num)</span><br><span class=\"line\">CAST(num AS VARCHAR)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"6-格式化日期\"><a href=\"#6-格式化日期\" class=\"headerlink\" title=\"6. 格式化日期\"></a>6. 格式化日期</h4><p>Access<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FORMAT(NOW(),'yyyy-MM-dd')</span><br><span class=\"line\">FORMAT(NOW(),'yyyy-MM-dd hh:mm:ss')</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONVERT(VARCHAR(20),GETDATE(),23)</span><br><span class=\"line\">CONVERT(VARCHAR(20),GETDATE(),120)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致\"><a href=\"#7-参数化更新或新增数据时，SQl-语句中的字段顺序需与参数列表的顺序保持一致\" class=\"headerlink\" title=\"7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致\"></a>7. 参数化更新或新增数据时，SQl 语句中的字段顺序需与参数列表的顺序保持一致</h4><p>如更新SQL：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表 <span class=\"keyword\">SET</span> <span class=\"keyword\">Name</span> = @<span class=\"keyword\">Name</span>, Age = @Age <span class=\"keyword\">WHERE</span> <span class=\"keyword\">ID</span> = @<span class=\"keyword\">ID</span></span><br></pre></td></tr></table></figure></p>\n<p>则参数必须定义为：</p>\n<pre><code>OleDbParameter[] param = new OleDbParameter\n{\n    new OleDbParameter(&quot;@Name&quot;, model.Name),\n    new OleDbParameter(&quot;@Age&quot;, model.Age),\n    new OleDbParameter(&quot;@ID&quot;, model.ID), \n }\n</code></pre><h4 id=\"8-Access类似于SQL-Server的函数ISNULL\"><a href=\"#8-Access类似于SQL-Server的函数ISNULL\" class=\"headerlink\" title=\"8. Access类似于SQL Server的函数ISNULL()\"></a>8. Access类似于SQL Server的函数ISNULL()</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IIF(IsA = '' OR IsA IS NULL, '', IsA)</span><br></pre></td></tr></table></figure>\n<h4 id=\"9-Access创建表或添加列时，必须附带默认约束（Defualt）\"><a href=\"#9-Access创建表或添加列时，必须附带默认约束（Defualt）\" class=\"headerlink\" title=\"9. Access创建表或添加列时，必须附带默认约束（Defualt）\"></a>9. Access创建表或添加列时，必须附带默认约束（Defualt）</h4><h4 id=\"10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值\"><a href=\"#10-Access创建新列时，如果未添加默认约束，在采用内置函数STR-A-查询时会显示null值\" class=\"headerlink\" title=\"10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值\"></a>10. Access创建新列时，如果未添加默认约束，在采用内置函数STR(A)查询时会显示null值</h4><p>如下：</p>\n<pre><code>ALTER TABLE 表 ADD A VARCHAR(23)\nSELECT IIF(STR(A) IS NULL, &apos;空&apos;, &apos;非空&apos;) FROM 表\n</code></pre><h4 id=\"11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\"><a href=\"#11-当表从Access数据库导入到SQL-Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\" class=\"headerlink\" title=\"11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。\"></a>11. 当表从Access数据库导入到SQL Server中时，原表中的自增长列会丢失，需要重新建立自增长标识。</h4><h4 id=\"12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\"><a href=\"#12-当表从Access数据库导入到SQL-Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\" class=\"headerlink\" title=\"12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。\"></a>12. 当表从Access数据库导入到SQL Server中时，Access的数据如果存在密码，则以独立的方式清空Access原设置的密码即可。</h4><h4 id=\"13-多表关联查询\"><a href=\"#13-多表关联查询\" class=\"headerlink\" title=\"13. 多表关联查询\"></a>13. 多表关联查询</h4><p>Access（可理解为始终是两表间的操作）<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span>  (A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID ) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> ((A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID ) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID) <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> D <span class=\"keyword\">ON</span> C.ID = D.ID;</span><br></pre></td></tr></table></figure></p>\n<p>SQL Server<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> A <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> B <span class=\"keyword\">ON</span> A.ID = B.ID <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> C <span class=\"keyword\">ON</span> B.ID = C.ID;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"【SQL】查询死锁和阻塞","layout":"post","comments":1,"date":"2016-11-29T07:13:06.000Z","keywords":"死锁，阻塞","description":null,"_content":"\n### 查询死锁进程\n```\nSELECT\n\trequest_session_id spid,\n\tOBJECT_NAME(\n\t\tresource_associated_entity_id\n\t) tableName\nFROM\n\tsys.dm_tran_locks\nWHERE\n\tresource_type = 'OBJECT';\n```\n```\nSELECT\n\t标志,\n\t进程ID = spid,\n\t线程ID = kpid,\n\t块进程ID = blocked,\n\t数据库ID = dbid,\n\t数据库名 = db_name(dbid),\n\t用户ID = uid,\n\t用户名 = loginame,\n\t累计CPU时间 = cpu,\n\t登陆时间 = login_time,\n\t打开事务数 = open_tran,\n\t进程状态 = status,\n\t工作站名 = hostname,\n\t应用程序名 = program_name,\n\t工作站进程ID = hostprocess,\n\t域名 = nt_domain,\n\t网卡地址 = net_address \nFROM\n\t(\n\t\tSELECT\n\t\t\t标志 = '死锁的进程',\n\t\t\tspid,\n\t\t\tkpid,\n\t\t\ta.blocked,\n\t\t\tdbid,\n\t\t\tuid,\n\t\t\tloginame,\n\t\t\tcpu,\n\t\t\tlogin_time,\n\t\t\topen_tran,\n\t\t\tstatus,\n\t\t\thostname,\n\t\t\tprogram_name,\n\t\t\thostprocess,\n\t\t\tnt_domain,\n\t\t\tnet_address,\n\t\t\ts1 = a.spid,\n\t\t\ts2 = 0\n\t\tFROM\n\t\t\tmaster..sysprocesses a\n\t\tJOIN (\n\t\t\tSELECT\n\t\t\t\tblocked\n\t\t\tFROM\n\t\t\t\tmaster..sysprocesses\n\t\t\tGROUP BY\n\t\t\t\tblocked\n\t\t) b ON a.spid = b.blocked\n\t\tWHERE\n\t\t\ta.blocked = 0\n\t\tUNION ALL\n\t\t\tSELECT\n\t\t\t\t'|_牺牲品_>',\n\t\t\t\tspid,\n\t\t\t\tkpid,\n\t\t\t\tblocked,\n\t\t\t\tdbid,\n\t\t\t\tuid,\n\t\t\t\tloginame,\n\t\t\t\tcpu,\n\t\t\t\tlogin_time,\n\t\t\t\topen_tran,\n\t\t\t\tstatus,\n\t\t\t\thostname,\n\t\t\t\tprogram_name,\n\t\t\t\thostprocess,\n\t\t\t\tnt_domain,\n\t\t\t\tnet_address,\n\t\t\t\ts1 = blocked,\n\t\t\t\ts2 = 1\n\t\t\tFROM\n\t\t\t\tmaster..sysprocesses a\n\t\t\tWHERE\n\t\t\t\tblocked <> 0\n\t) a\nORDER BY\n\ts1,\n\ts2\n```\n\n### 杀死死锁进程\n```\nKILL spid;\n```\n\n### 每秒死锁数量\n```\nSELECT  *\nFROM    sys.dm_os_performance_counters\nWHERE   counter_name LIKE 'Number of Deadlocksc%';\n```\n\n<!-- more -->\n### 查询当前阻塞\n```\nWITH CTE_SID (BSID, SID, sql_handle) AS (\n\tSELECT\n\t\tblocking_session_id,\n\t\tsession_id,\n\t\tsql_handle\n\tFROM\n\t\tsys.dm_exec_requests\n\tWHERE\n\t\tblocking_session_id <> 0\n\tUNION ALL\n\t\tSELECT\n\t\t\tA.blocking_session_id,\n\t\t\tA.session_id,\n\t\t\tA.sql_handle\n\t\tFROM\n\t\t\tsys.dm_exec_requests A\n\t\tJOIN CTE_SID B ON A.SESSION_ID = B.BSID\n) SELECT\n\tC.BSID,\n\tC.SID,\n\tS.login_name,\n\tS.host_name,\n\tS.status,\n\tS.cpu_time,\n\tS.memory_usage,\n\tS.last_request_start_time,\n\tS.last_request_end_time,\n\tS.logical_reads,\n\tS.row_count,\n\tq. TEXT\nFROM\n\tCTE_SID C\nJOIN sys.dm_exec_sessions S ON C.sid = s.session_id CROSS APPLY sys.dm_exec_sql_text (C.sql_handle) Q\nORDER BY\n\tsid;\n```","source":"_posts/【SQL】查询死锁和阻塞.md","raw":"---\ntitle: 【SQL】查询死锁和阻塞\nlayout: post\ncomments: true\ndate: 2016-11-29 15:13:06\ncategories: SQL\ntags: [SQL, 死锁]\nkeywords: 死锁，阻塞\ndescription:\n---\n\n### 查询死锁进程\n```\nSELECT\n\trequest_session_id spid,\n\tOBJECT_NAME(\n\t\tresource_associated_entity_id\n\t) tableName\nFROM\n\tsys.dm_tran_locks\nWHERE\n\tresource_type = 'OBJECT';\n```\n```\nSELECT\n\t标志,\n\t进程ID = spid,\n\t线程ID = kpid,\n\t块进程ID = blocked,\n\t数据库ID = dbid,\n\t数据库名 = db_name(dbid),\n\t用户ID = uid,\n\t用户名 = loginame,\n\t累计CPU时间 = cpu,\n\t登陆时间 = login_time,\n\t打开事务数 = open_tran,\n\t进程状态 = status,\n\t工作站名 = hostname,\n\t应用程序名 = program_name,\n\t工作站进程ID = hostprocess,\n\t域名 = nt_domain,\n\t网卡地址 = net_address \nFROM\n\t(\n\t\tSELECT\n\t\t\t标志 = '死锁的进程',\n\t\t\tspid,\n\t\t\tkpid,\n\t\t\ta.blocked,\n\t\t\tdbid,\n\t\t\tuid,\n\t\t\tloginame,\n\t\t\tcpu,\n\t\t\tlogin_time,\n\t\t\topen_tran,\n\t\t\tstatus,\n\t\t\thostname,\n\t\t\tprogram_name,\n\t\t\thostprocess,\n\t\t\tnt_domain,\n\t\t\tnet_address,\n\t\t\ts1 = a.spid,\n\t\t\ts2 = 0\n\t\tFROM\n\t\t\tmaster..sysprocesses a\n\t\tJOIN (\n\t\t\tSELECT\n\t\t\t\tblocked\n\t\t\tFROM\n\t\t\t\tmaster..sysprocesses\n\t\t\tGROUP BY\n\t\t\t\tblocked\n\t\t) b ON a.spid = b.blocked\n\t\tWHERE\n\t\t\ta.blocked = 0\n\t\tUNION ALL\n\t\t\tSELECT\n\t\t\t\t'|_牺牲品_>',\n\t\t\t\tspid,\n\t\t\t\tkpid,\n\t\t\t\tblocked,\n\t\t\t\tdbid,\n\t\t\t\tuid,\n\t\t\t\tloginame,\n\t\t\t\tcpu,\n\t\t\t\tlogin_time,\n\t\t\t\topen_tran,\n\t\t\t\tstatus,\n\t\t\t\thostname,\n\t\t\t\tprogram_name,\n\t\t\t\thostprocess,\n\t\t\t\tnt_domain,\n\t\t\t\tnet_address,\n\t\t\t\ts1 = blocked,\n\t\t\t\ts2 = 1\n\t\t\tFROM\n\t\t\t\tmaster..sysprocesses a\n\t\t\tWHERE\n\t\t\t\tblocked <> 0\n\t) a\nORDER BY\n\ts1,\n\ts2\n```\n\n### 杀死死锁进程\n```\nKILL spid;\n```\n\n### 每秒死锁数量\n```\nSELECT  *\nFROM    sys.dm_os_performance_counters\nWHERE   counter_name LIKE 'Number of Deadlocksc%';\n```\n\n<!-- more -->\n### 查询当前阻塞\n```\nWITH CTE_SID (BSID, SID, sql_handle) AS (\n\tSELECT\n\t\tblocking_session_id,\n\t\tsession_id,\n\t\tsql_handle\n\tFROM\n\t\tsys.dm_exec_requests\n\tWHERE\n\t\tblocking_session_id <> 0\n\tUNION ALL\n\t\tSELECT\n\t\t\tA.blocking_session_id,\n\t\t\tA.session_id,\n\t\t\tA.sql_handle\n\t\tFROM\n\t\t\tsys.dm_exec_requests A\n\t\tJOIN CTE_SID B ON A.SESSION_ID = B.BSID\n) SELECT\n\tC.BSID,\n\tC.SID,\n\tS.login_name,\n\tS.host_name,\n\tS.status,\n\tS.cpu_time,\n\tS.memory_usage,\n\tS.last_request_start_time,\n\tS.last_request_end_time,\n\tS.logical_reads,\n\tS.row_count,\n\tq. TEXT\nFROM\n\tCTE_SID C\nJOIN sys.dm_exec_sessions S ON C.sid = s.session_id CROSS APPLY sys.dm_exec_sql_text (C.sql_handle) Q\nORDER BY\n\tsid;\n```","slug":"【SQL】查询死锁和阻塞","published":1,"updated":"2018-06-21T03:17:13.323Z","_id":"cjpuwa1js003os0jtrrqarc94","photos":[],"link":"","content":"<h3 id=\"查询死锁进程\"><a href=\"#查询死锁进程\" class=\"headerlink\" title=\"查询死锁进程\"></a>查询死锁进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\trequest_session_id spid,</span><br><span class=\"line\">\tOBJECT_NAME(</span><br><span class=\"line\">\t\tresource_associated_entity_id</span><br><span class=\"line\">\t) tableName</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tsys.dm_tran_locks</span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tresource_type = &apos;OBJECT&apos;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\t标志,</span><br><span class=\"line\">\t进程ID = spid,</span><br><span class=\"line\">\t线程ID = kpid,</span><br><span class=\"line\">\t块进程ID = blocked,</span><br><span class=\"line\">\t数据库ID = dbid,</span><br><span class=\"line\">\t数据库名 = db_name(dbid),</span><br><span class=\"line\">\t用户ID = uid,</span><br><span class=\"line\">\t用户名 = loginame,</span><br><span class=\"line\">\t累计CPU时间 = cpu,</span><br><span class=\"line\">\t登陆时间 = login_time,</span><br><span class=\"line\">\t打开事务数 = open_tran,</span><br><span class=\"line\">\t进程状态 = status,</span><br><span class=\"line\">\t工作站名 = hostname,</span><br><span class=\"line\">\t应用程序名 = program_name,</span><br><span class=\"line\">\t工作站进程ID = hostprocess,</span><br><span class=\"line\">\t域名 = nt_domain,</span><br><span class=\"line\">\t网卡地址 = net_address </span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t(</span><br><span class=\"line\">\t\tSELECT</span><br><span class=\"line\">\t\t\t标志 = &apos;死锁的进程&apos;,</span><br><span class=\"line\">\t\t\tspid,</span><br><span class=\"line\">\t\t\tkpid,</span><br><span class=\"line\">\t\t\ta.blocked,</span><br><span class=\"line\">\t\t\tdbid,</span><br><span class=\"line\">\t\t\tuid,</span><br><span class=\"line\">\t\t\tloginame,</span><br><span class=\"line\">\t\t\tcpu,</span><br><span class=\"line\">\t\t\tlogin_time,</span><br><span class=\"line\">\t\t\topen_tran,</span><br><span class=\"line\">\t\t\tstatus,</span><br><span class=\"line\">\t\t\thostname,</span><br><span class=\"line\">\t\t\tprogram_name,</span><br><span class=\"line\">\t\t\thostprocess,</span><br><span class=\"line\">\t\t\tnt_domain,</span><br><span class=\"line\">\t\t\tnet_address,</span><br><span class=\"line\">\t\t\ts1 = a.spid,</span><br><span class=\"line\">\t\t\ts2 = 0</span><br><span class=\"line\">\t\tFROM</span><br><span class=\"line\">\t\t\tmaster..sysprocesses a</span><br><span class=\"line\">\t\tJOIN (</span><br><span class=\"line\">\t\t\tSELECT</span><br><span class=\"line\">\t\t\t\tblocked</span><br><span class=\"line\">\t\t\tFROM</span><br><span class=\"line\">\t\t\t\tmaster..sysprocesses</span><br><span class=\"line\">\t\t\tGROUP BY</span><br><span class=\"line\">\t\t\t\tblocked</span><br><span class=\"line\">\t\t) b ON a.spid = b.blocked</span><br><span class=\"line\">\t\tWHERE</span><br><span class=\"line\">\t\t\ta.blocked = 0</span><br><span class=\"line\">\t\tUNION ALL</span><br><span class=\"line\">\t\t\tSELECT</span><br><span class=\"line\">\t\t\t\t&apos;|_牺牲品_&gt;&apos;,</span><br><span class=\"line\">\t\t\t\tspid,</span><br><span class=\"line\">\t\t\t\tkpid,</span><br><span class=\"line\">\t\t\t\tblocked,</span><br><span class=\"line\">\t\t\t\tdbid,</span><br><span class=\"line\">\t\t\t\tuid,</span><br><span class=\"line\">\t\t\t\tloginame,</span><br><span class=\"line\">\t\t\t\tcpu,</span><br><span class=\"line\">\t\t\t\tlogin_time,</span><br><span class=\"line\">\t\t\t\topen_tran,</span><br><span class=\"line\">\t\t\t\tstatus,</span><br><span class=\"line\">\t\t\t\thostname,</span><br><span class=\"line\">\t\t\t\tprogram_name,</span><br><span class=\"line\">\t\t\t\thostprocess,</span><br><span class=\"line\">\t\t\t\tnt_domain,</span><br><span class=\"line\">\t\t\t\tnet_address,</span><br><span class=\"line\">\t\t\t\ts1 = blocked,</span><br><span class=\"line\">\t\t\t\ts2 = 1</span><br><span class=\"line\">\t\t\tFROM</span><br><span class=\"line\">\t\t\t\tmaster..sysprocesses a</span><br><span class=\"line\">\t\t\tWHERE</span><br><span class=\"line\">\t\t\t\tblocked &lt;&gt; 0</span><br><span class=\"line\">\t) a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\ts1,</span><br><span class=\"line\">\ts2</span><br></pre></td></tr></table></figure>\n<h3 id=\"杀死死锁进程\"><a href=\"#杀死死锁进程\" class=\"headerlink\" title=\"杀死死锁进程\"></a>杀死死锁进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KILL spid;</span><br></pre></td></tr></table></figure>\n<h3 id=\"每秒死锁数量\"><a href=\"#每秒死锁数量\" class=\"headerlink\" title=\"每秒死锁数量\"></a>每秒死锁数量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT  *</span><br><span class=\"line\">FROM    sys.dm_os_performance_counters</span><br><span class=\"line\">WHERE   counter_name LIKE &apos;Number of Deadlocksc%&apos;;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"查询当前阻塞\"><a href=\"#查询当前阻塞\" class=\"headerlink\" title=\"查询当前阻塞\"></a>查询当前阻塞</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WITH CTE_SID (BSID, SID, sql_handle) AS (</span><br><span class=\"line\">\tSELECT</span><br><span class=\"line\">\t\tblocking_session_id,</span><br><span class=\"line\">\t\tsession_id,</span><br><span class=\"line\">\t\tsql_handle</span><br><span class=\"line\">\tFROM</span><br><span class=\"line\">\t\tsys.dm_exec_requests</span><br><span class=\"line\">\tWHERE</span><br><span class=\"line\">\t\tblocking_session_id &lt;&gt; 0</span><br><span class=\"line\">\tUNION ALL</span><br><span class=\"line\">\t\tSELECT</span><br><span class=\"line\">\t\t\tA.blocking_session_id,</span><br><span class=\"line\">\t\t\tA.session_id,</span><br><span class=\"line\">\t\t\tA.sql_handle</span><br><span class=\"line\">\t\tFROM</span><br><span class=\"line\">\t\t\tsys.dm_exec_requests A</span><br><span class=\"line\">\t\tJOIN CTE_SID B ON A.SESSION_ID = B.BSID</span><br><span class=\"line\">) SELECT</span><br><span class=\"line\">\tC.BSID,</span><br><span class=\"line\">\tC.SID,</span><br><span class=\"line\">\tS.login_name,</span><br><span class=\"line\">\tS.host_name,</span><br><span class=\"line\">\tS.status,</span><br><span class=\"line\">\tS.cpu_time,</span><br><span class=\"line\">\tS.memory_usage,</span><br><span class=\"line\">\tS.last_request_start_time,</span><br><span class=\"line\">\tS.last_request_end_time,</span><br><span class=\"line\">\tS.logical_reads,</span><br><span class=\"line\">\tS.row_count,</span><br><span class=\"line\">\tq. TEXT</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tCTE_SID C</span><br><span class=\"line\">JOIN sys.dm_exec_sessions S ON C.sid = s.session_id CROSS APPLY sys.dm_exec_sql_text (C.sql_handle) Q</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tsid;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"查询死锁进程\"><a href=\"#查询死锁进程\" class=\"headerlink\" title=\"查询死锁进程\"></a>查询死锁进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\trequest_session_id spid,</span><br><span class=\"line\">\tOBJECT_NAME(</span><br><span class=\"line\">\t\tresource_associated_entity_id</span><br><span class=\"line\">\t) tableName</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tsys.dm_tran_locks</span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tresource_type = &apos;OBJECT&apos;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\t标志,</span><br><span class=\"line\">\t进程ID = spid,</span><br><span class=\"line\">\t线程ID = kpid,</span><br><span class=\"line\">\t块进程ID = blocked,</span><br><span class=\"line\">\t数据库ID = dbid,</span><br><span class=\"line\">\t数据库名 = db_name(dbid),</span><br><span class=\"line\">\t用户ID = uid,</span><br><span class=\"line\">\t用户名 = loginame,</span><br><span class=\"line\">\t累计CPU时间 = cpu,</span><br><span class=\"line\">\t登陆时间 = login_time,</span><br><span class=\"line\">\t打开事务数 = open_tran,</span><br><span class=\"line\">\t进程状态 = status,</span><br><span class=\"line\">\t工作站名 = hostname,</span><br><span class=\"line\">\t应用程序名 = program_name,</span><br><span class=\"line\">\t工作站进程ID = hostprocess,</span><br><span class=\"line\">\t域名 = nt_domain,</span><br><span class=\"line\">\t网卡地址 = net_address </span><br><span class=\"line\">FROM</span><br><span class=\"line\">\t(</span><br><span class=\"line\">\t\tSELECT</span><br><span class=\"line\">\t\t\t标志 = &apos;死锁的进程&apos;,</span><br><span class=\"line\">\t\t\tspid,</span><br><span class=\"line\">\t\t\tkpid,</span><br><span class=\"line\">\t\t\ta.blocked,</span><br><span class=\"line\">\t\t\tdbid,</span><br><span class=\"line\">\t\t\tuid,</span><br><span class=\"line\">\t\t\tloginame,</span><br><span class=\"line\">\t\t\tcpu,</span><br><span class=\"line\">\t\t\tlogin_time,</span><br><span class=\"line\">\t\t\topen_tran,</span><br><span class=\"line\">\t\t\tstatus,</span><br><span class=\"line\">\t\t\thostname,</span><br><span class=\"line\">\t\t\tprogram_name,</span><br><span class=\"line\">\t\t\thostprocess,</span><br><span class=\"line\">\t\t\tnt_domain,</span><br><span class=\"line\">\t\t\tnet_address,</span><br><span class=\"line\">\t\t\ts1 = a.spid,</span><br><span class=\"line\">\t\t\ts2 = 0</span><br><span class=\"line\">\t\tFROM</span><br><span class=\"line\">\t\t\tmaster..sysprocesses a</span><br><span class=\"line\">\t\tJOIN (</span><br><span class=\"line\">\t\t\tSELECT</span><br><span class=\"line\">\t\t\t\tblocked</span><br><span class=\"line\">\t\t\tFROM</span><br><span class=\"line\">\t\t\t\tmaster..sysprocesses</span><br><span class=\"line\">\t\t\tGROUP BY</span><br><span class=\"line\">\t\t\t\tblocked</span><br><span class=\"line\">\t\t) b ON a.spid = b.blocked</span><br><span class=\"line\">\t\tWHERE</span><br><span class=\"line\">\t\t\ta.blocked = 0</span><br><span class=\"line\">\t\tUNION ALL</span><br><span class=\"line\">\t\t\tSELECT</span><br><span class=\"line\">\t\t\t\t&apos;|_牺牲品_&gt;&apos;,</span><br><span class=\"line\">\t\t\t\tspid,</span><br><span class=\"line\">\t\t\t\tkpid,</span><br><span class=\"line\">\t\t\t\tblocked,</span><br><span class=\"line\">\t\t\t\tdbid,</span><br><span class=\"line\">\t\t\t\tuid,</span><br><span class=\"line\">\t\t\t\tloginame,</span><br><span class=\"line\">\t\t\t\tcpu,</span><br><span class=\"line\">\t\t\t\tlogin_time,</span><br><span class=\"line\">\t\t\t\topen_tran,</span><br><span class=\"line\">\t\t\t\tstatus,</span><br><span class=\"line\">\t\t\t\thostname,</span><br><span class=\"line\">\t\t\t\tprogram_name,</span><br><span class=\"line\">\t\t\t\thostprocess,</span><br><span class=\"line\">\t\t\t\tnt_domain,</span><br><span class=\"line\">\t\t\t\tnet_address,</span><br><span class=\"line\">\t\t\t\ts1 = blocked,</span><br><span class=\"line\">\t\t\t\ts2 = 1</span><br><span class=\"line\">\t\t\tFROM</span><br><span class=\"line\">\t\t\t\tmaster..sysprocesses a</span><br><span class=\"line\">\t\t\tWHERE</span><br><span class=\"line\">\t\t\t\tblocked &lt;&gt; 0</span><br><span class=\"line\">\t) a</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\ts1,</span><br><span class=\"line\">\ts2</span><br></pre></td></tr></table></figure>\n<h3 id=\"杀死死锁进程\"><a href=\"#杀死死锁进程\" class=\"headerlink\" title=\"杀死死锁进程\"></a>杀死死锁进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KILL spid;</span><br></pre></td></tr></table></figure>\n<h3 id=\"每秒死锁数量\"><a href=\"#每秒死锁数量\" class=\"headerlink\" title=\"每秒死锁数量\"></a>每秒死锁数量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT  *</span><br><span class=\"line\">FROM    sys.dm_os_performance_counters</span><br><span class=\"line\">WHERE   counter_name LIKE &apos;Number of Deadlocksc%&apos;;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"查询当前阻塞\"><a href=\"#查询当前阻塞\" class=\"headerlink\" title=\"查询当前阻塞\"></a>查询当前阻塞</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WITH CTE_SID (BSID, SID, sql_handle) AS (</span><br><span class=\"line\">\tSELECT</span><br><span class=\"line\">\t\tblocking_session_id,</span><br><span class=\"line\">\t\tsession_id,</span><br><span class=\"line\">\t\tsql_handle</span><br><span class=\"line\">\tFROM</span><br><span class=\"line\">\t\tsys.dm_exec_requests</span><br><span class=\"line\">\tWHERE</span><br><span class=\"line\">\t\tblocking_session_id &lt;&gt; 0</span><br><span class=\"line\">\tUNION ALL</span><br><span class=\"line\">\t\tSELECT</span><br><span class=\"line\">\t\t\tA.blocking_session_id,</span><br><span class=\"line\">\t\t\tA.session_id,</span><br><span class=\"line\">\t\t\tA.sql_handle</span><br><span class=\"line\">\t\tFROM</span><br><span class=\"line\">\t\t\tsys.dm_exec_requests A</span><br><span class=\"line\">\t\tJOIN CTE_SID B ON A.SESSION_ID = B.BSID</span><br><span class=\"line\">) SELECT</span><br><span class=\"line\">\tC.BSID,</span><br><span class=\"line\">\tC.SID,</span><br><span class=\"line\">\tS.login_name,</span><br><span class=\"line\">\tS.host_name,</span><br><span class=\"line\">\tS.status,</span><br><span class=\"line\">\tS.cpu_time,</span><br><span class=\"line\">\tS.memory_usage,</span><br><span class=\"line\">\tS.last_request_start_time,</span><br><span class=\"line\">\tS.last_request_end_time,</span><br><span class=\"line\">\tS.logical_reads,</span><br><span class=\"line\">\tS.row_count,</span><br><span class=\"line\">\tq. TEXT</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tCTE_SID C</span><br><span class=\"line\">JOIN sys.dm_exec_sessions S ON C.sid = s.session_id CROSS APPLY sys.dm_exec_sql_text (C.sql_handle) Q</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tsid;</span><br></pre></td></tr></table></figure>"},{"title":"【SQL】获取字符串最后出现的位置","layout":"post","comments":1,"date":"2016-11-29T07:24:58.000Z","keywords":"截取","description":null,"_content":"\n#### 1. 如：'6.7.8.2.3.4.x'得到最后一个'.'在字符串的位置：\n```sql\nDECLARE @str3 VARCHAR (50)\nSET @str3 = '6.7.8.2.3.4.x' \nSELECT LEN(@str3) - CHARINDEX('.', REVERSE(@str3)) + 1\n```\n\tInteger:12\n\n<!-- more -->\n\n### 2. 如：'6.7.8.2.3.4.x'得到最后一个'.'前面的字符串：\n```sql\nDECLARE @str2 VARCHAR (50)\nSET @str2 = '6.7.8.2.3.4.x' \nSELECT SUBSTRING (@str2, 1, (LEN(@str2) - CHARINDEX('.', REVERSE(@str2)) ) )\n```\n\tstring:'6.7.8.2.3.4'\n\n### 3. 如：'6.7.8.2.3.4.x'得到最后一个'.'后面的字符串：\n```sql\nDECLARE @str1 VARCHAR (50)\nSET @str1 = '6.7.8.2.3.4.x' \nSELECT REVERSE(SUBSTRING (REVERSE(@str1), 1, CHARINDEX('.', REVERSE(@str1)) - 1) )\n```\n\tstring:'x'","source":"_posts/【SQL】获取字符串最后出现的位置.md","raw":"---\ntitle: 【SQL】获取字符串最后出现的位置\nlayout: post\ncomments: true\ndate: 2016-11-29 15:24:58\ncategories: SQL\ntags: [SQL, 字符串]\nkeywords: 截取\ndescription:\n---\n\n#### 1. 如：'6.7.8.2.3.4.x'得到最后一个'.'在字符串的位置：\n```sql\nDECLARE @str3 VARCHAR (50)\nSET @str3 = '6.7.8.2.3.4.x' \nSELECT LEN(@str3) - CHARINDEX('.', REVERSE(@str3)) + 1\n```\n\tInteger:12\n\n<!-- more -->\n\n### 2. 如：'6.7.8.2.3.4.x'得到最后一个'.'前面的字符串：\n```sql\nDECLARE @str2 VARCHAR (50)\nSET @str2 = '6.7.8.2.3.4.x' \nSELECT SUBSTRING (@str2, 1, (LEN(@str2) - CHARINDEX('.', REVERSE(@str2)) ) )\n```\n\tstring:'6.7.8.2.3.4'\n\n### 3. 如：'6.7.8.2.3.4.x'得到最后一个'.'后面的字符串：\n```sql\nDECLARE @str1 VARCHAR (50)\nSET @str1 = '6.7.8.2.3.4.x' \nSELECT REVERSE(SUBSTRING (REVERSE(@str1), 1, CHARINDEX('.', REVERSE(@str1)) - 1) )\n```\n\tstring:'x'","slug":"【SQL】获取字符串最后出现的位置","published":1,"updated":"2017-02-27T04:13:28.470Z","_id":"cjpuwa1jv003qs0jth1438ppr","photos":[],"link":"","content":"<h4 id=\"1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：\"><a href=\"#1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：\" class=\"headerlink\" title=\"1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：\"></a>1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str3 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str3 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LEN</span>(@str3) - <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str3)) + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<pre><code>Integer:12\n</code></pre><a id=\"more\"></a>\n<h3 id=\"2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：\"><a href=\"#2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：\" class=\"headerlink\" title=\"2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：\"></a>2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str2 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str2 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SUBSTRING</span> (@str2, <span class=\"number\">1</span>, (<span class=\"keyword\">LEN</span>(@str2) - <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str2)) ) )</span><br></pre></td></tr></table></figure>\n<pre><code>string:&apos;6.7.8.2.3.4&apos;\n</code></pre><h3 id=\"3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：\"><a href=\"#3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：\" class=\"headerlink\" title=\"3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：\"></a>3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str1 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str1 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">REVERSE</span>(<span class=\"keyword\">SUBSTRING</span> (<span class=\"keyword\">REVERSE</span>(@str1), <span class=\"number\">1</span>, <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str1)) - <span class=\"number\">1</span>) )</span><br></pre></td></tr></table></figure>\n<pre><code>string:&apos;x&apos;\n</code></pre>","site":{"data":{}},"excerpt":"<h4 id=\"1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：\"><a href=\"#1-如：’6-7-8-2-3-4-x’得到最后一个’-’在字符串的位置：\" class=\"headerlink\" title=\"1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：\"></a>1. 如：’6.7.8.2.3.4.x’得到最后一个’.’在字符串的位置：</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str3 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str3 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LEN</span>(@str3) - <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str3)) + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<pre><code>Integer:12\n</code></pre>","more":"<h3 id=\"2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：\"><a href=\"#2-如：’6-7-8-2-3-4-x’得到最后一个’-’前面的字符串：\" class=\"headerlink\" title=\"2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：\"></a>2. 如：’6.7.8.2.3.4.x’得到最后一个’.’前面的字符串：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str2 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str2 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SUBSTRING</span> (@str2, <span class=\"number\">1</span>, (<span class=\"keyword\">LEN</span>(@str2) - <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str2)) ) )</span><br></pre></td></tr></table></figure>\n<pre><code>string:&apos;6.7.8.2.3.4&apos;\n</code></pre><h3 id=\"3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：\"><a href=\"#3-如：’6-7-8-2-3-4-x’得到最后一个’-’后面的字符串：\" class=\"headerlink\" title=\"3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：\"></a>3. 如：’6.7.8.2.3.4.x’得到最后一个’.’后面的字符串：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> @str1 <span class=\"built_in\">VARCHAR</span> (<span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @str1 = <span class=\"string\">'6.7.8.2.3.4.x'</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">REVERSE</span>(<span class=\"keyword\">SUBSTRING</span> (<span class=\"keyword\">REVERSE</span>(@str1), <span class=\"number\">1</span>, <span class=\"keyword\">CHARINDEX</span>(<span class=\"string\">'.'</span>, <span class=\"keyword\">REVERSE</span>(@str1)) - <span class=\"number\">1</span>) )</span><br></pre></td></tr></table></figure>\n<pre><code>string:&apos;x&apos;\n</code></pre>"},{"title":"【SQL】经典语句","layout":"post","comments":1,"date":"2016-11-29T07:38:32.000Z","keywords":null,"description":null,"toc":true,"_content":"\n# 一. 基础篇\n\n## 1. 创建数据库\n\tCREATE DATABASE database-name\n\n## 2. 删除数据库\n\tdrop database dbname\n\n## 3. 备份sql server\n\t创建 备份数据的 device\n\tUSE master\n\tEXEC sp_addumpdevice 'disk', 'testBack', 'c:\\mssql7backup\\MyNwind_1.dat'\n\t开始 备份\n\tBACKUP DATABASE pubs TO testBack \n\n<!-- more -->\n\n## 4. 创建新表\n\tcreate table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)\n根据已有的表创建新表：\n\n\tA：create table tab_new like tab_old (使用旧表创建新表)\n\tB：create table tab_new as select col1,col2… from tab_old definition only\n\n## 5. 删除新表\n\tdrop table tabname\n\n## 6. 增加一个列\n\tAlter table tabname add column col type\n> 注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。\n\n## 7. 添加主键\n\tALTER TABLE tabname ADD PRIMARY KEY (col)\n删除主键\n\n\tALTER TABLE tabname DROP PRIMARY KEY (col)\n\n## 8. 创建索引\n\tcreate [unique] index idxname on tabname(col….) \n删除索引\n\n\tdrop index idxname\n> 注：索引是不可更改的，想更改必须删除重新建。\n\n## 9. 创建视图\n\tcreate view viewname as select statement \n删除视图\n\n\tdrop view viewname\n\n## 10. 几个简单的基本sql语句\n选择\n\n\tselect * from table1 where 范围\n插入\n\n\tinsert into table1(field1,field2) values(value1,value2)\n删除\n\n\tdelete from table1 where 范围\n更新\n\n\tupdate table1 set field1=value1 where 范围\n查找\n\n\tselect * from table1 where field1 like ’%value1%’\n排序\n\n\tselect * from table1 order by field1,field2 [desc]\n总数\n\n\tselect count as totalcount from table1\n求和\n\n\tselect sum(field1) as sumvalue from table1\n平均\n\n\tselect avg(field1) as avgvalue from table1\n最大\n\n\tselect max(field1) as maxvalue from table1\n最小\n\n\tselect min(field1) as minvalue from table1\n\n## 11. 几个高级查询运算词\n- A： UNION 运算符 \nUNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 \n- B： EXCEPT 运算符 \nEXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 \n- C： INTERSECT 运算符\nINTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 \n> 注：使用运算词的几个查询结果行必须是一致的。\n\n## 12. 使用外连接\n- A. left （outer） join： \n左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 \n\n\t\n\tselect a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n- B：right （outer） join: \n右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 \n- C：full/cross （outer） join： \n全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。\n\n## 13. 分组:Group by\n一张表，一旦分组 完成后，查询后只能得到组相关的信息。\n组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)\n在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据\n在selecte统计函数中的字段，不能和普通的字段放在一起；\n\n## 14. 对数据库进行操作\n分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名\n\n## 15. 如何修改数据库的名称\nsp_renamedb 'old_name', 'new_name'\n\n## 16. 查询字段ID最大值的记录\n无索引\n\t\n\tselect time from table t1 where not exists (select 1 from table where id > t1.id) \n有索引\n\t\n\tselect time from table where id in (select max(id) from table)\n\n## 17. 查询某一列的重复项内容\n\tSELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)>1 \n\n## 18. 判断表中是否存在记录\n\tSELECT COUNT (*) FROM tableName WHERE conditions\n\n---\n\n# 二. 提升篇\n\n## 1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)\n法一\n\n\tselect * into b from a where 1<>1（仅用于SQlServer）\n法二\n\n\tselect top 0 * into b from a\n\n## 2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)\n\tinsert into b(a, b, c) select d,e,f from b;\n\n## 3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)\n\tinsert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件\n例子：..from b in '\"&Server.MapPath(\".\")&\"\\data.mdb\" &\"' where..\n\n## 4. 子查询(表名1：a 表名2：b)\n\tselect a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)\n\n## 5. 显示文章、提交人和最后回复时间\n\tselect a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b\n\n## 6. 外连接查询(表名1：a 表名2：b)\n\tselect a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n\n## 7. 在线视图查询(表名1：a )\n\tselect * from (SELECT a,b,c FROM a) T where t.a > 1;\n\n## 8. between的用法,between限制查询数据范围时包括了边界值,not between不包括\n\tselect * from table1 where time between time1 and time2\n\tselect a,b,c, from table1 where a not between 数值1 and 数值2\n\n## 9. in 的使用方法\n\tselect * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)\n\n## 10. 两张关联表，删除主表中已经在副表中没有的信息 \n\tdelete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )\n\n## 11. 四表联查问题\n\tselect * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....\n\n## 12. 日程安排提前五分钟提醒 \n\tselect * from 日程安排 where datediff('minute',f开始时间,getdate())>5\n\n## 13. 一条sql语句搞定数据库分页\n\tselect top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段\n关于数据库分页：\n\n\tdeclare @start int,@end int\n\t@sql nvarchar(600)\n\tset @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid>-1)’\n\texec sp_executesql @sql\n>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）\n\n## 14. 前10条记录\n\tselect top 10 * form table1 where 范围\n\n## 15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)\n\tselect a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)\n\n## 16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表\n\t(select a from tableA ) except (select a from tableB) except (select a from tableC)\n\n## 17. 随机取出10条数据\n\tselect top 10 * from tablename order by newid()\n\n## 18. 随机选择记录\n\tselect newid()\n\n## 19. 删除重复记录\n- 方法一：\n\n\n\tdelete from tablename where id not in (select max(id) from tablename group by col1,col2,...)\n- 方法二：\n\n\n\tselect distinct * into temp from tablename\n\tdelete from tablename\n\tinsert into tablename select * from temp\n>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作\n\n- 方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段\n\n\n\talter table tablename\n\tadd column_b int identity(1,1)\t--添加一个自增列\n\tdelete from tablename where column_b not in(\n\tselect max(column_b) from tablename group by column1,column2,...)\n\talter table tablename drop column column_b\n\n## 20. 列出数据库里所有的表名\n\tselect name from sysobjects where type='U' // U代表用户\n\n## 21. 列出表里的所有的列名\n\tselect name from syscolumns where id=object_id('TableName')\n\n## 22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。\n\tselect type,sum(case vender when 'A' then pcs else 0 end),sum(case vender when 'C' then pcs else 0 end),sum(case vender when 'B' then pcs else 0 end) FROM tablename group by type\n显示结果：\n\n\ttype vender pcs\n\t电脑 A 1\n\t电脑 A 1\n\t光盘 B 2\n\t光盘 A 2\n\t手机 B 3\n\t手机 C 3\n\n## 23. 初始化 表table1\n\tTRUNCATE TABLE table1\n\n## 24. 选择从10到15的记录\n\tselect top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc\n\n## 25. 创建临时表\n- 方法一：\n\n\n    create table #临时表名(字段1 约束条件,\n                           字段2 约束条件,\n                          .....)\n    create table ##临时表名(字段1 约束条件,\n                            字段2 约束条件,\n                            .....)\n例：\n\n\n\tcreate table #Tmp --创建临时表#Tmp\n    (\n        ID   int IDENTITY (1,1)     not null, --创建列ID,并且每次新增一条记录就会加1\n        WokNo                varchar(50),   \n        primary key (ID)      --定义ID为临时表#Tmp的主键      \n    );\n- 方法二：\n\n\n    select * into #临时表名 from 你的表;\n    select * into ##临时表名 from 你的表;\n>注：以上的#代表局部临时表，##代表全局临时表\n查询临时表\n\n    select * from #临时表名;\n    select * from ##临时表名;\n删除临时表\n\n    drop table #临时表名;\n    drop table ##临时表名;\n\n## 26. 关联表更新\n\tUPDATE A SET A.b=B.d FROM tableA A INNER JOIN tableB B ON A.a = B.a\n\n## 27. 查看表的所有外键关系\n\tselect t1.*,t2.name,t3.name from dbo.sysforeignkeys t1 left join sysobjects t2 on t1.fkeyid=t2.id \n\t\t\t   left join sysobjects t3 on t1.rkeyid=t3.id where t3.name='表名 '\n\n## 28. 删除所有约束\n\tDECLARE c1 cursor for\n\t    select 'alter table ['+ object_name(parent_obj) + '] drop constraint ['+name+']; '\n\t    from sysobjects\n\t    where xtype = 'F'\n\topen c1\n\tdeclare @c1 varchar(8000)\n\tfetch next from c1 into @c1\n\twhile(@@fetch_status=0)\n\t    begin\n\t        exec(@c1)\n\t        fetch next from c1 into @c1\n\t    end\n\tclose c1\n\tdeallocate c1\n\n## 29. 删除数据库所有表\n\tdeclare @tname varchar(8000)\n\tset @tname=''\n\tselect @tname=@tname + Name + ',' from sysobjects where xtype='U'\n\tselect @tname='drop table ' + left(@tname,len(@tname)-1)\n\texec(@tname)\n\n## 30. 删除外键约束\n得到某个表被哪些外键引用，并且显示出外键表的表名\n\n\tSELECT\n\t\tfk.name,\n\t\tfk.object_id,\n\t\tOBJECT_NAME(fk.parent_object_id) AS referenceTableName\n\tFROM\n\t\tsys.foreign_keys AS fk\n\tJOIN sys.objects AS o ON fk.referenced_object_id = o.object_id\n\tWHERE\n\t\to.name = 'ATTACHMENTDOC';\n\n通过外键表的表名和外键名称执行以下语句即可删除外键\n\n\tALTER TABLE dbo.CONTRACTINFO DROP CONSTRAINT FK_CONTRACTINFO_ATTACHMENTDOC\n\n## 31. 查找指定数据库表的字段名，类型，注释\n\t    SELECT c.object_id, c.name AS cname, t.name AS tname, is_computed AS isComputed,\n\t\t       (SELECT VALUE\n\t              FROM sys.extended_properties AS ex\n\t             WHERE ex.major_id = c.object_id AND ex.minor_id = c.column_id) AS notes\n\t      FROM sys.columns AS c\n\tINNER JOIN sys.tables  AS ta ON c.object_id = ta.object_id\n\tINNER JOIN (SELECT name, system_type_id\n\t              FROM sys.types\n\t             WHERE name <> 'sysname') AS t ON c.system_type_id = t.system_type_id\n\t     WHERE ta.name = '指定数据库表'\n\t  ORDER BY c.column_id\n\n## 32. 同步表数据\n\tINSERT 表2 \n\tSELECT * FROM 表1 AS a WHERE NOT EXISTS(SELECT 1 FROM 表2 WHERE ID = a.ID);\n\n## 33. 判断某列中是否包含中文字符或者英文字符\n\tSELECT * FROM 表名 WHERE 某列 LIKE '%[吖-座]%'\n\tSELECT * FROM 表名 WHERE 某列 LIKE '%[a-z]%'\n\n## 34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）\n例如表Table1中有两列数据：\n\n\tcode        name\n\tAAA         姓名1\n\tAAA         姓名2\n\tAAA         姓名3\n\tBBB         姓名4\n\tBBB         姓名5\n行转列，想变成如下格式：\n\n\tcode        name\n\tAAA         姓名1,姓名2,姓名3\n\tBBB         姓名4,姓名5\n可用如下SQL实现：\n```sql\n  SELECT code, name = (STUFF((SELECT ',' + name \n                                FROM Table1 \n                               WHERE code = a.code FOR xml PATH('')),1,1,''))\n    FROM Table1 a \nGROUP BY code\n```\n\n---\n\n# 三. 技巧篇\n\n## 1. 1=1，1=2的使用，在SQL语句组合时用的较多\n“where 1=1” 表示选择全部\n“where 1=2” 表示全部不选\n\n\n## 2. 收缩数据库\n重建索引\n\n\tDBCC REINDEX\n\tDBCC INDEXDEFRAG\n收缩数据和日志\n\n\tDBCC SHRINKDB\n\tDBCC SHRINKFILE\n\n## 3. 压缩数据库\n\tdbcc shrinkdatabase(dbname)\n\n## 4. 转移数据库给新用户以已存在用户权限\n\texec sp_change_users_login 'update_one','newname','oldname'\n\tgo\n\n## 5. 检查备份集\n\tRESTORE VERIFYONLY from disk='E:\\dvbbs.bak'\n\n## 6. 修复数据库\n\tALTER DATABASE [dvbbs] SET SINGLE_USER\n\tGO\n\tDBCC CHECKDB('dvbbs',repair_allow_data_loss) WITH TABLOCK\n\tGO\n\tALTER DATABASE [dvbbs] SET MULTI_USER\n\tGO\n\n## 7. 日志清除\n\tSET NOCOUNT ON\n\tDECLARE @LogicalFileName sysname,\n\t@MaxMinutes INT,\n\t@NewSize INT\n\n\tUSE tablename -- 要操作的数据库名\n\tSELECT  @LogicalFileName = 'tablename_log', -- 日志文件名\n\t@MaxMinutes = 10, -- Limit on time allowed to wrap log.\n\t@NewSize = 1  -- 你想设定的日志文件的大小(M)\n\tSetup / initialize\n\tDECLARE @OriginalSize int\n\tSELECT @OriginalSize = size \n\tFROM sysfiles\n\tWHERE name = @LogicalFileName\n\tSELECT 'Original Size of ' + db_name() + ' LOG is ' + \n\tCONVERT(VARCHAR(30),@OriginalSize) + ' 8K pages or ' + \n\tCONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + 'MB'\n\tFROM sysfiles\n\tWHERE name = @LogicalFileName\n\tCREATE TABLE DummyTrans\n\t(DummyColumn char (8000) not null)\n\n\tDECLARE @Counter    INT,\n\t@StartTime DATETIME,\n\t@TruncLog   VARCHAR(255)\n\tSELECT @StartTime = GETDATE(),\n\t@TruncLog = 'BACKUP LOG ' + db_name() + ' WITH TRUNCATE_ONLY'\n\tDBCC SHRINKFILE (@LogicalFileName, @NewSize)\n\tEXEC (@TruncLog)\n\t-- Wrap the log if necessary.\n\tWHILE @MaxMinutes > DATEDIFF (mi, @StartTime, GETDATE()) -- time has not expired\n\tAND @OriginalSize = (SELECT size FROM sysfiles WHERE name = @LogicalFileName)  \n\tAND (@OriginalSize * 8 /1024) > @NewSize  \n\tBEGIN -- Outer loop.\n\tSELECT @Counter = 0\n\tWHILE   ((@Counter < @OriginalSize / 16) AND (@Counter < 50000))\n\tBEGIN -- update\n\tINSERT DummyTrans VALUES ('Fill Log') DELETE DummyTrans\n\tSELECT @Counter = @Counter + 1\n\tEND\n\tEXEC (@TruncLog)  \n\tEND\n\tSELECT 'Final Size of ' + db_name() + ' LOG is ' +\n\tCONVERT(VARCHAR(30),size) + ' 8K pages or ' + \n\tCONVERT(VARCHAR(30),(size*8/1024)) + 'MB'\n\tFROM sysfiles \n\tWHERE name = @LogicalFileName\n\tDROP TABLE DummyTrans\n\tSET NOCOUNT OFF\n\n## 8. 更改某个表\n\texec sp_changeobjectowner 'tablename','dbo'\n\n## 9. 存储更改全部表\n\tCREATE PROCEDURE dbo.User_ChangeObjectOwnerBatch\n\t@OldOwner as NVARCHAR(128),\n\t@NewOwner as NVARCHAR(128)\n\tAS\n\tDECLARE @Name    as NVARCHAR(128)\n\tDECLARE @Owner   as NVARCHAR(128)\n\tDECLARE @OwnerName   as NVARCHAR(128)\n\tDECLARE curObject CURSOR FOR \n\tselect 'Name'    = name,\n\t   'Owner'    = user_name(uid)\n\tfrom sysobjects\n\twhere user_name(uid)=@OldOwner\n\torder by name\n\tOPEN   curObject\n\tFETCH NEXT FROM curObject INTO @Name, @Owner\n\tWHILE(@@FETCH_STATUS=0)\n\tBEGIN     \n\tif @Owner=@OldOwner \n\tbegin\n\t   set @OwnerName = @OldOwner + '.' + rtrim(@Name)\n\t   exec sp_changeobjectowner @OwnerName, @NewOwner\n\tend\n\t-- select @name,@NewOwner,@OldOwner\n\tFETCH NEXT FROM curObject INTO @Name, @Owner\n\tEND\n\tclose curObject\n\tdeallocate curObject\n\tGO\n\n## 10. SQL SERVER中直接循环写入数据\n\tdeclare @i int\n\tset @i=1\n\twhile @i<30\n\tbegin\n\tinsert into test (userid) values(@i)\n\tset @i=@i+1\n\tend\n案例：\n有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:\n\n| Name \t\t\t| score |\n| -------  \t\t| ---: |\n|Zhangshan\t\t|80|\n|Lishi  \t\t|59|\n|Wangwu  \t\t|50|\n|Songquan \t\t|69|\n\n\twhile((select min(score) from tb_table)<60)\n\tbegin\n\tupdate tb_table set score =score*1.01\n\twhere score<60\n\tif (select min(score) from tb_table)>60\n\tbreak\n\telse\n\tcontinue\n\tend\n\n## 11. 查看数据库属性\n\tsp_helpdb 数据库名\n\n## 12. 按姓氏笔画排序:\n\tSelect * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多\n\n## 13. 数据库加密:\n\tselect encrypt('原始密码')\n\tselect pwdencrypt('原始密码')\n\tselect pwdcompare('原始密码','加密后密码') = 1--相同；否则不相同 encrypt('原始密码')\n\tselect pwdencrypt('原始密码')\n\tselect pwdcompare('原始密码','加密后密码') = 1--相同；否则不相同\n\n## 14. 取回表中字段:\n\tdeclare @list varchar(1000),\n\t@sql nvarchar(1000) \n\tselect @list=@list+','+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name='表A'\n\tset @sql='select '+right(@list,len(@list)-1)+' from 表A' \n\texec (@sql)\n\n## 15. 查看硬盘分区:\n\tEXEC master..xp_fixeddrives\n\n## 16. 比较A,B表是否相等:\n\tif (select checksum_agg(binary_checksum(*)) from A)\n\t     =\n\t    (select checksum_agg(binary_checksum(*)) from B)\n\tprint '相等'\n\telse\n\tprint '不相等'\n\n## 17. 杀掉所有的事件探察器进程:\n\tDECLARE hcforeach CURSOR GLOBAL FOR SELECT 'kill '+RTRIM(spid) FROM master.dbo.sysprocesses\n\tWHERE program_name IN('SQL profiler',N'SQL 事件探查器')\n\tEXEC sp_msforeach_worker '?'\n\n## 18. 记录搜索:\n开头到N条记录\n\n\tSelect Top N * From 表\n\nN到M条记录(要有主索引ID)\n\n\tSelect Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc\n\nN到结尾记录\n\n\tSelect Top N * From 表 Order by ID Desc\n\n\n## 19. 获取当前数据库中的所有用户表\n\tselect Name from sysobjects where xtype='u' and status>=0\n\n## 20. 获取某一个表的所有字段\n\tselect name from syscolumns where id=object_id('表名')\n\tselect name from syscolumns where id in (select id from sysobjects where type = 'u' and name = '表名')\n两种方式的效果相同\n\n## 21. 查看与某一个表相关的视图、存储过程、函数\n\tselect a.* from sysobjects a, syscomments b where a.id = b.id and b.text like '%表名%'\n\n## 22. 查看当前数据库中所有存储过程\n\tselect name as 存储过程名称 from sysobjects where xtype='P'\n\n## 23. 查询用户创建的所有数据库\n\tselect * from master..sysdatabases D where sid not in(select sid from master..syslogins where name='sa')\n或者\n\n\tselect dbid, name AS DB_NAME from master..sysdatabases where sid <> 0x01\n\n## 24. 查询某一个表的字段和数据类型\n\tselect column_name,data_type from information_schema.columns\n\twhere table_name = '表名'\n\n## 25. 不同服务器数据库之间的数据操作\n创建链接服务器\n\n\texec sp_addlinkedserver 'ITSV ', ' ', 'SQLOLEDB ', '远程服务器名或ip地址 '\n\texec sp_addlinkedsrvlogin 'ITSV ', 'false ',null, '用户名 ', '密码 '\n查询示例\n\n\tselect * from ITSV.数据库名.dbo.表名\n导入示例\n\n\tselect * into 表 from ITSV.数据库名.dbo.表名\n以后不再使用时删除链接服务器\n\n\texec sp_dropserver 'ITSV ', 'droplogins '\n连接远程/局域网数据(openrowset/openquery/opendatasource)\n- 1. openrowset\n查询示例\n\t\n\n\tselect * from openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n生成本地表\n\t\n\n\tselect * into 表 from openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n把本地表导入远程表\n\t\n\n\tinsert openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n\tselect *from 本地表\n更新本地表\n\t\n\n\tupdate b\n\tset b.列A=a.列A\n\tfrom openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)as a inner join 本地表 b\ton a.column1=b.column1\n- 2. openquery用法需要创建一个连接\n首先创建一个连接创建链接服务器\n\t\n\n\texec sp_addlinkedserver 'ITSV ', ' ', 'SQLOLEDB ', '远程服务器名或ip地址 '\n查询\n\t\n\n\tselect *\n\tFROM openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ')\n把本地表导入远程表\n\t\n\n\tinsert openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ')\n\tselect * from 本地表\n更新本地表\n\t\n\n\tupdate b\n\tset b.列B=a.列B\n\tFROM openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ') as a\n\tinner join 本地表 b on a.列A=b.列A\n- 3. opendatasource/openrowset\n\t\n\n\tSELECT *\n\tFROM opendatasource( 'SQLOLEDB ', 'Data Source=ip/ServerName;User ID=登陆名;Password=密码 ' ).test.dbo.roy_ta\n把本地表导入远程表\n\t\n\n\tinsert opendatasource( 'SQLOLEDB ', 'Data Source=ip/ServerName;User ID=登陆名;Password=密码 ').数据库.dbo.表名\n\tselect * from 本地表\n\n## 26. 删除数据库下面的所有表\n\tuse 数据库名(是要删除表的所在的那个数据库的名称)\n\tGO\n\tdeclare @sql varchar(8000)\n\twhile (select count(*) from sysobjects where type='U')>0\n\tbegin\n\tSELECT @sql='drop table ' + name\n\tFROM sysobjects\n\tWHERE (type = 'U')\n\tORDER BY 'drop table ' + name\n\texec(@sql) \n\tend\n\n## 27. 查看数据库文件使用情况\n\tSELECT  A.name                                                     AS \"逻辑名称\"\n\t       ,CONVERT(FLOAT ,A.size)             * (8192.0/1024.0)/1024  AS \"已用大小MB\"\n\t       ,CONVERT(FLOAT ,A.maxSize - A.size) * (8192.0/1024.0)/1024  AS \"可用大小MB\"\n\t       ,CONVERT(FLOAT ,A.maxSize)          * (8192.0/1024.0)/1024  AS \"分配大小MB\"\n\t       ,A.fileName                                                 AS \"文件路径\"\n\t       ,(\n\t         SELECT  SA.groupName\n\t           FROM  SysFileGroups  SA\n\t          WHERE  SA.groupID = A.groupID\n\t        )                                                          AS \"文件组\"\n\t       ,CASE WHEN A.status = 1081346 THEN '磁盘文件'               \n\t             WHEN A.status = 1081410 THEN '日志设备'\n\t             ELSE CONVERT(VARCHAR ,A.status) END                   AS \"文件类型\"\n\t  FROM  SysFiles  A\n---\n\n# 常识\n\n- 在SQL查询中，from后最多可以跟256张表或视图\n- 在SQL语句中出现 Order by，查询时，先排序，后取值\n- 在SQL中，一个字段的最大容量是8000","source":"_posts/【SQL】经典语句.md","raw":"---\ntitle: 【SQL】经典语句\nlayout: post\ncomments: true\ndate: 2016-11-29 15:38:32\ncategories: SQL\ntags: [SQL, 经典语句]\nkeywords:\ndescription:\ntoc: true\n---\n\n# 一. 基础篇\n\n## 1. 创建数据库\n\tCREATE DATABASE database-name\n\n## 2. 删除数据库\n\tdrop database dbname\n\n## 3. 备份sql server\n\t创建 备份数据的 device\n\tUSE master\n\tEXEC sp_addumpdevice 'disk', 'testBack', 'c:\\mssql7backup\\MyNwind_1.dat'\n\t开始 备份\n\tBACKUP DATABASE pubs TO testBack \n\n<!-- more -->\n\n## 4. 创建新表\n\tcreate table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)\n根据已有的表创建新表：\n\n\tA：create table tab_new like tab_old (使用旧表创建新表)\n\tB：create table tab_new as select col1,col2… from tab_old definition only\n\n## 5. 删除新表\n\tdrop table tabname\n\n## 6. 增加一个列\n\tAlter table tabname add column col type\n> 注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。\n\n## 7. 添加主键\n\tALTER TABLE tabname ADD PRIMARY KEY (col)\n删除主键\n\n\tALTER TABLE tabname DROP PRIMARY KEY (col)\n\n## 8. 创建索引\n\tcreate [unique] index idxname on tabname(col….) \n删除索引\n\n\tdrop index idxname\n> 注：索引是不可更改的，想更改必须删除重新建。\n\n## 9. 创建视图\n\tcreate view viewname as select statement \n删除视图\n\n\tdrop view viewname\n\n## 10. 几个简单的基本sql语句\n选择\n\n\tselect * from table1 where 范围\n插入\n\n\tinsert into table1(field1,field2) values(value1,value2)\n删除\n\n\tdelete from table1 where 范围\n更新\n\n\tupdate table1 set field1=value1 where 范围\n查找\n\n\tselect * from table1 where field1 like ’%value1%’\n排序\n\n\tselect * from table1 order by field1,field2 [desc]\n总数\n\n\tselect count as totalcount from table1\n求和\n\n\tselect sum(field1) as sumvalue from table1\n平均\n\n\tselect avg(field1) as avgvalue from table1\n最大\n\n\tselect max(field1) as maxvalue from table1\n最小\n\n\tselect min(field1) as minvalue from table1\n\n## 11. 几个高级查询运算词\n- A： UNION 运算符 \nUNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 \n- B： EXCEPT 运算符 \nEXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 \n- C： INTERSECT 运算符\nINTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 \n> 注：使用运算词的几个查询结果行必须是一致的。\n\n## 12. 使用外连接\n- A. left （outer） join： \n左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 \n\n\t\n\tselect a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n- B：right （outer） join: \n右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 \n- C：full/cross （outer） join： \n全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。\n\n## 13. 分组:Group by\n一张表，一旦分组 完成后，查询后只能得到组相关的信息。\n组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)\n在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据\n在selecte统计函数中的字段，不能和普通的字段放在一起；\n\n## 14. 对数据库进行操作\n分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名\n\n## 15. 如何修改数据库的名称\nsp_renamedb 'old_name', 'new_name'\n\n## 16. 查询字段ID最大值的记录\n无索引\n\t\n\tselect time from table t1 where not exists (select 1 from table where id > t1.id) \n有索引\n\t\n\tselect time from table where id in (select max(id) from table)\n\n## 17. 查询某一列的重复项内容\n\tSELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)>1 \n\n## 18. 判断表中是否存在记录\n\tSELECT COUNT (*) FROM tableName WHERE conditions\n\n---\n\n# 二. 提升篇\n\n## 1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)\n法一\n\n\tselect * into b from a where 1<>1（仅用于SQlServer）\n法二\n\n\tselect top 0 * into b from a\n\n## 2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)\n\tinsert into b(a, b, c) select d,e,f from b;\n\n## 3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)\n\tinsert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件\n例子：..from b in '\"&Server.MapPath(\".\")&\"\\data.mdb\" &\"' where..\n\n## 4. 子查询(表名1：a 表名2：b)\n\tselect a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)\n\n## 5. 显示文章、提交人和最后回复时间\n\tselect a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b\n\n## 6. 外连接查询(表名1：a 表名2：b)\n\tselect a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n\n## 7. 在线视图查询(表名1：a )\n\tselect * from (SELECT a,b,c FROM a) T where t.a > 1;\n\n## 8. between的用法,between限制查询数据范围时包括了边界值,not between不包括\n\tselect * from table1 where time between time1 and time2\n\tselect a,b,c, from table1 where a not between 数值1 and 数值2\n\n## 9. in 的使用方法\n\tselect * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)\n\n## 10. 两张关联表，删除主表中已经在副表中没有的信息 \n\tdelete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )\n\n## 11. 四表联查问题\n\tselect * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....\n\n## 12. 日程安排提前五分钟提醒 \n\tselect * from 日程安排 where datediff('minute',f开始时间,getdate())>5\n\n## 13. 一条sql语句搞定数据库分页\n\tselect top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段\n关于数据库分页：\n\n\tdeclare @start int,@end int\n\t@sql nvarchar(600)\n\tset @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid>-1)’\n\texec sp_executesql @sql\n>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）\n\n## 14. 前10条记录\n\tselect top 10 * form table1 where 范围\n\n## 15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)\n\tselect a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)\n\n## 16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表\n\t(select a from tableA ) except (select a from tableB) except (select a from tableC)\n\n## 17. 随机取出10条数据\n\tselect top 10 * from tablename order by newid()\n\n## 18. 随机选择记录\n\tselect newid()\n\n## 19. 删除重复记录\n- 方法一：\n\n\n\tdelete from tablename where id not in (select max(id) from tablename group by col1,col2,...)\n- 方法二：\n\n\n\tselect distinct * into temp from tablename\n\tdelete from tablename\n\tinsert into tablename select * from temp\n>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作\n\n- 方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段\n\n\n\talter table tablename\n\tadd column_b int identity(1,1)\t--添加一个自增列\n\tdelete from tablename where column_b not in(\n\tselect max(column_b) from tablename group by column1,column2,...)\n\talter table tablename drop column column_b\n\n## 20. 列出数据库里所有的表名\n\tselect name from sysobjects where type='U' // U代表用户\n\n## 21. 列出表里的所有的列名\n\tselect name from syscolumns where id=object_id('TableName')\n\n## 22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。\n\tselect type,sum(case vender when 'A' then pcs else 0 end),sum(case vender when 'C' then pcs else 0 end),sum(case vender when 'B' then pcs else 0 end) FROM tablename group by type\n显示结果：\n\n\ttype vender pcs\n\t电脑 A 1\n\t电脑 A 1\n\t光盘 B 2\n\t光盘 A 2\n\t手机 B 3\n\t手机 C 3\n\n## 23. 初始化 表table1\n\tTRUNCATE TABLE table1\n\n## 24. 选择从10到15的记录\n\tselect top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc\n\n## 25. 创建临时表\n- 方法一：\n\n\n    create table #临时表名(字段1 约束条件,\n                           字段2 约束条件,\n                          .....)\n    create table ##临时表名(字段1 约束条件,\n                            字段2 约束条件,\n                            .....)\n例：\n\n\n\tcreate table #Tmp --创建临时表#Tmp\n    (\n        ID   int IDENTITY (1,1)     not null, --创建列ID,并且每次新增一条记录就会加1\n        WokNo                varchar(50),   \n        primary key (ID)      --定义ID为临时表#Tmp的主键      \n    );\n- 方法二：\n\n\n    select * into #临时表名 from 你的表;\n    select * into ##临时表名 from 你的表;\n>注：以上的#代表局部临时表，##代表全局临时表\n查询临时表\n\n    select * from #临时表名;\n    select * from ##临时表名;\n删除临时表\n\n    drop table #临时表名;\n    drop table ##临时表名;\n\n## 26. 关联表更新\n\tUPDATE A SET A.b=B.d FROM tableA A INNER JOIN tableB B ON A.a = B.a\n\n## 27. 查看表的所有外键关系\n\tselect t1.*,t2.name,t3.name from dbo.sysforeignkeys t1 left join sysobjects t2 on t1.fkeyid=t2.id \n\t\t\t   left join sysobjects t3 on t1.rkeyid=t3.id where t3.name='表名 '\n\n## 28. 删除所有约束\n\tDECLARE c1 cursor for\n\t    select 'alter table ['+ object_name(parent_obj) + '] drop constraint ['+name+']; '\n\t    from sysobjects\n\t    where xtype = 'F'\n\topen c1\n\tdeclare @c1 varchar(8000)\n\tfetch next from c1 into @c1\n\twhile(@@fetch_status=0)\n\t    begin\n\t        exec(@c1)\n\t        fetch next from c1 into @c1\n\t    end\n\tclose c1\n\tdeallocate c1\n\n## 29. 删除数据库所有表\n\tdeclare @tname varchar(8000)\n\tset @tname=''\n\tselect @tname=@tname + Name + ',' from sysobjects where xtype='U'\n\tselect @tname='drop table ' + left(@tname,len(@tname)-1)\n\texec(@tname)\n\n## 30. 删除外键约束\n得到某个表被哪些外键引用，并且显示出外键表的表名\n\n\tSELECT\n\t\tfk.name,\n\t\tfk.object_id,\n\t\tOBJECT_NAME(fk.parent_object_id) AS referenceTableName\n\tFROM\n\t\tsys.foreign_keys AS fk\n\tJOIN sys.objects AS o ON fk.referenced_object_id = o.object_id\n\tWHERE\n\t\to.name = 'ATTACHMENTDOC';\n\n通过外键表的表名和外键名称执行以下语句即可删除外键\n\n\tALTER TABLE dbo.CONTRACTINFO DROP CONSTRAINT FK_CONTRACTINFO_ATTACHMENTDOC\n\n## 31. 查找指定数据库表的字段名，类型，注释\n\t    SELECT c.object_id, c.name AS cname, t.name AS tname, is_computed AS isComputed,\n\t\t       (SELECT VALUE\n\t              FROM sys.extended_properties AS ex\n\t             WHERE ex.major_id = c.object_id AND ex.minor_id = c.column_id) AS notes\n\t      FROM sys.columns AS c\n\tINNER JOIN sys.tables  AS ta ON c.object_id = ta.object_id\n\tINNER JOIN (SELECT name, system_type_id\n\t              FROM sys.types\n\t             WHERE name <> 'sysname') AS t ON c.system_type_id = t.system_type_id\n\t     WHERE ta.name = '指定数据库表'\n\t  ORDER BY c.column_id\n\n## 32. 同步表数据\n\tINSERT 表2 \n\tSELECT * FROM 表1 AS a WHERE NOT EXISTS(SELECT 1 FROM 表2 WHERE ID = a.ID);\n\n## 33. 判断某列中是否包含中文字符或者英文字符\n\tSELECT * FROM 表名 WHERE 某列 LIKE '%[吖-座]%'\n\tSELECT * FROM 表名 WHERE 某列 LIKE '%[a-z]%'\n\n## 34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）\n例如表Table1中有两列数据：\n\n\tcode        name\n\tAAA         姓名1\n\tAAA         姓名2\n\tAAA         姓名3\n\tBBB         姓名4\n\tBBB         姓名5\n行转列，想变成如下格式：\n\n\tcode        name\n\tAAA         姓名1,姓名2,姓名3\n\tBBB         姓名4,姓名5\n可用如下SQL实现：\n```sql\n  SELECT code, name = (STUFF((SELECT ',' + name \n                                FROM Table1 \n                               WHERE code = a.code FOR xml PATH('')),1,1,''))\n    FROM Table1 a \nGROUP BY code\n```\n\n---\n\n# 三. 技巧篇\n\n## 1. 1=1，1=2的使用，在SQL语句组合时用的较多\n“where 1=1” 表示选择全部\n“where 1=2” 表示全部不选\n\n\n## 2. 收缩数据库\n重建索引\n\n\tDBCC REINDEX\n\tDBCC INDEXDEFRAG\n收缩数据和日志\n\n\tDBCC SHRINKDB\n\tDBCC SHRINKFILE\n\n## 3. 压缩数据库\n\tdbcc shrinkdatabase(dbname)\n\n## 4. 转移数据库给新用户以已存在用户权限\n\texec sp_change_users_login 'update_one','newname','oldname'\n\tgo\n\n## 5. 检查备份集\n\tRESTORE VERIFYONLY from disk='E:\\dvbbs.bak'\n\n## 6. 修复数据库\n\tALTER DATABASE [dvbbs] SET SINGLE_USER\n\tGO\n\tDBCC CHECKDB('dvbbs',repair_allow_data_loss) WITH TABLOCK\n\tGO\n\tALTER DATABASE [dvbbs] SET MULTI_USER\n\tGO\n\n## 7. 日志清除\n\tSET NOCOUNT ON\n\tDECLARE @LogicalFileName sysname,\n\t@MaxMinutes INT,\n\t@NewSize INT\n\n\tUSE tablename -- 要操作的数据库名\n\tSELECT  @LogicalFileName = 'tablename_log', -- 日志文件名\n\t@MaxMinutes = 10, -- Limit on time allowed to wrap log.\n\t@NewSize = 1  -- 你想设定的日志文件的大小(M)\n\tSetup / initialize\n\tDECLARE @OriginalSize int\n\tSELECT @OriginalSize = size \n\tFROM sysfiles\n\tWHERE name = @LogicalFileName\n\tSELECT 'Original Size of ' + db_name() + ' LOG is ' + \n\tCONVERT(VARCHAR(30),@OriginalSize) + ' 8K pages or ' + \n\tCONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + 'MB'\n\tFROM sysfiles\n\tWHERE name = @LogicalFileName\n\tCREATE TABLE DummyTrans\n\t(DummyColumn char (8000) not null)\n\n\tDECLARE @Counter    INT,\n\t@StartTime DATETIME,\n\t@TruncLog   VARCHAR(255)\n\tSELECT @StartTime = GETDATE(),\n\t@TruncLog = 'BACKUP LOG ' + db_name() + ' WITH TRUNCATE_ONLY'\n\tDBCC SHRINKFILE (@LogicalFileName, @NewSize)\n\tEXEC (@TruncLog)\n\t-- Wrap the log if necessary.\n\tWHILE @MaxMinutes > DATEDIFF (mi, @StartTime, GETDATE()) -- time has not expired\n\tAND @OriginalSize = (SELECT size FROM sysfiles WHERE name = @LogicalFileName)  \n\tAND (@OriginalSize * 8 /1024) > @NewSize  \n\tBEGIN -- Outer loop.\n\tSELECT @Counter = 0\n\tWHILE   ((@Counter < @OriginalSize / 16) AND (@Counter < 50000))\n\tBEGIN -- update\n\tINSERT DummyTrans VALUES ('Fill Log') DELETE DummyTrans\n\tSELECT @Counter = @Counter + 1\n\tEND\n\tEXEC (@TruncLog)  \n\tEND\n\tSELECT 'Final Size of ' + db_name() + ' LOG is ' +\n\tCONVERT(VARCHAR(30),size) + ' 8K pages or ' + \n\tCONVERT(VARCHAR(30),(size*8/1024)) + 'MB'\n\tFROM sysfiles \n\tWHERE name = @LogicalFileName\n\tDROP TABLE DummyTrans\n\tSET NOCOUNT OFF\n\n## 8. 更改某个表\n\texec sp_changeobjectowner 'tablename','dbo'\n\n## 9. 存储更改全部表\n\tCREATE PROCEDURE dbo.User_ChangeObjectOwnerBatch\n\t@OldOwner as NVARCHAR(128),\n\t@NewOwner as NVARCHAR(128)\n\tAS\n\tDECLARE @Name    as NVARCHAR(128)\n\tDECLARE @Owner   as NVARCHAR(128)\n\tDECLARE @OwnerName   as NVARCHAR(128)\n\tDECLARE curObject CURSOR FOR \n\tselect 'Name'    = name,\n\t   'Owner'    = user_name(uid)\n\tfrom sysobjects\n\twhere user_name(uid)=@OldOwner\n\torder by name\n\tOPEN   curObject\n\tFETCH NEXT FROM curObject INTO @Name, @Owner\n\tWHILE(@@FETCH_STATUS=0)\n\tBEGIN     \n\tif @Owner=@OldOwner \n\tbegin\n\t   set @OwnerName = @OldOwner + '.' + rtrim(@Name)\n\t   exec sp_changeobjectowner @OwnerName, @NewOwner\n\tend\n\t-- select @name,@NewOwner,@OldOwner\n\tFETCH NEXT FROM curObject INTO @Name, @Owner\n\tEND\n\tclose curObject\n\tdeallocate curObject\n\tGO\n\n## 10. SQL SERVER中直接循环写入数据\n\tdeclare @i int\n\tset @i=1\n\twhile @i<30\n\tbegin\n\tinsert into test (userid) values(@i)\n\tset @i=@i+1\n\tend\n案例：\n有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:\n\n| Name \t\t\t| score |\n| -------  \t\t| ---: |\n|Zhangshan\t\t|80|\n|Lishi  \t\t|59|\n|Wangwu  \t\t|50|\n|Songquan \t\t|69|\n\n\twhile((select min(score) from tb_table)<60)\n\tbegin\n\tupdate tb_table set score =score*1.01\n\twhere score<60\n\tif (select min(score) from tb_table)>60\n\tbreak\n\telse\n\tcontinue\n\tend\n\n## 11. 查看数据库属性\n\tsp_helpdb 数据库名\n\n## 12. 按姓氏笔画排序:\n\tSelect * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多\n\n## 13. 数据库加密:\n\tselect encrypt('原始密码')\n\tselect pwdencrypt('原始密码')\n\tselect pwdcompare('原始密码','加密后密码') = 1--相同；否则不相同 encrypt('原始密码')\n\tselect pwdencrypt('原始密码')\n\tselect pwdcompare('原始密码','加密后密码') = 1--相同；否则不相同\n\n## 14. 取回表中字段:\n\tdeclare @list varchar(1000),\n\t@sql nvarchar(1000) \n\tselect @list=@list+','+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name='表A'\n\tset @sql='select '+right(@list,len(@list)-1)+' from 表A' \n\texec (@sql)\n\n## 15. 查看硬盘分区:\n\tEXEC master..xp_fixeddrives\n\n## 16. 比较A,B表是否相等:\n\tif (select checksum_agg(binary_checksum(*)) from A)\n\t     =\n\t    (select checksum_agg(binary_checksum(*)) from B)\n\tprint '相等'\n\telse\n\tprint '不相等'\n\n## 17. 杀掉所有的事件探察器进程:\n\tDECLARE hcforeach CURSOR GLOBAL FOR SELECT 'kill '+RTRIM(spid) FROM master.dbo.sysprocesses\n\tWHERE program_name IN('SQL profiler',N'SQL 事件探查器')\n\tEXEC sp_msforeach_worker '?'\n\n## 18. 记录搜索:\n开头到N条记录\n\n\tSelect Top N * From 表\n\nN到M条记录(要有主索引ID)\n\n\tSelect Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc\n\nN到结尾记录\n\n\tSelect Top N * From 表 Order by ID Desc\n\n\n## 19. 获取当前数据库中的所有用户表\n\tselect Name from sysobjects where xtype='u' and status>=0\n\n## 20. 获取某一个表的所有字段\n\tselect name from syscolumns where id=object_id('表名')\n\tselect name from syscolumns where id in (select id from sysobjects where type = 'u' and name = '表名')\n两种方式的效果相同\n\n## 21. 查看与某一个表相关的视图、存储过程、函数\n\tselect a.* from sysobjects a, syscomments b where a.id = b.id and b.text like '%表名%'\n\n## 22. 查看当前数据库中所有存储过程\n\tselect name as 存储过程名称 from sysobjects where xtype='P'\n\n## 23. 查询用户创建的所有数据库\n\tselect * from master..sysdatabases D where sid not in(select sid from master..syslogins where name='sa')\n或者\n\n\tselect dbid, name AS DB_NAME from master..sysdatabases where sid <> 0x01\n\n## 24. 查询某一个表的字段和数据类型\n\tselect column_name,data_type from information_schema.columns\n\twhere table_name = '表名'\n\n## 25. 不同服务器数据库之间的数据操作\n创建链接服务器\n\n\texec sp_addlinkedserver 'ITSV ', ' ', 'SQLOLEDB ', '远程服务器名或ip地址 '\n\texec sp_addlinkedsrvlogin 'ITSV ', 'false ',null, '用户名 ', '密码 '\n查询示例\n\n\tselect * from ITSV.数据库名.dbo.表名\n导入示例\n\n\tselect * into 表 from ITSV.数据库名.dbo.表名\n以后不再使用时删除链接服务器\n\n\texec sp_dropserver 'ITSV ', 'droplogins '\n连接远程/局域网数据(openrowset/openquery/opendatasource)\n- 1. openrowset\n查询示例\n\t\n\n\tselect * from openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n生成本地表\n\t\n\n\tselect * into 表 from openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n把本地表导入远程表\n\t\n\n\tinsert openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)\n\tselect *from 本地表\n更新本地表\n\t\n\n\tupdate b\n\tset b.列A=a.列A\n\tfrom openrowset( 'SQLOLEDB ', 'sql服务器名 '; '用户名 '; '密码 ',数据库名.dbo.表名)as a inner join 本地表 b\ton a.column1=b.column1\n- 2. openquery用法需要创建一个连接\n首先创建一个连接创建链接服务器\n\t\n\n\texec sp_addlinkedserver 'ITSV ', ' ', 'SQLOLEDB ', '远程服务器名或ip地址 '\n查询\n\t\n\n\tselect *\n\tFROM openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ')\n把本地表导入远程表\n\t\n\n\tinsert openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ')\n\tselect * from 本地表\n更新本地表\n\t\n\n\tupdate b\n\tset b.列B=a.列B\n\tFROM openquery(ITSV, 'SELECT * FROM 数据库.dbo.表名 ') as a\n\tinner join 本地表 b on a.列A=b.列A\n- 3. opendatasource/openrowset\n\t\n\n\tSELECT *\n\tFROM opendatasource( 'SQLOLEDB ', 'Data Source=ip/ServerName;User ID=登陆名;Password=密码 ' ).test.dbo.roy_ta\n把本地表导入远程表\n\t\n\n\tinsert opendatasource( 'SQLOLEDB ', 'Data Source=ip/ServerName;User ID=登陆名;Password=密码 ').数据库.dbo.表名\n\tselect * from 本地表\n\n## 26. 删除数据库下面的所有表\n\tuse 数据库名(是要删除表的所在的那个数据库的名称)\n\tGO\n\tdeclare @sql varchar(8000)\n\twhile (select count(*) from sysobjects where type='U')>0\n\tbegin\n\tSELECT @sql='drop table ' + name\n\tFROM sysobjects\n\tWHERE (type = 'U')\n\tORDER BY 'drop table ' + name\n\texec(@sql) \n\tend\n\n## 27. 查看数据库文件使用情况\n\tSELECT  A.name                                                     AS \"逻辑名称\"\n\t       ,CONVERT(FLOAT ,A.size)             * (8192.0/1024.0)/1024  AS \"已用大小MB\"\n\t       ,CONVERT(FLOAT ,A.maxSize - A.size) * (8192.0/1024.0)/1024  AS \"可用大小MB\"\n\t       ,CONVERT(FLOAT ,A.maxSize)          * (8192.0/1024.0)/1024  AS \"分配大小MB\"\n\t       ,A.fileName                                                 AS \"文件路径\"\n\t       ,(\n\t         SELECT  SA.groupName\n\t           FROM  SysFileGroups  SA\n\t          WHERE  SA.groupID = A.groupID\n\t        )                                                          AS \"文件组\"\n\t       ,CASE WHEN A.status = 1081346 THEN '磁盘文件'               \n\t             WHEN A.status = 1081410 THEN '日志设备'\n\t             ELSE CONVERT(VARCHAR ,A.status) END                   AS \"文件类型\"\n\t  FROM  SysFiles  A\n---\n\n# 常识\n\n- 在SQL查询中，from后最多可以跟256张表或视图\n- 在SQL语句中出现 Order by，查询时，先排序，后取值\n- 在SQL中，一个字段的最大容量是8000","slug":"【SQL】经典语句","published":1,"updated":"2018-12-07T03:11:02.929Z","_id":"cjpuwa1jx003us0jthu4yctzs","photos":[],"link":"","content":"<h1 id=\"一-基础篇\"><a href=\"#一-基础篇\" class=\"headerlink\" title=\"一. 基础篇\"></a>一. 基础篇</h1><h2 id=\"1-创建数据库\"><a href=\"#1-创建数据库\" class=\"headerlink\" title=\"1. 创建数据库\"></a>1. 创建数据库</h2><pre><code>CREATE DATABASE database-name\n</code></pre><h2 id=\"2-删除数据库\"><a href=\"#2-删除数据库\" class=\"headerlink\" title=\"2. 删除数据库\"></a>2. 删除数据库</h2><pre><code>drop database dbname\n</code></pre><h2 id=\"3-备份sql-server\"><a href=\"#3-备份sql-server\" class=\"headerlink\" title=\"3. 备份sql server\"></a>3. 备份sql server</h2><pre><code>创建 备份数据的 device\nUSE master\nEXEC sp_addumpdevice &apos;disk&apos;, &apos;testBack&apos;, &apos;c:\\mssql7backup\\MyNwind_1.dat&apos;\n开始 备份\nBACKUP DATABASE pubs TO testBack \n</code></pre><a id=\"more\"></a>\n<h2 id=\"4-创建新表\"><a href=\"#4-创建新表\" class=\"headerlink\" title=\"4. 创建新表\"></a>4. 创建新表</h2><pre><code>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)\n</code></pre><p>根据已有的表创建新表：</p>\n<pre><code>A：create table tab_new like tab_old (使用旧表创建新表)\nB：create table tab_new as select col1,col2… from tab_old definition only\n</code></pre><h2 id=\"5-删除新表\"><a href=\"#5-删除新表\" class=\"headerlink\" title=\"5. 删除新表\"></a>5. 删除新表</h2><pre><code>drop table tabname\n</code></pre><h2 id=\"6-增加一个列\"><a href=\"#6-增加一个列\" class=\"headerlink\" title=\"6. 增加一个列\"></a>6. 增加一个列</h2><pre><code>Alter table tabname add column col type\n</code></pre><blockquote>\n<p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p>\n</blockquote>\n<h2 id=\"7-添加主键\"><a href=\"#7-添加主键\" class=\"headerlink\" title=\"7. 添加主键\"></a>7. 添加主键</h2><pre><code>ALTER TABLE tabname ADD PRIMARY KEY (col)\n</code></pre><p>删除主键</p>\n<pre><code>ALTER TABLE tabname DROP PRIMARY KEY (col)\n</code></pre><h2 id=\"8-创建索引\"><a href=\"#8-创建索引\" class=\"headerlink\" title=\"8. 创建索引\"></a>8. 创建索引</h2><pre><code>create [unique] index idxname on tabname(col….) \n</code></pre><p>删除索引</p>\n<pre><code>drop index idxname\n</code></pre><blockquote>\n<p>注：索引是不可更改的，想更改必须删除重新建。</p>\n</blockquote>\n<h2 id=\"9-创建视图\"><a href=\"#9-创建视图\" class=\"headerlink\" title=\"9. 创建视图\"></a>9. 创建视图</h2><pre><code>create view viewname as select statement \n</code></pre><p>删除视图</p>\n<pre><code>drop view viewname\n</code></pre><h2 id=\"10-几个简单的基本sql语句\"><a href=\"#10-几个简单的基本sql语句\" class=\"headerlink\" title=\"10. 几个简单的基本sql语句\"></a>10. 几个简单的基本sql语句</h2><p>选择</p>\n<pre><code>select * from table1 where 范围\n</code></pre><p>插入</p>\n<pre><code>insert into table1(field1,field2) values(value1,value2)\n</code></pre><p>删除</p>\n<pre><code>delete from table1 where 范围\n</code></pre><p>更新</p>\n<pre><code>update table1 set field1=value1 where 范围\n</code></pre><p>查找</p>\n<pre><code>select * from table1 where field1 like ’%value1%’\n</code></pre><p>排序</p>\n<pre><code>select * from table1 order by field1,field2 [desc]\n</code></pre><p>总数</p>\n<pre><code>select count as totalcount from table1\n</code></pre><p>求和</p>\n<pre><code>select sum(field1) as sumvalue from table1\n</code></pre><p>平均</p>\n<pre><code>select avg(field1) as avgvalue from table1\n</code></pre><p>最大</p>\n<pre><code>select max(field1) as maxvalue from table1\n</code></pre><p>最小</p>\n<pre><code>select min(field1) as minvalue from table1\n</code></pre><h2 id=\"11-几个高级查询运算词\"><a href=\"#11-几个高级查询运算词\" class=\"headerlink\" title=\"11. 几个高级查询运算词\"></a>11. 几个高级查询运算词</h2><ul>\n<li>A： UNION 运算符<br>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 </li>\n<li>B： EXCEPT 运算符<br>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 </li>\n<li>C： INTERSECT 运算符<br>INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 <blockquote>\n<p>注：使用运算词的几个查询结果行必须是一致的。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"12-使用外连接\"><a href=\"#12-使用外连接\" class=\"headerlink\" title=\"12. 使用外连接\"></a>12. 使用外连接</h2><ul>\n<li>A. left （outer） join：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 </li>\n</ul>\n<pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n</code></pre><ul>\n<li>B：right （outer） join:<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 </li>\n<li>C：full/cross （outer） join：<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</li>\n</ul>\n<h2 id=\"13-分组-Group-by\"><a href=\"#13-分组-Group-by\" class=\"headerlink\" title=\"13. 分组:Group by\"></a>13. 分组:Group by</h2><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。<br>组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)<br>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据<br>在selecte统计函数中的字段，不能和普通的字段放在一起；</p>\n<h2 id=\"14-对数据库进行操作\"><a href=\"#14-对数据库进行操作\" class=\"headerlink\" title=\"14. 对数据库进行操作\"></a>14. 对数据库进行操作</h2><p>分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名</p>\n<h2 id=\"15-如何修改数据库的名称\"><a href=\"#15-如何修改数据库的名称\" class=\"headerlink\" title=\"15. 如何修改数据库的名称\"></a>15. 如何修改数据库的名称</h2><p>sp_renamedb ‘old_name’, ‘new_name’</p>\n<h2 id=\"16-查询字段ID最大值的记录\"><a href=\"#16-查询字段ID最大值的记录\" class=\"headerlink\" title=\"16. 查询字段ID最大值的记录\"></a>16. 查询字段ID最大值的记录</h2><p>无索引</p>\n<pre><code>select time from table t1 where not exists (select 1 from table where id &gt; t1.id) \n</code></pre><p>有索引</p>\n<pre><code>select time from table where id in (select max(id) from table)\n</code></pre><h2 id=\"17-查询某一列的重复项内容\"><a href=\"#17-查询某一列的重复项内容\" class=\"headerlink\" title=\"17. 查询某一列的重复项内容\"></a>17. 查询某一列的重复项内容</h2><pre><code>SELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)&gt;1 \n</code></pre><h2 id=\"18-判断表中是否存在记录\"><a href=\"#18-判断表中是否存在记录\" class=\"headerlink\" title=\"18. 判断表中是否存在记录\"></a>18. 判断表中是否存在记录</h2><pre><code>SELECT COUNT (*) FROM tableName WHERE conditions\n</code></pre><hr>\n<h1 id=\"二-提升篇\"><a href=\"#二-提升篇\" class=\"headerlink\" title=\"二. 提升篇\"></a>二. 提升篇</h1><h2 id=\"1-复制表-只复制结构-源表名：a-新表名：b-Access可用\"><a href=\"#1-复制表-只复制结构-源表名：a-新表名：b-Access可用\" class=\"headerlink\" title=\"1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)\"></a>1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)</h2><p>法一</p>\n<pre><code>select * into b from a where 1&lt;&gt;1（仅用于SQlServer）\n</code></pre><p>法二</p>\n<pre><code>select top 0 * into b from a\n</code></pre><h2 id=\"2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用\"><a href=\"#2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用\" class=\"headerlink\" title=\"2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)\"></a>2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b;\n</code></pre><h2 id=\"3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用\"><a href=\"#3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用\" class=\"headerlink\" title=\"3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)\"></a>3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件\n</code></pre><p>例子：..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\\data.mdb” &amp;”‘ where..</p>\n<h2 id=\"4-子查询-表名1：a-表名2：b\"><a href=\"#4-子查询-表名1：a-表名2：b\" class=\"headerlink\" title=\"4. 子查询(表名1：a 表名2：b)\"></a>4. 子查询(表名1：a 表名2：b)</h2><pre><code>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)\n</code></pre><h2 id=\"5-显示文章、提交人和最后回复时间\"><a href=\"#5-显示文章、提交人和最后回复时间\" class=\"headerlink\" title=\"5. 显示文章、提交人和最后回复时间\"></a>5. 显示文章、提交人和最后回复时间</h2><pre><code>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b\n</code></pre><h2 id=\"6-外连接查询-表名1：a-表名2：b\"><a href=\"#6-外连接查询-表名1：a-表名2：b\" class=\"headerlink\" title=\"6. 外连接查询(表名1：a 表名2：b)\"></a>6. 外连接查询(表名1：a 表名2：b)</h2><pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n</code></pre><h2 id=\"7-在线视图查询-表名1：a\"><a href=\"#7-在线视图查询-表名1：a\" class=\"headerlink\" title=\"7. 在线视图查询(表名1：a )\"></a>7. 在线视图查询(表名1：a )</h2><pre><code>select * from (SELECT a,b,c FROM a) T where t.a &gt; 1;\n</code></pre><h2 id=\"8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括\"><a href=\"#8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括\" class=\"headerlink\" title=\"8. between的用法,between限制查询数据范围时包括了边界值,not between不包括\"></a>8. between的用法,between限制查询数据范围时包括了边界值,not between不包括</h2><pre><code>select * from table1 where time between time1 and time2\nselect a,b,c, from table1 where a not between 数值1 and 数值2\n</code></pre><h2 id=\"9-in-的使用方法\"><a href=\"#9-in-的使用方法\" class=\"headerlink\" title=\"9. in 的使用方法\"></a>9. in 的使用方法</h2><pre><code>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)\n</code></pre><h2 id=\"10-两张关联表，删除主表中已经在副表中没有的信息\"><a href=\"#10-两张关联表，删除主表中已经在副表中没有的信息\" class=\"headerlink\" title=\"10. 两张关联表，删除主表中已经在副表中没有的信息\"></a>10. 两张关联表，删除主表中已经在副表中没有的信息</h2><pre><code>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )\n</code></pre><h2 id=\"11-四表联查问题\"><a href=\"#11-四表联查问题\" class=\"headerlink\" title=\"11. 四表联查问题\"></a>11. 四表联查问题</h2><pre><code>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....\n</code></pre><h2 id=\"12-日程安排提前五分钟提醒\"><a href=\"#12-日程安排提前五分钟提醒\" class=\"headerlink\" title=\"12. 日程安排提前五分钟提醒\"></a>12. 日程安排提前五分钟提醒</h2><pre><code>select * from 日程安排 where datediff(&apos;minute&apos;,f开始时间,getdate())&gt;5\n</code></pre><h2 id=\"13-一条sql语句搞定数据库分页\"><a href=\"#13-一条sql语句搞定数据库分页\" class=\"headerlink\" title=\"13. 一条sql语句搞定数据库分页\"></a>13. 一条sql语句搞定数据库分页</h2><pre><code>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段\n</code></pre><p>关于数据库分页：</p>\n<pre><code>declare @start int,@end int\n@sql nvarchar(600)\nset @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid&gt;-1)’\nexec sp_executesql @sql\n</code></pre><blockquote>\n<p>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p>\n</blockquote>\n<h2 id=\"14-前10条记录\"><a href=\"#14-前10条记录\" class=\"headerlink\" title=\"14. 前10条记录\"></a>14. 前10条记录</h2><pre><code>select top 10 * form table1 where 范围\n</code></pre><h2 id=\"15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等\"><a href=\"#15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等\" class=\"headerlink\" title=\"15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)\"></a>15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</h2><pre><code>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)\n</code></pre><h2 id=\"16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表\"><a href=\"#16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表\" class=\"headerlink\" title=\"16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表\"></a>16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表</h2><pre><code>(select a from tableA ) except (select a from tableB) except (select a from tableC)\n</code></pre><h2 id=\"17-随机取出10条数据\"><a href=\"#17-随机取出10条数据\" class=\"headerlink\" title=\"17. 随机取出10条数据\"></a>17. 随机取出10条数据</h2><pre><code>select top 10 * from tablename order by newid()\n</code></pre><h2 id=\"18-随机选择记录\"><a href=\"#18-随机选择记录\" class=\"headerlink\" title=\"18. 随机选择记录\"></a>18. 随机选择记录</h2><pre><code>select newid()\n</code></pre><h2 id=\"19-删除重复记录\"><a href=\"#19-删除重复记录\" class=\"headerlink\" title=\"19. 删除重复记录\"></a>19. 删除重复记录</h2><ul>\n<li>方法一：</li>\n</ul>\n<pre><code>delete from tablename where id not in (select max(id) from tablename group by col1,col2,...)\n</code></pre><ul>\n<li>方法二：</li>\n</ul>\n<pre><code>select distinct * into temp from tablename\ndelete from tablename\ninsert into tablename select * from temp\n</code></pre><blockquote>\n<p>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作</p>\n</blockquote>\n<ul>\n<li>方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</li>\n</ul>\n<pre><code>alter table tablename\nadd column_b int identity(1,1)    --添加一个自增列\ndelete from tablename where column_b not in(\nselect max(column_b) from tablename group by column1,column2,...)\nalter table tablename drop column column_b\n</code></pre><h2 id=\"20-列出数据库里所有的表名\"><a href=\"#20-列出数据库里所有的表名\" class=\"headerlink\" title=\"20. 列出数据库里所有的表名\"></a>20. 列出数据库里所有的表名</h2><pre><code>select name from sysobjects where type=&apos;U&apos; // U代表用户\n</code></pre><h2 id=\"21-列出表里的所有的列名\"><a href=\"#21-列出表里的所有的列名\" class=\"headerlink\" title=\"21. 列出表里的所有的列名\"></a>21. 列出表里的所有的列名</h2><pre><code>select name from syscolumns where id=object_id(&apos;TableName&apos;)\n</code></pre><h2 id=\"22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。\"><a href=\"#22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。\" class=\"headerlink\" title=\"22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。\"></a>22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。</h2><pre><code>select type,sum(case vender when &apos;A&apos; then pcs else 0 end),sum(case vender when &apos;C&apos; then pcs else 0 end),sum(case vender when &apos;B&apos; then pcs else 0 end) FROM tablename group by type\n</code></pre><p>显示结果：</p>\n<pre><code>type vender pcs\n电脑 A 1\n电脑 A 1\n光盘 B 2\n光盘 A 2\n手机 B 3\n手机 C 3\n</code></pre><h2 id=\"23-初始化-表table1\"><a href=\"#23-初始化-表table1\" class=\"headerlink\" title=\"23. 初始化 表table1\"></a>23. 初始化 表table1</h2><pre><code>TRUNCATE TABLE table1\n</code></pre><h2 id=\"24-选择从10到15的记录\"><a href=\"#24-选择从10到15的记录\" class=\"headerlink\" title=\"24. 选择从10到15的记录\"></a>24. 选择从10到15的记录</h2><pre><code>select top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc\n</code></pre><h2 id=\"25-创建临时表\"><a href=\"#25-创建临时表\" class=\"headerlink\" title=\"25. 创建临时表\"></a>25. 创建临时表</h2><ul>\n<li>方法一：</li>\n</ul>\n<pre><code>create table #临时表名(字段1 约束条件,\n                       字段2 约束条件,\n                      .....)\ncreate table ##临时表名(字段1 约束条件,\n                        字段2 约束条件,\n                        .....)\n</code></pre><p>例：</p>\n<pre><code>create table #Tmp --创建临时表#Tmp\n(\n    ID   int IDENTITY (1,1)     not null, --创建列ID,并且每次新增一条记录就会加1\n    WokNo                varchar(50),   \n    primary key (ID)      --定义ID为临时表#Tmp的主键      \n);\n</code></pre><ul>\n<li>方法二：</li>\n</ul>\n<pre><code>select * into #临时表名 from 你的表;\nselect * into ##临时表名 from 你的表;\n</code></pre><blockquote>\n<p>注：以上的#代表局部临时表，##代表全局临时表<br>查询临时表</p>\n</blockquote>\n<pre><code>select * from #临时表名;\nselect * from ##临时表名;\n</code></pre><p>删除临时表</p>\n<pre><code>drop table #临时表名;\ndrop table ##临时表名;\n</code></pre><h2 id=\"26-关联表更新\"><a href=\"#26-关联表更新\" class=\"headerlink\" title=\"26. 关联表更新\"></a>26. 关联表更新</h2><pre><code>UPDATE A SET A.b=B.d FROM tableA A INNER JOIN tableB B ON A.a = B.a\n</code></pre><h2 id=\"27-查看表的所有外键关系\"><a href=\"#27-查看表的所有外键关系\" class=\"headerlink\" title=\"27. 查看表的所有外键关系\"></a>27. 查看表的所有外键关系</h2><pre><code>select t1.*,t2.name,t3.name from dbo.sysforeignkeys t1 left join sysobjects t2 on t1.fkeyid=t2.id \n           left join sysobjects t3 on t1.rkeyid=t3.id where t3.name=&apos;表名 &apos;\n</code></pre><h2 id=\"28-删除所有约束\"><a href=\"#28-删除所有约束\" class=\"headerlink\" title=\"28. 删除所有约束\"></a>28. 删除所有约束</h2><pre><code>DECLARE c1 cursor for\n    select &apos;alter table [&apos;+ object_name(parent_obj) + &apos;] drop constraint [&apos;+name+&apos;]; &apos;\n    from sysobjects\n    where xtype = &apos;F&apos;\nopen c1\ndeclare @c1 varchar(8000)\nfetch next from c1 into @c1\nwhile(@@fetch_status=0)\n    begin\n        exec(@c1)\n        fetch next from c1 into @c1\n    end\nclose c1\ndeallocate c1\n</code></pre><h2 id=\"29-删除数据库所有表\"><a href=\"#29-删除数据库所有表\" class=\"headerlink\" title=\"29. 删除数据库所有表\"></a>29. 删除数据库所有表</h2><pre><code>declare @tname varchar(8000)\nset @tname=&apos;&apos;\nselect @tname=@tname + Name + &apos;,&apos; from sysobjects where xtype=&apos;U&apos;\nselect @tname=&apos;drop table &apos; + left(@tname,len(@tname)-1)\nexec(@tname)\n</code></pre><h2 id=\"30-删除外键约束\"><a href=\"#30-删除外键约束\" class=\"headerlink\" title=\"30. 删除外键约束\"></a>30. 删除外键约束</h2><p>得到某个表被哪些外键引用，并且显示出外键表的表名</p>\n<pre><code>SELECT\n    fk.name,\n    fk.object_id,\n    OBJECT_NAME(fk.parent_object_id) AS referenceTableName\nFROM\n    sys.foreign_keys AS fk\nJOIN sys.objects AS o ON fk.referenced_object_id = o.object_id\nWHERE\n    o.name = &apos;ATTACHMENTDOC&apos;;\n</code></pre><p>通过外键表的表名和外键名称执行以下语句即可删除外键</p>\n<pre><code>ALTER TABLE dbo.CONTRACTINFO DROP CONSTRAINT FK_CONTRACTINFO_ATTACHMENTDOC\n</code></pre><h2 id=\"31-查找指定数据库表的字段名，类型，注释\"><a href=\"#31-查找指定数据库表的字段名，类型，注释\" class=\"headerlink\" title=\"31. 查找指定数据库表的字段名，类型，注释\"></a>31. 查找指定数据库表的字段名，类型，注释</h2><pre><code>    SELECT c.object_id, c.name AS cname, t.name AS tname, is_computed AS isComputed,\n           (SELECT VALUE\n              FROM sys.extended_properties AS ex\n             WHERE ex.major_id = c.object_id AND ex.minor_id = c.column_id) AS notes\n      FROM sys.columns AS c\nINNER JOIN sys.tables  AS ta ON c.object_id = ta.object_id\nINNER JOIN (SELECT name, system_type_id\n              FROM sys.types\n             WHERE name &lt;&gt; &apos;sysname&apos;) AS t ON c.system_type_id = t.system_type_id\n     WHERE ta.name = &apos;指定数据库表&apos;\n  ORDER BY c.column_id\n</code></pre><h2 id=\"32-同步表数据\"><a href=\"#32-同步表数据\" class=\"headerlink\" title=\"32. 同步表数据\"></a>32. 同步表数据</h2><pre><code>INSERT 表2 \nSELECT * FROM 表1 AS a WHERE NOT EXISTS(SELECT 1 FROM 表2 WHERE ID = a.ID);\n</code></pre><h2 id=\"33-判断某列中是否包含中文字符或者英文字符\"><a href=\"#33-判断某列中是否包含中文字符或者英文字符\" class=\"headerlink\" title=\"33. 判断某列中是否包含中文字符或者英文字符\"></a>33. 判断某列中是否包含中文字符或者英文字符</h2><pre><code>SELECT * FROM 表名 WHERE 某列 LIKE &apos;%[吖-座]%&apos;\nSELECT * FROM 表名 WHERE 某列 LIKE &apos;%[a-z]%&apos;\n</code></pre><h2 id=\"34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）\"><a href=\"#34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）\" class=\"headerlink\" title=\"34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）\"></a>34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）</h2><p>例如表Table1中有两列数据：</p>\n<pre><code>code        name\nAAA         姓名1\nAAA         姓名2\nAAA         姓名3\nBBB         姓名4\nBBB         姓名5\n</code></pre><p>行转列，想变成如下格式：</p>\n<pre><code>code        name\nAAA         姓名1,姓名2,姓名3\nBBB         姓名4,姓名5\n</code></pre><p>可用如下SQL实现：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">SELECT</span> code, <span class=\"keyword\">name</span> = (<span class=\"keyword\">STUFF</span>((<span class=\"keyword\">SELECT</span> <span class=\"string\">','</span> + <span class=\"keyword\">name</span> </span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> Table1 </span><br><span class=\"line\">                               <span class=\"keyword\">WHERE</span> code = a.code <span class=\"keyword\">FOR</span> <span class=\"keyword\">xml</span> <span class=\"keyword\">PATH</span>(<span class=\"string\">''</span>)),<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"string\">''</span>))</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> Table1 a </span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> code</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"三-技巧篇\"><a href=\"#三-技巧篇\" class=\"headerlink\" title=\"三. 技巧篇\"></a>三. 技巧篇</h1><h2 id=\"1-1-1，1-2的使用，在SQL语句组合时用的较多\"><a href=\"#1-1-1，1-2的使用，在SQL语句组合时用的较多\" class=\"headerlink\" title=\"1. 1=1，1=2的使用，在SQL语句组合时用的较多\"></a>1. 1=1，1=2的使用，在SQL语句组合时用的较多</h2><p>“where 1=1” 表示选择全部<br>“where 1=2” 表示全部不选</p>\n<h2 id=\"2-收缩数据库\"><a href=\"#2-收缩数据库\" class=\"headerlink\" title=\"2. 收缩数据库\"></a>2. 收缩数据库</h2><p>重建索引</p>\n<pre><code>DBCC REINDEX\nDBCC INDEXDEFRAG\n</code></pre><p>收缩数据和日志</p>\n<pre><code>DBCC SHRINKDB\nDBCC SHRINKFILE\n</code></pre><h2 id=\"3-压缩数据库\"><a href=\"#3-压缩数据库\" class=\"headerlink\" title=\"3. 压缩数据库\"></a>3. 压缩数据库</h2><pre><code>dbcc shrinkdatabase(dbname)\n</code></pre><h2 id=\"4-转移数据库给新用户以已存在用户权限\"><a href=\"#4-转移数据库给新用户以已存在用户权限\" class=\"headerlink\" title=\"4. 转移数据库给新用户以已存在用户权限\"></a>4. 转移数据库给新用户以已存在用户权限</h2><pre><code>exec sp_change_users_login &apos;update_one&apos;,&apos;newname&apos;,&apos;oldname&apos;\ngo\n</code></pre><h2 id=\"5-检查备份集\"><a href=\"#5-检查备份集\" class=\"headerlink\" title=\"5. 检查备份集\"></a>5. 检查备份集</h2><pre><code>RESTORE VERIFYONLY from disk=&apos;E:\\dvbbs.bak&apos;\n</code></pre><h2 id=\"6-修复数据库\"><a href=\"#6-修复数据库\" class=\"headerlink\" title=\"6. 修复数据库\"></a>6. 修复数据库</h2><pre><code>ALTER DATABASE [dvbbs] SET SINGLE_USER\nGO\nDBCC CHECKDB(&apos;dvbbs&apos;,repair_allow_data_loss) WITH TABLOCK\nGO\nALTER DATABASE [dvbbs] SET MULTI_USER\nGO\n</code></pre><h2 id=\"7-日志清除\"><a href=\"#7-日志清除\" class=\"headerlink\" title=\"7. 日志清除\"></a>7. 日志清除</h2><pre><code>SET NOCOUNT ON\nDECLARE @LogicalFileName sysname,\n@MaxMinutes INT,\n@NewSize INT\n\nUSE tablename -- 要操作的数据库名\nSELECT  @LogicalFileName = &apos;tablename_log&apos;, -- 日志文件名\n@MaxMinutes = 10, -- Limit on time allowed to wrap log.\n@NewSize = 1  -- 你想设定的日志文件的大小(M)\nSetup / initialize\nDECLARE @OriginalSize int\nSELECT @OriginalSize = size \nFROM sysfiles\nWHERE name = @LogicalFileName\nSELECT &apos;Original Size of &apos; + db_name() + &apos; LOG is &apos; + \nCONVERT(VARCHAR(30),@OriginalSize) + &apos; 8K pages or &apos; + \nCONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + &apos;MB&apos;\nFROM sysfiles\nWHERE name = @LogicalFileName\nCREATE TABLE DummyTrans\n(DummyColumn char (8000) not null)\n\nDECLARE @Counter    INT,\n@StartTime DATETIME,\n@TruncLog   VARCHAR(255)\nSELECT @StartTime = GETDATE(),\n@TruncLog = &apos;BACKUP LOG &apos; + db_name() + &apos; WITH TRUNCATE_ONLY&apos;\nDBCC SHRINKFILE (@LogicalFileName, @NewSize)\nEXEC (@TruncLog)\n-- Wrap the log if necessary.\nWHILE @MaxMinutes &gt; DATEDIFF (mi, @StartTime, GETDATE()) -- time has not expired\nAND @OriginalSize = (SELECT size FROM sysfiles WHERE name = @LogicalFileName)  \nAND (@OriginalSize * 8 /1024) &gt; @NewSize  \nBEGIN -- Outer loop.\nSELECT @Counter = 0\nWHILE   ((@Counter &lt; @OriginalSize / 16) AND (@Counter &lt; 50000))\nBEGIN -- update\nINSERT DummyTrans VALUES (&apos;Fill Log&apos;) DELETE DummyTrans\nSELECT @Counter = @Counter + 1\nEND\nEXEC (@TruncLog)  \nEND\nSELECT &apos;Final Size of &apos; + db_name() + &apos; LOG is &apos; +\nCONVERT(VARCHAR(30),size) + &apos; 8K pages or &apos; + \nCONVERT(VARCHAR(30),(size*8/1024)) + &apos;MB&apos;\nFROM sysfiles \nWHERE name = @LogicalFileName\nDROP TABLE DummyTrans\nSET NOCOUNT OFF\n</code></pre><h2 id=\"8-更改某个表\"><a href=\"#8-更改某个表\" class=\"headerlink\" title=\"8. 更改某个表\"></a>8. 更改某个表</h2><pre><code>exec sp_changeobjectowner &apos;tablename&apos;,&apos;dbo&apos;\n</code></pre><h2 id=\"9-存储更改全部表\"><a href=\"#9-存储更改全部表\" class=\"headerlink\" title=\"9. 存储更改全部表\"></a>9. 存储更改全部表</h2><pre><code>CREATE PROCEDURE dbo.User_ChangeObjectOwnerBatch\n@OldOwner as NVARCHAR(128),\n@NewOwner as NVARCHAR(128)\nAS\nDECLARE @Name    as NVARCHAR(128)\nDECLARE @Owner   as NVARCHAR(128)\nDECLARE @OwnerName   as NVARCHAR(128)\nDECLARE curObject CURSOR FOR \nselect &apos;Name&apos;    = name,\n   &apos;Owner&apos;    = user_name(uid)\nfrom sysobjects\nwhere user_name(uid)=@OldOwner\norder by name\nOPEN   curObject\nFETCH NEXT FROM curObject INTO @Name, @Owner\nWHILE(@@FETCH_STATUS=0)\nBEGIN     \nif @Owner=@OldOwner \nbegin\n   set @OwnerName = @OldOwner + &apos;.&apos; + rtrim(@Name)\n   exec sp_changeobjectowner @OwnerName, @NewOwner\nend\n-- select @name,@NewOwner,@OldOwner\nFETCH NEXT FROM curObject INTO @Name, @Owner\nEND\nclose curObject\ndeallocate curObject\nGO\n</code></pre><h2 id=\"10-SQL-SERVER中直接循环写入数据\"><a href=\"#10-SQL-SERVER中直接循环写入数据\" class=\"headerlink\" title=\"10. SQL SERVER中直接循环写入数据\"></a>10. SQL SERVER中直接循环写入数据</h2><pre><code>declare @i int\nset @i=1\nwhile @i&lt;30\nbegin\ninsert into test (userid) values(@i)\nset @i=@i+1\nend\n</code></pre><p>案例：<br>有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th style=\"text-align:right\">score</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Zhangshan</td>\n<td style=\"text-align:right\">80</td>\n</tr>\n<tr>\n<td>Lishi</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n<tr>\n<td>Wangwu</td>\n<td style=\"text-align:right\">50</td>\n</tr>\n<tr>\n<td>Songquan</td>\n<td style=\"text-align:right\">69</td>\n</tr>\n</tbody>\n</table>\n<pre><code>while((select min(score) from tb_table)&lt;60)\nbegin\nupdate tb_table set score =score*1.01\nwhere score&lt;60\nif (select min(score) from tb_table)&gt;60\nbreak\nelse\ncontinue\nend\n</code></pre><h2 id=\"11-查看数据库属性\"><a href=\"#11-查看数据库属性\" class=\"headerlink\" title=\"11. 查看数据库属性\"></a>11. 查看数据库属性</h2><pre><code>sp_helpdb 数据库名\n</code></pre><h2 id=\"12-按姓氏笔画排序\"><a href=\"#12-按姓氏笔画排序\" class=\"headerlink\" title=\"12. 按姓氏笔画排序:\"></a>12. 按姓氏笔画排序:</h2><pre><code>Select * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多\n</code></pre><h2 id=\"13-数据库加密\"><a href=\"#13-数据库加密\" class=\"headerlink\" title=\"13. 数据库加密:\"></a>13. 数据库加密:</h2><pre><code>select encrypt(&apos;原始密码&apos;)\nselect pwdencrypt(&apos;原始密码&apos;)\nselect pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同 encrypt(&apos;原始密码&apos;)\nselect pwdencrypt(&apos;原始密码&apos;)\nselect pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同\n</code></pre><h2 id=\"14-取回表中字段\"><a href=\"#14-取回表中字段\" class=\"headerlink\" title=\"14. 取回表中字段:\"></a>14. 取回表中字段:</h2><pre><code>declare @list varchar(1000),\n@sql nvarchar(1000) \nselect @list=@list+&apos;,&apos;+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name=&apos;表A&apos;\nset @sql=&apos;select &apos;+right(@list,len(@list)-1)+&apos; from 表A&apos; \nexec (@sql)\n</code></pre><h2 id=\"15-查看硬盘分区\"><a href=\"#15-查看硬盘分区\" class=\"headerlink\" title=\"15. 查看硬盘分区:\"></a>15. 查看硬盘分区:</h2><pre><code>EXEC master..xp_fixeddrives\n</code></pre><h2 id=\"16-比较A-B表是否相等\"><a href=\"#16-比较A-B表是否相等\" class=\"headerlink\" title=\"16. 比较A,B表是否相等:\"></a>16. 比较A,B表是否相等:</h2><pre><code>if (select checksum_agg(binary_checksum(*)) from A)\n     =\n    (select checksum_agg(binary_checksum(*)) from B)\nprint &apos;相等&apos;\nelse\nprint &apos;不相等&apos;\n</code></pre><h2 id=\"17-杀掉所有的事件探察器进程\"><a href=\"#17-杀掉所有的事件探察器进程\" class=\"headerlink\" title=\"17. 杀掉所有的事件探察器进程:\"></a>17. 杀掉所有的事件探察器进程:</h2><pre><code>DECLARE hcforeach CURSOR GLOBAL FOR SELECT &apos;kill &apos;+RTRIM(spid) FROM master.dbo.sysprocesses\nWHERE program_name IN(&apos;SQL profiler&apos;,N&apos;SQL 事件探查器&apos;)\nEXEC sp_msforeach_worker &apos;?&apos;\n</code></pre><h2 id=\"18-记录搜索\"><a href=\"#18-记录搜索\" class=\"headerlink\" title=\"18. 记录搜索:\"></a>18. 记录搜索:</h2><p>开头到N条记录</p>\n<pre><code>Select Top N * From 表\n</code></pre><p>N到M条记录(要有主索引ID)</p>\n<pre><code>Select Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc\n</code></pre><p>N到结尾记录</p>\n<pre><code>Select Top N * From 表 Order by ID Desc\n</code></pre><h2 id=\"19-获取当前数据库中的所有用户表\"><a href=\"#19-获取当前数据库中的所有用户表\" class=\"headerlink\" title=\"19. 获取当前数据库中的所有用户表\"></a>19. 获取当前数据库中的所有用户表</h2><pre><code>select Name from sysobjects where xtype=&apos;u&apos; and status&gt;=0\n</code></pre><h2 id=\"20-获取某一个表的所有字段\"><a href=\"#20-获取某一个表的所有字段\" class=\"headerlink\" title=\"20. 获取某一个表的所有字段\"></a>20. 获取某一个表的所有字段</h2><pre><code>select name from syscolumns where id=object_id(&apos;表名&apos;)\nselect name from syscolumns where id in (select id from sysobjects where type = &apos;u&apos; and name = &apos;表名&apos;)\n</code></pre><p>两种方式的效果相同</p>\n<h2 id=\"21-查看与某一个表相关的视图、存储过程、函数\"><a href=\"#21-查看与某一个表相关的视图、存储过程、函数\" class=\"headerlink\" title=\"21. 查看与某一个表相关的视图、存储过程、函数\"></a>21. 查看与某一个表相关的视图、存储过程、函数</h2><pre><code>select a.* from sysobjects a, syscomments b where a.id = b.id and b.text like &apos;%表名%&apos;\n</code></pre><h2 id=\"22-查看当前数据库中所有存储过程\"><a href=\"#22-查看当前数据库中所有存储过程\" class=\"headerlink\" title=\"22. 查看当前数据库中所有存储过程\"></a>22. 查看当前数据库中所有存储过程</h2><pre><code>select name as 存储过程名称 from sysobjects where xtype=&apos;P&apos;\n</code></pre><h2 id=\"23-查询用户创建的所有数据库\"><a href=\"#23-查询用户创建的所有数据库\" class=\"headerlink\" title=\"23. 查询用户创建的所有数据库\"></a>23. 查询用户创建的所有数据库</h2><pre><code>select * from master..sysdatabases D where sid not in(select sid from master..syslogins where name=&apos;sa&apos;)\n</code></pre><p>或者</p>\n<pre><code>select dbid, name AS DB_NAME from master..sysdatabases where sid &lt;&gt; 0x01\n</code></pre><h2 id=\"24-查询某一个表的字段和数据类型\"><a href=\"#24-查询某一个表的字段和数据类型\" class=\"headerlink\" title=\"24. 查询某一个表的字段和数据类型\"></a>24. 查询某一个表的字段和数据类型</h2><pre><code>select column_name,data_type from information_schema.columns\nwhere table_name = &apos;表名&apos;\n</code></pre><h2 id=\"25-不同服务器数据库之间的数据操作\"><a href=\"#25-不同服务器数据库之间的数据操作\" class=\"headerlink\" title=\"25. 不同服务器数据库之间的数据操作\"></a>25. 不同服务器数据库之间的数据操作</h2><p>创建链接服务器</p>\n<pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;\nexec sp_addlinkedsrvlogin &apos;ITSV &apos;, &apos;false &apos;,null, &apos;用户名 &apos;, &apos;密码 &apos;\n</code></pre><p>查询示例</p>\n<pre><code>select * from ITSV.数据库名.dbo.表名\n</code></pre><p>导入示例</p>\n<pre><code>select * into 表 from ITSV.数据库名.dbo.表名\n</code></pre><p>以后不再使用时删除链接服务器</p>\n<pre><code>exec sp_dropserver &apos;ITSV &apos;, &apos;droplogins &apos;\n</code></pre><p>连接远程/局域网数据(openrowset/openquery/opendatasource)</p>\n<ul>\n<li><ol>\n<li>openrowset<br>查询示例</li>\n</ol>\n</li>\n</ul>\n<pre><code>select * from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\n</code></pre><p>生成本地表</p>\n<pre><code>select * into 表 from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\nselect *from 本地表\n</code></pre><p>更新本地表</p>\n<pre><code>update b\nset b.列A=a.列A\nfrom openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)as a inner join 本地表 b    on a.column1=b.column1\n</code></pre><ul>\n<li><ol>\n<li>openquery用法需要创建一个连接<br>首先创建一个连接创建链接服务器</li>\n</ol>\n</li>\n</ul>\n<pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;\n</code></pre><p>查询</p>\n<pre><code>select *\nFROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)\nselect * from 本地表\n</code></pre><p>更新本地表</p>\n<pre><code>update b\nset b.列B=a.列B\nFROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;) as a\ninner join 本地表 b on a.列A=b.列A\n</code></pre><ul>\n<li><ol>\n<li>opendatasource/openrowset</li>\n</ol>\n</li>\n</ul>\n<pre><code>SELECT *\nFROM opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos; ).test.dbo.roy_ta\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos;).数据库.dbo.表名\nselect * from 本地表\n</code></pre><h2 id=\"26-删除数据库下面的所有表\"><a href=\"#26-删除数据库下面的所有表\" class=\"headerlink\" title=\"26. 删除数据库下面的所有表\"></a>26. 删除数据库下面的所有表</h2><pre><code>use 数据库名(是要删除表的所在的那个数据库的名称)\nGO\ndeclare @sql varchar(8000)\nwhile (select count(*) from sysobjects where type=&apos;U&apos;)&gt;0\nbegin\nSELECT @sql=&apos;drop table &apos; + name\nFROM sysobjects\nWHERE (type = &apos;U&apos;)\nORDER BY &apos;drop table &apos; + name\nexec(@sql) \nend\n</code></pre><h2 id=\"27-查看数据库文件使用情况\"><a href=\"#27-查看数据库文件使用情况\" class=\"headerlink\" title=\"27. 查看数据库文件使用情况\"></a>27. 查看数据库文件使用情况</h2><pre><code>SELECT  A.name                                                     AS &quot;逻辑名称&quot;\n       ,CONVERT(FLOAT ,A.size)             * (8192.0/1024.0)/1024  AS &quot;已用大小MB&quot;\n       ,CONVERT(FLOAT ,A.maxSize - A.size) * (8192.0/1024.0)/1024  AS &quot;可用大小MB&quot;\n       ,CONVERT(FLOAT ,A.maxSize)          * (8192.0/1024.0)/1024  AS &quot;分配大小MB&quot;\n       ,A.fileName                                                 AS &quot;文件路径&quot;\n       ,(\n         SELECT  SA.groupName\n           FROM  SysFileGroups  SA\n          WHERE  SA.groupID = A.groupID\n        )                                                          AS &quot;文件组&quot;\n       ,CASE WHEN A.status = 1081346 THEN &apos;磁盘文件&apos;               \n             WHEN A.status = 1081410 THEN &apos;日志设备&apos;\n             ELSE CONVERT(VARCHAR ,A.status) END                   AS &quot;文件类型&quot;\n  FROM  SysFiles  A\n</code></pre><hr>\n<h1 id=\"常识\"><a href=\"#常识\" class=\"headerlink\" title=\"常识\"></a>常识</h1><ul>\n<li>在SQL查询中，from后最多可以跟256张表或视图</li>\n<li>在SQL语句中出现 Order by，查询时，先排序，后取值</li>\n<li>在SQL中，一个字段的最大容量是8000</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"一-基础篇\"><a href=\"#一-基础篇\" class=\"headerlink\" title=\"一. 基础篇\"></a>一. 基础篇</h1><h2 id=\"1-创建数据库\"><a href=\"#1-创建数据库\" class=\"headerlink\" title=\"1. 创建数据库\"></a>1. 创建数据库</h2><pre><code>CREATE DATABASE database-name\n</code></pre><h2 id=\"2-删除数据库\"><a href=\"#2-删除数据库\" class=\"headerlink\" title=\"2. 删除数据库\"></a>2. 删除数据库</h2><pre><code>drop database dbname\n</code></pre><h2 id=\"3-备份sql-server\"><a href=\"#3-备份sql-server\" class=\"headerlink\" title=\"3. 备份sql server\"></a>3. 备份sql server</h2><pre><code>创建 备份数据的 device\nUSE master\nEXEC sp_addumpdevice &apos;disk&apos;, &apos;testBack&apos;, &apos;c:\\mssql7backup\\MyNwind_1.dat&apos;\n开始 备份\nBACKUP DATABASE pubs TO testBack \n</code></pre>","more":"<h2 id=\"4-创建新表\"><a href=\"#4-创建新表\" class=\"headerlink\" title=\"4. 创建新表\"></a>4. 创建新表</h2><pre><code>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)\n</code></pre><p>根据已有的表创建新表：</p>\n<pre><code>A：create table tab_new like tab_old (使用旧表创建新表)\nB：create table tab_new as select col1,col2… from tab_old definition only\n</code></pre><h2 id=\"5-删除新表\"><a href=\"#5-删除新表\" class=\"headerlink\" title=\"5. 删除新表\"></a>5. 删除新表</h2><pre><code>drop table tabname\n</code></pre><h2 id=\"6-增加一个列\"><a href=\"#6-增加一个列\" class=\"headerlink\" title=\"6. 增加一个列\"></a>6. 增加一个列</h2><pre><code>Alter table tabname add column col type\n</code></pre><blockquote>\n<p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p>\n</blockquote>\n<h2 id=\"7-添加主键\"><a href=\"#7-添加主键\" class=\"headerlink\" title=\"7. 添加主键\"></a>7. 添加主键</h2><pre><code>ALTER TABLE tabname ADD PRIMARY KEY (col)\n</code></pre><p>删除主键</p>\n<pre><code>ALTER TABLE tabname DROP PRIMARY KEY (col)\n</code></pre><h2 id=\"8-创建索引\"><a href=\"#8-创建索引\" class=\"headerlink\" title=\"8. 创建索引\"></a>8. 创建索引</h2><pre><code>create [unique] index idxname on tabname(col….) \n</code></pre><p>删除索引</p>\n<pre><code>drop index idxname\n</code></pre><blockquote>\n<p>注：索引是不可更改的，想更改必须删除重新建。</p>\n</blockquote>\n<h2 id=\"9-创建视图\"><a href=\"#9-创建视图\" class=\"headerlink\" title=\"9. 创建视图\"></a>9. 创建视图</h2><pre><code>create view viewname as select statement \n</code></pre><p>删除视图</p>\n<pre><code>drop view viewname\n</code></pre><h2 id=\"10-几个简单的基本sql语句\"><a href=\"#10-几个简单的基本sql语句\" class=\"headerlink\" title=\"10. 几个简单的基本sql语句\"></a>10. 几个简单的基本sql语句</h2><p>选择</p>\n<pre><code>select * from table1 where 范围\n</code></pre><p>插入</p>\n<pre><code>insert into table1(field1,field2) values(value1,value2)\n</code></pre><p>删除</p>\n<pre><code>delete from table1 where 范围\n</code></pre><p>更新</p>\n<pre><code>update table1 set field1=value1 where 范围\n</code></pre><p>查找</p>\n<pre><code>select * from table1 where field1 like ’%value1%’\n</code></pre><p>排序</p>\n<pre><code>select * from table1 order by field1,field2 [desc]\n</code></pre><p>总数</p>\n<pre><code>select count as totalcount from table1\n</code></pre><p>求和</p>\n<pre><code>select sum(field1) as sumvalue from table1\n</code></pre><p>平均</p>\n<pre><code>select avg(field1) as avgvalue from table1\n</code></pre><p>最大</p>\n<pre><code>select max(field1) as maxvalue from table1\n</code></pre><p>最小</p>\n<pre><code>select min(field1) as minvalue from table1\n</code></pre><h2 id=\"11-几个高级查询运算词\"><a href=\"#11-几个高级查询运算词\" class=\"headerlink\" title=\"11. 几个高级查询运算词\"></a>11. 几个高级查询运算词</h2><ul>\n<li>A： UNION 运算符<br>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。 </li>\n<li>B： EXCEPT 运算符<br>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。 </li>\n<li>C： INTERSECT 运算符<br>INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 <blockquote>\n<p>注：使用运算词的几个查询结果行必须是一致的。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"12-使用外连接\"><a href=\"#12-使用外连接\" class=\"headerlink\" title=\"12. 使用外连接\"></a>12. 使用外连接</h2><ul>\n<li>A. left （outer） join：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。 </li>\n</ul>\n<pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n</code></pre><ul>\n<li>B：right （outer） join:<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。 </li>\n<li>C：full/cross （outer） join：<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</li>\n</ul>\n<h2 id=\"13-分组-Group-by\"><a href=\"#13-分组-Group-by\" class=\"headerlink\" title=\"13. 分组:Group by\"></a>13. 分组:Group by</h2><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。<br>组相关的信息：（统计信息） count,sum,max,min,avg 分组的标准)<br>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据<br>在selecte统计函数中的字段，不能和普通的字段放在一起；</p>\n<h2 id=\"14-对数据库进行操作\"><a href=\"#14-对数据库进行操作\" class=\"headerlink\" title=\"14. 对数据库进行操作\"></a>14. 对数据库进行操作</h2><p>分离数据库： sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名</p>\n<h2 id=\"15-如何修改数据库的名称\"><a href=\"#15-如何修改数据库的名称\" class=\"headerlink\" title=\"15. 如何修改数据库的名称\"></a>15. 如何修改数据库的名称</h2><p>sp_renamedb ‘old_name’, ‘new_name’</p>\n<h2 id=\"16-查询字段ID最大值的记录\"><a href=\"#16-查询字段ID最大值的记录\" class=\"headerlink\" title=\"16. 查询字段ID最大值的记录\"></a>16. 查询字段ID最大值的记录</h2><p>无索引</p>\n<pre><code>select time from table t1 where not exists (select 1 from table where id &gt; t1.id) \n</code></pre><p>有索引</p>\n<pre><code>select time from table where id in (select max(id) from table)\n</code></pre><h2 id=\"17-查询某一列的重复项内容\"><a href=\"#17-查询某一列的重复项内容\" class=\"headerlink\" title=\"17. 查询某一列的重复项内容\"></a>17. 查询某一列的重复项内容</h2><pre><code>SELECT * FROM documentation AS A WHERE (SELECT COUNT(*) FROM documentation WHERE fileName=A.fileName)&gt;1 \n</code></pre><h2 id=\"18-判断表中是否存在记录\"><a href=\"#18-判断表中是否存在记录\" class=\"headerlink\" title=\"18. 判断表中是否存在记录\"></a>18. 判断表中是否存在记录</h2><pre><code>SELECT COUNT (*) FROM tableName WHERE conditions\n</code></pre><hr>\n<h1 id=\"二-提升篇\"><a href=\"#二-提升篇\" class=\"headerlink\" title=\"二. 提升篇\"></a>二. 提升篇</h1><h2 id=\"1-复制表-只复制结构-源表名：a-新表名：b-Access可用\"><a href=\"#1-复制表-只复制结构-源表名：a-新表名：b-Access可用\" class=\"headerlink\" title=\"1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)\"></a>1. 复制表(只复制结构,源表名：a 新表名：b) (Access可用)</h2><p>法一</p>\n<pre><code>select * into b from a where 1&lt;&gt;1（仅用于SQlServer）\n</code></pre><p>法二</p>\n<pre><code>select top 0 * into b from a\n</code></pre><h2 id=\"2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用\"><a href=\"#2-拷贝表-拷贝数据-源表名：a-目标表名：b-Access可用\" class=\"headerlink\" title=\"2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)\"></a>2. 拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b;\n</code></pre><h2 id=\"3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用\"><a href=\"#3-跨数据库之间表的拷贝-具体数据使用绝对路径-Access可用\" class=\"headerlink\" title=\"3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)\"></a>3. 跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)</h2><pre><code>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件\n</code></pre><p>例子：..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\\data.mdb” &amp;”‘ where..</p>\n<h2 id=\"4-子查询-表名1：a-表名2：b\"><a href=\"#4-子查询-表名1：a-表名2：b\" class=\"headerlink\" title=\"4. 子查询(表名1：a 表名2：b)\"></a>4. 子查询(表名1：a 表名2：b)</h2><pre><code>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)\n</code></pre><h2 id=\"5-显示文章、提交人和最后回复时间\"><a href=\"#5-显示文章、提交人和最后回复时间\" class=\"headerlink\" title=\"5. 显示文章、提交人和最后回复时间\"></a>5. 显示文章、提交人和最后回复时间</h2><pre><code>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b\n</code></pre><h2 id=\"6-外连接查询-表名1：a-表名2：b\"><a href=\"#6-外连接查询-表名1：a-表名2：b\" class=\"headerlink\" title=\"6. 外连接查询(表名1：a 表名2：b)\"></a>6. 外连接查询(表名1：a 表名2：b)</h2><pre><code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\n</code></pre><h2 id=\"7-在线视图查询-表名1：a\"><a href=\"#7-在线视图查询-表名1：a\" class=\"headerlink\" title=\"7. 在线视图查询(表名1：a )\"></a>7. 在线视图查询(表名1：a )</h2><pre><code>select * from (SELECT a,b,c FROM a) T where t.a &gt; 1;\n</code></pre><h2 id=\"8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括\"><a href=\"#8-between的用法-between限制查询数据范围时包括了边界值-not-between不包括\" class=\"headerlink\" title=\"8. between的用法,between限制查询数据范围时包括了边界值,not between不包括\"></a>8. between的用法,between限制查询数据范围时包括了边界值,not between不包括</h2><pre><code>select * from table1 where time between time1 and time2\nselect a,b,c, from table1 where a not between 数值1 and 数值2\n</code></pre><h2 id=\"9-in-的使用方法\"><a href=\"#9-in-的使用方法\" class=\"headerlink\" title=\"9. in 的使用方法\"></a>9. in 的使用方法</h2><pre><code>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)\n</code></pre><h2 id=\"10-两张关联表，删除主表中已经在副表中没有的信息\"><a href=\"#10-两张关联表，删除主表中已经在副表中没有的信息\" class=\"headerlink\" title=\"10. 两张关联表，删除主表中已经在副表中没有的信息\"></a>10. 两张关联表，删除主表中已经在副表中没有的信息</h2><pre><code>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )\n</code></pre><h2 id=\"11-四表联查问题\"><a href=\"#11-四表联查问题\" class=\"headerlink\" title=\"11. 四表联查问题\"></a>11. 四表联查问题</h2><pre><code>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....\n</code></pre><h2 id=\"12-日程安排提前五分钟提醒\"><a href=\"#12-日程安排提前五分钟提醒\" class=\"headerlink\" title=\"12. 日程安排提前五分钟提醒\"></a>12. 日程安排提前五分钟提醒</h2><pre><code>select * from 日程安排 where datediff(&apos;minute&apos;,f开始时间,getdate())&gt;5\n</code></pre><h2 id=\"13-一条sql语句搞定数据库分页\"><a href=\"#13-一条sql语句搞定数据库分页\" class=\"headerlink\" title=\"13. 一条sql语句搞定数据库分页\"></a>13. 一条sql语句搞定数据库分页</h2><pre><code>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段\n</code></pre><p>关于数据库分页：</p>\n<pre><code>declare @start int,@end int\n@sql nvarchar(600)\nset @sql=’select top’+str(@end-@start+1)+’+from T where rid not in(select top’+str(@str-1)+’Rid from T where Rid&gt;-1)’\nexec sp_executesql @sql\n</code></pre><blockquote>\n<p>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p>\n</blockquote>\n<h2 id=\"14-前10条记录\"><a href=\"#14-前10条记录\" class=\"headerlink\" title=\"14. 前10条记录\"></a>14. 前10条记录</h2><pre><code>select top 10 * form table1 where 范围\n</code></pre><h2 id=\"15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等\"><a href=\"#15-选择在每一组b值相同的数据中对应的a最大的记录的所有信息-类似这样的用法可以用于论坛每月排行榜-每月热销产品分析-按科目成绩排名-等等\" class=\"headerlink\" title=\"15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)\"></a>15. 选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</h2><pre><code>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)\n</code></pre><h2 id=\"16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表\"><a href=\"#16-包括所有在-TableA-中但不在-TableB和TableC-中的行并消除所有重复行而派生出一个结果表\" class=\"headerlink\" title=\"16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表\"></a>16. 包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表</h2><pre><code>(select a from tableA ) except (select a from tableB) except (select a from tableC)\n</code></pre><h2 id=\"17-随机取出10条数据\"><a href=\"#17-随机取出10条数据\" class=\"headerlink\" title=\"17. 随机取出10条数据\"></a>17. 随机取出10条数据</h2><pre><code>select top 10 * from tablename order by newid()\n</code></pre><h2 id=\"18-随机选择记录\"><a href=\"#18-随机选择记录\" class=\"headerlink\" title=\"18. 随机选择记录\"></a>18. 随机选择记录</h2><pre><code>select newid()\n</code></pre><h2 id=\"19-删除重复记录\"><a href=\"#19-删除重复记录\" class=\"headerlink\" title=\"19. 删除重复记录\"></a>19. 删除重复记录</h2><ul>\n<li>方法一：</li>\n</ul>\n<pre><code>delete from tablename where id not in (select max(id) from tablename group by col1,col2,...)\n</code></pre><ul>\n<li>方法二：</li>\n</ul>\n<pre><code>select distinct * into temp from tablename\ndelete from tablename\ninsert into tablename select * from temp\n</code></pre><blockquote>\n<p>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量的数据操作</p>\n</blockquote>\n<ul>\n<li>方法三： 例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</li>\n</ul>\n<pre><code>alter table tablename\nadd column_b int identity(1,1)    --添加一个自增列\ndelete from tablename where column_b not in(\nselect max(column_b) from tablename group by column1,column2,...)\nalter table tablename drop column column_b\n</code></pre><h2 id=\"20-列出数据库里所有的表名\"><a href=\"#20-列出数据库里所有的表名\" class=\"headerlink\" title=\"20. 列出数据库里所有的表名\"></a>20. 列出数据库里所有的表名</h2><pre><code>select name from sysobjects where type=&apos;U&apos; // U代表用户\n</code></pre><h2 id=\"21-列出表里的所有的列名\"><a href=\"#21-列出表里的所有的列名\" class=\"headerlink\" title=\"21. 列出表里的所有的列名\"></a>21. 列出表里的所有的列名</h2><pre><code>select name from syscolumns where id=object_id(&apos;TableName&apos;)\n</code></pre><h2 id=\"22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。\"><a href=\"#22-列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select-中的case。\" class=\"headerlink\" title=\"22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。\"></a>22. 列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。</h2><pre><code>select type,sum(case vender when &apos;A&apos; then pcs else 0 end),sum(case vender when &apos;C&apos; then pcs else 0 end),sum(case vender when &apos;B&apos; then pcs else 0 end) FROM tablename group by type\n</code></pre><p>显示结果：</p>\n<pre><code>type vender pcs\n电脑 A 1\n电脑 A 1\n光盘 B 2\n光盘 A 2\n手机 B 3\n手机 C 3\n</code></pre><h2 id=\"23-初始化-表table1\"><a href=\"#23-初始化-表table1\" class=\"headerlink\" title=\"23. 初始化 表table1\"></a>23. 初始化 表table1</h2><pre><code>TRUNCATE TABLE table1\n</code></pre><h2 id=\"24-选择从10到15的记录\"><a href=\"#24-选择从10到15的记录\" class=\"headerlink\" title=\"24. 选择从10到15的记录\"></a>24. 选择从10到15的记录</h2><pre><code>select top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc\n</code></pre><h2 id=\"25-创建临时表\"><a href=\"#25-创建临时表\" class=\"headerlink\" title=\"25. 创建临时表\"></a>25. 创建临时表</h2><ul>\n<li>方法一：</li>\n</ul>\n<pre><code>create table #临时表名(字段1 约束条件,\n                       字段2 约束条件,\n                      .....)\ncreate table ##临时表名(字段1 约束条件,\n                        字段2 约束条件,\n                        .....)\n</code></pre><p>例：</p>\n<pre><code>create table #Tmp --创建临时表#Tmp\n(\n    ID   int IDENTITY (1,1)     not null, --创建列ID,并且每次新增一条记录就会加1\n    WokNo                varchar(50),   \n    primary key (ID)      --定义ID为临时表#Tmp的主键      \n);\n</code></pre><ul>\n<li>方法二：</li>\n</ul>\n<pre><code>select * into #临时表名 from 你的表;\nselect * into ##临时表名 from 你的表;\n</code></pre><blockquote>\n<p>注：以上的#代表局部临时表，##代表全局临时表<br>查询临时表</p>\n</blockquote>\n<pre><code>select * from #临时表名;\nselect * from ##临时表名;\n</code></pre><p>删除临时表</p>\n<pre><code>drop table #临时表名;\ndrop table ##临时表名;\n</code></pre><h2 id=\"26-关联表更新\"><a href=\"#26-关联表更新\" class=\"headerlink\" title=\"26. 关联表更新\"></a>26. 关联表更新</h2><pre><code>UPDATE A SET A.b=B.d FROM tableA A INNER JOIN tableB B ON A.a = B.a\n</code></pre><h2 id=\"27-查看表的所有外键关系\"><a href=\"#27-查看表的所有外键关系\" class=\"headerlink\" title=\"27. 查看表的所有外键关系\"></a>27. 查看表的所有外键关系</h2><pre><code>select t1.*,t2.name,t3.name from dbo.sysforeignkeys t1 left join sysobjects t2 on t1.fkeyid=t2.id \n           left join sysobjects t3 on t1.rkeyid=t3.id where t3.name=&apos;表名 &apos;\n</code></pre><h2 id=\"28-删除所有约束\"><a href=\"#28-删除所有约束\" class=\"headerlink\" title=\"28. 删除所有约束\"></a>28. 删除所有约束</h2><pre><code>DECLARE c1 cursor for\n    select &apos;alter table [&apos;+ object_name(parent_obj) + &apos;] drop constraint [&apos;+name+&apos;]; &apos;\n    from sysobjects\n    where xtype = &apos;F&apos;\nopen c1\ndeclare @c1 varchar(8000)\nfetch next from c1 into @c1\nwhile(@@fetch_status=0)\n    begin\n        exec(@c1)\n        fetch next from c1 into @c1\n    end\nclose c1\ndeallocate c1\n</code></pre><h2 id=\"29-删除数据库所有表\"><a href=\"#29-删除数据库所有表\" class=\"headerlink\" title=\"29. 删除数据库所有表\"></a>29. 删除数据库所有表</h2><pre><code>declare @tname varchar(8000)\nset @tname=&apos;&apos;\nselect @tname=@tname + Name + &apos;,&apos; from sysobjects where xtype=&apos;U&apos;\nselect @tname=&apos;drop table &apos; + left(@tname,len(@tname)-1)\nexec(@tname)\n</code></pre><h2 id=\"30-删除外键约束\"><a href=\"#30-删除外键约束\" class=\"headerlink\" title=\"30. 删除外键约束\"></a>30. 删除外键约束</h2><p>得到某个表被哪些外键引用，并且显示出外键表的表名</p>\n<pre><code>SELECT\n    fk.name,\n    fk.object_id,\n    OBJECT_NAME(fk.parent_object_id) AS referenceTableName\nFROM\n    sys.foreign_keys AS fk\nJOIN sys.objects AS o ON fk.referenced_object_id = o.object_id\nWHERE\n    o.name = &apos;ATTACHMENTDOC&apos;;\n</code></pre><p>通过外键表的表名和外键名称执行以下语句即可删除外键</p>\n<pre><code>ALTER TABLE dbo.CONTRACTINFO DROP CONSTRAINT FK_CONTRACTINFO_ATTACHMENTDOC\n</code></pre><h2 id=\"31-查找指定数据库表的字段名，类型，注释\"><a href=\"#31-查找指定数据库表的字段名，类型，注释\" class=\"headerlink\" title=\"31. 查找指定数据库表的字段名，类型，注释\"></a>31. 查找指定数据库表的字段名，类型，注释</h2><pre><code>    SELECT c.object_id, c.name AS cname, t.name AS tname, is_computed AS isComputed,\n           (SELECT VALUE\n              FROM sys.extended_properties AS ex\n             WHERE ex.major_id = c.object_id AND ex.minor_id = c.column_id) AS notes\n      FROM sys.columns AS c\nINNER JOIN sys.tables  AS ta ON c.object_id = ta.object_id\nINNER JOIN (SELECT name, system_type_id\n              FROM sys.types\n             WHERE name &lt;&gt; &apos;sysname&apos;) AS t ON c.system_type_id = t.system_type_id\n     WHERE ta.name = &apos;指定数据库表&apos;\n  ORDER BY c.column_id\n</code></pre><h2 id=\"32-同步表数据\"><a href=\"#32-同步表数据\" class=\"headerlink\" title=\"32. 同步表数据\"></a>32. 同步表数据</h2><pre><code>INSERT 表2 \nSELECT * FROM 表1 AS a WHERE NOT EXISTS(SELECT 1 FROM 表2 WHERE ID = a.ID);\n</code></pre><h2 id=\"33-判断某列中是否包含中文字符或者英文字符\"><a href=\"#33-判断某列中是否包含中文字符或者英文字符\" class=\"headerlink\" title=\"33. 判断某列中是否包含中文字符或者英文字符\"></a>33. 判断某列中是否包含中文字符或者英文字符</h2><pre><code>SELECT * FROM 表名 WHERE 某列 LIKE &apos;%[吖-座]%&apos;\nSELECT * FROM 表名 WHERE 某列 LIKE &apos;%[a-z]%&apos;\n</code></pre><h2 id=\"34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）\"><a href=\"#34-行转列，将多行数据合并成一行（SQL-SERVER-2005以上支持）\" class=\"headerlink\" title=\"34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）\"></a>34. 行转列，将多行数据合并成一行（SQL SERVER 2005以上支持）</h2><p>例如表Table1中有两列数据：</p>\n<pre><code>code        name\nAAA         姓名1\nAAA         姓名2\nAAA         姓名3\nBBB         姓名4\nBBB         姓名5\n</code></pre><p>行转列，想变成如下格式：</p>\n<pre><code>code        name\nAAA         姓名1,姓名2,姓名3\nBBB         姓名4,姓名5\n</code></pre><p>可用如下SQL实现：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">SELECT</span> code, <span class=\"keyword\">name</span> = (<span class=\"keyword\">STUFF</span>((<span class=\"keyword\">SELECT</span> <span class=\"string\">','</span> + <span class=\"keyword\">name</span> </span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> Table1 </span><br><span class=\"line\">                               <span class=\"keyword\">WHERE</span> code = a.code <span class=\"keyword\">FOR</span> <span class=\"keyword\">xml</span> <span class=\"keyword\">PATH</span>(<span class=\"string\">''</span>)),<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"string\">''</span>))</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> Table1 a </span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> code</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"三-技巧篇\"><a href=\"#三-技巧篇\" class=\"headerlink\" title=\"三. 技巧篇\"></a>三. 技巧篇</h1><h2 id=\"1-1-1，1-2的使用，在SQL语句组合时用的较多\"><a href=\"#1-1-1，1-2的使用，在SQL语句组合时用的较多\" class=\"headerlink\" title=\"1. 1=1，1=2的使用，在SQL语句组合时用的较多\"></a>1. 1=1，1=2的使用，在SQL语句组合时用的较多</h2><p>“where 1=1” 表示选择全部<br>“where 1=2” 表示全部不选</p>\n<h2 id=\"2-收缩数据库\"><a href=\"#2-收缩数据库\" class=\"headerlink\" title=\"2. 收缩数据库\"></a>2. 收缩数据库</h2><p>重建索引</p>\n<pre><code>DBCC REINDEX\nDBCC INDEXDEFRAG\n</code></pre><p>收缩数据和日志</p>\n<pre><code>DBCC SHRINKDB\nDBCC SHRINKFILE\n</code></pre><h2 id=\"3-压缩数据库\"><a href=\"#3-压缩数据库\" class=\"headerlink\" title=\"3. 压缩数据库\"></a>3. 压缩数据库</h2><pre><code>dbcc shrinkdatabase(dbname)\n</code></pre><h2 id=\"4-转移数据库给新用户以已存在用户权限\"><a href=\"#4-转移数据库给新用户以已存在用户权限\" class=\"headerlink\" title=\"4. 转移数据库给新用户以已存在用户权限\"></a>4. 转移数据库给新用户以已存在用户权限</h2><pre><code>exec sp_change_users_login &apos;update_one&apos;,&apos;newname&apos;,&apos;oldname&apos;\ngo\n</code></pre><h2 id=\"5-检查备份集\"><a href=\"#5-检查备份集\" class=\"headerlink\" title=\"5. 检查备份集\"></a>5. 检查备份集</h2><pre><code>RESTORE VERIFYONLY from disk=&apos;E:\\dvbbs.bak&apos;\n</code></pre><h2 id=\"6-修复数据库\"><a href=\"#6-修复数据库\" class=\"headerlink\" title=\"6. 修复数据库\"></a>6. 修复数据库</h2><pre><code>ALTER DATABASE [dvbbs] SET SINGLE_USER\nGO\nDBCC CHECKDB(&apos;dvbbs&apos;,repair_allow_data_loss) WITH TABLOCK\nGO\nALTER DATABASE [dvbbs] SET MULTI_USER\nGO\n</code></pre><h2 id=\"7-日志清除\"><a href=\"#7-日志清除\" class=\"headerlink\" title=\"7. 日志清除\"></a>7. 日志清除</h2><pre><code>SET NOCOUNT ON\nDECLARE @LogicalFileName sysname,\n@MaxMinutes INT,\n@NewSize INT\n\nUSE tablename -- 要操作的数据库名\nSELECT  @LogicalFileName = &apos;tablename_log&apos;, -- 日志文件名\n@MaxMinutes = 10, -- Limit on time allowed to wrap log.\n@NewSize = 1  -- 你想设定的日志文件的大小(M)\nSetup / initialize\nDECLARE @OriginalSize int\nSELECT @OriginalSize = size \nFROM sysfiles\nWHERE name = @LogicalFileName\nSELECT &apos;Original Size of &apos; + db_name() + &apos; LOG is &apos; + \nCONVERT(VARCHAR(30),@OriginalSize) + &apos; 8K pages or &apos; + \nCONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + &apos;MB&apos;\nFROM sysfiles\nWHERE name = @LogicalFileName\nCREATE TABLE DummyTrans\n(DummyColumn char (8000) not null)\n\nDECLARE @Counter    INT,\n@StartTime DATETIME,\n@TruncLog   VARCHAR(255)\nSELECT @StartTime = GETDATE(),\n@TruncLog = &apos;BACKUP LOG &apos; + db_name() + &apos; WITH TRUNCATE_ONLY&apos;\nDBCC SHRINKFILE (@LogicalFileName, @NewSize)\nEXEC (@TruncLog)\n-- Wrap the log if necessary.\nWHILE @MaxMinutes &gt; DATEDIFF (mi, @StartTime, GETDATE()) -- time has not expired\nAND @OriginalSize = (SELECT size FROM sysfiles WHERE name = @LogicalFileName)  \nAND (@OriginalSize * 8 /1024) &gt; @NewSize  \nBEGIN -- Outer loop.\nSELECT @Counter = 0\nWHILE   ((@Counter &lt; @OriginalSize / 16) AND (@Counter &lt; 50000))\nBEGIN -- update\nINSERT DummyTrans VALUES (&apos;Fill Log&apos;) DELETE DummyTrans\nSELECT @Counter = @Counter + 1\nEND\nEXEC (@TruncLog)  \nEND\nSELECT &apos;Final Size of &apos; + db_name() + &apos; LOG is &apos; +\nCONVERT(VARCHAR(30),size) + &apos; 8K pages or &apos; + \nCONVERT(VARCHAR(30),(size*8/1024)) + &apos;MB&apos;\nFROM sysfiles \nWHERE name = @LogicalFileName\nDROP TABLE DummyTrans\nSET NOCOUNT OFF\n</code></pre><h2 id=\"8-更改某个表\"><a href=\"#8-更改某个表\" class=\"headerlink\" title=\"8. 更改某个表\"></a>8. 更改某个表</h2><pre><code>exec sp_changeobjectowner &apos;tablename&apos;,&apos;dbo&apos;\n</code></pre><h2 id=\"9-存储更改全部表\"><a href=\"#9-存储更改全部表\" class=\"headerlink\" title=\"9. 存储更改全部表\"></a>9. 存储更改全部表</h2><pre><code>CREATE PROCEDURE dbo.User_ChangeObjectOwnerBatch\n@OldOwner as NVARCHAR(128),\n@NewOwner as NVARCHAR(128)\nAS\nDECLARE @Name    as NVARCHAR(128)\nDECLARE @Owner   as NVARCHAR(128)\nDECLARE @OwnerName   as NVARCHAR(128)\nDECLARE curObject CURSOR FOR \nselect &apos;Name&apos;    = name,\n   &apos;Owner&apos;    = user_name(uid)\nfrom sysobjects\nwhere user_name(uid)=@OldOwner\norder by name\nOPEN   curObject\nFETCH NEXT FROM curObject INTO @Name, @Owner\nWHILE(@@FETCH_STATUS=0)\nBEGIN     \nif @Owner=@OldOwner \nbegin\n   set @OwnerName = @OldOwner + &apos;.&apos; + rtrim(@Name)\n   exec sp_changeobjectowner @OwnerName, @NewOwner\nend\n-- select @name,@NewOwner,@OldOwner\nFETCH NEXT FROM curObject INTO @Name, @Owner\nEND\nclose curObject\ndeallocate curObject\nGO\n</code></pre><h2 id=\"10-SQL-SERVER中直接循环写入数据\"><a href=\"#10-SQL-SERVER中直接循环写入数据\" class=\"headerlink\" title=\"10. SQL SERVER中直接循环写入数据\"></a>10. SQL SERVER中直接循环写入数据</h2><pre><code>declare @i int\nset @i=1\nwhile @i&lt;30\nbegin\ninsert into test (userid) values(@i)\nset @i=@i+1\nend\n</code></pre><p>案例：<br>有如下表，要求就表中所有沒有及格的成绩，在每次增长0.1的基础上，使他们刚好及格:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th style=\"text-align:right\">score</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Zhangshan</td>\n<td style=\"text-align:right\">80</td>\n</tr>\n<tr>\n<td>Lishi</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n<tr>\n<td>Wangwu</td>\n<td style=\"text-align:right\">50</td>\n</tr>\n<tr>\n<td>Songquan</td>\n<td style=\"text-align:right\">69</td>\n</tr>\n</tbody>\n</table>\n<pre><code>while((select min(score) from tb_table)&lt;60)\nbegin\nupdate tb_table set score =score*1.01\nwhere score&lt;60\nif (select min(score) from tb_table)&gt;60\nbreak\nelse\ncontinue\nend\n</code></pre><h2 id=\"11-查看数据库属性\"><a href=\"#11-查看数据库属性\" class=\"headerlink\" title=\"11. 查看数据库属性\"></a>11. 查看数据库属性</h2><pre><code>sp_helpdb 数据库名\n</code></pre><h2 id=\"12-按姓氏笔画排序\"><a href=\"#12-按姓氏笔画排序\" class=\"headerlink\" title=\"12. 按姓氏笔画排序:\"></a>12. 按姓氏笔画排序:</h2><pre><code>Select * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多\n</code></pre><h2 id=\"13-数据库加密\"><a href=\"#13-数据库加密\" class=\"headerlink\" title=\"13. 数据库加密:\"></a>13. 数据库加密:</h2><pre><code>select encrypt(&apos;原始密码&apos;)\nselect pwdencrypt(&apos;原始密码&apos;)\nselect pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同 encrypt(&apos;原始密码&apos;)\nselect pwdencrypt(&apos;原始密码&apos;)\nselect pwdcompare(&apos;原始密码&apos;,&apos;加密后密码&apos;) = 1--相同；否则不相同\n</code></pre><h2 id=\"14-取回表中字段\"><a href=\"#14-取回表中字段\" class=\"headerlink\" title=\"14. 取回表中字段:\"></a>14. 取回表中字段:</h2><pre><code>declare @list varchar(1000),\n@sql nvarchar(1000) \nselect @list=@list+&apos;,&apos;+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name=&apos;表A&apos;\nset @sql=&apos;select &apos;+right(@list,len(@list)-1)+&apos; from 表A&apos; \nexec (@sql)\n</code></pre><h2 id=\"15-查看硬盘分区\"><a href=\"#15-查看硬盘分区\" class=\"headerlink\" title=\"15. 查看硬盘分区:\"></a>15. 查看硬盘分区:</h2><pre><code>EXEC master..xp_fixeddrives\n</code></pre><h2 id=\"16-比较A-B表是否相等\"><a href=\"#16-比较A-B表是否相等\" class=\"headerlink\" title=\"16. 比较A,B表是否相等:\"></a>16. 比较A,B表是否相等:</h2><pre><code>if (select checksum_agg(binary_checksum(*)) from A)\n     =\n    (select checksum_agg(binary_checksum(*)) from B)\nprint &apos;相等&apos;\nelse\nprint &apos;不相等&apos;\n</code></pre><h2 id=\"17-杀掉所有的事件探察器进程\"><a href=\"#17-杀掉所有的事件探察器进程\" class=\"headerlink\" title=\"17. 杀掉所有的事件探察器进程:\"></a>17. 杀掉所有的事件探察器进程:</h2><pre><code>DECLARE hcforeach CURSOR GLOBAL FOR SELECT &apos;kill &apos;+RTRIM(spid) FROM master.dbo.sysprocesses\nWHERE program_name IN(&apos;SQL profiler&apos;,N&apos;SQL 事件探查器&apos;)\nEXEC sp_msforeach_worker &apos;?&apos;\n</code></pre><h2 id=\"18-记录搜索\"><a href=\"#18-记录搜索\" class=\"headerlink\" title=\"18. 记录搜索:\"></a>18. 记录搜索:</h2><p>开头到N条记录</p>\n<pre><code>Select Top N * From 表\n</code></pre><p>N到M条记录(要有主索引ID)</p>\n<pre><code>Select Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc\n</code></pre><p>N到结尾记录</p>\n<pre><code>Select Top N * From 表 Order by ID Desc\n</code></pre><h2 id=\"19-获取当前数据库中的所有用户表\"><a href=\"#19-获取当前数据库中的所有用户表\" class=\"headerlink\" title=\"19. 获取当前数据库中的所有用户表\"></a>19. 获取当前数据库中的所有用户表</h2><pre><code>select Name from sysobjects where xtype=&apos;u&apos; and status&gt;=0\n</code></pre><h2 id=\"20-获取某一个表的所有字段\"><a href=\"#20-获取某一个表的所有字段\" class=\"headerlink\" title=\"20. 获取某一个表的所有字段\"></a>20. 获取某一个表的所有字段</h2><pre><code>select name from syscolumns where id=object_id(&apos;表名&apos;)\nselect name from syscolumns where id in (select id from sysobjects where type = &apos;u&apos; and name = &apos;表名&apos;)\n</code></pre><p>两种方式的效果相同</p>\n<h2 id=\"21-查看与某一个表相关的视图、存储过程、函数\"><a href=\"#21-查看与某一个表相关的视图、存储过程、函数\" class=\"headerlink\" title=\"21. 查看与某一个表相关的视图、存储过程、函数\"></a>21. 查看与某一个表相关的视图、存储过程、函数</h2><pre><code>select a.* from sysobjects a, syscomments b where a.id = b.id and b.text like &apos;%表名%&apos;\n</code></pre><h2 id=\"22-查看当前数据库中所有存储过程\"><a href=\"#22-查看当前数据库中所有存储过程\" class=\"headerlink\" title=\"22. 查看当前数据库中所有存储过程\"></a>22. 查看当前数据库中所有存储过程</h2><pre><code>select name as 存储过程名称 from sysobjects where xtype=&apos;P&apos;\n</code></pre><h2 id=\"23-查询用户创建的所有数据库\"><a href=\"#23-查询用户创建的所有数据库\" class=\"headerlink\" title=\"23. 查询用户创建的所有数据库\"></a>23. 查询用户创建的所有数据库</h2><pre><code>select * from master..sysdatabases D where sid not in(select sid from master..syslogins where name=&apos;sa&apos;)\n</code></pre><p>或者</p>\n<pre><code>select dbid, name AS DB_NAME from master..sysdatabases where sid &lt;&gt; 0x01\n</code></pre><h2 id=\"24-查询某一个表的字段和数据类型\"><a href=\"#24-查询某一个表的字段和数据类型\" class=\"headerlink\" title=\"24. 查询某一个表的字段和数据类型\"></a>24. 查询某一个表的字段和数据类型</h2><pre><code>select column_name,data_type from information_schema.columns\nwhere table_name = &apos;表名&apos;\n</code></pre><h2 id=\"25-不同服务器数据库之间的数据操作\"><a href=\"#25-不同服务器数据库之间的数据操作\" class=\"headerlink\" title=\"25. 不同服务器数据库之间的数据操作\"></a>25. 不同服务器数据库之间的数据操作</h2><p>创建链接服务器</p>\n<pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;\nexec sp_addlinkedsrvlogin &apos;ITSV &apos;, &apos;false &apos;,null, &apos;用户名 &apos;, &apos;密码 &apos;\n</code></pre><p>查询示例</p>\n<pre><code>select * from ITSV.数据库名.dbo.表名\n</code></pre><p>导入示例</p>\n<pre><code>select * into 表 from ITSV.数据库名.dbo.表名\n</code></pre><p>以后不再使用时删除链接服务器</p>\n<pre><code>exec sp_dropserver &apos;ITSV &apos;, &apos;droplogins &apos;\n</code></pre><p>连接远程/局域网数据(openrowset/openquery/opendatasource)</p>\n<ul>\n<li><ol>\n<li>openrowset<br>查询示例</li>\n</ol>\n</li>\n</ul>\n<pre><code>select * from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\n</code></pre><p>生成本地表</p>\n<pre><code>select * into 表 from openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)\nselect *from 本地表\n</code></pre><p>更新本地表</p>\n<pre><code>update b\nset b.列A=a.列A\nfrom openrowset( &apos;SQLOLEDB &apos;, &apos;sql服务器名 &apos;; &apos;用户名 &apos;; &apos;密码 &apos;,数据库名.dbo.表名)as a inner join 本地表 b    on a.column1=b.column1\n</code></pre><ul>\n<li><ol>\n<li>openquery用法需要创建一个连接<br>首先创建一个连接创建链接服务器</li>\n</ol>\n</li>\n</ul>\n<pre><code>exec sp_addlinkedserver &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;\n</code></pre><p>查询</p>\n<pre><code>select *\nFROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;)\nselect * from 本地表\n</code></pre><p>更新本地表</p>\n<pre><code>update b\nset b.列B=a.列B\nFROM openquery(ITSV, &apos;SELECT * FROM 数据库.dbo.表名 &apos;) as a\ninner join 本地表 b on a.列A=b.列A\n</code></pre><ul>\n<li><ol>\n<li>opendatasource/openrowset</li>\n</ol>\n</li>\n</ul>\n<pre><code>SELECT *\nFROM opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos; ).test.dbo.roy_ta\n</code></pre><p>把本地表导入远程表</p>\n<pre><code>insert opendatasource( &apos;SQLOLEDB &apos;, &apos;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &apos;).数据库.dbo.表名\nselect * from 本地表\n</code></pre><h2 id=\"26-删除数据库下面的所有表\"><a href=\"#26-删除数据库下面的所有表\" class=\"headerlink\" title=\"26. 删除数据库下面的所有表\"></a>26. 删除数据库下面的所有表</h2><pre><code>use 数据库名(是要删除表的所在的那个数据库的名称)\nGO\ndeclare @sql varchar(8000)\nwhile (select count(*) from sysobjects where type=&apos;U&apos;)&gt;0\nbegin\nSELECT @sql=&apos;drop table &apos; + name\nFROM sysobjects\nWHERE (type = &apos;U&apos;)\nORDER BY &apos;drop table &apos; + name\nexec(@sql) \nend\n</code></pre><h2 id=\"27-查看数据库文件使用情况\"><a href=\"#27-查看数据库文件使用情况\" class=\"headerlink\" title=\"27. 查看数据库文件使用情况\"></a>27. 查看数据库文件使用情况</h2><pre><code>SELECT  A.name                                                     AS &quot;逻辑名称&quot;\n       ,CONVERT(FLOAT ,A.size)             * (8192.0/1024.0)/1024  AS &quot;已用大小MB&quot;\n       ,CONVERT(FLOAT ,A.maxSize - A.size) * (8192.0/1024.0)/1024  AS &quot;可用大小MB&quot;\n       ,CONVERT(FLOAT ,A.maxSize)          * (8192.0/1024.0)/1024  AS &quot;分配大小MB&quot;\n       ,A.fileName                                                 AS &quot;文件路径&quot;\n       ,(\n         SELECT  SA.groupName\n           FROM  SysFileGroups  SA\n          WHERE  SA.groupID = A.groupID\n        )                                                          AS &quot;文件组&quot;\n       ,CASE WHEN A.status = 1081346 THEN &apos;磁盘文件&apos;               \n             WHEN A.status = 1081410 THEN &apos;日志设备&apos;\n             ELSE CONVERT(VARCHAR ,A.status) END                   AS &quot;文件类型&quot;\n  FROM  SysFiles  A\n</code></pre><hr>\n<h1 id=\"常识\"><a href=\"#常识\" class=\"headerlink\" title=\"常识\"></a>常识</h1><ul>\n<li>在SQL查询中，from后最多可以跟256张表或视图</li>\n<li>在SQL语句中出现 Order by，查询时，先排序，后取值</li>\n<li>在SQL中，一个字段的最大容量是8000</li>\n</ul>"},{"title":"【Sublime Text】快捷键","layout":"post","comments":1,"date":"2017-05-15T07:59:04.000Z","keywords":null,"description":null,"_content":"| 快捷键                    | 说明                                                         |\n| ------------------------- | :---------------------------------------------               |\n| Ctrl+X                    | 删除当前行                                                   |\n| Ctrl+Shift+D              | 复制光标所在整行，插入到下一行                               |\n| Ctrl+Shift+↑              | 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前） |\n| Ctrl+Shift+↓              | 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后） |\n| Shift+鼠标右键拖动        | 列编辑模式                                                   |\n| Ctrl+K+U                  | 转换大写                                                     |\n| Ctrl+K+L                  | 转换小写                                                     |","source":"_posts/【Sublime-Text】快捷键.md","raw":"---\ntitle: 【Sublime Text】快捷键\nlayout: post\ncomments: true\ndate: 2017-05-15 15:59:04\ncategories: Sublime Text\ntags: [Sublime Text, 快捷键]\nkeywords:\ndescription:\n---\n| 快捷键                    | 说明                                                         |\n| ------------------------- | :---------------------------------------------               |\n| Ctrl+X                    | 删除当前行                                                   |\n| Ctrl+Shift+D              | 复制光标所在整行，插入到下一行                               |\n| Ctrl+Shift+↑              | 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前） |\n| Ctrl+Shift+↓              | 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后） |\n| Shift+鼠标右键拖动        | 列编辑模式                                                   |\n| Ctrl+K+U                  | 转换大写                                                     |\n| Ctrl+K+L                  | 转换小写                                                     |","slug":"【Sublime-Text】快捷键","published":1,"updated":"2017-05-23T09:20:50.267Z","_id":"cjpuwa1k0003ws0jtr5ylykr1","photos":[],"link":"","content":"<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+X</td>\n<td style=\"text-align:left\">删除当前行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+D</td>\n<td style=\"text-align:left\">复制光标所在整行，插入到下一行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+↑</td>\n<td style=\"text-align:left\">将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+↓</td>\n<td style=\"text-align:left\">将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）</td>\n</tr>\n<tr>\n<td>Shift+鼠标右键拖动</td>\n<td style=\"text-align:left\">列编辑模式</td>\n</tr>\n<tr>\n<td>Ctrl+K+U</td>\n<td style=\"text-align:left\">转换大写</td>\n</tr>\n<tr>\n<td>Ctrl+K+L</td>\n<td style=\"text-align:left\">转换小写</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+X</td>\n<td style=\"text-align:left\">删除当前行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+D</td>\n<td style=\"text-align:left\">复制光标所在整行，插入到下一行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+↑</td>\n<td style=\"text-align:left\">将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+↓</td>\n<td style=\"text-align:left\">将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）</td>\n</tr>\n<tr>\n<td>Shift+鼠标右键拖动</td>\n<td style=\"text-align:left\">列编辑模式</td>\n</tr>\n<tr>\n<td>Ctrl+K+U</td>\n<td style=\"text-align:left\">转换大写</td>\n</tr>\n<tr>\n<td>Ctrl+K+L</td>\n<td style=\"text-align:left\">转换小写</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"【Think】服务器虚拟化的好处","layout":"post","comments":1,"date":"2016-11-28T08:26:08.000Z","keywords":null,"description":null,"_content":"# 服务器虚拟化的好处\n------\n- 整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。\n\n- 避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。\n\n- 事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。\n\n- 节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。\n\n- 迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。\n\n- 减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。\n\n> 高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。\n\n<!-- more -->","source":"_posts/【Think】服务器虚拟化的好处.md","raw":"---\ntitle: 【Think】服务器虚拟化的好处\nlayout: post\ncomments: true\ndate: 2016-11-28 16:26:08\ncategories: Think\ntags: [Think, 虚拟化]\nkeywords:\ndescription:\n---\n# 服务器虚拟化的好处\n------\n- 整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。\n\n- 避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。\n\n- 事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。\n\n- 节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。\n\n- 迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。\n\n- 减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。\n\n> 高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。\n\n<!-- more -->","slug":"【Think】服务器虚拟化的好处","published":1,"updated":"2017-02-27T04:17:23.699Z","_id":"cjpuwa1k40040s0jtgc4w7wyf","photos":[],"link":"","content":"<h1 id=\"服务器虚拟化的好处\"><a href=\"#服务器虚拟化的好处\" class=\"headerlink\" title=\"服务器虚拟化的好处\"></a>服务器虚拟化的好处</h1><hr>\n<ul>\n<li><p>整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。</p>\n</li>\n<li><p>避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。</p>\n</li>\n<li><p>事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。</p>\n</li>\n<li><p>节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。</p>\n</li>\n<li><p>迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。</p>\n</li>\n<li><p>减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。</p>\n</li>\n</ul>\n<blockquote>\n<p>高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。</p>\n</blockquote>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<h1 id=\"服务器虚拟化的好处\"><a href=\"#服务器虚拟化的好处\" class=\"headerlink\" title=\"服务器虚拟化的好处\"></a>服务器虚拟化的好处</h1><hr>\n<ul>\n<li><p>整合服务器，通过将物理服务器变成虚拟服务器减少物理服务器的数量，可以在电力和冷却成本上获得巨大节省。此外，还可以减少数据中心UPS和网络设备费用、所占用的空间等等。</p>\n</li>\n<li><p>避免过多部署，在实施服务器虚拟化之前，管理员通常需要额外部署一下服务器来满足不时之需。利用服务器虚拟化，可以避免这种额外部署工作，而且它支持虚拟机的完美分割。</p>\n</li>\n<li><p>事半功倍，在经济不景气的情况下，IT部门和管理员更需要有事半功倍的理想方式来实现。服务器虚拟化可以帮助管理员更灵活、更高效地实现IT管理工作。</p>\n</li>\n<li><p>节省开支，通过服务器虚拟化，公司不仅能享受到物理服务器、电源和散热系统带来的成本节约，而且还可以大幅减少管理物理服务器的宝贵时间。终端用户也会因高效稳定运行而更具有忠诚度。</p>\n</li>\n<li><p>迁移虚拟机，服务器虚拟化的一大功能是支持将运行中的虚拟机从一个主机迁移到另一个主机上，而且这个过程中不会出现宕机事件。VMware的 vMotion能为你实现这一点，使得像分布式资源调度（DRS）和分布式电源管理（DPM）一样去实现。</p>\n</li>\n<li><p>减少宕机，事件类似vMotion，storage vMotion（svMotion）、DRS和VMware高可用性（VMHA），都有助于虚拟化服务器实现比物理服务器更长的运行时间。</p>\n</li>\n</ul>\n<blockquote>\n<p>高可用：降低故障出现的概率；缩小故障影响的范围；出现故障快速恢复。</p>\n</blockquote>","more":""},{"title":"【VB】下载网页文件或图片的方法","layout":"post","comments":1,"date":"2018-04-26T09:21:46.000Z","keywords":"下载","description":null,"_content":"\n#### 一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\n引入API：\n\n\tPrivate Declare Function URLDownloadToFile Lib \"urlmon\" Alias \"URLDownloadToFileA\" (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long\n用法：\n```\nPrivate Sub test()\n    Dim v_URL As String, v_FileName As String, v_Result As Long\n    v_URL = \"http://www.baidu.com/img/baidu_logo.gif\"\n    v_FileName = App.Path & \"\\Baidu.bmp\"  '下载百度Logo图片\n    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     '下载文件，返回 0 表示成功\n    v_URL = \"http://www.baidu.com\"\n    v_FileName = App.Path & \"\\Baidu.html\" '下载百度首页的网页\n    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     '下载文件，返回 0 表示成功\nEnd Sub\n```\n\n#### 二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation\n引入API：\n\n\tPrivate Declare Function OleLoadPicturePath Lib \"oleaut32.dll\" (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As Long\n\tPrivate Type TGUID\n\t\tData1 As Long\n\t\tData2 As Integer\n\t\tData3 As Integer\n\t\tData4(0 To 7) As Byte\n\tEnd Type\n用法：\n```\nPublic Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture\n    Dim riid As TGUID\n    riid.Data1    = &H7BF80980\n    riid.Data2    = &HBF32\n    riid.Data3    = &H101A\n    riid.Data4(0) = &H8B\n    riid.Data4(1) = &HBB\n    riid.Data4(2) = &H0\n    riid.Data4(3) = &HAA\n    riid.Data4(4) = &H0\n    riid.Data4(5) = &H30\n    riid.Data4(6) = &HC\n    riid.Data4(7) = &HAB\n    OleLoadPicturePath StrPtr(i_ImgUrl), 0&, 0&, 0&, riid, LoadNetPicture\nEnd Function\nPrivate Sub test()\n    Dim v_ImgUrl As String, v_Picture As Picture\n    v_ImgUrl = \"http://www.baidu.com/img/baidu_logo.gif\"\n    Set v_Picture = LoadNetPicture(v_ImgUrl)          '将图片下载到变量\n    SavePicture v_Picture, App.Path & \"\\MyImg.bmp\"    '保存到硬盘\n    Picture1.Picture = v_Picture\n    '如果要将图片装载到控件\n    Picture1.Picture = LoadNetPicture(v_ImgUrl)\nEnd Sub\n```\n\n#### 三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地\n定义公用下载过程：\n```\nPublic Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)\n    Dim XmlHttp, B() As Byte\n    Set XmlHttp = CreateObject(\"Microsoft.XMLHTTP\")\n    XmlHttp.Open \"GET\", i_Url, False\n    XmlHttp.Send\n    If XmlHttp.ReadyState = 4 Then\n        B() = XmlHttp.ResponseBody\n        Open i_File For Binary As #1\n        Put #1, , B()\n        Close #1\n    End If\n    Set XmlHttp = Nothing\nEnd Sub\n```\n用法:\n\n\tDownNetFile \"http://www.baidu.com/img/baidu_logo.gif\", App.Path & \"\\My-1.bmp\" '下载百度图片\n\tDownNetFile \"http://www.baidu.com\", App.Path & \"\\Baidu.html\"                  '下载百度首页的网页\n\n#### 四、使用WebBrowser的Document对象，保存网页的所有图片\n先用 WebBrowser1 显示一个网页，如：\n\t\n\tWebBrowser1.Navigate \"http://www.baidu.com\"\n\n待网页加载完毕后，再执行以下语句：\n```\nDim v_Path As String, I As Long, E, v_Range\nv_Path = App.Path & \"\\Tu\\\"\nWebBrowser1.Silent = True '关闭交互，禁止脚本错误\nFor Each E In WebBrowser1.Document.All\n    If E.tagName = \"IMG\" Then\n        Set v_Range = WebBrowser1.Document.body.createControlRange()\n        v_Range.Add E\n        v_Range.execCommand \"Copy\" '复制到剪贴板\n        I = I + 1\n        SavePicture Clipboard.GetData, v_Path & I & \".bmp\" '保存到硬盘\n    End If\nNext\n```\n\n#### 五、用API调用系统的另存为下载对话框，进行文件下载\n引入API:\n\n\tPrivate Declare Function DoFileDownload Lib \"shdocvw.dll\" (ByVal lpszFile As String) As Long\n\n用法：\n```\nDim v_Url As String\nv_Url = StrConv(\"http://www.baidu.com\", vbUnicode)\nCall DoFileDownload(v_Url)\n```\n\n#### 六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\n\tWebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT\n\n---\n\n以上方法各有优缺点。\nMicrosoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。\n对于谷歌地图图片，图片链接形如：http://mt1.google.cn/vt/lyrs=s@63&gl=cn&x=51694&s=&y=26884&z=16&s=Galile ，仅第四种方法有效。\n\n> 本文根据[rztyfx的专栏](https://blog.csdn.net/rztyfx/article/details/7605624)整理发表。","source":"_posts/【VB】下载网页文件或图片的方法.md","raw":"---\ntitle: 【VB】下载网页文件或图片的方法\nlayout: post\ncomments: true\ndate: 2018-04-26 17:21:46\ncategories: VB\ntags: [VB]\nkeywords: 下载\ndescription: \n---\n\n#### 一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\n引入API：\n\n\tPrivate Declare Function URLDownloadToFile Lib \"urlmon\" Alias \"URLDownloadToFileA\" (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long\n用法：\n```\nPrivate Sub test()\n    Dim v_URL As String, v_FileName As String, v_Result As Long\n    v_URL = \"http://www.baidu.com/img/baidu_logo.gif\"\n    v_FileName = App.Path & \"\\Baidu.bmp\"  '下载百度Logo图片\n    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     '下载文件，返回 0 表示成功\n    v_URL = \"http://www.baidu.com\"\n    v_FileName = App.Path & \"\\Baidu.html\" '下载百度首页的网页\n    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     '下载文件，返回 0 表示成功\nEnd Sub\n```\n\n#### 二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation\n引入API：\n\n\tPrivate Declare Function OleLoadPicturePath Lib \"oleaut32.dll\" (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As Long\n\tPrivate Type TGUID\n\t\tData1 As Long\n\t\tData2 As Integer\n\t\tData3 As Integer\n\t\tData4(0 To 7) As Byte\n\tEnd Type\n用法：\n```\nPublic Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture\n    Dim riid As TGUID\n    riid.Data1    = &H7BF80980\n    riid.Data2    = &HBF32\n    riid.Data3    = &H101A\n    riid.Data4(0) = &H8B\n    riid.Data4(1) = &HBB\n    riid.Data4(2) = &H0\n    riid.Data4(3) = &HAA\n    riid.Data4(4) = &H0\n    riid.Data4(5) = &H30\n    riid.Data4(6) = &HC\n    riid.Data4(7) = &HAB\n    OleLoadPicturePath StrPtr(i_ImgUrl), 0&, 0&, 0&, riid, LoadNetPicture\nEnd Function\nPrivate Sub test()\n    Dim v_ImgUrl As String, v_Picture As Picture\n    v_ImgUrl = \"http://www.baidu.com/img/baidu_logo.gif\"\n    Set v_Picture = LoadNetPicture(v_ImgUrl)          '将图片下载到变量\n    SavePicture v_Picture, App.Path & \"\\MyImg.bmp\"    '保存到硬盘\n    Picture1.Picture = v_Picture\n    '如果要将图片装载到控件\n    Picture1.Picture = LoadNetPicture(v_ImgUrl)\nEnd Sub\n```\n\n#### 三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地\n定义公用下载过程：\n```\nPublic Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)\n    Dim XmlHttp, B() As Byte\n    Set XmlHttp = CreateObject(\"Microsoft.XMLHTTP\")\n    XmlHttp.Open \"GET\", i_Url, False\n    XmlHttp.Send\n    If XmlHttp.ReadyState = 4 Then\n        B() = XmlHttp.ResponseBody\n        Open i_File For Binary As #1\n        Put #1, , B()\n        Close #1\n    End If\n    Set XmlHttp = Nothing\nEnd Sub\n```\n用法:\n\n\tDownNetFile \"http://www.baidu.com/img/baidu_logo.gif\", App.Path & \"\\My-1.bmp\" '下载百度图片\n\tDownNetFile \"http://www.baidu.com\", App.Path & \"\\Baidu.html\"                  '下载百度首页的网页\n\n#### 四、使用WebBrowser的Document对象，保存网页的所有图片\n先用 WebBrowser1 显示一个网页，如：\n\t\n\tWebBrowser1.Navigate \"http://www.baidu.com\"\n\n待网页加载完毕后，再执行以下语句：\n```\nDim v_Path As String, I As Long, E, v_Range\nv_Path = App.Path & \"\\Tu\\\"\nWebBrowser1.Silent = True '关闭交互，禁止脚本错误\nFor Each E In WebBrowser1.Document.All\n    If E.tagName = \"IMG\" Then\n        Set v_Range = WebBrowser1.Document.body.createControlRange()\n        v_Range.Add E\n        v_Range.execCommand \"Copy\" '复制到剪贴板\n        I = I + 1\n        SavePicture Clipboard.GetData, v_Path & I & \".bmp\" '保存到硬盘\n    End If\nNext\n```\n\n#### 五、用API调用系统的另存为下载对话框，进行文件下载\n引入API:\n\n\tPrivate Declare Function DoFileDownload Lib \"shdocvw.dll\" (ByVal lpszFile As String) As Long\n\n用法：\n```\nDim v_Url As String\nv_Url = StrConv(\"http://www.baidu.com\", vbUnicode)\nCall DoFileDownload(v_Url)\n```\n\n#### 六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\n\tWebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT\n\n---\n\n以上方法各有优缺点。\nMicrosoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。\n对于谷歌地图图片，图片链接形如：http://mt1.google.cn/vt/lyrs=s@63&gl=cn&x=51694&s=&y=26884&z=16&s=Galile ，仅第四种方法有效。\n\n> 本文根据[rztyfx的专栏](https://blog.csdn.net/rztyfx/article/details/7605624)整理发表。","slug":"【VB】下载网页文件或图片的方法","published":1,"updated":"2018-04-28T06:50:22.859Z","_id":"cjpuwa1k60041s0jtq267dc3x","photos":[],"link":"","content":"<h4 id=\"一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\"><a href=\"#一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\" class=\"headerlink\" title=\"一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\"></a>一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地</h4><p>引入API：</p>\n<pre><code>Private Declare Function URLDownloadToFile Lib &quot;urlmon&quot; Alias &quot;URLDownloadToFileA&quot; (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Private Sub test()</span><br><span class=\"line\">    Dim v_URL As String, v_FileName As String, v_Result As Long</span><br><span class=\"line\">    v_URL = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class=\"line\">    v_FileName = App.Path &amp; &quot;\\Baidu.bmp&quot;  &apos;下载百度Logo图片</span><br><span class=\"line\">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class=\"line\">    v_URL = &quot;http://www.baidu.com&quot;</span><br><span class=\"line\">    v_FileName = App.Path &amp; &quot;\\Baidu.html&quot; &apos;下载百度首页的网页</span><br><span class=\"line\">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation\"><a href=\"#二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation\" class=\"headerlink\" title=\"二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation\"></a>二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation</h4><p>引入API：</p>\n<pre><code>Private Declare Function OleLoadPicturePath Lib &quot;oleaut32.dll&quot; (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As Long\nPrivate Type TGUID\n    Data1 As Long\n    Data2 As Integer\n    Data3 As Integer\n    Data4(0 To 7) As Byte\nEnd Type\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture</span><br><span class=\"line\">    Dim riid As TGUID</span><br><span class=\"line\">    riid.Data1    = &amp;H7BF80980</span><br><span class=\"line\">    riid.Data2    = &amp;HBF32</span><br><span class=\"line\">    riid.Data3    = &amp;H101A</span><br><span class=\"line\">    riid.Data4(0) = &amp;H8B</span><br><span class=\"line\">    riid.Data4(1) = &amp;HBB</span><br><span class=\"line\">    riid.Data4(2) = &amp;H0</span><br><span class=\"line\">    riid.Data4(3) = &amp;HAA</span><br><span class=\"line\">    riid.Data4(4) = &amp;H0</span><br><span class=\"line\">    riid.Data4(5) = &amp;H30</span><br><span class=\"line\">    riid.Data4(6) = &amp;HC</span><br><span class=\"line\">    riid.Data4(7) = &amp;HAB</span><br><span class=\"line\">    OleLoadPicturePath StrPtr(i_ImgUrl), 0&amp;, 0&amp;, 0&amp;, riid, LoadNetPicture</span><br><span class=\"line\">End Function</span><br><span class=\"line\">Private Sub test()</span><br><span class=\"line\">    Dim v_ImgUrl As String, v_Picture As Picture</span><br><span class=\"line\">    v_ImgUrl = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class=\"line\">    Set v_Picture = LoadNetPicture(v_ImgUrl)          &apos;将图片下载到变量</span><br><span class=\"line\">    SavePicture v_Picture, App.Path &amp; &quot;\\MyImg.bmp&quot;    &apos;保存到硬盘</span><br><span class=\"line\">    Picture1.Picture = v_Picture</span><br><span class=\"line\">    &apos;如果要将图片装载到控件</span><br><span class=\"line\">    Picture1.Picture = LoadNetPicture(v_ImgUrl)</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地\"><a href=\"#三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地\" class=\"headerlink\" title=\"三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地\"></a>三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地</h4><p>定义公用下载过程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)</span><br><span class=\"line\">    Dim XmlHttp, B() As Byte</span><br><span class=\"line\">    Set XmlHttp = CreateObject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class=\"line\">    XmlHttp.Open &quot;GET&quot;, i_Url, False</span><br><span class=\"line\">    XmlHttp.Send</span><br><span class=\"line\">    If XmlHttp.ReadyState = 4 Then</span><br><span class=\"line\">        B() = XmlHttp.ResponseBody</span><br><span class=\"line\">        Open i_File For Binary As #1</span><br><span class=\"line\">        Put #1, , B()</span><br><span class=\"line\">        Close #1</span><br><span class=\"line\">    End If</span><br><span class=\"line\">    Set XmlHttp = Nothing</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<p>用法:</p>\n<pre><code>DownNetFile &quot;http://www.baidu.com/img/baidu_logo.gif&quot;, App.Path &amp; &quot;\\My-1.bmp&quot; &apos;下载百度图片\nDownNetFile &quot;http://www.baidu.com&quot;, App.Path &amp; &quot;\\Baidu.html&quot;                  &apos;下载百度首页的网页\n</code></pre><h4 id=\"四、使用WebBrowser的Document对象，保存网页的所有图片\"><a href=\"#四、使用WebBrowser的Document对象，保存网页的所有图片\" class=\"headerlink\" title=\"四、使用WebBrowser的Document对象，保存网页的所有图片\"></a>四、使用WebBrowser的Document对象，保存网页的所有图片</h4><p>先用 WebBrowser1 显示一个网页，如：</p>\n<pre><code>WebBrowser1.Navigate &quot;http://www.baidu.com&quot;\n</code></pre><p>待网页加载完毕后，再执行以下语句：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim v_Path As String, I As Long, E, v_Range</span><br><span class=\"line\">v_Path = App.Path &amp; &quot;\\Tu\\&quot;</span><br><span class=\"line\">WebBrowser1.Silent = True &apos;关闭交互，禁止脚本错误</span><br><span class=\"line\">For Each E In WebBrowser1.Document.All</span><br><span class=\"line\">    If E.tagName = &quot;IMG&quot; Then</span><br><span class=\"line\">        Set v_Range = WebBrowser1.Document.body.createControlRange()</span><br><span class=\"line\">        v_Range.Add E</span><br><span class=\"line\">        v_Range.execCommand &quot;Copy&quot; &apos;复制到剪贴板</span><br><span class=\"line\">        I = I + 1</span><br><span class=\"line\">        SavePicture Clipboard.GetData, v_Path &amp; I &amp; &quot;.bmp&quot; &apos;保存到硬盘</span><br><span class=\"line\">    End If</span><br><span class=\"line\">Next</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"五、用API调用系统的另存为下载对话框，进行文件下载\"><a href=\"#五、用API调用系统的另存为下载对话框，进行文件下载\" class=\"headerlink\" title=\"五、用API调用系统的另存为下载对话框，进行文件下载\"></a>五、用API调用系统的另存为下载对话框，进行文件下载</h4><p>引入API:</p>\n<pre><code>Private Declare Function DoFileDownload Lib &quot;shdocvw.dll&quot; (ByVal lpszFile As String) As Long\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim v_Url As String</span><br><span class=\"line\">v_Url = StrConv(&quot;http://www.baidu.com&quot;, vbUnicode)</span><br><span class=\"line\">Call DoFileDownload(v_Url)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\"><a href=\"#六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\" class=\"headerlink\" title=\"六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\"></a>六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载</h4><pre><code>WebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT\n</code></pre><hr>\n<p>以上方法各有优缺点。<br>Microsoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。<br>对于谷歌地图图片，图片链接形如：<a href=\"http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile\" target=\"_blank\" rel=\"noopener\">http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile</a> ，仅第四种方法有效。</p>\n<blockquote>\n<p>本文根据<a href=\"https://blog.csdn.net/rztyfx/article/details/7605624\" target=\"_blank\" rel=\"noopener\">rztyfx的专栏</a>整理发表。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\"><a href=\"#一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\" class=\"headerlink\" title=\"一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地\"></a>一、使用API函数URLDownloadToFile，下载网页、图片等其它文件到本地</h4><p>引入API：</p>\n<pre><code>Private Declare Function URLDownloadToFile Lib &quot;urlmon&quot; Alias &quot;URLDownloadToFileA&quot; (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Private Sub test()</span><br><span class=\"line\">    Dim v_URL As String, v_FileName As String, v_Result As Long</span><br><span class=\"line\">    v_URL = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class=\"line\">    v_FileName = App.Path &amp; &quot;\\Baidu.bmp&quot;  &apos;下载百度Logo图片</span><br><span class=\"line\">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class=\"line\">    v_URL = &quot;http://www.baidu.com&quot;</span><br><span class=\"line\">    v_FileName = App.Path &amp; &quot;\\Baidu.html&quot; &apos;下载百度首页的网页</span><br><span class=\"line\">    v_Result = URLDownloadToFile(0, v_URL, v_FileName, 0, 0)     &apos;下载文件，返回 0 表示成功</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation\"><a href=\"#二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE-Automation\" class=\"headerlink\" title=\"二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation\"></a>二、使用API函数OleLoadPicturePath，下载图片文件到变量，注意要勾选引用：OLE Automation</h4><p>引入API：</p>\n<pre><code>Private Declare Function OleLoadPicturePath Lib &quot;oleaut32.dll&quot; (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As Long\nPrivate Type TGUID\n    Data1 As Long\n    Data2 As Integer\n    Data3 As Integer\n    Data4(0 To 7) As Byte\nEnd Type\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Function LoadNetPicture(ByVal i_ImgUrl As String) As Picture</span><br><span class=\"line\">    Dim riid As TGUID</span><br><span class=\"line\">    riid.Data1    = &amp;H7BF80980</span><br><span class=\"line\">    riid.Data2    = &amp;HBF32</span><br><span class=\"line\">    riid.Data3    = &amp;H101A</span><br><span class=\"line\">    riid.Data4(0) = &amp;H8B</span><br><span class=\"line\">    riid.Data4(1) = &amp;HBB</span><br><span class=\"line\">    riid.Data4(2) = &amp;H0</span><br><span class=\"line\">    riid.Data4(3) = &amp;HAA</span><br><span class=\"line\">    riid.Data4(4) = &amp;H0</span><br><span class=\"line\">    riid.Data4(5) = &amp;H30</span><br><span class=\"line\">    riid.Data4(6) = &amp;HC</span><br><span class=\"line\">    riid.Data4(7) = &amp;HAB</span><br><span class=\"line\">    OleLoadPicturePath StrPtr(i_ImgUrl), 0&amp;, 0&amp;, 0&amp;, riid, LoadNetPicture</span><br><span class=\"line\">End Function</span><br><span class=\"line\">Private Sub test()</span><br><span class=\"line\">    Dim v_ImgUrl As String, v_Picture As Picture</span><br><span class=\"line\">    v_ImgUrl = &quot;http://www.baidu.com/img/baidu_logo.gif&quot;</span><br><span class=\"line\">    Set v_Picture = LoadNetPicture(v_ImgUrl)          &apos;将图片下载到变量</span><br><span class=\"line\">    SavePicture v_Picture, App.Path &amp; &quot;\\MyImg.bmp&quot;    &apos;保存到硬盘</span><br><span class=\"line\">    Picture1.Picture = v_Picture</span><br><span class=\"line\">    &apos;如果要将图片装载到控件</span><br><span class=\"line\">    Picture1.Picture = LoadNetPicture(v_ImgUrl)</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地\"><a href=\"#三、使用Microsoft-XMLHTTP对象，下载网页、图片等其它文件到本地\" class=\"headerlink\" title=\"三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地\"></a>三、使用Microsoft.XMLHTTP对象，下载网页、图片等其它文件到本地</h4><p>定义公用下载过程：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Public Sub DownNetFile(ByVal i_Url As String, ByVal i_File As String)</span><br><span class=\"line\">    Dim XmlHttp, B() As Byte</span><br><span class=\"line\">    Set XmlHttp = CreateObject(&quot;Microsoft.XMLHTTP&quot;)</span><br><span class=\"line\">    XmlHttp.Open &quot;GET&quot;, i_Url, False</span><br><span class=\"line\">    XmlHttp.Send</span><br><span class=\"line\">    If XmlHttp.ReadyState = 4 Then</span><br><span class=\"line\">        B() = XmlHttp.ResponseBody</span><br><span class=\"line\">        Open i_File For Binary As #1</span><br><span class=\"line\">        Put #1, , B()</span><br><span class=\"line\">        Close #1</span><br><span class=\"line\">    End If</span><br><span class=\"line\">    Set XmlHttp = Nothing</span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure></p>\n<p>用法:</p>\n<pre><code>DownNetFile &quot;http://www.baidu.com/img/baidu_logo.gif&quot;, App.Path &amp; &quot;\\My-1.bmp&quot; &apos;下载百度图片\nDownNetFile &quot;http://www.baidu.com&quot;, App.Path &amp; &quot;\\Baidu.html&quot;                  &apos;下载百度首页的网页\n</code></pre><h4 id=\"四、使用WebBrowser的Document对象，保存网页的所有图片\"><a href=\"#四、使用WebBrowser的Document对象，保存网页的所有图片\" class=\"headerlink\" title=\"四、使用WebBrowser的Document对象，保存网页的所有图片\"></a>四、使用WebBrowser的Document对象，保存网页的所有图片</h4><p>先用 WebBrowser1 显示一个网页，如：</p>\n<pre><code>WebBrowser1.Navigate &quot;http://www.baidu.com&quot;\n</code></pre><p>待网页加载完毕后，再执行以下语句：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim v_Path As String, I As Long, E, v_Range</span><br><span class=\"line\">v_Path = App.Path &amp; &quot;\\Tu\\&quot;</span><br><span class=\"line\">WebBrowser1.Silent = True &apos;关闭交互，禁止脚本错误</span><br><span class=\"line\">For Each E In WebBrowser1.Document.All</span><br><span class=\"line\">    If E.tagName = &quot;IMG&quot; Then</span><br><span class=\"line\">        Set v_Range = WebBrowser1.Document.body.createControlRange()</span><br><span class=\"line\">        v_Range.Add E</span><br><span class=\"line\">        v_Range.execCommand &quot;Copy&quot; &apos;复制到剪贴板</span><br><span class=\"line\">        I = I + 1</span><br><span class=\"line\">        SavePicture Clipboard.GetData, v_Path &amp; I &amp; &quot;.bmp&quot; &apos;保存到硬盘</span><br><span class=\"line\">    End If</span><br><span class=\"line\">Next</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"五、用API调用系统的另存为下载对话框，进行文件下载\"><a href=\"#五、用API调用系统的另存为下载对话框，进行文件下载\" class=\"headerlink\" title=\"五、用API调用系统的另存为下载对话框，进行文件下载\"></a>五、用API调用系统的另存为下载对话框，进行文件下载</h4><p>引入API:</p>\n<pre><code>Private Declare Function DoFileDownload Lib &quot;shdocvw.dll&quot; (ByVal lpszFile As String) As Long\n</code></pre><p>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim v_Url As String</span><br><span class=\"line\">v_Url = StrConv(&quot;http://www.baidu.com&quot;, vbUnicode)</span><br><span class=\"line\">Call DoFileDownload(v_Url)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\"><a href=\"#六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\" class=\"headerlink\" title=\"六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载\"></a>六、用WebBrowser1的ExecWB方法调用网页另存为对话框下载</h4><pre><code>WebBrowser1.ExecWB OLECMDID_SAVEAS, OLECMDEXECOPT_DODEFAULT\n</code></pre><hr>\n<p>以上方法各有优缺点。<br>Microsoft.XMLHTTP 对于大文件有利，支持断点续传，但需调用 getResponseHeader 进行数据检查。<br>对于谷歌地图图片，图片链接形如：<a href=\"http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile\" target=\"_blank\" rel=\"noopener\">http://mt1.google.cn/vt/lyrs=s@63&amp;gl=cn&amp;x=51694&amp;s=&amp;y=26884&amp;z=16&amp;s=Galile</a> ，仅第四种方法有效。</p>\n<blockquote>\n<p>本文根据<a href=\"https://blog.csdn.net/rztyfx/article/details/7605624\" target=\"_blank\" rel=\"noopener\">rztyfx的专栏</a>整理发表。</p>\n</blockquote>\n"},{"title":"【Windows】命令学习","layout":"post","comments":1,"date":"2016-11-24T04:25:31.000Z","keywords":null,"description":null,"toc":true,"_content":"## 系统\n| 命令                       | 说明                                                                                        |\n| -------------------------  | :---------------------------------                                                          |\n| shutdown                   | 重启\n| nbtstat -a 192.168.0.5     | 通过IP查找主机名\n| ipconfig /flushdns         | 刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\\Windows\\System32\\drivers\\etc）\n| tskill PID                 | 找到占用端口的PID\n| netstat -ab                | 杀死进程\n| netstat -ano               | 查看所有的端口占用情况\n| netstat -aon|findstr \"9050\"| 查看指定端口的占用情况|\n| tasklist|findstr \"2016\"    | 查看PID对应的进程|\n| taskkill /f /t /im tor.exe | 结束该进程tor.exe\n| notepad                    | 记事本\n| clipbrd                    | 剪切板\n| systeminfo                 | 查看系统信息\n| gpedit.msc                 | 组策略（关闭自动播放）\n| odbcad32.exe               | 数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\\Windows\\SysWOW64\\odbcad32.exe\n| arp -a                     | 查看IP对应的MAC地址\n| arp -s                     | 添加IP对应的MAC地址\n| dxdiag                     | 查看系统DirectX\n| psr                        | 问题步骤记录器\n| gpedit.msc                 | 组策略\n| sndrec32                   | 录音机\n| Nslookup                   | IP地址侦测器\n| explorer                   | 打开资源管理器\n| logoff                     | 注销命令\n| tsshutdn                   | 60秒倒计时关机命令\n| lusrmgr.msc                | 本机用户和组\n| services.msc               | 本地服务设置\n| oobe/msoobe /a             | 检查XP是否激活\n| notepad                    | 打开记事本\n| cleanmgr                   | 垃圾整理\n| net start messenger        | 开始信使服务\n| compmgmt.msc               | 计算机管理\n| net stop messenger         | 停止信使服务\n| conf                       | 启动 netmeeting\n| dvdplay                    | DVD播放器\n| charmap                    | 启动字符映射表\n| diskmgmt.msc               | 磁盘管理实用程序\n| calc                       | 启动计算器\n| dfrg.msc                   | 磁盘碎片整理程序\n| chkdsk.exe                 | Chkdsk磁盘检查\n| devmgmt.msc                | 设备管理器\n| regsvr32 /u *.dll          | 停止dll文件运行\n| drwtsn32                   | 系统医生\n| rononce -p                 | 15秒关机\n| dxdiag                     | 检查DirectX信息\n| regedt32                   | 注册表编辑器\n| Msconfig.exe               | 系统配置实用程序\n| rsop.msc                   | 组策略结果集\n| mem.exe                    | 显示内存使用情况\n| regedit.exe                | 注册表\n| winchat                    | XP自带局域网聊天\n| progman                    | 程序管理器\n| winmsd                     | 系统信息\n| perfmon.msc                | 计算机性能监测程序\n| winver                     | 检查Windows版本\n| sfc /scannow               | 扫描错误并复原\n| taskmgr                    | 任务管理器（2000／xp／2003）\n\n\n## Dos命令\n| 命令                      | 说明                             |\n| ------------------------- | :--                              |\n| dir                       | 列出当前目录下的文件以及文件夹\n| del                       | 删除文件\n| ren                       | 重命名,例如：ren 旧文件 新文件名\n| md                        | 创建目录\n| rd                        | 删除目录\n| cd                        | 进入指定目录\n| cd..                      | 退回到上一级目录\n| cd/                       | 退回到根目录\n| exit                      | 退出dos命令行\n| open                      | 与ftp服务器相连接                |\n| send(put)                 | 上传文件                         |\n| get                       | 下载文件                         |\n| mget                      | 下载多个文件                     |\n| bye                       | 中断与服务器的连接               |\n| tracert                   | 跟踪IP地址路由                   |\n\n\n## 其他命令\n| 命令                      | 说明 |\n| ------------------------- | :--  |\n|for /f \"skip=9 tokens=1,2 delims=:\" %i in ('netsh wlan show profiles') do  @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear\t\t|列出连接过的wifi信息、加密方式、包括密码|\n| net use * /del /y                                                  | 清除共享或磁盘映射记录列表                    |\n| control userpasswords2                                             | 依次点击‘高级’—‘管理密码’，删除完毕，确定即可 |\n| wmic product where \"Name like 'Microsoft .Net%'\" get Name, Version | 使用 WMI 命令获取.NET版本信息                 |","source":"_posts/【Windows】命令学习.md","raw":"---\ntitle: 【Windows】命令学习\nlayout: post\ncomments: true\ndate: 2016-11-24 12:25:31\ncategories: Windows\ntags: [Windows, 命令]\nkeywords:\ndescription:\ntoc: true\n---\n## 系统\n| 命令                       | 说明                                                                                        |\n| -------------------------  | :---------------------------------                                                          |\n| shutdown                   | 重启\n| nbtstat -a 192.168.0.5     | 通过IP查找主机名\n| ipconfig /flushdns         | 刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\\Windows\\System32\\drivers\\etc）\n| tskill PID                 | 找到占用端口的PID\n| netstat -ab                | 杀死进程\n| netstat -ano               | 查看所有的端口占用情况\n| netstat -aon|findstr \"9050\"| 查看指定端口的占用情况|\n| tasklist|findstr \"2016\"    | 查看PID对应的进程|\n| taskkill /f /t /im tor.exe | 结束该进程tor.exe\n| notepad                    | 记事本\n| clipbrd                    | 剪切板\n| systeminfo                 | 查看系统信息\n| gpedit.msc                 | 组策略（关闭自动播放）\n| odbcad32.exe               | 数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\\Windows\\SysWOW64\\odbcad32.exe\n| arp -a                     | 查看IP对应的MAC地址\n| arp -s                     | 添加IP对应的MAC地址\n| dxdiag                     | 查看系统DirectX\n| psr                        | 问题步骤记录器\n| gpedit.msc                 | 组策略\n| sndrec32                   | 录音机\n| Nslookup                   | IP地址侦测器\n| explorer                   | 打开资源管理器\n| logoff                     | 注销命令\n| tsshutdn                   | 60秒倒计时关机命令\n| lusrmgr.msc                | 本机用户和组\n| services.msc               | 本地服务设置\n| oobe/msoobe /a             | 检查XP是否激活\n| notepad                    | 打开记事本\n| cleanmgr                   | 垃圾整理\n| net start messenger        | 开始信使服务\n| compmgmt.msc               | 计算机管理\n| net stop messenger         | 停止信使服务\n| conf                       | 启动 netmeeting\n| dvdplay                    | DVD播放器\n| charmap                    | 启动字符映射表\n| diskmgmt.msc               | 磁盘管理实用程序\n| calc                       | 启动计算器\n| dfrg.msc                   | 磁盘碎片整理程序\n| chkdsk.exe                 | Chkdsk磁盘检查\n| devmgmt.msc                | 设备管理器\n| regsvr32 /u *.dll          | 停止dll文件运行\n| drwtsn32                   | 系统医生\n| rononce -p                 | 15秒关机\n| dxdiag                     | 检查DirectX信息\n| regedt32                   | 注册表编辑器\n| Msconfig.exe               | 系统配置实用程序\n| rsop.msc                   | 组策略结果集\n| mem.exe                    | 显示内存使用情况\n| regedit.exe                | 注册表\n| winchat                    | XP自带局域网聊天\n| progman                    | 程序管理器\n| winmsd                     | 系统信息\n| perfmon.msc                | 计算机性能监测程序\n| winver                     | 检查Windows版本\n| sfc /scannow               | 扫描错误并复原\n| taskmgr                    | 任务管理器（2000／xp／2003）\n\n\n## Dos命令\n| 命令                      | 说明                             |\n| ------------------------- | :--                              |\n| dir                       | 列出当前目录下的文件以及文件夹\n| del                       | 删除文件\n| ren                       | 重命名,例如：ren 旧文件 新文件名\n| md                        | 创建目录\n| rd                        | 删除目录\n| cd                        | 进入指定目录\n| cd..                      | 退回到上一级目录\n| cd/                       | 退回到根目录\n| exit                      | 退出dos命令行\n| open                      | 与ftp服务器相连接                |\n| send(put)                 | 上传文件                         |\n| get                       | 下载文件                         |\n| mget                      | 下载多个文件                     |\n| bye                       | 中断与服务器的连接               |\n| tracert                   | 跟踪IP地址路由                   |\n\n\n## 其他命令\n| 命令                      | 说明 |\n| ------------------------- | :--  |\n|for /f \"skip=9 tokens=1,2 delims=:\" %i in ('netsh wlan show profiles') do  @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear\t\t|列出连接过的wifi信息、加密方式、包括密码|\n| net use * /del /y                                                  | 清除共享或磁盘映射记录列表                    |\n| control userpasswords2                                             | 依次点击‘高级’—‘管理密码’，删除完毕，确定即可 |\n| wmic product where \"Name like 'Microsoft .Net%'\" get Name, Version | 使用 WMI 命令获取.NET版本信息                 |","slug":"【Windows】命令学习","published":1,"updated":"2018-07-13T02:59:49.961Z","_id":"cjpuwa1k80045s0jtrqwij5w9","photos":[],"link":"","content":"<h2 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shutdown</td>\n<td style=\"text-align:left\">重启</td>\n</tr>\n<tr>\n<td>nbtstat -a 192.168.0.5</td>\n<td style=\"text-align:left\">通过IP查找主机名</td>\n</tr>\n<tr>\n<td>ipconfig /flushdns</td>\n<td style=\"text-align:left\">刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\\Windows\\System32\\drivers\\etc）</td>\n</tr>\n<tr>\n<td>tskill PID</td>\n<td style=\"text-align:left\">找到占用端口的PID</td>\n</tr>\n<tr>\n<td>netstat -ab</td>\n<td style=\"text-align:left\">杀死进程</td>\n</tr>\n<tr>\n<td>netstat -ano</td>\n<td style=\"text-align:left\">查看所有的端口占用情况</td>\n</tr>\n<tr>\n<td>netstat -aon</td>\n<td style=\"text-align:left\">findstr “9050”</td>\n<td>查看指定端口的占用情况</td>\n</tr>\n<tr>\n<td>tasklist</td>\n<td style=\"text-align:left\">findstr “2016”</td>\n<td>查看PID对应的进程</td>\n</tr>\n<tr>\n<td>taskkill /f /t /im tor.exe</td>\n<td style=\"text-align:left\">结束该进程tor.exe</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td style=\"text-align:left\">记事本</td>\n</tr>\n<tr>\n<td>clipbrd</td>\n<td style=\"text-align:left\">剪切板</td>\n</tr>\n<tr>\n<td>systeminfo</td>\n<td style=\"text-align:left\">查看系统信息</td>\n</tr>\n<tr>\n<td>gpedit.msc</td>\n<td style=\"text-align:left\">组策略（关闭自动播放）</td>\n</tr>\n<tr>\n<td>odbcad32.exe</td>\n<td style=\"text-align:left\">数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\\Windows\\SysWOW64\\odbcad32.exe</td>\n</tr>\n<tr>\n<td>arp -a</td>\n<td style=\"text-align:left\">查看IP对应的MAC地址</td>\n</tr>\n<tr>\n<td>arp -s</td>\n<td style=\"text-align:left\">添加IP对应的MAC地址</td>\n</tr>\n<tr>\n<td>dxdiag</td>\n<td style=\"text-align:left\">查看系统DirectX</td>\n</tr>\n<tr>\n<td>psr</td>\n<td style=\"text-align:left\">问题步骤记录器</td>\n</tr>\n<tr>\n<td>gpedit.msc</td>\n<td style=\"text-align:left\">组策略</td>\n</tr>\n<tr>\n<td>sndrec32</td>\n<td style=\"text-align:left\">录音机</td>\n</tr>\n<tr>\n<td>Nslookup</td>\n<td style=\"text-align:left\">IP地址侦测器</td>\n</tr>\n<tr>\n<td>explorer</td>\n<td style=\"text-align:left\">打开资源管理器</td>\n</tr>\n<tr>\n<td>logoff</td>\n<td style=\"text-align:left\">注销命令</td>\n</tr>\n<tr>\n<td>tsshutdn</td>\n<td style=\"text-align:left\">60秒倒计时关机命令</td>\n</tr>\n<tr>\n<td>lusrmgr.msc</td>\n<td style=\"text-align:left\">本机用户和组</td>\n</tr>\n<tr>\n<td>services.msc</td>\n<td style=\"text-align:left\">本地服务设置</td>\n</tr>\n<tr>\n<td>oobe/msoobe /a</td>\n<td style=\"text-align:left\">检查XP是否激活</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td style=\"text-align:left\">打开记事本</td>\n</tr>\n<tr>\n<td>cleanmgr</td>\n<td style=\"text-align:left\">垃圾整理</td>\n</tr>\n<tr>\n<td>net start messenger</td>\n<td style=\"text-align:left\">开始信使服务</td>\n</tr>\n<tr>\n<td>compmgmt.msc</td>\n<td style=\"text-align:left\">计算机管理</td>\n</tr>\n<tr>\n<td>net stop messenger</td>\n<td style=\"text-align:left\">停止信使服务</td>\n</tr>\n<tr>\n<td>conf</td>\n<td style=\"text-align:left\">启动 netmeeting</td>\n</tr>\n<tr>\n<td>dvdplay</td>\n<td style=\"text-align:left\">DVD播放器</td>\n</tr>\n<tr>\n<td>charmap</td>\n<td style=\"text-align:left\">启动字符映射表</td>\n</tr>\n<tr>\n<td>diskmgmt.msc</td>\n<td style=\"text-align:left\">磁盘管理实用程序</td>\n</tr>\n<tr>\n<td>calc</td>\n<td style=\"text-align:left\">启动计算器</td>\n</tr>\n<tr>\n<td>dfrg.msc</td>\n<td style=\"text-align:left\">磁盘碎片整理程序</td>\n</tr>\n<tr>\n<td>chkdsk.exe</td>\n<td style=\"text-align:left\">Chkdsk磁盘检查</td>\n</tr>\n<tr>\n<td>devmgmt.msc</td>\n<td style=\"text-align:left\">设备管理器</td>\n</tr>\n<tr>\n<td>regsvr32 /u *.dll</td>\n<td style=\"text-align:left\">停止dll文件运行</td>\n</tr>\n<tr>\n<td>drwtsn32</td>\n<td style=\"text-align:left\">系统医生</td>\n</tr>\n<tr>\n<td>rononce -p</td>\n<td style=\"text-align:left\">15秒关机</td>\n</tr>\n<tr>\n<td>dxdiag</td>\n<td style=\"text-align:left\">检查DirectX信息</td>\n</tr>\n<tr>\n<td>regedt32</td>\n<td style=\"text-align:left\">注册表编辑器</td>\n</tr>\n<tr>\n<td>Msconfig.exe</td>\n<td style=\"text-align:left\">系统配置实用程序</td>\n</tr>\n<tr>\n<td>rsop.msc</td>\n<td style=\"text-align:left\">组策略结果集</td>\n</tr>\n<tr>\n<td>mem.exe</td>\n<td style=\"text-align:left\">显示内存使用情况</td>\n</tr>\n<tr>\n<td>regedit.exe</td>\n<td style=\"text-align:left\">注册表</td>\n</tr>\n<tr>\n<td>winchat</td>\n<td style=\"text-align:left\">XP自带局域网聊天</td>\n</tr>\n<tr>\n<td>progman</td>\n<td style=\"text-align:left\">程序管理器</td>\n</tr>\n<tr>\n<td>winmsd</td>\n<td style=\"text-align:left\">系统信息</td>\n</tr>\n<tr>\n<td>perfmon.msc</td>\n<td style=\"text-align:left\">计算机性能监测程序</td>\n</tr>\n<tr>\n<td>winver</td>\n<td style=\"text-align:left\">检查Windows版本</td>\n</tr>\n<tr>\n<td>sfc /scannow</td>\n<td style=\"text-align:left\">扫描错误并复原</td>\n</tr>\n<tr>\n<td>taskmgr</td>\n<td style=\"text-align:left\">任务管理器（2000／xp／2003）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Dos命令\"><a href=\"#Dos命令\" class=\"headerlink\" title=\"Dos命令\"></a>Dos命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dir</td>\n<td style=\"text-align:left\">列出当前目录下的文件以及文件夹</td>\n</tr>\n<tr>\n<td>del</td>\n<td style=\"text-align:left\">删除文件</td>\n</tr>\n<tr>\n<td>ren</td>\n<td style=\"text-align:left\">重命名,例如：ren 旧文件 新文件名</td>\n</tr>\n<tr>\n<td>md</td>\n<td style=\"text-align:left\">创建目录</td>\n</tr>\n<tr>\n<td>rd</td>\n<td style=\"text-align:left\">删除目录</td>\n</tr>\n<tr>\n<td>cd</td>\n<td style=\"text-align:left\">进入指定目录</td>\n</tr>\n<tr>\n<td>cd..</td>\n<td style=\"text-align:left\">退回到上一级目录</td>\n</tr>\n<tr>\n<td>cd/</td>\n<td style=\"text-align:left\">退回到根目录</td>\n</tr>\n<tr>\n<td>exit</td>\n<td style=\"text-align:left\">退出dos命令行</td>\n</tr>\n<tr>\n<td>open</td>\n<td style=\"text-align:left\">与ftp服务器相连接</td>\n</tr>\n<tr>\n<td>send(put)</td>\n<td style=\"text-align:left\">上传文件</td>\n</tr>\n<tr>\n<td>get</td>\n<td style=\"text-align:left\">下载文件</td>\n</tr>\n<tr>\n<td>mget</td>\n<td style=\"text-align:left\">下载多个文件</td>\n</tr>\n<tr>\n<td>bye</td>\n<td style=\"text-align:left\">中断与服务器的连接</td>\n</tr>\n<tr>\n<td>tracert</td>\n<td style=\"text-align:left\">跟踪IP地址路由</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>for /f “skip=9 tokens=1,2 delims=:” %i in (‘netsh wlan show profiles’) do  @echo %j</td>\n<td style=\"text-align:left\">findstr -i -v echo</td>\n<td>netsh wlan show profiles %j key=clear</td>\n<td>列出连接过的wifi信息、加密方式、包括密码</td>\n</tr>\n<tr>\n<td>net use * /del /y</td>\n<td style=\"text-align:left\">清除共享或磁盘映射记录列表</td>\n</tr>\n<tr>\n<td>control userpasswords2</td>\n<td style=\"text-align:left\">依次点击‘高级’—‘管理密码’，删除完毕，确定即可</td>\n</tr>\n<tr>\n<td>wmic product where “Name like ‘Microsoft .Net%’” get Name, Version</td>\n<td style=\"text-align:left\">使用 WMI 命令获取.NET版本信息</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shutdown</td>\n<td style=\"text-align:left\">重启</td>\n</tr>\n<tr>\n<td>nbtstat -a 192.168.0.5</td>\n<td style=\"text-align:left\">通过IP查找主机名</td>\n</tr>\n<tr>\n<td>ipconfig /flushdns</td>\n<td style=\"text-align:left\">刷新DNS解析缓存（一般修改hosts后在cmd中执行下。hosts路径：C:\\Windows\\System32\\drivers\\etc）</td>\n</tr>\n<tr>\n<td>tskill PID</td>\n<td style=\"text-align:left\">找到占用端口的PID</td>\n</tr>\n<tr>\n<td>netstat -ab</td>\n<td style=\"text-align:left\">杀死进程</td>\n</tr>\n<tr>\n<td>netstat -ano</td>\n<td style=\"text-align:left\">查看所有的端口占用情况</td>\n</tr>\n<tr>\n<td>netstat -aon</td>\n<td style=\"text-align:left\">findstr “9050”</td>\n<td>查看指定端口的占用情况</td>\n</tr>\n<tr>\n<td>tasklist</td>\n<td style=\"text-align:left\">findstr “2016”</td>\n<td>查看PID对应的进程</td>\n</tr>\n<tr>\n<td>taskkill /f /t /im tor.exe</td>\n<td style=\"text-align:left\">结束该进程tor.exe</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td style=\"text-align:left\">记事本</td>\n</tr>\n<tr>\n<td>clipbrd</td>\n<td style=\"text-align:left\">剪切板</td>\n</tr>\n<tr>\n<td>systeminfo</td>\n<td style=\"text-align:left\">查看系统信息</td>\n</tr>\n<tr>\n<td>gpedit.msc</td>\n<td style=\"text-align:left\">组策略（关闭自动播放）</td>\n</tr>\n<tr>\n<td>odbcad32.exe</td>\n<td style=\"text-align:left\">数据源，若系统是64bit的，则新建dsn要用64bit的ODBC，即在运行中输入：C:\\Windows\\SysWOW64\\odbcad32.exe</td>\n</tr>\n<tr>\n<td>arp -a</td>\n<td style=\"text-align:left\">查看IP对应的MAC地址</td>\n</tr>\n<tr>\n<td>arp -s</td>\n<td style=\"text-align:left\">添加IP对应的MAC地址</td>\n</tr>\n<tr>\n<td>dxdiag</td>\n<td style=\"text-align:left\">查看系统DirectX</td>\n</tr>\n<tr>\n<td>psr</td>\n<td style=\"text-align:left\">问题步骤记录器</td>\n</tr>\n<tr>\n<td>gpedit.msc</td>\n<td style=\"text-align:left\">组策略</td>\n</tr>\n<tr>\n<td>sndrec32</td>\n<td style=\"text-align:left\">录音机</td>\n</tr>\n<tr>\n<td>Nslookup</td>\n<td style=\"text-align:left\">IP地址侦测器</td>\n</tr>\n<tr>\n<td>explorer</td>\n<td style=\"text-align:left\">打开资源管理器</td>\n</tr>\n<tr>\n<td>logoff</td>\n<td style=\"text-align:left\">注销命令</td>\n</tr>\n<tr>\n<td>tsshutdn</td>\n<td style=\"text-align:left\">60秒倒计时关机命令</td>\n</tr>\n<tr>\n<td>lusrmgr.msc</td>\n<td style=\"text-align:left\">本机用户和组</td>\n</tr>\n<tr>\n<td>services.msc</td>\n<td style=\"text-align:left\">本地服务设置</td>\n</tr>\n<tr>\n<td>oobe/msoobe /a</td>\n<td style=\"text-align:left\">检查XP是否激活</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td style=\"text-align:left\">打开记事本</td>\n</tr>\n<tr>\n<td>cleanmgr</td>\n<td style=\"text-align:left\">垃圾整理</td>\n</tr>\n<tr>\n<td>net start messenger</td>\n<td style=\"text-align:left\">开始信使服务</td>\n</tr>\n<tr>\n<td>compmgmt.msc</td>\n<td style=\"text-align:left\">计算机管理</td>\n</tr>\n<tr>\n<td>net stop messenger</td>\n<td style=\"text-align:left\">停止信使服务</td>\n</tr>\n<tr>\n<td>conf</td>\n<td style=\"text-align:left\">启动 netmeeting</td>\n</tr>\n<tr>\n<td>dvdplay</td>\n<td style=\"text-align:left\">DVD播放器</td>\n</tr>\n<tr>\n<td>charmap</td>\n<td style=\"text-align:left\">启动字符映射表</td>\n</tr>\n<tr>\n<td>diskmgmt.msc</td>\n<td style=\"text-align:left\">磁盘管理实用程序</td>\n</tr>\n<tr>\n<td>calc</td>\n<td style=\"text-align:left\">启动计算器</td>\n</tr>\n<tr>\n<td>dfrg.msc</td>\n<td style=\"text-align:left\">磁盘碎片整理程序</td>\n</tr>\n<tr>\n<td>chkdsk.exe</td>\n<td style=\"text-align:left\">Chkdsk磁盘检查</td>\n</tr>\n<tr>\n<td>devmgmt.msc</td>\n<td style=\"text-align:left\">设备管理器</td>\n</tr>\n<tr>\n<td>regsvr32 /u *.dll</td>\n<td style=\"text-align:left\">停止dll文件运行</td>\n</tr>\n<tr>\n<td>drwtsn32</td>\n<td style=\"text-align:left\">系统医生</td>\n</tr>\n<tr>\n<td>rononce -p</td>\n<td style=\"text-align:left\">15秒关机</td>\n</tr>\n<tr>\n<td>dxdiag</td>\n<td style=\"text-align:left\">检查DirectX信息</td>\n</tr>\n<tr>\n<td>regedt32</td>\n<td style=\"text-align:left\">注册表编辑器</td>\n</tr>\n<tr>\n<td>Msconfig.exe</td>\n<td style=\"text-align:left\">系统配置实用程序</td>\n</tr>\n<tr>\n<td>rsop.msc</td>\n<td style=\"text-align:left\">组策略结果集</td>\n</tr>\n<tr>\n<td>mem.exe</td>\n<td style=\"text-align:left\">显示内存使用情况</td>\n</tr>\n<tr>\n<td>regedit.exe</td>\n<td style=\"text-align:left\">注册表</td>\n</tr>\n<tr>\n<td>winchat</td>\n<td style=\"text-align:left\">XP自带局域网聊天</td>\n</tr>\n<tr>\n<td>progman</td>\n<td style=\"text-align:left\">程序管理器</td>\n</tr>\n<tr>\n<td>winmsd</td>\n<td style=\"text-align:left\">系统信息</td>\n</tr>\n<tr>\n<td>perfmon.msc</td>\n<td style=\"text-align:left\">计算机性能监测程序</td>\n</tr>\n<tr>\n<td>winver</td>\n<td style=\"text-align:left\">检查Windows版本</td>\n</tr>\n<tr>\n<td>sfc /scannow</td>\n<td style=\"text-align:left\">扫描错误并复原</td>\n</tr>\n<tr>\n<td>taskmgr</td>\n<td style=\"text-align:left\">任务管理器（2000／xp／2003）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Dos命令\"><a href=\"#Dos命令\" class=\"headerlink\" title=\"Dos命令\"></a>Dos命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dir</td>\n<td style=\"text-align:left\">列出当前目录下的文件以及文件夹</td>\n</tr>\n<tr>\n<td>del</td>\n<td style=\"text-align:left\">删除文件</td>\n</tr>\n<tr>\n<td>ren</td>\n<td style=\"text-align:left\">重命名,例如：ren 旧文件 新文件名</td>\n</tr>\n<tr>\n<td>md</td>\n<td style=\"text-align:left\">创建目录</td>\n</tr>\n<tr>\n<td>rd</td>\n<td style=\"text-align:left\">删除目录</td>\n</tr>\n<tr>\n<td>cd</td>\n<td style=\"text-align:left\">进入指定目录</td>\n</tr>\n<tr>\n<td>cd..</td>\n<td style=\"text-align:left\">退回到上一级目录</td>\n</tr>\n<tr>\n<td>cd/</td>\n<td style=\"text-align:left\">退回到根目录</td>\n</tr>\n<tr>\n<td>exit</td>\n<td style=\"text-align:left\">退出dos命令行</td>\n</tr>\n<tr>\n<td>open</td>\n<td style=\"text-align:left\">与ftp服务器相连接</td>\n</tr>\n<tr>\n<td>send(put)</td>\n<td style=\"text-align:left\">上传文件</td>\n</tr>\n<tr>\n<td>get</td>\n<td style=\"text-align:left\">下载文件</td>\n</tr>\n<tr>\n<td>mget</td>\n<td style=\"text-align:left\">下载多个文件</td>\n</tr>\n<tr>\n<td>bye</td>\n<td style=\"text-align:left\">中断与服务器的连接</td>\n</tr>\n<tr>\n<td>tracert</td>\n<td style=\"text-align:left\">跟踪IP地址路由</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><table>\n<thead>\n<tr>\n<th>命令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>for /f “skip=9 tokens=1,2 delims=:” %i in (‘netsh wlan show profiles’) do  @echo %j</td>\n<td style=\"text-align:left\">findstr -i -v echo</td>\n<td>netsh wlan show profiles %j key=clear</td>\n<td>列出连接过的wifi信息、加密方式、包括密码</td>\n</tr>\n<tr>\n<td>net use * /del /y</td>\n<td style=\"text-align:left\">清除共享或磁盘映射记录列表</td>\n</tr>\n<tr>\n<td>control userpasswords2</td>\n<td style=\"text-align:left\">依次点击‘高级’—‘管理密码’，删除完毕，确定即可</td>\n</tr>\n<tr>\n<td>wmic product where “Name like ‘Microsoft .Net%’” get Name, Version</td>\n<td style=\"text-align:left\">使用 WMI 命令获取.NET版本信息</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"【Windows】设置磁盘背景","layout":"post","comments":1,"date":"2017-05-15T07:06:55.000Z","keywords":null,"description":null,"_content":"如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：\n* 首先，准备一张自己喜欢的图片。例如：D:\\图片\\其它\\1741962.jpeg \n* 在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。\n\t\t[ExtShellFolderViews] \n\t\t{BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC} \n\t\t[{BE098140-A513-11D0-A3A4-00C04FD706EC}] \n\t\tAttributes=1 \n\t\tIconArea_Image=D:\\图片\\其它\\1741962.jpeg\n\t\tIconArea_Text=0x00000000 \n\t\t[.ShellClassInfo] \n\t\tConfirmFileOp=0 \n\t\t[Ctrl+A Select All] \n* 最后，将文档另存为desktop.ini即可。\n<!-- more -->","source":"_posts/【Windows】设置磁盘背景.md","raw":"---\ntitle: 【Windows】设置磁盘背景\nlayout: post\ncomments: true\ndate: 2017-05-15 15:06:55\ncategories: Windows\ntags: [Windows, 美化]\nkeywords:\ndescription:\n---\n如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：\n* 首先，准备一张自己喜欢的图片。例如：D:\\图片\\其它\\1741962.jpeg \n* 在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。\n\t\t[ExtShellFolderViews] \n\t\t{BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC} \n\t\t[{BE098140-A513-11D0-A3A4-00C04FD706EC}] \n\t\tAttributes=1 \n\t\tIconArea_Image=D:\\图片\\其它\\1741962.jpeg\n\t\tIconArea_Text=0x00000000 \n\t\t[.ShellClassInfo] \n\t\tConfirmFileOp=0 \n\t\t[Ctrl+A Select All] \n* 最后，将文档另存为desktop.ini即可。\n<!-- more -->","slug":"【Windows】设置磁盘背景","published":1,"updated":"2017-05-15T07:21:10.573Z","_id":"cjpuwa1ka0047s0jtlg94rr94","photos":[],"link":"","content":"<p>如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：</p>\n<ul>\n<li>首先，准备一张自己喜欢的图片。例如：D:\\图片\\其它\\1741962.jpeg </li>\n<li>在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。<pre><code>[ExtShellFolderViews] \n{BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC} \n[{BE098140-A513-11D0-A3A4-00C04FD706EC}] \nAttributes=1 \nIconArea_Image=D:\\图片\\其它\\1741962.jpeg\nIconArea_Text=0x00000000 \n[.ShellClassInfo] \nConfirmFileOp=0 \n[Ctrl+A Select All] \n</code></pre></li>\n<li>最后，将文档另存为desktop.ini即可。<a id=\"more\"></a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>如何将磁盘背景设置为自己喜欢的图片，具体操作步骤如下：</p>\n<ul>\n<li>首先，准备一张自己喜欢的图片。例如：D:\\图片\\其它\\1741962.jpeg </li>\n<li>在要设置背景的盘符或文件夹下，新建一个文本文档，将下面代码粘贴到文本中，替换自己的图片路径。<pre><code>[ExtShellFolderViews] \n{BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC} \n[{BE098140-A513-11D0-A3A4-00C04FD706EC}] \nAttributes=1 \nIconArea_Image=D:\\图片\\其它\\1741962.jpeg\nIconArea_Text=0x00000000 \n[.ShellClassInfo] \nConfirmFileOp=0 \n[Ctrl+A Select All] \n</code></pre></li>\n<li>最后，将文档另存为desktop.ini即可。","more":"</li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjpuwa1fk0006s0jtcs0jqgut","category_id":"cjpuwa1fa0003s0jtc0ttz5nx","_id":"cjpuwa1g1000cs0jtm6j4dzr2"},{"post_id":"cjpuwa1ex0000s0jtvjl2zbs7","category_id":"cjpuwa1fa0003s0jtc0ttz5nx","_id":"cjpuwa1g8000gs0jtmizaqj24"},{"post_id":"cjpuwa1f60002s0jts94v6wig","category_id":"cjpuwa1fa0003s0jtc0ttz5nx","_id":"cjpuwa1gd000js0jt2zuwoolf"},{"post_id":"cjpuwa1fe0005s0jtsv4l4t28","category_id":"cjpuwa1g2000ds0jt27luwrb7","_id":"cjpuwa1gj000ps0jtaxxl4nnl"},{"post_id":"cjpuwa1fo0007s0jtugslxcql","category_id":"cjpuwa1ge000ls0jttbmsprnb","_id":"cjpuwa1gp000ws0jtj788avs3"},{"post_id":"cjpuwa1ft000as0jt3wxl5j64","category_id":"cjpuwa1gk000rs0jt9yoxbuwi","_id":"cjpuwa1gw0013s0jtviu2kn9l"},{"post_id":"cjpuwa1fz000bs0jtgirn02gt","category_id":"cjpuwa1gp000ys0jt9ctguo2b","_id":"cjpuwa1h5001bs0jtm4azjsxd"},{"post_id":"cjpuwa1g6000fs0jt9eh8rbtv","category_id":"cjpuwa1gy0015s0jtwtiljpr7","_id":"cjpuwa1hc001is0jtr06wx8nh"},{"post_id":"cjpuwa1gb000is0jtq94chnfw","category_id":"cjpuwa1gp000ys0jt9ctguo2b","_id":"cjpuwa1hi001ls0jtqp83pcwv"},{"post_id":"cjpuwa1gg000ns0jtcp2k52gc","category_id":"cjpuwa1hc001hs0jtg6bhxw42","_id":"cjpuwa1hr001ts0jtfhngwfbr"},{"post_id":"cjpuwa1gi000os0jt8pqxu9s6","category_id":"cjpuwa1hc001hs0jtg6bhxw42","_id":"cjpuwa1hu001xs0jtjwkpnwcj"},{"post_id":"cjpuwa1gl000ss0jt5400x5q3","category_id":"cjpuwa1hq001ss0jtzvpppmfn","_id":"cjpuwa1i10024s0jt9jmit2r8"},{"post_id":"cjpuwa1gm000us0jt23pqzucg","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1ib002bs0jt3xn44wdg"},{"post_id":"cjpuwa1gq000zs0jtymrj9zh4","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1ih002hs0jtglobnygx"},{"post_id":"cjpuwa1gt0011s0jtok2xlio4","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1in002ns0jtzyzmm6k7"},{"post_id":"cjpuwa1gx0014s0jtwxr9xojy","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1ix002ts0jtrcjvhmnd"},{"post_id":"cjpuwa1h00017s0jtatu1s4gg","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1j1002zs0jtvs0m148f"},{"post_id":"cjpuwa1h3001as0jtwnxhvfj2","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1j80034s0jtdemo3aj4"},{"post_id":"cjpuwa1h6001es0jthiprjmtt","category_id":"cjpuwa1j1002ys0jtu8bdcm8t","_id":"cjpuwa1je003bs0jt5fbtqjtp"},{"post_id":"cjpuwa1h9001fs0jt45wo2a7i","category_id":"cjpuwa1hu001ys0jtnbd9rq6n","_id":"cjpuwa1jl003hs0jtz0ubwcg0"},{"post_id":"cjpuwa1hd001js0jt24mu24wl","category_id":"cjpuwa1j1002ys0jtu8bdcm8t","_id":"cjpuwa1jq003ms0jtpvwjfwwj"},{"post_id":"cjpuwa1hg001ks0jtlijfxkzq","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1jw003ss0jt28cnv9bp"},{"post_id":"cjpuwa1hl001os0jtbzt8vzte","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1k4003zs0jtep9e1q9b"},{"post_id":"cjpuwa1hn001qs0jtci1lgsyq","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1k80044s0jtsfwmru6j"},{"post_id":"cjpuwa1hs001vs0jth2kvvi33","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1kd004bs0jtkoclzqp6"},{"post_id":"cjpuwa1ht001ws0jtwx1djo2u","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1kg004ds0jta6lu4eg3"},{"post_id":"cjpuwa1hv0020s0jt7g1jykvm","category_id":"cjpuwa1kd004as0jtpxad02fz","_id":"cjpuwa1ki004is0jtumchd8nt"},{"post_id":"cjpuwa1hy0022s0jta0imp4m5","category_id":"cjpuwa1kg004es0jth14uogk0","_id":"cjpuwa1kj004ms0jt4y0i16r5"},{"post_id":"cjpuwa1i20025s0jtd6ig171t","category_id":"cjpuwa1jk003gs0jt9ty208j6","_id":"cjpuwa1kk004qs0jt87cbhptf"},{"post_id":"cjpuwa1i40028s0jtmxfe6c6t","category_id":"cjpuwa1kj004ls0jttqst7uag","_id":"cjpuwa1km004vs0jtaksnihqx"},{"post_id":"cjpuwa1i50029s0jtyblh9m20","category_id":"cjpuwa1kg004es0jth14uogk0","_id":"cjpuwa1kq004zs0jtpgn2vm5u"},{"post_id":"cjpuwa1ic002ds0jtc8tre2bb","category_id":"cjpuwa1kj004ls0jttqst7uag","_id":"cjpuwa1ks0053s0jtgpfjwpdy"},{"post_id":"cjpuwa1if002fs0jtm7zstin0","category_id":"cjpuwa1kj004ls0jttqst7uag","_id":"cjpuwa1kt0057s0jtqz5quqdp"},{"post_id":"cjpuwa1ij002ks0jt684rhs43","category_id":"cjpuwa1kj004ls0jttqst7uag","_id":"cjpuwa1kv0059s0jt3qifni5e"},{"post_id":"cjpuwa1il002ls0jtfl7xkyni","category_id":"cjpuwa1kt0056s0jthwpvrj69","_id":"cjpuwa1kw005es0jtuc9m11ew"},{"post_id":"cjpuwa1iq002ps0jtfc3df8o6","category_id":"cjpuwa1kv005bs0jtjpyt5q8i","_id":"cjpuwa1kz005js0jtcv4565rs"},{"post_id":"cjpuwa1iu002rs0jtddgjucjc","category_id":"cjpuwa1kv005bs0jtjpyt5q8i","_id":"cjpuwa1l0005ls0jtkyeyj7a1"},{"post_id":"cjpuwa1iy002ws0jt6bj5qgvb","category_id":"cjpuwa1ky005is0jtbrtm023h","_id":"cjpuwa1l5005ss0jt9w0z9ppv"},{"post_id":"cjpuwa1j0002xs0jti6cytjdc","category_id":"cjpuwa1ky005is0jtbrtm023h","_id":"cjpuwa1l6005vs0jtf0klncws"},{"post_id":"cjpuwa1j20030s0jt8ie0dsb8","category_id":"cjpuwa1ky005is0jtbrtm023h","_id":"cjpuwa1l8005zs0jtruzerkv8"},{"post_id":"cjpuwa1j90037s0jtpiu8yxu7","category_id":"cjpuwa1ky005is0jtbrtm023h","_id":"cjpuwa1l90062s0jtfab1cfyx"},{"post_id":"cjpuwa1jb0039s0jt1sa9nd4o","category_id":"cjpuwa1l7005ys0jtrl0znluz","_id":"cjpuwa1lb0068s0jts06r0o4i"},{"post_id":"cjpuwa1je003cs0jt5us3etcy","category_id":"cjpuwa1kv005bs0jtjpyt5q8i","_id":"cjpuwa1ld006cs0jtgwv0docj"},{"post_id":"cjpuwa1jh003es0jtzdyk5v3q","category_id":"cjpuwa1l7005ys0jtrl0znluz","_id":"cjpuwa1le006es0jtwbz3gjzf"},{"post_id":"cjpuwa1jm003is0jte60lpt9a","category_id":"cjpuwa1ld006bs0jtapgzqjod","_id":"cjpuwa1lf006is0jthzo9ecvp"},{"post_id":"cjpuwa1jp003ls0jtdxlctth0","category_id":"cjpuwa1ld006bs0jtapgzqjod","_id":"cjpuwa1li006ns0jtbsjoibsj"},{"post_id":"cjpuwa1js003os0jtrrqarc94","category_id":"cjpuwa1ld006bs0jtapgzqjod","_id":"cjpuwa1lj006qs0jt2ughvu1r"},{"post_id":"cjpuwa1jv003qs0jth1438ppr","category_id":"cjpuwa1ld006bs0jtapgzqjod","_id":"cjpuwa1ll006vs0jt9ov6xwb7"},{"post_id":"cjpuwa1jx003us0jthu4yctzs","category_id":"cjpuwa1ld006bs0jtapgzqjod","_id":"cjpuwa1ll006xs0jtk6drjqoy"},{"post_id":"cjpuwa1k0003ws0jtr5ylykr1","category_id":"cjpuwa1lk006us0jtknjvy8h1","_id":"cjpuwa1lm0070s0jtkqmc706h"},{"post_id":"cjpuwa1k40040s0jtgc4w7wyf","category_id":"cjpuwa1lm006zs0jtg38if8fn","_id":"cjpuwa1lo0076s0jt2novv2xx"},{"post_id":"cjpuwa1k60041s0jtq267dc3x","category_id":"cjpuwa1ln0072s0jtdfrmm9w5","_id":"cjpuwa1lp0079s0jtmdyteg7s"},{"post_id":"cjpuwa1k80045s0jtrqwij5w9","category_id":"cjpuwa1lo0077s0jtgc9l1yxh","_id":"cjpuwa1lt007es0jt4zuycmbp"},{"post_id":"cjpuwa1ka0047s0jtlg94rr94","category_id":"cjpuwa1lo0077s0jtgc9l1yxh","_id":"cjpuwa1lu007gs0jtsqc296wh"}],"PostTag":[{"post_id":"cjpuwa1ex0000s0jtvjl2zbs7","tag_id":"cjpuwa1fd0004s0jtjba0u3vg","_id":"cjpuwa1g8000hs0jt0z0b9chv"},{"post_id":"cjpuwa1ex0000s0jtvjl2zbs7","tag_id":"cjpuwa1fs0009s0jtgbez0xje","_id":"cjpuwa1gd000ks0jth41hya48"},{"post_id":"cjpuwa1f60002s0jts94v6wig","tag_id":"cjpuwa1fd0004s0jtjba0u3vg","_id":"cjpuwa1gm000ts0jtqjzsiq97"},{"post_id":"cjpuwa1f60002s0jts94v6wig","tag_id":"cjpuwa1fs0009s0jtgbez0xje","_id":"cjpuwa1go000vs0jtey6ss85l"},{"post_id":"cjpuwa1fe0005s0jtsv4l4t28","tag_id":"cjpuwa1gj000qs0jtk2lx2q8s","_id":"cjpuwa1gs0010s0jtf6glajx9"},{"post_id":"cjpuwa1fk0006s0jtcs0jqgut","tag_id":"cjpuwa1fd0004s0jtjba0u3vg","_id":"cjpuwa1gy0016s0jtefo7m8kq"},{"post_id":"cjpuwa1fk0006s0jtcs0jqgut","tag_id":"cjpuwa1fs0009s0jtgbez0xje","_id":"cjpuwa1h10018s0jt9ybzygje"},{"post_id":"cjpuwa1fo0007s0jtugslxcql","tag_id":"cjpuwa1gv0012s0jtjbbbgovu","_id":"cjpuwa1h6001ds0jtrim7rpzq"},{"post_id":"cjpuwa1ft000as0jt3wxl5j64","tag_id":"cjpuwa1h20019s0jtdzwtd4iw","_id":"cjpuwa1hm001ps0jtyxiekr8k"},{"post_id":"cjpuwa1ft000as0jt3wxl5j64","tag_id":"cjpuwa1hb001gs0jtak6cjiww","_id":"cjpuwa1hp001rs0jtrg764nzf"},{"post_id":"cjpuwa1fz000bs0jtgirn02gt","tag_id":"cjpuwa1hj001ms0jtrghje7bv","_id":"cjpuwa1hy0021s0jtiwjux20j"},{"post_id":"cjpuwa1fz000bs0jtgirn02gt","tag_id":"cjpuwa1hr001us0jtzduikk9b","_id":"cjpuwa1i10023s0jti66ziwzz"},{"post_id":"cjpuwa1g6000fs0jt9eh8rbtv","tag_id":"cjpuwa1hv001zs0jtrbwc5mit","_id":"cjpuwa1ie002es0jteclajanh"},{"post_id":"cjpuwa1g6000fs0jt9eh8rbtv","tag_id":"cjpuwa1i30027s0jtwz93ksg1","_id":"cjpuwa1ii002is0jtez6t1enw"},{"post_id":"cjpuwa1gb000is0jtq94chnfw","tag_id":"cjpuwa1hj001ms0jtrghje7bv","_id":"cjpuwa1is002qs0jt837caqi0"},{"post_id":"cjpuwa1gb000is0jtq94chnfw","tag_id":"cjpuwa1ii002js0jt93zh0x84","_id":"cjpuwa1ix002us0jt1f0z6vva"},{"post_id":"cjpuwa1gg000ns0jtcp2k52gc","tag_id":"cjpuwa1in002os0jtajzhp8z5","_id":"cjpuwa1j40032s0jtcyrp6qdv"},{"post_id":"cjpuwa1gg000ns0jtcp2k52gc","tag_id":"cjpuwa1iy002vs0jtpuu9ylu4","_id":"cjpuwa1j90036s0jtu3rchy7o"},{"post_id":"cjpuwa1gi000os0jt8pqxu9s6","tag_id":"cjpuwa1in002os0jtajzhp8z5","_id":"cjpuwa1ji003fs0jttursz9ve"},{"post_id":"cjpuwa1gi000os0jt8pqxu9s6","tag_id":"cjpuwa1jb0038s0jtplmmlnpr","_id":"cjpuwa1jo003js0jt3aia69l8"},{"post_id":"cjpuwa1gl000ss0jt5400x5q3","tag_id":"cjpuwa1jh003ds0jt95qhxhth","_id":"cjpuwa1jx003ts0jtywsofjg8"},{"post_id":"cjpuwa1gl000ss0jt5400x5q3","tag_id":"cjpuwa1jo003ks0jtp89folmq","_id":"cjpuwa1jz003vs0jt873ep9n7"},{"post_id":"cjpuwa1gm000us0jt23pqzucg","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1ka0046s0jt2t2fq0i6"},{"post_id":"cjpuwa1gm000us0jt23pqzucg","tag_id":"cjpuwa1k1003xs0jt8xw7w2co","_id":"cjpuwa1kc0048s0jtkpwfu13x"},{"post_id":"cjpuwa1gq000zs0jtymrj9zh4","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1kh004fs0jtb3yzzlm5"},{"post_id":"cjpuwa1gq000zs0jtymrj9zh4","tag_id":"cjpuwa1hr001us0jtzduikk9b","_id":"cjpuwa1kh004gs0jt6b0qgnp3"},{"post_id":"cjpuwa1gt0011s0jtok2xlio4","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1kk004ns0jtvafk87p5"},{"post_id":"cjpuwa1gt0011s0jtok2xlio4","tag_id":"cjpuwa1k1003xs0jt8xw7w2co","_id":"cjpuwa1kk004os0jttw7jx2vz"},{"post_id":"cjpuwa1gx0014s0jtwxr9xojy","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1kl004ts0jtcomv52zz"},{"post_id":"cjpuwa1gx0014s0jtwxr9xojy","tag_id":"cjpuwa1hr001us0jtzduikk9b","_id":"cjpuwa1kp004ws0jtv4lakm80"},{"post_id":"cjpuwa1h00017s0jtatu1s4gg","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1kr0051s0jtxzlxj3vx"},{"post_id":"cjpuwa1h00017s0jtatu1s4gg","tag_id":"cjpuwa1jb0038s0jtplmmlnpr","_id":"cjpuwa1ks0054s0jtcx22puvj"},{"post_id":"cjpuwa1h3001as0jtwnxhvfj2","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1kv005as0jtedfgioht"},{"post_id":"cjpuwa1h3001as0jtwnxhvfj2","tag_id":"cjpuwa1ks0055s0jt5fkl1pp9","_id":"cjpuwa1kw005cs0jt8it1503e"},{"post_id":"cjpuwa1h6001es0jthiprjmtt","tag_id":"cjpuwa1ku0058s0jtxxkxfqn2","_id":"cjpuwa1kx005fs0jtz4q3ftmt"},{"post_id":"cjpuwa1h9001fs0jt45wo2a7i","tag_id":"cjpuwa1jv003ps0jtpyj00458","_id":"cjpuwa1l0005ms0jtfo1tzkca"},{"post_id":"cjpuwa1h9001fs0jt45wo2a7i","tag_id":"cjpuwa1ky005hs0jtff6zfxz6","_id":"cjpuwa1l2005os0jt889ekr87"},{"post_id":"cjpuwa1hd001js0jt24mu24wl","tag_id":"cjpuwa1ku0058s0jtxxkxfqn2","_id":"cjpuwa1l4005qs0jt7ursottg"},{"post_id":"cjpuwa1hg001ks0jtlijfxkzq","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1l6005ws0jtqesgs2j5"},{"post_id":"cjpuwa1hl001os0jtbzt8vzte","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1l80060s0jtld3l42zh"},{"post_id":"cjpuwa1hn001qs0jtci1lgsyq","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1l90063s0jtmn4rm7ra"},{"post_id":"cjpuwa1hs001vs0jth2kvvi33","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1la0066s0jtfc4zdi0m"},{"post_id":"cjpuwa1ht001ws0jtwx1djo2u","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1lc006as0jt1c3tgh5g"},{"post_id":"cjpuwa1hv0020s0jt7g1jykvm","tag_id":"cjpuwa1lc0069s0jta10bm8ct","_id":"cjpuwa1lf006js0jtnoj0hg9g"},{"post_id":"cjpuwa1hv0020s0jt7g1jykvm","tag_id":"cjpuwa1ld006ds0jt0znwxyyv","_id":"cjpuwa1lg006ks0jt8aqw4oyu"},{"post_id":"cjpuwa1hy0022s0jta0imp4m5","tag_id":"cjpuwa1le006gs0jttq64iy18","_id":"cjpuwa1lk006rs0jtl2v2etlf"},{"post_id":"cjpuwa1hy0022s0jta0imp4m5","tag_id":"cjpuwa1lg006ls0jt53jif7c9","_id":"cjpuwa1lk006ss0jt9ps9zzi4"},{"post_id":"cjpuwa1i20025s0jtd6ig171t","tag_id":"cjpuwa1l2005ps0jtcqr3ztqs","_id":"cjpuwa1ll006ws0jtab8yvq9z"},{"post_id":"cjpuwa1i40028s0jtmxfe6c6t","tag_id":"cjpuwa1lk006ts0jtwjvgq88g","_id":"cjpuwa1ln0073s0jttlcuro5f"},{"post_id":"cjpuwa1i40028s0jtmxfe6c6t","tag_id":"cjpuwa1ll006ys0jt6zaic2ai","_id":"cjpuwa1ln0074s0jtikikooif"},{"post_id":"cjpuwa1i50029s0jtyblh9m20","tag_id":"cjpuwa1le006gs0jttq64iy18","_id":"cjpuwa1lr007bs0jtaaejodcy"},{"post_id":"cjpuwa1i50029s0jtyblh9m20","tag_id":"cjpuwa1lo0075s0jter7lp2r9","_id":"cjpuwa1lr007cs0jtjiotona2"},{"post_id":"cjpuwa1ic002ds0jtc8tre2bb","tag_id":"cjpuwa1lk006ts0jtwjvgq88g","_id":"cjpuwa1lu007hs0jt2ue2reqw"},{"post_id":"cjpuwa1ic002ds0jtc8tre2bb","tag_id":"cjpuwa1ls007ds0jtvlbw5hrw","_id":"cjpuwa1lv007is0jtjsv5qlu0"},{"post_id":"cjpuwa1if002fs0jtm7zstin0","tag_id":"cjpuwa1lk006ts0jtwjvgq88g","_id":"cjpuwa1m7007ls0jte4biz4a7"},{"post_id":"cjpuwa1if002fs0jtm7zstin0","tag_id":"cjpuwa1ls007ds0jtvlbw5hrw","_id":"cjpuwa1m8007ms0jtxc0dxjyp"},{"post_id":"cjpuwa1ij002ks0jt684rhs43","tag_id":"cjpuwa1lk006ts0jtwjvgq88g","_id":"cjpuwa1m9007ps0jtfwtj3hle"},{"post_id":"cjpuwa1ij002ks0jt684rhs43","tag_id":"cjpuwa1ls007ds0jtvlbw5hrw","_id":"cjpuwa1m9007qs0jt9msam5a2"},{"post_id":"cjpuwa1il002ls0jtfl7xkyni","tag_id":"cjpuwa1m8007os0jt4q0kbj5f","_id":"cjpuwa1ma007ts0jt8znffc4g"},{"post_id":"cjpuwa1il002ls0jtfl7xkyni","tag_id":"cjpuwa1m9007rs0jtrwgn1abc","_id":"cjpuwa1ma007us0jtecaoqf1y"},{"post_id":"cjpuwa1iq002ps0jtfc3df8o6","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1mb007ws0jtgk3csfdd"},{"post_id":"cjpuwa1iu002rs0jtddgjucjc","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1mb007ys0jttxiyhnai"},{"post_id":"cjpuwa1iy002ws0jt6bj5qgvb","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1md0080s0jt72gvk9ic"},{"post_id":"cjpuwa1j0002xs0jti6cytjdc","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1me0082s0jtf6simxs0"},{"post_id":"cjpuwa1j20030s0jt8ie0dsb8","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1mf0084s0jtmkiapwcd"},{"post_id":"cjpuwa1j90037s0jtpiu8yxu7","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1mg0086s0jt26nxxyut"},{"post_id":"cjpuwa1jb0039s0jt1sa9nd4o","tag_id":"cjpuwa1mg0085s0jtb5mrnheu","_id":"cjpuwa1mi0089s0jtk9swoool"},{"post_id":"cjpuwa1jb0039s0jt1sa9nd4o","tag_id":"cjpuwa1mh0087s0jtqm1jn2p1","_id":"cjpuwa1mi008as0jteb7c61tm"},{"post_id":"cjpuwa1je003cs0jt5us3etcy","tag_id":"cjpuwa1m9007ss0jtqcv7uvfr","_id":"cjpuwa1mk008ds0jte1kc3zbj"},{"post_id":"cjpuwa1je003cs0jt5us3etcy","tag_id":"cjpuwa1mi008bs0jtfw8a7f2f","_id":"cjpuwa1mk008es0jt0pw8olu5"},{"post_id":"cjpuwa1jh003es0jtzdyk5v3q","tag_id":"cjpuwa1mg0085s0jtb5mrnheu","_id":"cjpuwa1ml008hs0jty4j2dsxv"},{"post_id":"cjpuwa1jh003es0jtzdyk5v3q","tag_id":"cjpuwa1mk008fs0jtecndxbu5","_id":"cjpuwa1ml008is0jtxzom5xng"},{"post_id":"cjpuwa1jm003is0jte60lpt9a","tag_id":"cjpuwa1mk008gs0jtjahe48hk","_id":"cjpuwa1mn008ls0jt7rnzf1m7"},{"post_id":"cjpuwa1jm003is0jte60lpt9a","tag_id":"cjpuwa1mm008js0jthmhvfm0a","_id":"cjpuwa1mn008ms0jttqwegnn7"},{"post_id":"cjpuwa1jp003ls0jtdxlctth0","tag_id":"cjpuwa1mk008gs0jtjahe48hk","_id":"cjpuwa1mp008ps0jt79q61gtv"},{"post_id":"cjpuwa1jp003ls0jtdxlctth0","tag_id":"cjpuwa1mo008ns0jtynhtu6op","_id":"cjpuwa1mp008qs0jt3w4vn29p"},{"post_id":"cjpuwa1js003os0jtrrqarc94","tag_id":"cjpuwa1mk008gs0jtjahe48hk","_id":"cjpuwa1mq008ts0jtiviqclxh"},{"post_id":"cjpuwa1js003os0jtrrqarc94","tag_id":"cjpuwa1mp008rs0jtx4fh5d4z","_id":"cjpuwa1mq008us0jtz65bo6a1"},{"post_id":"cjpuwa1jv003qs0jth1438ppr","tag_id":"cjpuwa1mk008gs0jtjahe48hk","_id":"cjpuwa1mu008xs0jtj88h6bir"},{"post_id":"cjpuwa1jv003qs0jth1438ppr","tag_id":"cjpuwa1ld006ds0jt0znwxyyv","_id":"cjpuwa1mw008ys0jthvhzkvqj"},{"post_id":"cjpuwa1jx003us0jthu4yctzs","tag_id":"cjpuwa1mk008gs0jtjahe48hk","_id":"cjpuwa1mx0091s0jtpxf4fje2"},{"post_id":"cjpuwa1jx003us0jthu4yctzs","tag_id":"cjpuwa1mw008zs0jtde7osj3k","_id":"cjpuwa1mx0092s0jtgzqezv9t"},{"post_id":"cjpuwa1k0003ws0jtr5ylykr1","tag_id":"cjpuwa1mw0090s0jti4m6er2u","_id":"cjpuwa1my0095s0jtf65hl3ui"},{"post_id":"cjpuwa1k0003ws0jtr5ylykr1","tag_id":"cjpuwa1mx0093s0jth35bksvm","_id":"cjpuwa1mz0096s0jtx1v6bbch"},{"post_id":"cjpuwa1k40040s0jtgc4w7wyf","tag_id":"cjpuwa1my0094s0jt55rjk0xk","_id":"cjpuwa1n00099s0jtd5rmgyvk"},{"post_id":"cjpuwa1k40040s0jtgc4w7wyf","tag_id":"cjpuwa1mz0097s0jtfg5ik2mc","_id":"cjpuwa1n0009as0jtxi1pjpgv"},{"post_id":"cjpuwa1k60041s0jtq267dc3x","tag_id":"cjpuwa1mz0098s0jtb3gdnqsr","_id":"cjpuwa1n1009cs0jt2tarc5zr"},{"post_id":"cjpuwa1k80045s0jtrqwij5w9","tag_id":"cjpuwa1n0009bs0jtfbe70oha","_id":"cjpuwa1n3009fs0jtdfedljtt"},{"post_id":"cjpuwa1k80045s0jtrqwij5w9","tag_id":"cjpuwa1mi008bs0jtfw8a7f2f","_id":"cjpuwa1n4009gs0jtvoubzgjx"},{"post_id":"cjpuwa1ka0047s0jtlg94rr94","tag_id":"cjpuwa1n0009bs0jtfbe70oha","_id":"cjpuwa1n4009is0jtqq4el9jf"},{"post_id":"cjpuwa1ka0047s0jtlg94rr94","tag_id":"cjpuwa1n4009hs0jtfufmw1xi","_id":"cjpuwa1n5009js0jt6w6a86nk"}],"Tag":[{"name":"Blog","_id":"cjpuwa1fd0004s0jtjba0u3vg"},{"name":"hexo","_id":"cjpuwa1fs0009s0jtgbez0xje"},{"name":"C++","_id":"cjpuwa1gj000qs0jtk2lx2q8s"},{"name":"C#","_id":"cjpuwa1gv0012s0jtjbbbgovu"},{"name":"CSS","_id":"cjpuwa1h20019s0jtdzwtd4iw"},{"name":"字体","_id":"cjpuwa1hb001gs0jtak6cjiww"},{"name":"FAQ","_id":"cjpuwa1hj001ms0jtrghje7bv"},{"name":"flash builder","_id":"cjpuwa1hr001us0jtzduikk9b"},{"name":"Eclipse","_id":"cjpuwa1hv001zs0jtrbwc5mit"},{"name":"java","_id":"cjpuwa1i30027s0jtwz93ksg1"},{"name":"sql","_id":"cjpuwa1ii002js0jt93zh0x84"},{"name":"FPSpread","_id":"cjpuwa1in002os0jtajzhp8z5"},{"name":"fpComboAdo","_id":"cjpuwa1iy002vs0jtpuu9ylu4"},{"name":"属性","_id":"cjpuwa1jb0038s0jtplmmlnpr"},{"name":"FTP","_id":"cjpuwa1jh003ds0jt95qhxhth"},{"name":"apache ftpserver","_id":"cjpuwa1jo003ks0jtp89folmq"},{"name":"Flex","_id":"cjpuwa1jv003ps0jtpyj00458"},{"name":"dataGrid","_id":"cjpuwa1k1003xs0jt8xw7w2co"},{"name":"as数据类型","_id":"cjpuwa1ks0055s0jt5fkl1pp9"},{"name":"Git","_id":"cjpuwa1ku0058s0jtxxkxfqn2"},{"name":"scroller","_id":"cjpuwa1ky005hs0jtff6zfxz6"},{"name":"HAProxy","_id":"cjpuwa1l2005ps0jtcqr3ztqs"},{"name":"JavaScript","_id":"cjpuwa1lc0069s0jta10bm8ct"},{"name":"字符串","_id":"cjpuwa1ld006ds0jt0znwxyyv"},{"name":"IT","_id":"cjpuwa1le006gs0jttq64iy18"},{"name":"日志","_id":"cjpuwa1lg006ls0jt53jif7c9"},{"name":"Java","_id":"cjpuwa1lk006ts0jtwjvgq88g"},{"name":"jdk","_id":"cjpuwa1ll006ys0jt6zaic2ai"},{"name":"log4j","_id":"cjpuwa1lo0075s0jter7lp2r9"},{"name":"tomcat","_id":"cjpuwa1ls007ds0jtvlbw5hrw"},{"name":"Kettle","_id":"cjpuwa1m8007os0jt4q0kbj5f"},{"name":"job","_id":"cjpuwa1m9007rs0jtrwgn1abc"},{"name":"Linux","_id":"cjpuwa1m9007ss0jtqcv7uvfr"},{"name":"Oracle","_id":"cjpuwa1mg0085s0jtb5mrnheu"},{"name":"创建表空间","_id":"cjpuwa1mh0087s0jtqm1jn2p1"},{"name":"命令","_id":"cjpuwa1mi008bs0jtfw8a7f2f"},{"name":"导入导出","_id":"cjpuwa1mk008fs0jtecndxbu5"},{"name":"SQL","_id":"cjpuwa1mk008gs0jtjahe48hk"},{"name":"数据库","_id":"cjpuwa1mm008js0jthmhvfm0a"},{"name":"Access","_id":"cjpuwa1mo008ns0jtynhtu6op"},{"name":"死锁","_id":"cjpuwa1mp008rs0jtx4fh5d4z"},{"name":"经典语句","_id":"cjpuwa1mw008zs0jtde7osj3k"},{"name":"Sublime Text","_id":"cjpuwa1mw0090s0jti4m6er2u"},{"name":"快捷键","_id":"cjpuwa1mx0093s0jth35bksvm"},{"name":"Think","_id":"cjpuwa1my0094s0jt55rjk0xk"},{"name":"虚拟化","_id":"cjpuwa1mz0097s0jtfg5ik2mc"},{"name":"VB","_id":"cjpuwa1mz0098s0jtb3gdnqsr"},{"name":"Windows","_id":"cjpuwa1n0009bs0jtfbe70oha"},{"name":"美化","_id":"cjpuwa1n4009hs0jtfufmw1xi"}]}}